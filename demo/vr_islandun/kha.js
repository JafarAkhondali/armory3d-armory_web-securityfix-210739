// Generated by Haxe 3.4.2
(function ($hx_exports, $global) { "use strict";
$hx_exports["kha"] = $hx_exports["kha"] || {};
$hx_exports["kha"]["input"] = $hx_exports["kha"]["input"] || {};
;$hx_exports["kha"]["_Color"] = $hx_exports["kha"]["_Color"] || {};
$hx_exports["armory"] = $hx_exports["armory"] || {};
var $hxClasses = {},$estr = function() { return js_Boot.__string_rec(this,''); };
function $extend(from, fields) {
	function Inherit() {} Inherit.prototype = from; var proto = new Inherit();
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var EReg = function(r,opt) {
	this.r = new RegExp(r,opt.split("u").join(""));
};
$hxClasses["EReg"] = EReg;
EReg.__name__ = ["EReg"];
EReg.prototype = {
	match: function(s) {
		if(this.r.global) {
			this.r.lastIndex = 0;
		}
		this.r.m = this.r.exec(s);
		this.r.s = s;
		return this.r.m != null;
	}
	,matched: function(n) {
		if(this.r.m != null && n >= 0 && n < this.r.m.length) {
			return this.r.m[n];
		} else {
			throw new js__$Boot_HaxeError("EReg::matched");
		}
	}
	,__class__: EReg
};
var HxOverrides = function() { };
$hxClasses["HxOverrides"] = HxOverrides;
HxOverrides.__name__ = ["HxOverrides"];
HxOverrides.strDate = function(s) {
	var _g = s.length;
	switch(_g) {
	case 8:
		var k = s.split(":");
		var d = new Date();
		d["setTime"](0);
		d["setUTCHours"](k[0]);
		d["setUTCMinutes"](k[1]);
		d["setUTCSeconds"](k[2]);
		return d;
	case 10:
		var k1 = s.split("-");
		return new Date(k1[0],k1[1] - 1,k1[2],0,0,0);
	case 19:
		var k2 = s.split(" ");
		var y = k2[0].split("-");
		var t = k2[1].split(":");
		return new Date(y[0],y[1] - 1,y[2],t[0],t[1],t[2]);
	default:
		throw new js__$Boot_HaxeError("Invalid date format : " + s);
	}
};
HxOverrides.cca = function(s,index) {
	var x = s.charCodeAt(index);
	if(x != x) {
		return undefined;
	}
	return x;
};
HxOverrides.substr = function(s,pos,len) {
	if(len == null) {
		len = s.length;
	} else if(len < 0) {
		if(pos == 0) {
			len = s.length + len;
		} else {
			return "";
		}
	}
	return s.substr(pos,len);
};
HxOverrides.remove = function(a,obj) {
	var i = a.indexOf(obj);
	if(i == -1) {
		return false;
	}
	a.splice(i,1);
	return true;
};
HxOverrides.iter = function(a) {
	return { cur : 0, arr : a, hasNext : function() {
		return this.cur < this.arr.length;
	}, next : function() {
		return this.arr[this.cur++];
	}};
};
var Lambda = function() { };
$hxClasses["Lambda"] = Lambda;
Lambda.__name__ = ["Lambda"];
Lambda.array = function(it) {
	var a = [];
	var i = $iterator(it)();
	while(i.hasNext()) {
		var i1 = i.next();
		a.push(i1);
	}
	return a;
};
Lambda.count = function(it,pred) {
	var n = 0;
	if(pred == null) {
		var _ = $iterator(it)();
		while(_.hasNext()) {
			var _1 = _.next();
			++n;
		}
	} else {
		var x = $iterator(it)();
		while(x.hasNext()) {
			var x1 = x.next();
			if(pred(x1)) {
				++n;
			}
		}
	}
	return n;
};
var List = function() {
	this.length = 0;
};
$hxClasses["List"] = List;
List.__name__ = ["List"];
List.prototype = {
	add: function(item) {
		var x = new _$List_ListNode(item,null);
		if(this.h == null) {
			this.h = x;
		} else {
			this.q.next = x;
		}
		this.q = x;
		this.length++;
	}
	,push: function(item) {
		var x = new _$List_ListNode(item,this.h);
		this.h = x;
		if(this.q == null) {
			this.q = x;
		}
		this.length++;
	}
	,first: function() {
		if(this.h == null) {
			return null;
		} else {
			return this.h.item;
		}
	}
	,remove: function(v) {
		var prev = null;
		var l = this.h;
		while(l != null) {
			if(l.item == v) {
				if(prev == null) {
					this.h = l.next;
				} else {
					prev.next = l.next;
				}
				if(this.q == l) {
					this.q = prev;
				}
				this.length--;
				return true;
			}
			prev = l;
			l = l.next;
		}
		return false;
	}
	,iterator: function() {
		return new _$List_ListIterator(this.h);
	}
	,__class__: List
};
var _$List_ListNode = function(item,next) {
	this.item = item;
	this.next = next;
};
$hxClasses["_List.ListNode"] = _$List_ListNode;
_$List_ListNode.__name__ = ["_List","ListNode"];
_$List_ListNode.prototype = {
	__class__: _$List_ListNode
};
var _$List_ListIterator = function(head) {
	this.head = head;
};
$hxClasses["_List.ListIterator"] = _$List_ListIterator;
_$List_ListIterator.__name__ = ["_List","ListIterator"];
_$List_ListIterator.prototype = {
	hasNext: function() {
		return this.head != null;
	}
	,next: function() {
		var val = this.head.item;
		this.head = this.head.next;
		return val;
	}
	,__class__: _$List_ListIterator
};
var Main = function() { };
$hxClasses["Main"] = Main;
Main.__name__ = ["Main"];
Main.loadLib = function(name) {
	kha_LoaderImpl.loadBlobFromDescription({ files : [name]},function(b) {
		(1, eval)(b.toString());
		Main.state--;
		Main.start();
	});
};
Main.main = function() {
	Main.state = 1;
	Main.state--;
	Main.start();
};
Main.start = function() {
	if(Main.state > 0) {
		return;
	}
	armory_object_Uniforms.register();
	kha_System.init({ title : "vrisland", width : 960, height : 540, samplesPerPixel : 4},function() {
		iron_App.init(function() {
			iron_Scene.setActive("Scene",function(object) {
				object.addTrait(new armory_trait_internal_SpaceArmory());
			});
		});
	});
};
Math.__name__ = ["Math"];
var Reflect = function() { };
$hxClasses["Reflect"] = Reflect;
Reflect.__name__ = ["Reflect"];
Reflect.field = function(o,field) {
	try {
		return o[field];
	} catch( e ) {
		return null;
	}
};
Reflect.getProperty = function(o,field) {
	var tmp;
	if(o == null) {
		return null;
	} else {
		var tmp1;
		if(o.__properties__) {
			tmp = o.__properties__["get_" + field];
			tmp1 = tmp;
		} else {
			tmp1 = false;
		}
		if(tmp1) {
			return o[tmp]();
		} else {
			return o[field];
		}
	}
};
Reflect.setProperty = function(o,field,value) {
	var tmp;
	var tmp1;
	if(o.__properties__) {
		tmp = o.__properties__["set_" + field];
		tmp1 = tmp;
	} else {
		tmp1 = false;
	}
	if(tmp1) {
		o[tmp](value);
	} else {
		o[field] = value;
	}
};
Reflect.fields = function(o) {
	var a = [];
	if(o != null) {
		var hasOwnProperty = Object.prototype.hasOwnProperty;
		for( var f in o ) {
		if(f != "__id__" && f != "hx__closures__" && hasOwnProperty.call(o,f)) {
			a.push(f);
		}
		}
	}
	return a;
};
Reflect.isFunction = function(f) {
	if(typeof(f) == "function") {
		return !(f.__name__ || f.__ename__);
	} else {
		return false;
	}
};
var Std = function() { };
$hxClasses["Std"] = Std;
Std.__name__ = ["Std"];
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
Std.parseInt = function(x) {
	var v = parseInt(x,10);
	if(v == 0 && (HxOverrides.cca(x,1) == 120 || HxOverrides.cca(x,1) == 88)) {
		v = parseInt(x);
	}
	if(isNaN(v)) {
		return null;
	}
	return v;
};
Std.random = function(x) {
	if(x <= 0) {
		return 0;
	} else {
		return Math.floor(Math.random() * x);
	}
};
var StringTools = function() { };
$hxClasses["StringTools"] = StringTools;
StringTools.__name__ = ["StringTools"];
StringTools.endsWith = function(s,end) {
	var elen = end.length;
	var slen = s.length;
	if(slen >= elen) {
		return HxOverrides.substr(s,slen - elen,elen) == end;
	} else {
		return false;
	}
};
StringTools.replace = function(s,sub,by) {
	return s.split(sub).join(by);
};
var ValueType = $hxClasses["ValueType"] = { __ename__ : true, __constructs__ : ["TNull","TInt","TFloat","TBool","TObject","TFunction","TClass","TEnum","TUnknown"] };
ValueType.TNull = ["TNull",0];
ValueType.TNull.toString = $estr;
ValueType.TNull.__enum__ = ValueType;
ValueType.TInt = ["TInt",1];
ValueType.TInt.toString = $estr;
ValueType.TInt.__enum__ = ValueType;
ValueType.TFloat = ["TFloat",2];
ValueType.TFloat.toString = $estr;
ValueType.TFloat.__enum__ = ValueType;
ValueType.TBool = ["TBool",3];
ValueType.TBool.toString = $estr;
ValueType.TBool.__enum__ = ValueType;
ValueType.TObject = ["TObject",4];
ValueType.TObject.toString = $estr;
ValueType.TObject.__enum__ = ValueType;
ValueType.TFunction = ["TFunction",5];
ValueType.TFunction.toString = $estr;
ValueType.TFunction.__enum__ = ValueType;
ValueType.TClass = function(c) { var $x = ["TClass",6,c]; $x.__enum__ = ValueType; $x.toString = $estr; return $x; };
ValueType.TEnum = function(e) { var $x = ["TEnum",7,e]; $x.__enum__ = ValueType; $x.toString = $estr; return $x; };
ValueType.TUnknown = ["TUnknown",8];
ValueType.TUnknown.toString = $estr;
ValueType.TUnknown.__enum__ = ValueType;
var Type = function() { };
$hxClasses["Type"] = Type;
Type.__name__ = ["Type"];
Type.getClassName = function(c) {
	var a = c.__name__;
	if(a == null) {
		return null;
	}
	return a.join(".");
};
Type.resolveClass = function(name) {
	var cl = $hxClasses[name];
	if(cl == null || !cl.__name__) {
		return null;
	}
	return cl;
};
Type.resolveEnum = function(name) {
	var e = $hxClasses[name];
	if(e == null || !e.__ename__) {
		return null;
	}
	return e;
};
Type.createInstance = function(cl,args) {
	var _g = args.length;
	switch(_g) {
	case 0:
		return new cl();
	case 1:
		return new cl(args[0]);
	case 2:
		return new cl(args[0],args[1]);
	case 3:
		return new cl(args[0],args[1],args[2]);
	case 4:
		return new cl(args[0],args[1],args[2],args[3]);
	case 5:
		return new cl(args[0],args[1],args[2],args[3],args[4]);
	case 6:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5]);
	case 7:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6]);
	case 8:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7]);
	case 9:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8]);
	case 10:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9]);
	case 11:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9],args[10]);
	case 12:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9],args[10],args[11]);
	case 13:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9],args[10],args[11],args[12]);
	case 14:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9],args[10],args[11],args[12],args[13]);
	default:
		throw new js__$Boot_HaxeError("Too many arguments");
	}
};
Type.createEmptyInstance = function(cl) {
	function empty() {}; empty.prototype = cl.prototype;
	return new empty();
};
Type.createEnum = function(e,constr,params) {
	var f = Reflect.field(e,constr);
	if(f == null) {
		throw new js__$Boot_HaxeError("No such constructor " + constr);
	}
	if(Reflect.isFunction(f)) {
		if(params == null) {
			throw new js__$Boot_HaxeError("Constructor " + constr + " need parameters");
		}
		return f.apply(e,params);
	}
	if(params != null && params.length != 0) {
		throw new js__$Boot_HaxeError("Constructor " + constr + " does not need parameters");
	}
	return f;
};
Type.createEnumIndex = function(e,index,params) {
	var c = e.__constructs__[index];
	if(c == null) {
		throw new js__$Boot_HaxeError(index + " is not a valid enum constructor index");
	}
	return Type.createEnum(e,c,params);
};
Type["typeof"] = function(v) {
	var _g = typeof(v);
	switch(_g) {
	case "boolean":
		return ValueType.TBool;
	case "function":
		if(v.__name__ || v.__ename__) {
			return ValueType.TObject;
		}
		return ValueType.TFunction;
	case "number":
		if(Math.ceil(v) == v % 2147483648.0) {
			return ValueType.TInt;
		}
		return ValueType.TFloat;
	case "object":
		if(v == null) {
			return ValueType.TNull;
		}
		var e = v.__enum__;
		if(e != null) {
			return ValueType.TEnum(e);
		}
		var c = js_Boot.getClass(v);
		if(c != null) {
			return ValueType.TClass(c);
		}
		return ValueType.TObject;
	case "string":
		return ValueType.TClass(String);
	case "undefined":
		return ValueType.TNull;
	default:
		return ValueType.TUnknown;
	}
};
var _$UInt_UInt_$Impl_$ = {};
$hxClasses["_UInt.UInt_Impl_"] = _$UInt_UInt_$Impl_$;
_$UInt_UInt_$Impl_$.__name__ = ["_UInt","UInt_Impl_"];
_$UInt_UInt_$Impl_$.gt = function(a,b) {
	var aNeg = a < 0;
	var bNeg = b < 0;
	if(aNeg != bNeg) {
		return aNeg;
	} else {
		return a > b;
	}
};
_$UInt_UInt_$Impl_$.gte = function(a,b) {
	var aNeg = a < 0;
	var bNeg = b < 0;
	if(aNeg != bNeg) {
		return aNeg;
	} else {
		return a >= b;
	}
};
_$UInt_UInt_$Impl_$.toFloat = function(this1) {
	var $int = this1;
	if($int < 0) {
		return 4294967296.0 + $int;
	} else {
		return $int + 0.0;
	}
};
var armory_data_ConstData = function() { };
$hxClasses["armory.data.ConstData"] = armory_data_ConstData;
armory_data_ConstData.__name__ = ["armory","data","ConstData"];
armory_data_ConstData.initLTC = function() {
	armory_data_ConstData.ltcMatTex = kha_Image.fromBytes(haxe_io_Bytes.ofData(haxe_io__$Float32Array_Float32Array_$Impl_$.fromArray(armory_data_ConstData.ltc_mat).buffer),64,64,kha_graphics4_TextureFormat.RGBA128);
	armory_data_ConstData.ltcMagTex = kha_Image.fromBytes(haxe_io_Bytes.ofData(haxe_io__$Float32Array_Float32Array_$Impl_$.fromArray(armory_data_ConstData.ltc_mag).buffer),64,64,kha_graphics4_TextureFormat.A32);
};
var armory_object_Uniforms = function() { };
$hxClasses["armory.object.Uniforms"] = armory_object_Uniforms;
armory_object_Uniforms.__name__ = ["armory","object","Uniforms"];
armory_object_Uniforms.register = function() {
	iron_object_Uniforms.externalTextureLinks = [armory_object_Uniforms.externalTextureLink];
	iron_object_Uniforms.externalVec3Links = [armory_object_Uniforms.externalVec3Link];
	iron_object_Uniforms.externalFloatLinks = [armory_object_Uniforms.externalFloatLink];
};
armory_object_Uniforms.externalTextureLink = function(tulink) {
	if(tulink == "_smaaSearch") {
		var _this = iron_Scene.active.embedded;
		if(__map_reserved["smaa_search.png"] != null) {
			return _this.getReserved("smaa_search.png");
		} else {
			return _this.h["smaa_search.png"];
		}
	} else if(tulink == "_smaaArea") {
		var _this1 = iron_Scene.active.embedded;
		if(__map_reserved["smaa_area.png"] != null) {
			return _this1.getReserved("smaa_area.png");
		} else {
			return _this1.h["smaa_area.png"];
		}
	} else if(tulink == "_ltcMat") {
		if(armory_data_ConstData.ltcMatTex == null) {
			armory_data_ConstData.initLTC();
		}
		return armory_data_ConstData.ltcMatTex;
	} else if(tulink == "_ltcMag") {
		if(armory_data_ConstData.ltcMagTex == null) {
			armory_data_ConstData.initLTC();
		}
		return armory_data_ConstData.ltcMagTex;
	}
	return null;
};
armory_object_Uniforms.externalVec3Link = function(clink) {
	var v = null;
	if(clink == "_hosekA") {
		if(armory_renderpath_HosekWilkie.data == null) {
			armory_renderpath_HosekWilkie.init(iron_Scene.active.world);
		}
		v = iron_object_Uniforms.helpVec;
		v.x = armory_renderpath_HosekWilkie.data.A.x;
		v.y = armory_renderpath_HosekWilkie.data.A.y;
		v.z = armory_renderpath_HosekWilkie.data.A.z;
	} else if(clink == "_hosekB") {
		if(armory_renderpath_HosekWilkie.data == null) {
			armory_renderpath_HosekWilkie.init(iron_Scene.active.world);
		}
		v = iron_object_Uniforms.helpVec;
		v.x = armory_renderpath_HosekWilkie.data.B.x;
		v.y = armory_renderpath_HosekWilkie.data.B.y;
		v.z = armory_renderpath_HosekWilkie.data.B.z;
	} else if(clink == "_hosekC") {
		if(armory_renderpath_HosekWilkie.data == null) {
			armory_renderpath_HosekWilkie.init(iron_Scene.active.world);
		}
		v = iron_object_Uniforms.helpVec;
		v.x = armory_renderpath_HosekWilkie.data.C.x;
		v.y = armory_renderpath_HosekWilkie.data.C.y;
		v.z = armory_renderpath_HosekWilkie.data.C.z;
	} else if(clink == "_hosekD") {
		if(armory_renderpath_HosekWilkie.data == null) {
			armory_renderpath_HosekWilkie.init(iron_Scene.active.world);
		}
		v = iron_object_Uniforms.helpVec;
		v.x = armory_renderpath_HosekWilkie.data.D.x;
		v.y = armory_renderpath_HosekWilkie.data.D.y;
		v.z = armory_renderpath_HosekWilkie.data.D.z;
	} else if(clink == "_hosekE") {
		if(armory_renderpath_HosekWilkie.data == null) {
			armory_renderpath_HosekWilkie.init(iron_Scene.active.world);
		}
		v = iron_object_Uniforms.helpVec;
		v.x = armory_renderpath_HosekWilkie.data.E.x;
		v.y = armory_renderpath_HosekWilkie.data.E.y;
		v.z = armory_renderpath_HosekWilkie.data.E.z;
	} else if(clink == "_hosekF") {
		if(armory_renderpath_HosekWilkie.data == null) {
			armory_renderpath_HosekWilkie.init(iron_Scene.active.world);
		}
		v = iron_object_Uniforms.helpVec;
		v.x = armory_renderpath_HosekWilkie.data.F.x;
		v.y = armory_renderpath_HosekWilkie.data.F.y;
		v.z = armory_renderpath_HosekWilkie.data.F.z;
	} else if(clink == "_hosekG") {
		if(armory_renderpath_HosekWilkie.data == null) {
			armory_renderpath_HosekWilkie.init(iron_Scene.active.world);
		}
		v = iron_object_Uniforms.helpVec;
		v.x = armory_renderpath_HosekWilkie.data.G.x;
		v.y = armory_renderpath_HosekWilkie.data.G.y;
		v.z = armory_renderpath_HosekWilkie.data.G.z;
	} else if(clink == "_hosekH") {
		if(armory_renderpath_HosekWilkie.data == null) {
			armory_renderpath_HosekWilkie.init(iron_Scene.active.world);
		}
		v = iron_object_Uniforms.helpVec;
		v.x = armory_renderpath_HosekWilkie.data.H.x;
		v.y = armory_renderpath_HosekWilkie.data.H.y;
		v.z = armory_renderpath_HosekWilkie.data.H.z;
	} else if(clink == "_hosekI") {
		if(armory_renderpath_HosekWilkie.data == null) {
			armory_renderpath_HosekWilkie.init(iron_Scene.active.world);
		}
		v = iron_object_Uniforms.helpVec;
		v.x = armory_renderpath_HosekWilkie.data.I.x;
		v.y = armory_renderpath_HosekWilkie.data.I.y;
		v.z = armory_renderpath_HosekWilkie.data.I.z;
	} else if(clink == "_hosekZ") {
		if(armory_renderpath_HosekWilkie.data == null) {
			armory_renderpath_HosekWilkie.init(iron_Scene.active.world);
		}
		v = iron_object_Uniforms.helpVec;
		v.x = armory_renderpath_HosekWilkie.data.Z.x;
		v.y = armory_renderpath_HosekWilkie.data.Z.y;
		v.z = armory_renderpath_HosekWilkie.data.Z.z;
	}
	return v;
};
armory_object_Uniforms.externalFloatLink = function(clink) {
	if(clink == "_dynamicScale") {
		return armory_renderpath_DynamicResolutionScale.dynamicScale;
	}
	return 0.0;
};
var armory_renderpath_DynamicResolutionScale = function() { };
$hxClasses["armory.renderpath.DynamicResolutionScale"] = armory_renderpath_DynamicResolutionScale;
armory_renderpath_DynamicResolutionScale.__name__ = ["armory","renderpath","DynamicResolutionScale"];
armory_renderpath_DynamicResolutionScale.run = function(path) {
	if(armory_renderpath_DynamicResolutionScale.firstFrame) {
		iron_App.notifyOnRender(armory_renderpath_DynamicResolutionScale.render);
		armory_renderpath_DynamicResolutionScale.firstFrame = false;
		return;
	}
	if(armory_renderpath_DynamicResolutionScale.frameTimeAvg > 30 && armory_renderpath_DynamicResolutionScale.frameTimeAvg < 100) {
		var overTime = Math.min(10,armory_renderpath_DynamicResolutionScale.frameTimeAvg - 30);
		var scale = 1.0 - overTime / 10 * 0.4;
		var w = kha_System.windowWidth() * scale | 0;
		var h = kha_System.windowHeight() * scale | 0;
		path.setCurrentViewport(w,h);
		path.setCurrentScissor(w,h);
		armory_renderpath_DynamicResolutionScale.dynamicScale = scale;
	} else {
		armory_renderpath_DynamicResolutionScale.dynamicScale = 1.0;
	}
};
armory_renderpath_DynamicResolutionScale.render = function(g) {
	armory_renderpath_DynamicResolutionScale.frameTime = kha_Scheduler.realTime() - armory_renderpath_DynamicResolutionScale.lastTime;
	armory_renderpath_DynamicResolutionScale.lastTime = kha_Scheduler.realTime();
	armory_renderpath_DynamicResolutionScale.totalTime += armory_renderpath_DynamicResolutionScale.frameTime;
	armory_renderpath_DynamicResolutionScale.frames++;
	if(armory_renderpath_DynamicResolutionScale.totalTime >= 1) {
		armory_renderpath_DynamicResolutionScale.frameTimeAvg = (armory_renderpath_DynamicResolutionScale.totalTime / armory_renderpath_DynamicResolutionScale.frames * 10000 | 0) / 10;
		armory_renderpath_DynamicResolutionScale.totalTime = 0;
		armory_renderpath_DynamicResolutionScale.frames = 0;
	}
};
var armory_renderpath_FFT = function() { };
$hxClasses["armory.renderpath.FFT"] = armory_renderpath_FFT;
armory_renderpath_FFT.__name__ = ["armory","renderpath","FFT"];
armory_renderpath_FFT.run = function(path) {
};
var armory_renderpath_HosekWilkieRadianceData = function(sunTheta,turbidity,albedo,normalizedSunY) {
	this.Z = new kha_math_FastVector3();
	this.I = new kha_math_FastVector3();
	this.H = new kha_math_FastVector3();
	this.G = new kha_math_FastVector3();
	this.F = new kha_math_FastVector3();
	this.E = new kha_math_FastVector3();
	this.D = new kha_math_FastVector3();
	this.C = new kha_math_FastVector3();
	this.B = new kha_math_FastVector3();
	this.A = new kha_math_FastVector3();
	var _g = 0;
	while(_g < 3) {
		var i = _g++;
		this.setVector(this.A,i,this.evaluate(armory_renderpath_HosekWilkieData.datasetsRGB[i],0,9,turbidity,albedo,sunTheta));
		this.setVector(this.B,i,this.evaluate(armory_renderpath_HosekWilkieData.datasetsRGB[i],1,9,turbidity,albedo,sunTheta));
		this.setVector(this.C,i,this.evaluate(armory_renderpath_HosekWilkieData.datasetsRGB[i],2,9,turbidity,albedo,sunTheta));
		this.setVector(this.D,i,this.evaluate(armory_renderpath_HosekWilkieData.datasetsRGB[i],3,9,turbidity,albedo,sunTheta));
		this.setVector(this.E,i,this.evaluate(armory_renderpath_HosekWilkieData.datasetsRGB[i],4,9,turbidity,albedo,sunTheta));
		this.setVector(this.F,i,this.evaluate(armory_renderpath_HosekWilkieData.datasetsRGB[i],5,9,turbidity,albedo,sunTheta));
		this.setVector(this.G,i,this.evaluate(armory_renderpath_HosekWilkieData.datasetsRGB[i],6,9,turbidity,albedo,sunTheta));
		this.setVector(this.H,i,this.evaluate(armory_renderpath_HosekWilkieData.datasetsRGB[i],8,9,turbidity,albedo,sunTheta));
		this.setVector(this.I,i,this.evaluate(armory_renderpath_HosekWilkieData.datasetsRGB[i],7,9,turbidity,albedo,sunTheta));
		this.setVector(this.Z,i,this.evaluate(armory_renderpath_HosekWilkieData.datasetsRGBRad[i],0,1,turbidity,albedo,sunTheta));
	}
	if(normalizedSunY != 0.0) {
		var S = this.hosek_wilkie(Math.cos(sunTheta),0,1.0,this.A,this.B,this.C,this.D,this.E,this.F,this.G,this.H,this.I);
		S.x *= this.Z.x;
		S.y *= this.Z.y;
		S.z *= this.Z.z;
		var v_z;
		var v_y;
		var v_x = 0.2126;
		v_y = 0.7152;
		v_z = 0.0722;
		var dotS = S.x * v_x + S.y * v_y + S.z * v_z;
		this.Z.x /= dotS;
		this.Z.y /= dotS;
		this.Z.z /= dotS;
		var _this = this.Z;
		this.Z = new kha_math_FastVector3(_this.x * normalizedSunY,_this.y * normalizedSunY,_this.z * normalizedSunY);
	}
};
$hxClasses["armory.renderpath.HosekWilkieRadianceData"] = armory_renderpath_HosekWilkieRadianceData;
armory_renderpath_HosekWilkieRadianceData.__name__ = ["armory","renderpath","HosekWilkieRadianceData"];
armory_renderpath_HosekWilkieRadianceData.prototype = {
	evaluateSpline: function(spline,index,stride,value) {
		return Math.pow(1 - value,5) * spline[index + 0 * stride] + 5 * Math.pow(1 - value,4) * Math.pow(value,1) * spline[index + stride] + 10 * Math.pow(1 - value,3) * Math.pow(value,2) * spline[index + 2 * stride] + 10 * Math.pow(1 - value,2) * Math.pow(value,3) * spline[index + 3 * stride] + 5 * Math.pow(1 - value,1) * Math.pow(value,4) * spline[index + 4 * stride] + Math.pow(value,5) * spline[index + 5 * stride];
	}
	,clamp: function(n,lower,upper) {
		if(n <= lower) {
			return lower;
		} else if(n >= upper) {
			return upper;
		} else {
			return n;
		}
	}
	,clampF: function(n,lower,upper) {
		if(n <= lower) {
			return lower;
		} else if(n >= upper) {
			return upper;
		} else {
			return n;
		}
	}
	,evaluate: function(dataset,index,stride,turbidity,albedo,sunTheta) {
		var elevationK = Math.pow(Math.max(0.0,1.0 - sunTheta / (Math.PI / 2.0)),0.333333333333333315);
		var turbidity0 = this.clamp(turbidity | 0,1,10);
		var turbidity1 = Math.min(turbidity0 + 1,10) | 0;
		var turbidityK = this.clampF(turbidity - turbidity0,0.0,1.0);
		var datasetA0Index = index;
		var datasetA1Index = index + stride * 6 * 10;
		var a0t0 = this.evaluateSpline(dataset,datasetA0Index + stride * 6 * (turbidity0 - 1),stride,elevationK);
		var a1t0 = this.evaluateSpline(dataset,datasetA1Index + stride * 6 * (turbidity0 - 1),stride,elevationK);
		var a0t1 = this.evaluateSpline(dataset,datasetA0Index + stride * 6 * (turbidity1 - 1),stride,elevationK);
		var a1t1 = this.evaluateSpline(dataset,datasetA1Index + stride * 6 * (turbidity1 - 1),stride,elevationK);
		return a0t0 * (1 - albedo) * (1 - turbidityK) + a1t0 * albedo * (1 - turbidityK) + a0t1 * (1 - albedo) * turbidityK + a1t1 * albedo * turbidityK;
	}
	,hosek_wilkie: function(cos_theta,gamma,cos_gamma,A,B,C,D,E,F,G,H,I) {
		var val = 1.0 + cos_gamma * cos_gamma;
		var chix = val / Math.pow(1.0 + H.x * H.x - 2.0 * cos_gamma * H.x,1.5);
		var chiy = val / Math.pow(1.0 + H.y * H.y - 2.0 * cos_gamma * H.y,1.5);
		var chiz = val / Math.pow(1.0 + H.z * H.z - 2.0 * cos_gamma * H.z,1.5);
		var chi_z;
		var chi_y;
		var chi_x = chix;
		chi_y = chiy;
		chi_z = chiz;
		var vx = (1.0 + A.x * Math.exp(B.x / (cos_theta + 0.01))) * (C.x + D.x * Math.exp(E.x * gamma) + F.x * (cos_gamma * cos_gamma) + G.x * chi_x + I.x * Math.sqrt(Math.max(0.0,cos_theta)));
		var vy = (1.0 + A.y * Math.exp(B.y / (cos_theta + 0.01))) * (C.y + D.y * Math.exp(E.y * gamma) + F.y * (cos_gamma * cos_gamma) + G.y * chi_y + I.y * Math.sqrt(Math.max(0.0,cos_theta)));
		var vz = (1.0 + A.z * Math.exp(B.z / (cos_theta + 0.01))) * (C.z + D.z * Math.exp(E.z * gamma) + F.z * (cos_gamma * cos_gamma) + G.z * chi_z + I.z * Math.sqrt(Math.max(0.0,cos_theta)));
		return new kha_math_FastVector3(vx,vy,vz);
	}
	,setVector: function(v,index,f) {
		if(index == 0) {
			v.x = f;
		} else if(index == 1) {
			v.y = f;
		} else {
			v.z = f;
		}
	}
	,__class__: armory_renderpath_HosekWilkieRadianceData
};
var armory_renderpath_HosekWilkie = function() { };
$hxClasses["armory.renderpath.HosekWilkie"] = armory_renderpath_HosekWilkie;
armory_renderpath_HosekWilkie.__name__ = ["armory","renderpath","HosekWilkie"];
armory_renderpath_HosekWilkie.recompute = function(sunPositionX,turbidity,albedo,normalizedSunY) {
	armory_renderpath_HosekWilkie.data = new armory_renderpath_HosekWilkieRadianceData(sunPositionX,turbidity,albedo,normalizedSunY);
};
armory_renderpath_HosekWilkie.init = function(world) {
	var probe = world.getGlobalProbe();
	var dir = probe.raw.sun_direction;
	armory_renderpath_HosekWilkie.sunDirection = new kha_math_FastVector3(dir[0],dir[1],dir[2]);
	var sunPositionX = Math.acos(armory_renderpath_HosekWilkie.sunDirection.z);
	var turbidity = probe.raw.turbidity;
	var albedo = probe.raw.ground_albedo;
	armory_renderpath_HosekWilkie.recompute(sunPositionX,turbidity,albedo,1.15);
};
var armory_renderpath_HosekWilkieData = function() { };
$hxClasses["armory.renderpath.HosekWilkieData"] = armory_renderpath_HosekWilkieData;
armory_renderpath_HosekWilkieData.__name__ = ["armory","renderpath","HosekWilkieData"];
var iron_Trait = function() {
	this._render2D = null;
	this._render = null;
	this._lateUpdate = null;
	this._update = null;
	this._remove = null;
	this._init = null;
	this._add = null;
	this.name = "";
};
$hxClasses["iron.Trait"] = iron_Trait;
iron_Trait.__name__ = ["iron","Trait"];
iron_Trait.prototype = {
	remove: function() {
		this.object.removeTrait(this);
	}
	,notifyOnAdd: function(f) {
		if(this._add == null) {
			this._add = [];
		}
		this._add.push(f);
	}
	,notifyOnInit: function(f) {
		if(this._init == null) {
			this._init = [];
		}
		this._init.push(f);
		iron_App.notifyOnInit(f);
	}
	,notifyOnRemove: function(f) {
		if(this._remove == null) {
			this._remove = [];
		}
		this._remove.push(f);
	}
	,notifyOnUpdate: function(f) {
		if(this._update == null) {
			this._update = [];
		}
		this._update.push(f);
		iron_App.notifyOnUpdate(f);
	}
	,removeUpdate: function(f) {
		HxOverrides.remove(this._update,f);
		iron_App.removeUpdate(f);
	}
	,notifyOnLateUpdate: function(f) {
		if(this._lateUpdate == null) {
			this._lateUpdate = [];
		}
		this._lateUpdate.push(f);
		iron_App.notifyOnLateUpdate(f);
	}
	,removeLateUpdate: function(f) {
		HxOverrides.remove(this._lateUpdate,f);
		iron_App.removeLateUpdate(f);
	}
	,notifyOnRender: function(f) {
		if(this._render == null) {
			this._render = [];
		}
		this._render.push(f);
		iron_App.notifyOnRender(f);
	}
	,removeRender: function(f) {
		HxOverrides.remove(this._render,f);
		iron_App.removeRender(f);
	}
	,notifyOnRender2D: function(f) {
		if(this._render2D == null) {
			this._render2D = [];
		}
		this._render2D.push(f);
		iron_App.notifyOnRender2D(f);
	}
	,removeRender2D: function(f) {
		HxOverrides.remove(this._render2D,f);
		iron_App.removeRender2D(f);
	}
	,__class__: iron_Trait
};
var armory_trait_ArcBall = function() {
	iron_Trait.call(this);
	this.notifyOnUpdate($bind(this,this.update));
};
$hxClasses["armory.trait.ArcBall"] = armory_trait_ArcBall;
armory_trait_ArcBall.__name__ = ["armory","trait","ArcBall"];
armory_trait_ArcBall.__super__ = iron_Trait;
armory_trait_ArcBall.prototype = $extend(iron_Trait.prototype,{
	update: function() {
		if(iron_system_Input.occupied) {
			return;
		}
		var mouse = iron_system_Input.getMouse();
		if(mouse.down()) {
			this.object.transform.rotate(new iron_math_Vec4(0,0,1),-mouse.movementX / 100);
			this.object.transform.buildMatrix();
			var _this = this.object.transform.matrix;
			this.object.transform.rotate(new iron_math_Vec4(_this.self._00,_this.self._01,_this.self._02),-mouse.movementY / 100);
			this.object.transform.buildMatrix();
		}
	}
	,__class__: armory_trait_ArcBall
});
var armory_trait_Character = function(animIdle,animMove) {
	this.state = 0;
	this.lastLoc = null;
	this.loc = new iron_math_Vec4();
	this.speed = 0.0;
	iron_Trait.call(this);
	this.animIdle = animIdle;
	this.animMove = animMove;
	this.notifyOnUpdate($bind(this,this.update));
};
$hxClasses["armory.trait.Character"] = armory_trait_Character;
armory_trait_Character.__name__ = ["armory","trait","Character"];
armory_trait_Character.__super__ = iron_Trait;
armory_trait_Character.prototype = $extend(iron_Trait.prototype,{
	update: function() {
		var tr = this.object.transform;
		this.loc.set(tr.matrix.self._30,tr.matrix.self._31,tr.matrix.self._32);
		if(this.lastLoc == null) {
			this.lastLoc = new iron_math_Vec4(this.loc.x,this.loc.y,this.loc.z);
		}
		var v1 = this.loc;
		var v2 = this.lastLoc;
		var vx = v1.x - v2.x;
		var vy = v1.y - v2.y;
		var vz = v1.z - v2.z;
		this.speed = Math.sqrt(vx * vx + vy * vy + vz * vz);
		this.lastLoc.setFrom(this.loc);
		if(this.state == 0 && this.speed > 0) {
			this.state = 1;
			this.object.animation.player.play(this.animMove);
		} else if(this.state == 1 && this.speed == 0) {
			this.state = 0;
			this.object.animation.player.pause();
		}
	}
	,__class__: armory_trait_Character
});
var armory_trait_internal_CameraController = function() {
	iron_Trait.call(this);
};
$hxClasses["armory.trait.internal.CameraController"] = armory_trait_internal_CameraController;
armory_trait_internal_CameraController.__name__ = ["armory","trait","internal","CameraController"];
armory_trait_internal_CameraController.__super__ = iron_Trait;
armory_trait_internal_CameraController.prototype = $extend(iron_Trait.prototype,{
	__class__: armory_trait_internal_CameraController
});
var armory_trait_FirstPersonController = function() {
	armory_trait_internal_CameraController.call(this);
};
$hxClasses["armory.trait.FirstPersonController"] = armory_trait_FirstPersonController;
armory_trait_FirstPersonController.__name__ = ["armory","trait","FirstPersonController"];
armory_trait_FirstPersonController.__super__ = armory_trait_internal_CameraController;
armory_trait_FirstPersonController.prototype = $extend(armory_trait_internal_CameraController.prototype,{
	__class__: armory_trait_FirstPersonController
});
var armory_trait_GunController = function() {
	iron_Trait.call(this);
};
$hxClasses["armory.trait.GunController"] = armory_trait_GunController;
armory_trait_GunController.__name__ = ["armory","trait","GunController"];
armory_trait_GunController.__super__ = iron_Trait;
armory_trait_GunController.prototype = $extend(iron_Trait.prototype,{
	__class__: armory_trait_GunController
});
var armory_trait_MirrorTexture = function(cameraName) {
	iron_Trait.call(this);
	this.cameraName = cameraName;
	this.notifyOnInit($bind(this,this.init));
};
$hxClasses["armory.trait.MirrorTexture"] = armory_trait_MirrorTexture;
armory_trait_MirrorTexture.__name__ = ["armory","trait","MirrorTexture"];
armory_trait_MirrorTexture.__super__ = iron_Trait;
armory_trait_MirrorTexture.prototype = $extend(iron_Trait.prototype,{
	init: function() {
		var image = iron_Scene.active.getCamera(this.cameraName).data.mirror;
		var o = js_Boot.__cast(this.object , iron_object_MeshObject);
		o.materials[0].contexts[0].textures[0] = image;
	}
	,__class__: armory_trait_MirrorTexture
});
var armory_trait_NavAgent = function() {
	this.orient = new iron_math_Vec4();
	this.index = 0;
	this.path = null;
	iron_Trait.call(this);
};
$hxClasses["armory.trait.NavAgent"] = armory_trait_NavAgent;
armory_trait_NavAgent.__name__ = ["armory","trait","NavAgent"];
armory_trait_NavAgent.__super__ = iron_Trait;
armory_trait_NavAgent.prototype = $extend(iron_Trait.prototype,{
	setPath: function(path) {
		iron_system_Tween.stop(this.object.transform.loc);
		this.path = path;
		this.index = 1;
		this.notifyOnUpdate($bind(this,this.update));
		this.go();
	}
	,shortAngle: function(from,to) {
		if(from < 0) {
			from += Math.PI * 2;
		}
		if(to < 0) {
			to += Math.PI * 2;
		}
		var delta = Math.abs(from - to);
		if(delta > Math.PI) {
			to = Math.PI * 2 - delta;
		}
		return to;
	}
	,go: function() {
		var _gthis = this;
		if(this.path == null || this.index >= this.path.length) {
			return;
		}
		var p = this.path[this.index];
		var v1 = this.object.transform.loc;
		var vx = v1.x - p.x;
		var vy = v1.y - p.y;
		var vz = v1.z - p.z;
		var dist = Math.sqrt(vx * vx + vy * vy + vz * vz);
		var speed = 0.2;
		this.orient.subvecs(p,this.object.transform.loc);
		var targetAngle = Math.atan2(this.orient.y,this.orient.x) + Math.PI / 2;
		var currentAngle = this.object.transform.rot.toAxisAngle(iron_math_Vec4.zAxis());
		this.angle = currentAngle;
		iron_system_Tween.to(this,0.4,{ angle : targetAngle},null,0,0);
		iron_system_Tween.to(this.object.transform.loc,dist * speed,{ x : p.x, y : p.y},function() {
			_gthis.index++;
			if(_gthis.index < _gthis.path.length) {
				_gthis.go();
			} else {
				_gthis.removeUpdate($bind(_gthis,_gthis.update));
			}
		},0,0);
	}
	,update: function() {
		this.object.transform.rot.fromAxisAngle(iron_math_Vec4.zAxis(),this.angle);
		this.object.transform.buildMatrix();
	}
	,__class__: armory_trait_NavAgent
});
var armory_trait_NavCrowd = function() {
	iron_Trait.call(this);
};
$hxClasses["armory.trait.NavCrowd"] = armory_trait_NavCrowd;
armory_trait_NavCrowd.__name__ = ["armory","trait","NavCrowd"];
armory_trait_NavCrowd.__super__ = iron_Trait;
armory_trait_NavCrowd.prototype = $extend(iron_Trait.prototype,{
	__class__: armory_trait_NavCrowd
});
var armory_trait_NavMesh = function() {
	iron_Trait.call(this);
};
$hxClasses["armory.trait.NavMesh"] = armory_trait_NavMesh;
armory_trait_NavMesh.__name__ = ["armory","trait","NavMesh"];
armory_trait_NavMesh.__super__ = iron_Trait;
armory_trait_NavMesh.prototype = $extend(iron_Trait.prototype,{
	__class__: armory_trait_NavMesh
});
var armory_trait_PhysicsBreak = function() {
	iron_Trait.call(this);
};
$hxClasses["armory.trait.PhysicsBreak"] = armory_trait_PhysicsBreak;
armory_trait_PhysicsBreak.__name__ = ["armory","trait","PhysicsBreak"];
armory_trait_PhysicsBreak.__super__ = iron_Trait;
armory_trait_PhysicsBreak.prototype = $extend(iron_Trait.prototype,{
	__class__: armory_trait_PhysicsBreak
});
var armory_trait_ConvexBreaker = function(minSizeForBreak,smallDelta) {
	if(smallDelta == null) {
		smallDelta = 0.0001;
	}
	if(minSizeForBreak == null) {
		minSizeForBreak = 1.4;
	}
	this.minSizeForBreak = minSizeForBreak;
	this.smallDelta = smallDelta;
	this.tempLine = new armory_trait_Line3();
	this.tempPlane = new armory_trait_Plane();
	this.tempPlane2 = new armory_trait_Plane();
	this.tempCM1 = new iron_math_Vec4();
	this.tempCM2 = new iron_math_Vec4();
	this.tempVec4 = new iron_math_Vec4();
	this.tempVec42 = new iron_math_Vec4();
	this.tempVec43 = new iron_math_Vec4();
	this.tempCutResult = new armory_trait_CutResult();
	this.segments = [];
	var n = 900;
	var _g1 = 0;
	var _g = n;
	while(_g1 < _g) {
		var i = _g1++;
		this.segments.push(false);
	}
	this.userDataMap = new haxe_ds_ObjectMap();
};
$hxClasses["armory.trait.ConvexBreaker"] = armory_trait_ConvexBreaker;
armory_trait_ConvexBreaker.__name__ = ["armory","trait","ConvexBreaker"];
armory_trait_ConvexBreaker.prototype = {
	initBreakableObject: function(object,mass,velocity,angularVelocity,breakable) {
		var ar = object.data.mesh.positions;
		var sc = object.transform.scale;
		var vertices = [];
		var _g1 = 0;
		var _g = ar.length / 3 | 0;
		while(_g1 < _g) {
			var i = _g1++;
			vertices.push(new iron_math_Vec4(ar[i * 3] * sc.x,ar[i * 3 + 1] * sc.y,ar[i * 3 + 2] * sc.z,0));
		}
		var ind = object.data.mesh.indices[0];
		var faces = [];
		var _g11 = 0;
		var _g2 = ind.length / 3 | 0;
		while(_g11 < _g2) {
			var i1 = _g11++;
			var a = ind[i1 * 3];
			var b = ind[i1 * 3 + 1];
			var c = ind[i1 * 3 + 2];
			var _g21 = 0;
			while(_g21 < faces.length) {
				var f = faces[_g21];
				++_g21;
				var _this = vertices[a];
				var v = vertices[f.a];
				if(_this.x == v.x && _this.y == v.y && _this.z == v.z) {
					a = f.a;
				} else {
					var _this1 = vertices[a];
					var v1 = vertices[f.b];
					if(_this1.x == v1.x && _this1.y == v1.y && _this1.z == v1.z) {
						a = f.b;
					} else {
						var _this2 = vertices[a];
						var v2 = vertices[f.c];
						if(_this2.x == v2.x && _this2.y == v2.y && _this2.z == v2.z) {
							a = f.c;
						}
					}
				}
				var _this3 = vertices[b];
				var v3 = vertices[f.a];
				if(_this3.x == v3.x && _this3.y == v3.y && _this3.z == v3.z) {
					b = f.a;
				} else {
					var _this4 = vertices[b];
					var v4 = vertices[f.b];
					if(_this4.x == v4.x && _this4.y == v4.y && _this4.z == v4.z) {
						b = f.b;
					} else {
						var _this5 = vertices[b];
						var v5 = vertices[f.c];
						if(_this5.x == v5.x && _this5.y == v5.y && _this5.z == v5.z) {
							b = f.c;
						}
					}
				}
				var _this6 = vertices[c];
				var v6 = vertices[f.a];
				if(_this6.x == v6.x && _this6.y == v6.y && _this6.z == v6.z) {
					c = f.a;
				} else {
					var _this7 = vertices[c];
					var v7 = vertices[f.b];
					if(_this7.x == v7.x && _this7.y == v7.y && _this7.z == v7.z) {
						c = f.b;
					} else {
						var _this8 = vertices[c];
						var v8 = vertices[f.c];
						if(_this8.x == v8.x && _this8.y == v8.y && _this8.z == v8.z) {
							c = f.c;
						}
					}
				}
			}
			faces.push(new armory_trait_Face3(a,b,c));
		}
		var verts = [];
		var map = new haxe_ds_IntMap();
		var i2 = 0;
		var orderVert = function(fi) {
			var val = map.h[fi];
			if(val == null) {
				verts.push(vertices[fi]);
				map.h[fi] = i2;
				i2 += 1;
				return i2 - 1;
			} else {
				return val;
			}
		};
		var _g3 = 0;
		while(_g3 < faces.length) {
			var f1 = faces[_g3];
			++_g3;
			f1.a = orderVert(f1.a);
			f1.b = orderVert(f1.b);
			f1.c = orderVert(f1.c);
		}
		var userData = new armory_trait_UserData();
		userData.mass = mass;
		userData.velocity = velocity.clone();
		userData.angularVelocity = angularVelocity.clone();
		userData.breakable = breakable;
		userData.vertices = verts;
		userData.faces = faces;
		this.userDataMap.set(object,userData);
	}
	,subdivideByImpact: function(object,pointOfImpact,normal,maxRadialIterations,maxRandomIterations) {
		var _gthis = this;
		var debris = [];
		this.tempVec4.addvecs(pointOfImpact,normal);
		this.tempPlane.setFromCoplanarPoints(pointOfImpact,object.transform.loc,this.tempVec4);
		var maxTotalIterations = maxRandomIterations + maxRadialIterations;
		var scope = this;
		var subdivideRadial = null;
		subdivideRadial = function(subObject,startAngle,endAngle,numIterations) {
			if(Math.random() < numIterations * 0.05 || numIterations > maxTotalIterations) {
				debris.push(subObject);
				return;
			}
			var angle = Math.PI;
			if(numIterations == 0) {
				_gthis.tempPlane2.normal.setFrom(_gthis.tempPlane.normal);
				_gthis.tempPlane2.constant = _gthis.tempPlane.constant;
			} else if(numIterations <= maxRadialIterations) {
				angle = (endAngle - startAngle) * (0.2 + 0.6 * Math.random()) + startAngle;
				scope.tempVec42.setFrom(object.transform.loc).sub(pointOfImpact).applyAxisAngle(normal,angle).add(pointOfImpact);
				_gthis.tempPlane2.setFromCoplanarPoints(pointOfImpact,scope.tempVec4,scope.tempVec42);
			} else {
				angle = (0.5 * (numIterations & 1) + 0.2 * (2 - Math.random())) * Math.PI;
				scope.tempVec42.setFrom(pointOfImpact).sub(subObject.transform.loc).applyAxisAngle(normal,angle).add(subObject.transform.loc);
				scope.tempVec43.setFrom(normal).add(subObject.transform.loc);
				_gthis.tempPlane2.setFromCoplanarPoints(subObject.transform.loc,scope.tempVec43,scope.tempVec42);
			}
			scope.cutByPlane(subObject,_gthis.tempPlane2,scope.tempCutResult);
			var object1 = scope.tempCutResult.object1;
			var object2 = scope.tempCutResult.object2;
			if(object1 != null) {
				subdivideRadial(object1,startAngle,angle,numIterations + 1);
			}
			if(object2 != null) {
				subdivideRadial(object2,angle,endAngle,numIterations + 1);
			}
			HxOverrides.remove(iron_Scene.active.meshes,subObject);
		};
		var subdivideRadial1 = subdivideRadial;
		subdivideRadial1(object,0,2 * Math.PI,0);
		return debris;
	}
	,transformFreeVector: function(v,m) {
		var x = v.x;
		var y = v.y;
		var z = v.z;
		v.x = m.self._00 * x + m.self._10 * y + m.self._20 * z;
		v.y = m.self._01 * x + m.self._11 * y + m.self._21 * z;
		v.z = m.self._02 * x + m.self._12 * y + m.self._22 * z;
		return v;
	}
	,transformFreeVectorInverse: function(v,m) {
		var x = v.x;
		var y = v.y;
		var z = v.z;
		v.x = m.self._00 * x + m.self._01 * y + m.self._02 * z;
		v.y = m.self._10 * x + m.self._11 * y + m.self._12 * z;
		v.z = m.self._20 * x + m.self._21 * y + m.self._22 * z;
		return v;
	}
	,transformTiedVectorInverse: function(v,m) {
		var x = v.x;
		var y = v.y;
		var z = v.z;
		v.x = m.self._00 * x + m.self._01 * y + m.self._02 * z - m.self._30;
		v.y = m.self._10 * x + m.self._11 * y + m.self._12 * z - m.self._31;
		v.z = m.self._20 * x + m.self._21 * y + m.self._22 * z - m.self._32;
		return v;
	}
	,transformPlaneToLocalSpace: function(plane,m,resultPlane) {
		resultPlane.normal.setFrom(plane.normal);
		resultPlane.constant = plane.constant;
		var v1 = new iron_math_Vec4();
		var referencePoint = this.transformTiedVectorInverse(plane.coplanarPoint(v1),m);
		this.transformFreeVectorInverse(resultPlane.normal,m);
		resultPlane.constant = -referencePoint.dot(resultPlane.normal);
	}
	,cutByPlane: function(object,plane,output) {
		var userData = this.userDataMap.h[object.__id__];
		var points = userData.vertices;
		var faces = userData.faces;
		var numPoints = points.length;
		var points1 = [];
		var points2 = [];
		var delta = this.smallDelta;
		var _g1 = 0;
		var _g = numPoints;
		while(_g1 < _g) {
			var i = _g1++;
			points[i].w = 0;
		}
		var numPointPairs = numPoints * numPoints;
		var _g11 = 0;
		var _g2 = numPointPairs;
		while(_g11 < _g2) {
			var i1 = _g11++;
			this.segments[i1] = false;
		}
		var _g12 = 0;
		var _g3 = faces.length - 1;
		while(_g12 < _g3) {
			var i2 = _g12++;
			var face1 = faces[i2];
			var _g31 = i2 + 1;
			var _g21 = faces.length;
			while(_g31 < _g21) {
				var j = _g31++;
				var face2 = faces[j];
				var coplanar = 1 - face1.normal.dot(face2.normal) < delta;
				if(coplanar) {
					var a1 = face1.a;
					var b1 = face1.b;
					var c1 = face1.c;
					var a2 = face2.a;
					var b2 = face2.b;
					var c2 = face2.c;
					if(a1 == a2 || a1 == b2 || a1 == c2) {
						if(b1 == a2 || b1 == b2 || b1 == c2) {
							this.segments[a1 * numPoints + b1] = true;
							this.segments[b1 * numPoints + a1] = true;
						} else {
							this.segments[c1 * numPoints + a1] = true;
							this.segments[a1 * numPoints + c1] = true;
						}
					} else if(b1 == a2 || b1 == b2 || b1 == c2) {
						this.segments[c1 * numPoints + b1] = true;
						this.segments[b1 * numPoints + c1] = true;
					}
				}
			}
		}
		var localPlane = this.tempPlane;
		object.transform.buildMatrix();
		this.transformPlaneToLocalSpace(plane,object.transform.matrix,localPlane);
		var _g13 = 0;
		var _g4 = faces.length;
		while(_g13 < _g4) {
			var i3 = _g13++;
			var face = faces[i3];
			var _g22 = 0;
			while(_g22 < 3) {
				var segment = _g22++;
				var i0 = segment == 0 ? face.a : segment == 1 ? face.b : face.c;
				var i11 = segment == 0 ? face.b : segment == 1 ? face.c : face.a;
				var segmentState = this.segments[i0 * numPoints + i11];
				if(segmentState) {
					continue;
				}
				this.segments[i0 * numPoints + i11] = true;
				this.segments[i11 * numPoints + i0] = true;
				var p0 = points[i0];
				var p1 = points[i11];
				if(p0.w == 0) {
					var d = localPlane.distanceToPoint(p0);
					if(d > delta) {
						p0.w = 2;
						points2.push(p0);
					} else if(d < -delta) {
						p0.w = 1;
						points1.push(p0);
					} else {
						p0.w = 3;
						points1.push(p0);
						var p02 = p0.clone();
						p02.w = 3;
						points2.push(p02);
					}
				}
				if(p1.w == 0) {
					var d1 = localPlane.distanceToPoint(p1);
					if(d1 > delta) {
						p1.w = 2;
						points2.push(p1);
					} else if(d1 < -delta) {
						p1.w = 1;
						points1.push(p1);
					} else {
						p1.w = 3;
						points1.push(p1);
						var p1_2 = p1.clone();
						p1_2.w = 3;
						points2.push(p1_2);
					}
				}
				var mark0 = p0.w;
				var mark1 = p1.w;
				if(mark0 == 1 && mark1 == 2 || mark0 == 2 && mark1 == 1) {
					this.tempLine.start.setFrom(p0);
					this.tempLine.end.setFrom(p1);
					var intersection = localPlane.intersectLine(this.tempLine);
					if(intersection == null) {
						return 0;
					}
					intersection.w = 1;
					points1.push(intersection);
					var intersection_2 = intersection.clone();
					intersection_2.w = 2;
					points2.push(intersection_2);
				}
			}
		}
		var newMass = userData.mass * 0.5;
		this.tempCM1.set(0,0,0);
		var radius1 = 0.0;
		var numPoints1 = points1.length;
		if(numPoints1 > 0) {
			var _g14 = 0;
			var _g5 = numPoints1;
			while(_g14 < _g5) {
				var i4 = _g14++;
				this.tempCM1.add(points1[i4]);
			}
			this.tempCM1.mult(1.0 / numPoints1);
			var _g15 = 0;
			var _g6 = numPoints1;
			while(_g15 < _g6) {
				var i5 = _g15++;
				var p = points1[i5];
				p.sub(this.tempCM1);
				radius1 = Math.max(Math.max(radius1,p.x),Math.max(p.y,p.z));
			}
			this.tempCM1.add(object.transform.loc);
		}
		this.tempCM2.set(0,0,0);
		var radius2 = 0.0;
		var numPoints2 = points2.length;
		if(numPoints2 > 0) {
			var _g16 = 0;
			var _g7 = numPoints2;
			while(_g16 < _g7) {
				var i6 = _g16++;
				this.tempCM2.add(points2[i6]);
			}
			this.tempCM2.mult(1.0 / numPoints2);
			var _g17 = 0;
			var _g8 = numPoints2;
			while(_g17 < _g8) {
				var i7 = _g17++;
				var p2 = points2[i7];
				p2.sub(this.tempCM2);
				radius2 = Math.max(Math.max(radius2,p2.x),Math.max(p2.y,p2.z));
			}
			this.tempCM2.add(object.transform.loc);
		}
		var object1 = null;
		var object2 = null;
		var numObjects = 0;
		if(numPoints1 > 4) {
			var data1 = this.makeMeshData(points1);
			object1 = new iron_object_MeshObject(data1,object.materials);
			object1.transform.loc.setFrom(this.tempCM1);
			object1.transform.rot.setFrom(object.transform.rot);
			this.initBreakableObject(object1,newMass,userData.velocity,userData.angularVelocity,2 * radius1 > this.minSizeForBreak);
			++numObjects;
		}
		if(numPoints2 > 4) {
			var data2 = this.makeMeshData(points2);
			object2 = new iron_object_MeshObject(data2,object.materials);
			object2.transform.loc.setFrom(this.tempCM2);
			object2.transform.rot.setFrom(object.transform.rot);
			this.initBreakableObject(object2,newMass,userData.velocity,userData.angularVelocity,2 * radius2 > this.minSizeForBreak);
			++numObjects;
		}
		output.object1 = object1;
		output.object2 = object2;
		return numObjects;
	}
	,makeMeshData: function(points) {
		while(points.length > 50) points.pop();
		var cm = new armory_trait_ConvexHull(points);
		var pa = [];
		var na = [];
		var _g = 0;
		var _g1 = cm.vertices;
		while(_g < _g1.length) {
			var p = _g1[_g];
			++_g;
			pa.push(p.x);
			pa.push(p.y);
			pa.push(p.z);
			na.push(0.0);
			na.push(0.0);
			na.push(0.0);
		}
		var ind = [];
		var addFlatNormal = function(normal,fi) {
			if(na[fi * 3] != 0.0 || na[fi * 3 + 1] != 0.0 || na[fi * 3 + 2] != 0.0) {
				pa.push(pa[fi * 3]);
				pa.push(pa[fi * 3 + 1]);
				pa.push(pa[fi * 3 + 2]);
				na.push(normal.x);
				na.push(normal.y);
				na.push(normal.z);
				ind.push(pa.length / 3 - 1 | 0);
			} else {
				na[fi * 3] = normal.x;
				na[fi * 3 + 1] = normal.y;
				na[fi * 3 + 2] = normal.z;
				ind.push(fi);
			}
		};
		var _g2 = 0;
		var _g11 = cm.face3s;
		while(_g2 < _g11.length) {
			var f = _g11[_g2];
			++_g2;
			addFlatNormal(f.normal,f.a);
			addFlatNormal(f.normal,f.b);
			addFlatNormal(f.normal,f.c);
		}
		var pos = { attrib : "position", size : 3, values : pa};
		var nor = { attrib : "normal", size : 3, values : na};
		var indices = { material : 0, size : 3, values : ind};
		var rawmesh = { primitive : "triangles", vertex_arrays : [pos,nor], index_arrays : [indices]};
		var rawmeshData = { name : "TempMesh" + armory_trait_ConvexBreaker.meshIndex++, mesh : rawmesh};
		var md = iron_data_MeshData.newSync(rawmeshData);
		md.mesh.calculateAABB();
		return md;
	}
	,__class__: armory_trait_ConvexBreaker
};
var armory_trait_UserData = function() {
};
$hxClasses["armory.trait.UserData"] = armory_trait_UserData;
armory_trait_UserData.__name__ = ["armory","trait","UserData"];
armory_trait_UserData.prototype = {
	__class__: armory_trait_UserData
};
var armory_trait_CutResult = function() {
	this.object2 = null;
	this.object1 = null;
};
$hxClasses["armory.trait.CutResult"] = armory_trait_CutResult;
armory_trait_CutResult.__name__ = ["armory","trait","CutResult"];
armory_trait_CutResult.prototype = {
	__class__: armory_trait_CutResult
};
var armory_trait_Line3 = function() {
	this.start = new iron_math_Vec4();
	this.end = new iron_math_Vec4();
};
$hxClasses["armory.trait.Line3"] = armory_trait_Line3;
armory_trait_Line3.__name__ = ["armory","trait","Line3"];
armory_trait_Line3.prototype = {
	delta: function(result) {
		result.subvecs(this.end,this.start);
		return result;
	}
	,__class__: armory_trait_Line3
};
var armory_trait_Plane = function() {
	this.constant = 0.0;
	this.normal = new iron_math_Vec4(1.0,0.0,0.0);
};
$hxClasses["armory.trait.Plane"] = armory_trait_Plane;
armory_trait_Plane.__name__ = ["armory","trait","Plane"];
armory_trait_Plane.prototype = {
	distanceToPoint: function(point) {
		return this.normal.dot(point) + this.constant;
	}
	,setFromCoplanarPoints: function(a,b,c) {
		var v1 = new iron_math_Vec4();
		var v2 = new iron_math_Vec4();
		var normal = v1.subvecs(c,b).cross(v2.subvecs(a,b)).normalize();
		this.setFromNormalAndCoplanarPoint(normal,a);
		return this;
	}
	,setFromNormalAndCoplanarPoint: function(normal,point) {
		this.normal.setFrom(normal);
		this.constant = -point.dot(this.normal);
		return this;
	}
	,coplanarPoint: function(result) {
		return result.setFrom(this.normal).mult(-this.constant);
	}
	,intersectLine: function(line) {
		var v1 = new iron_math_Vec4();
		var result = new iron_math_Vec4();
		var direction = line.delta(v1);
		var denominator = this.normal.dot(direction);
		if(denominator == 0) {
			if(this.distanceToPoint(line.start) == 0) {
				return result.setFrom(line.start);
			}
			return null;
		}
		var t = -(line.start.dot(this.normal) + this.constant) / denominator;
		if(t < 0 || t > 1) {
			return null;
		}
		return result.setFrom(direction).mult(t).add(line.start);
	}
	,__class__: armory_trait_Plane
};
var armory_trait_ConvexHull = function(vertices) {
	this.ab = new iron_math_Vec4();
	this.cb = new iron_math_Vec4();
	this.vertices = [];
	this.face3s = [];
	this.faces = [[0,1,2],[0,2,1]];
	var _g1 = 3;
	var _g = vertices.length;
	while(_g1 < _g) {
		var i = _g1++;
		this.addPoint(i,vertices);
	}
	var id = 0;
	var newId = [];
	var _g11 = 0;
	var _g2 = vertices.length;
	while(_g11 < _g2) {
		var i1 = _g11++;
		newId.push(-1);
	}
	var _g12 = 0;
	var _g3 = this.faces.length;
	while(_g12 < _g3) {
		var i2 = _g12++;
		var face = this.faces[i2];
		var _g21 = 0;
		while(_g21 < 3) {
			var j = _g21++;
			if(newId[face[j]] == -1) {
				newId[face[j]] = id++;
				this.vertices.push(vertices[face[j]]);
			}
			face[j] = newId[face[j]];
		}
	}
	var _g13 = 0;
	var _g4 = this.faces.length;
	while(_g13 < _g4) {
		var i3 = _g13++;
		this.face3s.push(new armory_trait_Face3(this.faces[i3][0],this.faces[i3][1],this.faces[i3][2]));
	}
	this.computeFaceNormals();
};
$hxClasses["armory.trait.ConvexHull"] = armory_trait_ConvexHull;
armory_trait_ConvexHull.__name__ = ["armory","trait","ConvexHull"];
armory_trait_ConvexHull.prototype = {
	computeFaceNormals: function() {
		var _g1 = 0;
		var _g = this.face3s.length;
		while(_g1 < _g) {
			var f = _g1++;
			var face = this.face3s[f];
			var va = this.vertices[face.a];
			var vb = this.vertices[face.b];
			var vc = this.vertices[face.c];
			this.cb.subvecs(vc,vb);
			this.ab.subvecs(va,vb);
			this.cb.cross(this.ab);
			this.cb.normalize();
			face.normal.setFrom(this.cb);
		}
	}
	,addPoint: function(vertexId,vertices) {
		var vertex = vertices[vertexId].clone();
		var mag = Math.sqrt(vertex.x * vertex.x + vertex.y * vertex.y + vertex.z * vertex.z);
		vertex.x += mag * this.randomOffset();
		vertex.y += mag * this.randomOffset();
		vertex.z += mag * this.randomOffset();
		var hole = [];
		var f = 0;
		while(f < this.faces.length) {
			var face = this.faces[f];
			if(this.visible(face,vertex,vertices)) {
				var _g = 0;
				while(_g < 3) {
					var e = _g++;
					var edge = [face[e],face[(e + 1) % 3]];
					var boundary = true;
					var _g2 = 0;
					var _g1 = hole.length;
					while(_g2 < _g1) {
						var h = _g2++;
						if(this.equalEdge(hole[h],edge)) {
							hole[h] = hole[hole.length - 1];
							hole.pop();
							boundary = false;
							break;
						}
					}
					if(boundary) {
						hole.push(edge);
					}
				}
				this.faces[f] = this.faces[this.faces.length - 1];
				this.faces.pop();
			} else {
				++f;
			}
		}
		var _g11 = 0;
		var _g3 = hole.length;
		while(_g11 < _g3) {
			var h1 = _g11++;
			this.faces.push([hole[h1][0],hole[h1][1],vertexId]);
		}
	}
	,visible: function(face,vertex,vertices) {
		var va = vertices[face[0]];
		var vb = vertices[face[1]];
		var vc = vertices[face[2]];
		var n = this.normal(va,vb,vc);
		var dist = n.dot(va);
		return n.dot(vertex) >= dist;
	}
	,normal: function(va,vb,vc) {
		var cb = new iron_math_Vec4();
		var ab = new iron_math_Vec4();
		cb.subvecs(vc,vb);
		ab.subvecs(va,vb);
		cb.cross(ab);
		cb.normalize();
		return cb;
	}
	,equalEdge: function(ea,eb) {
		if(ea[0] == eb[1]) {
			return ea[1] == eb[0];
		} else {
			return false;
		}
	}
	,randomOffset: function() {
		return (Math.random() - 0.5) * 2 * 1e-6;
	}
	,__class__: armory_trait_ConvexHull
};
var armory_trait_Face3 = function(a,b,c) {
	this.a = a;
	this.b = b;
	this.c = c;
	this.normal = new iron_math_Vec4();
};
$hxClasses["armory.trait.Face3"] = armory_trait_Face3;
armory_trait_Face3.__name__ = ["armory","trait","Face3"];
armory_trait_Face3.prototype = {
	__class__: armory_trait_Face3
};
var armory_trait_PhysicsDrag = function() {
	iron_Trait.call(this);
};
$hxClasses["armory.trait.PhysicsDrag"] = armory_trait_PhysicsDrag;
armory_trait_PhysicsDrag.__name__ = ["armory","trait","PhysicsDrag"];
armory_trait_PhysicsDrag.__super__ = iron_Trait;
armory_trait_PhysicsDrag.prototype = $extend(iron_Trait.prototype,{
	__class__: armory_trait_PhysicsDrag
});
var armory_trait_SceneInstance = function(sceneName) {
	var _gthis = this;
	iron_Trait.call(this);
	this.notifyOnInit(function() {
		iron_Scene.active.addScene(_gthis.safeFilename(sceneName),_gthis.object,function(o) {
		});
	});
};
$hxClasses["armory.trait.SceneInstance"] = armory_trait_SceneInstance;
armory_trait_SceneInstance.__name__ = ["armory","trait","SceneInstance"];
armory_trait_SceneInstance.__super__ = iron_Trait;
armory_trait_SceneInstance.prototype = $extend(iron_Trait.prototype,{
	safeFilename: function(s) {
		s = StringTools.replace(s,".","_");
		s = StringTools.replace(s,"-","_");
		s = StringTools.replace(s," ","_");
		if(Std.parseInt(s.charAt(0)) != null) {
			s = "_" + s;
		}
		return s;
	}
	,__class__: armory_trait_SceneInstance
});
var armory_trait_SidescrollerController = function() {
	armory_trait_internal_CameraController.call(this);
};
$hxClasses["armory.trait.SidescrollerController"] = armory_trait_SidescrollerController;
armory_trait_SidescrollerController.__name__ = ["armory","trait","SidescrollerController"];
armory_trait_SidescrollerController.__super__ = armory_trait_internal_CameraController;
armory_trait_SidescrollerController.prototype = $extend(armory_trait_internal_CameraController.prototype,{
	__class__: armory_trait_SidescrollerController
});
var armory_trait_ThirdPersonController = function() {
	armory_trait_internal_CameraController.call(this);
};
$hxClasses["armory.trait.ThirdPersonController"] = armory_trait_ThirdPersonController;
armory_trait_ThirdPersonController.__name__ = ["armory","trait","ThirdPersonController"];
armory_trait_ThirdPersonController.__super__ = armory_trait_internal_CameraController;
armory_trait_ThirdPersonController.prototype = $extend(armory_trait_internal_CameraController.prototype,{
	__class__: armory_trait_ThirdPersonController
});
var armory_trait_VRNavigation = function() {
	this.look = new iron_math_Vec4();
	iron_Trait.call(this);
	this.notifyOnInit($bind(this,this.init));
	this.notifyOnUpdate($bind(this,this.update));
};
$hxClasses["armory.trait.VRNavigation"] = armory_trait_VRNavigation;
armory_trait_VRNavigation.__name__ = ["armory","trait","VRNavigation"];
armory_trait_VRNavigation.__super__ = iron_Trait;
armory_trait_VRNavigation.prototype = $extend(iron_Trait.prototype,{
	init: function() {
		this.mouse = iron_system_Input.getMouse();
		this.camera = js_Boot.__cast(this.object , iron_object_CameraObject);
	}
	,update: function() {
		if(this.mouse.down()) {
			var vr = kha_vr_VrInterface.instance;
			var V = vr != null && vr.IsPresenting() ? this.camera.leftV : this.camera.V;
			this.look.set(-V.self._02,-V.self._12,-V.self._22);
			this.camera.move(this.look,0.0833333333333333287);
		}
	}
	,__class__: armory_trait_VRNavigation
});
var armory_trait_VehicleBody = function() {
	iron_Trait.call(this);
};
$hxClasses["armory.trait.VehicleBody"] = armory_trait_VehicleBody;
armory_trait_VehicleBody.__name__ = ["armory","trait","VehicleBody"];
armory_trait_VehicleBody.__super__ = iron_Trait;
armory_trait_VehicleBody.prototype = $extend(iron_Trait.prototype,{
	__class__: armory_trait_VehicleBody
});
var armory_trait_VehicleWheel = function() {
};
$hxClasses["armory.trait.VehicleWheel"] = armory_trait_VehicleWheel;
armory_trait_VehicleWheel.__name__ = ["armory","trait","VehicleWheel"];
armory_trait_VehicleWheel.prototype = {
	__class__: armory_trait_VehicleWheel
};
var armory_trait_WalkNavigation = function(easing) {
	if(easing == null) {
		easing = true;
	}
	this.ease = 1.0;
	this.easing = true;
	this.yvec = new iron_math_Vec4();
	this.xvec = new iron_math_Vec4();
	this.dir = new iron_math_Vec4();
	iron_Trait.call(this);
	this.easing = easing;
	this.notifyOnInit($bind(this,this.init));
	this.notifyOnUpdate($bind(this,this.update));
};
$hxClasses["armory.trait.WalkNavigation"] = armory_trait_WalkNavigation;
armory_trait_WalkNavigation.__name__ = ["armory","trait","WalkNavigation"];
armory_trait_WalkNavigation.__super__ = iron_Trait;
armory_trait_WalkNavigation.prototype = $extend(iron_Trait.prototype,{
	init: function() {
		this.keyboard = iron_system_Input.getKeyboard();
		this.gamepad = iron_system_Input.getGamepad();
		this.mouse = iron_system_Input.getMouse();
		this.camera = js_Boot.__cast(this.object , iron_object_CameraObject);
	}
	,update: function() {
		if(iron_system_Input.occupied) {
			return;
		}
		var moveForward = this.keyboard.down("w") || this.keyboard.down("up");
		var moveBackward = this.keyboard.down("s") || this.keyboard.down("down");
		var strafeLeft = this.keyboard.down("a") || this.keyboard.down("left");
		var strafeRight = this.keyboard.down("d") || this.keyboard.down("right");
		var strafeUp = this.keyboard.down("e");
		var strafeDown = this.keyboard.down("q");
		var fast = this.keyboard.down("shift") ? 2.0 : this.keyboard.down("alt") ? 0.5 : 1.0;
		if(this.gamepad != null) {
			var leftStickY = Math.abs(this.gamepad.leftStick.y) > 0.05;
			var leftStickX = Math.abs(this.gamepad.leftStick.x) > 0.05;
			var r1 = this.gamepad.down("r1") > 0.0;
			var l1 = this.gamepad.down("l1") > 0.0;
			var rightStickX = Math.abs(this.gamepad.rightStick.x) > 0.1;
			var rightStickY = Math.abs(this.gamepad.rightStick.y) > 0.1;
			if(leftStickY || leftStickX || r1 || l1 || rightStickX || rightStickY) {
				this.dir.set(0,0,0);
				if(leftStickY) {
					var _this = this.camera;
					this.yvec.setFrom(new iron_math_Vec4(-_this.transform.local.self._20,-_this.transform.local.self._21,-_this.transform.local.self._22));
					this.yvec.mult(this.gamepad.leftStick.y);
					this.dir.add(this.yvec);
				}
				if(leftStickX) {
					var _this1 = this.camera;
					this.xvec.setFrom(new iron_math_Vec4(_this1.transform.local.self._00,_this1.transform.local.self._01,_this1.transform.local.self._02));
					this.xvec.mult(this.gamepad.leftStick.x);
					this.dir.add(this.xvec);
				}
				if(r1) {
					this.dir.addf(0,0,1);
				}
				if(l1) {
					this.dir.addf(0,0,-1);
				}
				var d = 0.0833333333333333287 * fast;
				this.camera.move(this.dir,d);
				if(rightStickX) {
					this.camera.rotate(iron_math_Vec4.zAxis(),-this.gamepad.rightStick.x / 15.0);
				}
				if(rightStickY) {
					var _this2 = this.camera;
					this.camera.rotate(new iron_math_Vec4(_this2.transform.local.self._00,_this2.transform.local.self._01,_this2.transform.local.self._02),this.gamepad.rightStick.y / 15.0);
				}
			}
		}
		if(moveForward || moveBackward || strafeRight || strafeLeft || strafeUp || strafeDown) {
			if(this.easing) {
				this.ease += 0.25;
				if(this.ease > 1.0) {
					this.ease = 1.0;
				}
			} else {
				this.ease = 1.0;
			}
			this.dir.set(0,0,0);
			if(moveForward) {
				var tmp = this.dir;
				var _this3 = this.camera;
				var tmp1 = new iron_math_Vec4(-_this3.transform.local.self._20,-_this3.transform.local.self._21,-_this3.transform.local.self._22).x;
				var _this4 = this.camera;
				var tmp2 = new iron_math_Vec4(-_this4.transform.local.self._20,-_this4.transform.local.self._21,-_this4.transform.local.self._22).y;
				var _this5 = this.camera;
				tmp.addf(tmp1,tmp2,new iron_math_Vec4(-_this5.transform.local.self._20,-_this5.transform.local.self._21,-_this5.transform.local.self._22).z);
			}
			if(moveBackward) {
				var tmp3 = this.dir;
				var _this6 = this.camera;
				var tmp4 = -new iron_math_Vec4(-_this6.transform.local.self._20,-_this6.transform.local.self._21,-_this6.transform.local.self._22).x;
				var _this7 = this.camera;
				var tmp5 = -new iron_math_Vec4(-_this7.transform.local.self._20,-_this7.transform.local.self._21,-_this7.transform.local.self._22).y;
				var _this8 = this.camera;
				tmp3.addf(tmp4,tmp5,-new iron_math_Vec4(-_this8.transform.local.self._20,-_this8.transform.local.self._21,-_this8.transform.local.self._22).z);
			}
			if(strafeRight) {
				var tmp6 = this.dir;
				var _this9 = this.camera;
				var tmp7 = new iron_math_Vec4(_this9.transform.local.self._00,_this9.transform.local.self._01,_this9.transform.local.self._02).x;
				var _this10 = this.camera;
				var tmp8 = new iron_math_Vec4(_this10.transform.local.self._00,_this10.transform.local.self._01,_this10.transform.local.self._02).y;
				var _this11 = this.camera;
				tmp6.addf(tmp7,tmp8,new iron_math_Vec4(_this11.transform.local.self._00,_this11.transform.local.self._01,_this11.transform.local.self._02).z);
			}
			if(strafeLeft) {
				var tmp9 = this.dir;
				var _this12 = this.camera;
				var tmp10 = -new iron_math_Vec4(_this12.transform.local.self._00,_this12.transform.local.self._01,_this12.transform.local.self._02).x;
				var _this13 = this.camera;
				var tmp11 = -new iron_math_Vec4(_this13.transform.local.self._00,_this13.transform.local.self._01,_this13.transform.local.self._02).y;
				var _this14 = this.camera;
				tmp9.addf(tmp10,tmp11,-new iron_math_Vec4(_this14.transform.local.self._00,_this14.transform.local.self._01,_this14.transform.local.self._02).z);
			}
			if(strafeUp) {
				this.dir.addf(0,0,1);
			}
			if(strafeDown) {
				this.dir.addf(0,0,-1);
			}
		} else if(this.easing) {
			this.ease -= 0.333333333333333315 * this.ease;
			if(this.ease < 0.0) {
				this.ease = 0.0;
			}
		} else {
			this.ease = 0.0;
		}
		var d1 = 0.0833333333333333287 * fast * this.ease;
		if(d1 > 0.0) {
			this.camera.move(this.dir,d1);
		}
		if(this.mouse.down()) {
			this.camera.rotate(iron_math_Vec4.zAxis(),-this.mouse.movementX / 200);
			var _this15 = this.camera;
			this.camera.rotate(new iron_math_Vec4(_this15.transform.local.self._00,_this15.transform.local.self._01,_this15.transform.local.self._02),-this.mouse.movementY / 200);
		}
	}
	,__class__: armory_trait_WalkNavigation
});
var armory_trait_internal_Console = function() {
	iron_Trait.call(this);
};
$hxClasses["armory.trait.internal.Console"] = armory_trait_internal_Console;
armory_trait_internal_Console.__name__ = ["armory","trait","internal","Console"];
armory_trait_internal_Console.__super__ = iron_Trait;
armory_trait_internal_Console.prototype = $extend(iron_Trait.prototype,{
	__class__: armory_trait_internal_Console
});
var armory_trait_internal_JSScript = function(scriptBlob) {
	var _gthis = this;
	iron_Trait.call(this);
	this.notifyOnInit(function() {
		iron_data_Data.getBlob(scriptBlob + ".js",function(blob) {
			var header = "var App = armory.App;\n\t\t\t\t\t\t  var Scene = armory.Scene;\n\t\t\t\t\t\t  var Data = armory.Data;\n\t\t\t\t\t\t  var Quat = armory.math.Quat;\n\t\t\t\t\t\t  var Mat4 = armory.math.Mat4;\n\t\t\t\t\t\t  var Vec4 = armory.math.Vec4;";
			var src = header + blob.toString();
			if(armory_trait_internal_JSScript.api == null) {
				armory_trait_internal_JSScript.api = new armory_trait_internal_JSScriptAPI();
			}
			var self = _gthis.object;
			var window = this;
			eval(src);
		});
	});
};
$hxClasses["armory.trait.internal.JSScript"] = armory_trait_internal_JSScript;
armory_trait_internal_JSScript.__name__ = ["armory","trait","internal","JSScript"];
armory_trait_internal_JSScript.__super__ = iron_Trait;
armory_trait_internal_JSScript.prototype = $extend(iron_Trait.prototype,{
	__class__: armory_trait_internal_JSScript
});
var iron_App = function(_appReady) {
	_appReady();
	kha_System.notifyOnRender(iron_App.render);
	kha_Scheduler.addTimeTask(iron_App.update,0,0.0166666666666666664);
};
$hxClasses["iron.App"] = iron_App;
iron_App.__name__ = ["iron","App"];
iron_App.w = function() {
	return kha_System.windowWidth();
};
iron_App.h = function() {
	return kha_System.windowHeight();
};
iron_App.init = function(_appReady) {
	new iron_App(_appReady);
};
iron_App.reset = function() {
	iron_App.traitInits = [];
	iron_App.traitUpdates = [];
	iron_App.traitLateUpdates = [];
	iron_App.traitRenders = [];
	iron_App.traitRenders2D = [];
	iron_system_Input.reset();
	iron_system_Tween.reset();
};
iron_App.update = function() {
	iron_system_Tween.update();
	iron_system_Time.update();
	if(iron_Scene.active != null) {
		iron_Scene.active.updateFrame();
	}
	if(iron_App.traitInits.length > 0) {
		var _g = 0;
		var _g1 = iron_App.traitInits;
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			if(iron_App.traitInits.length == 0) {
				break;
			}
			f();
			f = null;
		}
		iron_App.traitInits.splice(0,iron_App.traitInits.length);
	}
	var _g2 = 0;
	var _g11 = iron_App.traitUpdates;
	while(_g2 < _g11.length) {
		var f1 = _g11[_g2];
		++_g2;
		if(iron_App.traitUpdates.length == 0) {
			break;
		}
		f1();
	}
	var _g3 = 0;
	var _g12 = iron_App.traitLateUpdates;
	while(_g3 < _g12.length) {
		var f2 = _g12[_g3];
		++_g3;
		if(iron_App.traitLateUpdates.length == 0) {
			break;
		}
		f2();
	}
	iron_system_Input.endFrame();
};
iron_App.render = function(frame) {
	if(iron_App.traitInits.length > 0) {
		var _g = 0;
		var _g1 = iron_App.traitInits;
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			if(iron_App.traitInits.length == 0) {
				break;
			}
			f();
			f = null;
		}
		iron_App.traitInits.splice(0,iron_App.traitInits.length);
	}
	if(iron_Scene.active != null) {
		iron_Scene.active.renderFrame(frame.get_g4());
	}
	var _g2 = 0;
	var _g11 = iron_App.traitRenders;
	while(_g2 < _g11.length) {
		var f1 = _g11[_g2];
		++_g2;
		if(iron_App.traitRenders.length == 0) {
			break;
		}
		f1(frame.get_g4());
	}
	frame.get_g2().begin(false);
	var _g3 = 0;
	var _g12 = iron_App.traitRenders2D;
	while(_g3 < _g12.length) {
		var f2 = _g12[_g3];
		++_g3;
		if(iron_App.traitRenders2D.length == 0) {
			break;
		}
		f2(frame.get_g2());
	}
	frame.get_g2().end();
};
iron_App.notifyOnInit = function(f) {
	iron_App.traitInits.push(f);
};
iron_App.removeInit = function(f) {
	HxOverrides.remove(iron_App.traitInits,f);
};
iron_App.notifyOnUpdate = function(f) {
	iron_App.traitUpdates.push(f);
};
iron_App.removeUpdate = function(f) {
	HxOverrides.remove(iron_App.traitUpdates,f);
};
iron_App.notifyOnLateUpdate = function(f) {
	iron_App.traitLateUpdates.push(f);
};
iron_App.removeLateUpdate = function(f) {
	HxOverrides.remove(iron_App.traitLateUpdates,f);
};
iron_App.notifyOnRender = function(f) {
	iron_App.traitRenders.push(f);
};
iron_App.removeRender = function(f) {
	HxOverrides.remove(iron_App.traitRenders,f);
};
iron_App.notifyOnRender2D = function(f) {
	iron_App.traitRenders2D.push(f);
};
iron_App.removeRender2D = function(f) {
	HxOverrides.remove(iron_App.traitRenders2D,f);
};
iron_App.prototype = {
	__class__: iron_App
};
var iron_data_Data = function() {
};
$hxClasses["iron.data.Data"] = iron_data_Data;
iron_data_Data.__name__ = ["iron","data","Data"];
iron_data_Data.deleteAll = function() {
	var _this = iron_data_Data.cachedMeshes;
	var c = new haxe_ds__$StringMap_StringMapIterator(_this,_this.arrayKeys());
	while(c.hasNext()) {
		var c1 = c.next();
		c1["delete"]();
	}
	iron_data_Data.cachedMeshes = new haxe_ds_StringMap();
	var _this1 = iron_data_Data.cachedShaders;
	var c2 = new haxe_ds__$StringMap_StringMapIterator(_this1,_this1.arrayKeys());
	while(c2.hasNext()) {
		var c3 = c2.next();
		c3["delete"]();
	}
	iron_data_Data.cachedShaders = new haxe_ds_StringMap();
	iron_data_Data.cachedSceneRaws = new haxe_ds_StringMap();
	iron_data_Data.cachedLamps = new haxe_ds_StringMap();
	iron_data_Data.cachedCameras = new haxe_ds_StringMap();
	var _this2 = iron_data_Data.cachedRenderPaths;
	var c4 = new haxe_ds__$StringMap_StringMapIterator(_this2,_this2.arrayKeys());
	while(c4.hasNext()) {
		var c5 = c4.next();
		c5.unload();
	}
	iron_data_Data.cachedRenderPaths = new haxe_ds_StringMap();
	iron_data_Data.cachedMaterials = new haxe_ds_StringMap();
	iron_data_Data.cachedParticles = new haxe_ds_StringMap();
	iron_data_Data.cachedWorlds = new haxe_ds_StringMap();
	iron_data_Data.cachedGreasePencils = new haxe_ds_StringMap();
	var _this3 = iron_data_Data.cachedBlobs;
	var c6 = new haxe_ds__$StringMap_StringMapIterator(_this3,_this3.arrayKeys());
	while(c6.hasNext()) {
		var c7 = c6.next();
		c7.unload();
	}
	iron_data_Data.cachedBlobs = new haxe_ds_StringMap();
	var _this4 = iron_data_Data.cachedImages;
	var c8 = new haxe_ds__$StringMap_StringMapIterator(_this4,_this4.arrayKeys());
	while(c8.hasNext()) {
		var c9 = c8.next();
		c9.unload();
	}
	iron_data_Data.cachedImages = new haxe_ds_StringMap();
	var _this5 = iron_data_Data.cachedSounds;
	var c10 = new haxe_ds__$StringMap_StringMapIterator(_this5,_this5.arrayKeys());
	while(c10.hasNext()) {
		var c11 = c10.next();
		c11.unload();
	}
	iron_data_Data.cachedSounds = new haxe_ds_StringMap();
	var _this6 = iron_data_Data.cachedVideos;
	var c12 = new haxe_ds__$StringMap_StringMapIterator(_this6,_this6.arrayKeys());
	while(c12.hasNext()) {
		var c13 = c12.next();
		c13.unload();
	}
	iron_data_Data.cachedVideos = new haxe_ds_StringMap();
	var _this7 = iron_data_Data.cachedFonts;
	var c14 = new haxe_ds__$StringMap_StringMapIterator(_this7,_this7.arrayKeys());
	while(c14.hasNext()) {
		var c15 = c14.next();
		c15.unload();
	}
	iron_data_Data.cachedFonts = new haxe_ds_StringMap();
};
iron_data_Data.clearSceneData = function() {
	iron_data_Data.cachedSceneRaws = new haxe_ds_StringMap();
	iron_data_Data.cachedMeshes = new haxe_ds_StringMap();
	iron_data_Data.cachedLamps = new haxe_ds_StringMap();
	iron_data_Data.cachedMaterials = new haxe_ds_StringMap();
	iron_data_Data.cachedRenderPaths = new haxe_ds_StringMap();
	iron_data_Data.cachedCameras = new haxe_ds_StringMap();
	iron_data_Data.cachedParticles = new haxe_ds_StringMap();
	iron_data_Data.cachedWorlds = new haxe_ds_StringMap();
	iron_data_Data.cachedBlobs = new haxe_ds_StringMap();
};
iron_data_Data.getMesh = function(file,name,boneObjects,done) {
	var _this = iron_data_Data.cachedMeshes;
	var key = file + name;
	var cached = __map_reserved[key] != null ? _this.getReserved(key) : _this.h[key];
	if(cached != null) {
		done(cached);
		return;
	}
	var _this1 = iron_data_Data.loadingMeshes;
	var key1 = file + name;
	var loading = __map_reserved[key1] != null ? _this1.getReserved(key1) : _this1.h[key1];
	if(loading != null) {
		loading.push(done);
		return;
	}
	var _this2 = iron_data_Data.loadingMeshes;
	var key2 = file + name;
	var value = [done];
	if(__map_reserved[key2] != null) {
		_this2.setReserved(key2,value);
	} else {
		_this2.h[key2] = value;
	}
	iron_data_MeshData.parse(file,name,boneObjects,function(b) {
		var _this3 = iron_data_Data.cachedMeshes;
		var key3 = file + name;
		if(__map_reserved[key3] != null) {
			_this3.setReserved(key3,b);
		} else {
			_this3.h[key3] = b;
		}
		var _g = 0;
		var _this4 = iron_data_Data.loadingMeshes;
		var key4 = file + name;
		var _g1 = __map_reserved[key4] != null ? _this4.getReserved(key4) : _this4.h[key4];
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			f(b);
		}
		iron_data_Data.loadingMeshes.remove(file + name);
	});
};
iron_data_Data.getLamp = function(file,name,done) {
	var _this = iron_data_Data.cachedLamps;
	var key = file + name;
	var cached = __map_reserved[key] != null ? _this.getReserved(key) : _this.h[key];
	if(cached != null) {
		done(cached);
		return;
	}
	var _this1 = iron_data_Data.loadingLamps;
	var key1 = file + name;
	var loading = __map_reserved[key1] != null ? _this1.getReserved(key1) : _this1.h[key1];
	if(loading != null) {
		loading.push(done);
		return;
	}
	var _this2 = iron_data_Data.loadingLamps;
	var key2 = file + name;
	var value = [done];
	if(__map_reserved[key2] != null) {
		_this2.setReserved(key2,value);
	} else {
		_this2.h[key2] = value;
	}
	iron_data_LampData.parse(file,name,function(b) {
		var _this3 = iron_data_Data.cachedLamps;
		var key3 = file + name;
		if(__map_reserved[key3] != null) {
			_this3.setReserved(key3,b);
		} else {
			_this3.h[key3] = b;
		}
		var _g = 0;
		var _this4 = iron_data_Data.loadingLamps;
		var key4 = file + name;
		var _g1 = __map_reserved[key4] != null ? _this4.getReserved(key4) : _this4.h[key4];
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			f(b);
		}
		iron_data_Data.loadingLamps.remove(file + name);
	});
};
iron_data_Data.getCamera = function(file,name,done) {
	var _this = iron_data_Data.cachedCameras;
	var key = file + name;
	var cached = __map_reserved[key] != null ? _this.getReserved(key) : _this.h[key];
	if(cached != null) {
		done(cached);
		return;
	}
	var _this1 = iron_data_Data.loadingCameras;
	var key1 = file + name;
	var loading = __map_reserved[key1] != null ? _this1.getReserved(key1) : _this1.h[key1];
	if(loading != null) {
		loading.push(done);
		return;
	}
	var _this2 = iron_data_Data.loadingCameras;
	var key2 = file + name;
	var value = [done];
	if(__map_reserved[key2] != null) {
		_this2.setReserved(key2,value);
	} else {
		_this2.h[key2] = value;
	}
	iron_data_CameraData.parse(file,name,function(b) {
		var _this3 = iron_data_Data.cachedCameras;
		var key3 = file + name;
		if(__map_reserved[key3] != null) {
			_this3.setReserved(key3,b);
		} else {
			_this3.h[key3] = b;
		}
		var _g = 0;
		var _this4 = iron_data_Data.loadingCameras;
		var key4 = file + name;
		var _g1 = __map_reserved[key4] != null ? _this4.getReserved(key4) : _this4.h[key4];
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			f(b);
		}
		iron_data_Data.loadingCameras.remove(file + name);
	});
};
iron_data_Data.getRenderPath = function(file,name,done) {
	var _this = iron_data_Data.cachedRenderPaths;
	var key = file + name;
	var cached = __map_reserved[key] != null ? _this.getReserved(key) : _this.h[key];
	if(cached != null) {
		done(cached);
		return;
	}
	var _this1 = iron_data_Data.loadingRenderPaths;
	var key1 = file + name;
	var loading = __map_reserved[key1] != null ? _this1.getReserved(key1) : _this1.h[key1];
	if(loading != null) {
		loading.push(done);
		return;
	}
	var _this2 = iron_data_Data.loadingRenderPaths;
	var key2 = file + name;
	var value = [done];
	if(__map_reserved[key2] != null) {
		_this2.setReserved(key2,value);
	} else {
		_this2.h[key2] = value;
	}
	iron_data_RenderPathData.parse(file,name,function(b) {
		var _this3 = iron_data_Data.cachedRenderPaths;
		var key3 = file + name;
		if(__map_reserved[key3] != null) {
			_this3.setReserved(key3,b);
		} else {
			_this3.h[key3] = b;
		}
		var _g = 0;
		var _this4 = iron_data_Data.loadingRenderPaths;
		var key4 = file + name;
		var _g1 = __map_reserved[key4] != null ? _this4.getReserved(key4) : _this4.h[key4];
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			f(b);
		}
		iron_data_Data.loadingRenderPaths.remove(file + name);
	});
};
iron_data_Data.getMaterial = function(file,name,done) {
	var _this = iron_data_Data.cachedMaterials;
	var key = file + name;
	var cached = __map_reserved[key] != null ? _this.getReserved(key) : _this.h[key];
	if(cached != null) {
		done(cached);
		return;
	}
	var _this1 = iron_data_Data.loadingMaterials;
	var key1 = file + name;
	var loading = __map_reserved[key1] != null ? _this1.getReserved(key1) : _this1.h[key1];
	if(loading != null) {
		loading.push(done);
		return;
	}
	var _this2 = iron_data_Data.loadingMaterials;
	var key2 = file + name;
	var value = [done];
	if(__map_reserved[key2] != null) {
		_this2.setReserved(key2,value);
	} else {
		_this2.h[key2] = value;
	}
	iron_data_MaterialData.parse(file,name,function(b) {
		var _this3 = iron_data_Data.cachedMaterials;
		var key3 = file + name;
		if(__map_reserved[key3] != null) {
			_this3.setReserved(key3,b);
		} else {
			_this3.h[key3] = b;
		}
		var _g = 0;
		var _this4 = iron_data_Data.loadingMaterials;
		var key4 = file + name;
		var _g1 = __map_reserved[key4] != null ? _this4.getReserved(key4) : _this4.h[key4];
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			f(b);
		}
		iron_data_Data.loadingMaterials.remove(file + name);
	});
};
iron_data_Data.getParticle = function(file,name,done) {
	var _this = iron_data_Data.cachedParticles;
	var key = file + name;
	var cached = __map_reserved[key] != null ? _this.getReserved(key) : _this.h[key];
	if(cached != null) {
		done(cached);
		return;
	}
	var _this1 = iron_data_Data.loadingParticles;
	var key1 = file + name;
	var loading = __map_reserved[key1] != null ? _this1.getReserved(key1) : _this1.h[key1];
	if(loading != null) {
		loading.push(done);
		return;
	}
	var _this2 = iron_data_Data.loadingParticles;
	var key2 = file + name;
	var value = [done];
	if(__map_reserved[key2] != null) {
		_this2.setReserved(key2,value);
	} else {
		_this2.h[key2] = value;
	}
	iron_data_ParticleData.parse(file,name,function(b) {
		var _this3 = iron_data_Data.cachedParticles;
		var key3 = file + name;
		if(__map_reserved[key3] != null) {
			_this3.setReserved(key3,b);
		} else {
			_this3.h[key3] = b;
		}
		var _g = 0;
		var _this4 = iron_data_Data.loadingParticles;
		var key4 = file + name;
		var _g1 = __map_reserved[key4] != null ? _this4.getReserved(key4) : _this4.h[key4];
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			f(b);
		}
		iron_data_Data.loadingParticles.remove(file + name);
	});
};
iron_data_Data.getWorld = function(file,name,done) {
	if(name == null) {
		done(null);
		return;
	}
	var _this = iron_data_Data.cachedWorlds;
	var key = file + name;
	var cached = __map_reserved[key] != null ? _this.getReserved(key) : _this.h[key];
	if(cached != null) {
		done(cached);
		return;
	}
	var _this1 = iron_data_Data.loadingWorlds;
	var key1 = file + name;
	var loading = __map_reserved[key1] != null ? _this1.getReserved(key1) : _this1.h[key1];
	if(loading != null) {
		loading.push(done);
		return;
	}
	var _this2 = iron_data_Data.loadingWorlds;
	var key2 = file + name;
	var value = [done];
	if(__map_reserved[key2] != null) {
		_this2.setReserved(key2,value);
	} else {
		_this2.h[key2] = value;
	}
	iron_data_WorldData.parse(file,name,function(b) {
		var _this3 = iron_data_Data.cachedWorlds;
		var key3 = file + name;
		if(__map_reserved[key3] != null) {
			_this3.setReserved(key3,b);
		} else {
			_this3.h[key3] = b;
		}
		var _g = 0;
		var _this4 = iron_data_Data.loadingWorlds;
		var key4 = file + name;
		var _g1 = __map_reserved[key4] != null ? _this4.getReserved(key4) : _this4.h[key4];
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			f(b);
		}
		iron_data_Data.loadingWorlds.remove(file + name);
	});
};
iron_data_Data.getGreasePencil = function(file,name,done) {
	var _this = iron_data_Data.cachedGreasePencils;
	var key = file + name;
	var cached = __map_reserved[key] != null ? _this.getReserved(key) : _this.h[key];
	if(cached != null) {
		done(cached);
		return;
	}
	var _this1 = iron_data_Data.loadingGreasePencils;
	var key1 = file + name;
	var loading = __map_reserved[key1] != null ? _this1.getReserved(key1) : _this1.h[key1];
	if(loading != null) {
		loading.push(done);
		return;
	}
	var _this2 = iron_data_Data.loadingGreasePencils;
	var key2 = file + name;
	var value = [done];
	if(__map_reserved[key2] != null) {
		_this2.setReserved(key2,value);
	} else {
		_this2.h[key2] = value;
	}
	iron_data_GreasePencilData.parse(file,name,function(b) {
		var _this3 = iron_data_Data.cachedGreasePencils;
		var key3 = file + name;
		if(__map_reserved[key3] != null) {
			_this3.setReserved(key3,b);
		} else {
			_this3.h[key3] = b;
		}
		var _g = 0;
		var _this4 = iron_data_Data.loadingGreasePencils;
		var key4 = file + name;
		var _g1 = __map_reserved[key4] != null ? _this4.getReserved(key4) : _this4.h[key4];
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			f(b);
		}
		iron_data_Data.loadingGreasePencils.remove(file + name);
	});
};
iron_data_Data.getShader = function(file,name,overrideContext,done) {
	var cacheName = name;
	if(overrideContext != null) {
		cacheName += "2";
	}
	var _this = iron_data_Data.cachedShaders;
	var cached = __map_reserved[cacheName] != null ? _this.getReserved(cacheName) : _this.h[cacheName];
	if(cached != null) {
		done(cached);
		return;
	}
	var _this1 = iron_data_Data.loadingShaders;
	var loading = __map_reserved[cacheName] != null ? _this1.getReserved(cacheName) : _this1.h[cacheName];
	if(loading != null) {
		loading.push(done);
		return;
	}
	var _this2 = iron_data_Data.loadingShaders;
	var value = [done];
	if(__map_reserved[cacheName] != null) {
		_this2.setReserved(cacheName,value);
	} else {
		_this2.h[cacheName] = value;
	}
	iron_data_ShaderData.parse(file,name,overrideContext,function(b) {
		var _this3 = iron_data_Data.cachedShaders;
		if(__map_reserved[cacheName] != null) {
			_this3.setReserved(cacheName,b);
		} else {
			_this3.h[cacheName] = b;
		}
		var _g = 0;
		var _this4 = iron_data_Data.loadingShaders;
		var _g1 = __map_reserved[cacheName] != null ? _this4.getReserved(cacheName) : _this4.h[cacheName];
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			f(b);
		}
		iron_data_Data.loadingShaders.remove(cacheName);
	});
};
iron_data_Data.getSceneRaw = function(file,done) {
	var _this = iron_data_Data.cachedSceneRaws;
	var cached = __map_reserved[file] != null ? _this.getReserved(file) : _this.h[file];
	if(cached != null) {
		done(cached);
		return;
	}
	var _this1 = iron_data_Data.loadingSceneRaws;
	var loading = __map_reserved[file] != null ? _this1.getReserved(file) : _this1.h[file];
	if(loading != null) {
		loading.push(done);
		return;
	}
	var _this2 = iron_data_Data.loadingSceneRaws;
	var value = [done];
	if(__map_reserved[file] != null) {
		_this2.setReserved(file,value);
	} else {
		_this2.h[file] = value;
	}
	var compressed = StringTools.endsWith(file,".zip");
	var ext = compressed || StringTools.endsWith(file,".arm") ? "" : ".arm";
	iron_data_Data.getBlob(file + ext,function(b) {
		if(compressed) {
			var input = new haxe_io_BytesInput(b.toBytes());
			var entry = haxe_zip_Reader.readZip(input).first();
			if(entry == null) {
				haxe_Log.trace("Failed to uncompress " + file,{ fileName : "Data.hx", lineNumber : 251, className : "iron.data.Data", methodName : "getSceneRaw"});
				return;
			}
			if(entry.compressed) {
				b = kha_internal_BytesBlob.fromBytes(haxe_zip_Reader.unzip(entry));
			} else {
				b = kha_internal_BytesBlob.fromBytes(entry.data);
			}
		}
		var b1 = b.toBytes();
		var option = null;
		if(option == null) {
			option = iron_system_msgpack_DecodeOption.AsObject;
		}
		var parsed = new iron_system_msgpack_Decoder(b1,option).o;
		var _this3 = iron_data_Data.cachedSceneRaws;
		if(__map_reserved[file] != null) {
			_this3.setReserved(file,parsed);
		} else {
			_this3.h[file] = parsed;
		}
		var _g = 0;
		var _this4 = iron_data_Data.loadingSceneRaws;
		var _g1 = __map_reserved[file] != null ? _this4.getReserved(file) : _this4.h[file];
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			f(parsed);
		}
		iron_data_Data.loadingSceneRaws.remove(file);
	});
};
iron_data_Data.getMeshRawByName = function(datas,name) {
	if(name == "") {
		return datas[0];
	}
	var _g = 0;
	while(_g < datas.length) {
		var dat = datas[_g];
		++_g;
		if(dat.name == name) {
			return dat;
		}
	}
	return null;
};
iron_data_Data.getLampRawByName = function(datas,name) {
	if(name == "") {
		return datas[0];
	}
	var _g = 0;
	while(_g < datas.length) {
		var dat = datas[_g];
		++_g;
		if(dat.name == name) {
			return dat;
		}
	}
	return null;
};
iron_data_Data.getCameraRawByName = function(datas,name) {
	if(name == "") {
		return datas[0];
	}
	var _g = 0;
	while(_g < datas.length) {
		var dat = datas[_g];
		++_g;
		if(dat.name == name) {
			return dat;
		}
	}
	return null;
};
iron_data_Data.getRenderPathRawByName = function(datas,name) {
	if(name == "") {
		return datas[0];
	}
	var _g = 0;
	while(_g < datas.length) {
		var dat = datas[_g];
		++_g;
		if(dat.name == name) {
			return dat;
		}
	}
	return null;
};
iron_data_Data.getMaterialRawByName = function(datas,name) {
	if(name == "") {
		return datas[0];
	}
	var _g = 0;
	while(_g < datas.length) {
		var dat = datas[_g];
		++_g;
		if(dat.name == name) {
			return dat;
		}
	}
	return null;
};
iron_data_Data.getParticleRawByName = function(datas,name) {
	if(name == "") {
		return datas[0];
	}
	var _g = 0;
	while(_g < datas.length) {
		var dat = datas[_g];
		++_g;
		if(dat.name == name) {
			return dat;
		}
	}
	return null;
};
iron_data_Data.getWorldRawByName = function(datas,name) {
	if(name == "") {
		return datas[0];
	}
	var _g = 0;
	while(_g < datas.length) {
		var dat = datas[_g];
		++_g;
		if(dat.name == name) {
			return dat;
		}
	}
	return null;
};
iron_data_Data.getGreasePencilRawByName = function(datas,name) {
	if(name == "") {
		return datas[0];
	}
	var _g = 0;
	while(_g < datas.length) {
		var dat = datas[_g];
		++_g;
		if(dat.name == name) {
			return dat;
		}
	}
	return null;
};
iron_data_Data.getShaderRawByName = function(datas,name) {
	if(name == "") {
		return datas[0];
	}
	var _g = 0;
	while(_g < datas.length) {
		var dat = datas[_g];
		++_g;
		if(dat.name == name) {
			return dat;
		}
	}
	return null;
};
iron_data_Data.getSpeakerRawByName = function(datas,name) {
	if(name == "") {
		return datas[0];
	}
	var _g = 0;
	while(_g < datas.length) {
		var dat = datas[_g];
		++_g;
		if(dat.name == name) {
			return dat;
		}
	}
	return null;
};
iron_data_Data.getBlob = function(file,done) {
	var _this = iron_data_Data.cachedBlobs;
	var cached = __map_reserved[file] != null ? _this.getReserved(file) : _this.h[file];
	if(cached != null) {
		done(cached);
		return;
	}
	var _this1 = iron_data_Data.loadingBlobs;
	var loading = __map_reserved[file] != null ? _this1.getReserved(file) : _this1.h[file];
	if(loading != null) {
		loading.push(done);
		return;
	}
	var _this2 = iron_data_Data.loadingBlobs;
	var value = [done];
	if(__map_reserved[file] != null) {
		_this2.setReserved(file,value);
	} else {
		_this2.h[file] = value;
	}
	var description = { files : [file]};
	kha_LoaderImpl.loadBlobFromDescription(description,function(b) {
		var _this3 = iron_data_Data.cachedBlobs;
		if(__map_reserved[file] != null) {
			_this3.setReserved(file,b);
		} else {
			_this3.h[file] = b;
		}
		var _g = 0;
		var _this4 = iron_data_Data.loadingBlobs;
		var _g1 = __map_reserved[file] != null ? _this4.getReserved(file) : _this4.h[file];
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			f(b);
		}
		iron_data_Data.loadingBlobs.remove(file);
		iron_data_Data.assetsLoaded++;
	});
};
iron_data_Data.getImage = function(file,done,readable,format) {
	if(format == null) {
		format = "RGBA32";
	}
	if(readable == null) {
		readable = false;
	}
	var _this = iron_data_Data.cachedImages;
	var cached = __map_reserved[file] != null ? _this.getReserved(file) : _this.h[file];
	if(cached != null) {
		done(cached);
		return;
	}
	var _this1 = iron_data_Data.loadingImages;
	var loading = __map_reserved[file] != null ? _this1.getReserved(file) : _this1.h[file];
	if(loading != null) {
		loading.push(done);
		return;
	}
	var _this2 = iron_data_Data.loadingImages;
	var value = [done];
	if(__map_reserved[file] != null) {
		_this2.setReserved(file,value);
	} else {
		_this2.h[file] = value;
	}
	var description = { files : [file], readable : readable, format : format};
	kha_LoaderImpl.loadImageFromDescription(description,function(b) {
		var _this3 = iron_data_Data.cachedImages;
		if(__map_reserved[file] != null) {
			_this3.setReserved(file,b);
		} else {
			_this3.h[file] = b;
		}
		var _g = 0;
		var _this4 = iron_data_Data.loadingImages;
		var _g1 = __map_reserved[file] != null ? _this4.getReserved(file) : _this4.h[file];
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			f(b);
		}
		iron_data_Data.loadingImages.remove(file);
		iron_data_Data.assetsLoaded++;
	});
};
iron_data_Data.getSound = function(file,done) {
	if(StringTools.endsWith(file,".wav")) {
		file = file.substring(0,file.length - 4) + ".ogg";
	}
	var _this = iron_data_Data.cachedSounds;
	var cached = __map_reserved[file] != null ? _this.getReserved(file) : _this.h[file];
	if(cached != null) {
		done(cached);
		return;
	}
	var _this1 = iron_data_Data.loadingSounds;
	var loading = __map_reserved[file] != null ? _this1.getReserved(file) : _this1.h[file];
	if(loading != null) {
		loading.push(done);
		return;
	}
	var _this2 = iron_data_Data.loadingSounds;
	var value = [done];
	if(__map_reserved[file] != null) {
		_this2.setReserved(file,value);
	} else {
		_this2.h[file] = value;
	}
	var description = { files : [file]};
	kha_LoaderImpl.loadSoundFromDescription(description,function(b) {
		b.uncompress(function() {
			var _this3 = iron_data_Data.cachedSounds;
			if(__map_reserved[file] != null) {
				_this3.setReserved(file,b);
			} else {
				_this3.h[file] = b;
			}
			var _g = 0;
			var _this4 = iron_data_Data.loadingSounds;
			var _g1 = __map_reserved[file] != null ? _this4.getReserved(file) : _this4.h[file];
			while(_g < _g1.length) {
				var f = _g1[_g];
				++_g;
				f(b);
			}
			iron_data_Data.loadingSounds.remove(file);
			iron_data_Data.assetsLoaded++;
		});
	});
};
iron_data_Data.getVideo = function(file,done) {
	var _this = iron_data_Data.cachedVideos;
	var cached = __map_reserved[file] != null ? _this.getReserved(file) : _this.h[file];
	if(cached != null) {
		done(cached);
		return;
	}
	var _this1 = iron_data_Data.loadingVideos;
	var loading = __map_reserved[file] != null ? _this1.getReserved(file) : _this1.h[file];
	if(loading != null) {
		loading.push(done);
		return;
	}
	var _this2 = iron_data_Data.loadingVideos;
	var value = [done];
	if(__map_reserved[file] != null) {
		_this2.setReserved(file,value);
	} else {
		_this2.h[file] = value;
	}
	var description = { files : [file]};
	kha_LoaderImpl.loadVideoFromDescription(description,function(b) {
		var _this3 = iron_data_Data.cachedVideos;
		if(__map_reserved[file] != null) {
			_this3.setReserved(file,b);
		} else {
			_this3.h[file] = b;
		}
		var _g = 0;
		var _this4 = iron_data_Data.loadingVideos;
		var _g1 = __map_reserved[file] != null ? _this4.getReserved(file) : _this4.h[file];
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			f(b);
		}
		iron_data_Data.loadingVideos.remove(file);
		iron_data_Data.assetsLoaded++;
	});
};
iron_data_Data.getFont = function(file,done) {
	var _this = iron_data_Data.cachedFonts;
	var cached = __map_reserved[file] != null ? _this.getReserved(file) : _this.h[file];
	if(cached != null) {
		done(cached);
		return;
	}
	var _this1 = iron_data_Data.loadingFonts;
	var loading = __map_reserved[file] != null ? _this1.getReserved(file) : _this1.h[file];
	if(loading != null) {
		loading.push(done);
		return;
	}
	var _this2 = iron_data_Data.loadingFonts;
	var value = [done];
	if(__map_reserved[file] != null) {
		_this2.setReserved(file,value);
	} else {
		_this2.h[file] = value;
	}
	var description = { files : [file]};
	kha_LoaderImpl.loadFontFromDescription(description,function(b) {
		var _this3 = iron_data_Data.cachedFonts;
		if(__map_reserved[file] != null) {
			_this3.setReserved(file,b);
		} else {
			_this3.h[file] = b;
		}
		var _g = 0;
		var _this4 = iron_data_Data.loadingFonts;
		var _g1 = __map_reserved[file] != null ? _this4.getReserved(file) : _this4.h[file];
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			f(b);
		}
		iron_data_Data.loadingFonts.remove(file);
		iron_data_Data.assetsLoaded++;
	});
};
iron_data_Data.prototype = {
	__class__: iron_data_Data
};
var iron_object_Object = function() {
	this.culled = false;
	this.visibleShadow = true;
	this.visibleMesh = true;
	this.visible = true;
	this.animation = null;
	this.group = null;
	this.lods = null;
	this.children = [];
	this.parent = null;
	this.traits = [];
	this.constraints = null;
	this.name = "";
	this.raw = null;
	this.uid = iron_object_Object.uidCounter++;
	this.urandom = iron_object_Object.seededRandom();
	this.transform = new iron_object_Transform(this);
};
$hxClasses["iron.object.Object"] = iron_object_Object;
iron_object_Object.__name__ = ["iron","object","Object"];
iron_object_Object.seededRandom = function() {
	iron_object_Object.seed = (iron_object_Object.seed * 9301 + 49297) % 233280;
	return iron_object_Object.seed / 233280.0;
};
iron_object_Object.prototype = {
	addChild: function(o) {
		this.children.push(o);
		o.parent = this;
	}
	,remove: function() {
		if(this.animation != null) {
			this.animation.remove();
		}
		while(this.children.length > 0) this.children[0].remove();
		while(this.traits.length > 0) this.traits[0].remove();
		if(this.parent != null) {
			HxOverrides.remove(this.parent.children,this);
		}
		this.parent = null;
	}
	,getChild: function(name) {
		if(this.name == name) {
			return this;
		} else {
			var _g = 0;
			var _g1 = this.children;
			while(_g < _g1.length) {
				var c = _g1[_g];
				++_g;
				var r = c.getChild(name);
				if(r != null) {
					return r;
				}
			}
		}
		return null;
	}
	,getChildOfType: function(type) {
		if(js_Boot.__instanceof(this,type)) {
			return this;
		} else {
			var _g = 0;
			var _g1 = this.children;
			while(_g < _g1.length) {
				var c = _g1[_g];
				++_g;
				var r = c.getChildOfType(type);
				if(r != null) {
					return r;
				}
			}
		}
		return null;
	}
	,addTrait: function(t) {
		this.traits.push(t);
		t.object = this;
		if(t._add != null) {
			var _g = 0;
			var _g1 = t._add;
			while(_g < _g1.length) {
				var f = _g1[_g];
				++_g;
				f();
			}
			t._add = null;
		}
	}
	,removeTrait: function(t) {
		if(t._init != null) {
			var _g = 0;
			var _g1 = t._init;
			while(_g < _g1.length) {
				var f = _g1[_g];
				++_g;
				iron_App.removeInit(f);
			}
			t._init = null;
		}
		if(t._update != null) {
			var _g2 = 0;
			var _g11 = t._update;
			while(_g2 < _g11.length) {
				var f1 = _g11[_g2];
				++_g2;
				iron_App.removeUpdate(f1);
			}
			t._update = null;
		}
		if(t._lateUpdate != null) {
			var _g3 = 0;
			var _g12 = t._lateUpdate;
			while(_g3 < _g12.length) {
				var f2 = _g12[_g3];
				++_g3;
				iron_App.removeLateUpdate(f2);
			}
			t._lateUpdate = null;
		}
		if(t._render != null) {
			var _g4 = 0;
			var _g13 = t._render;
			while(_g4 < _g13.length) {
				var f3 = _g13[_g4];
				++_g4;
				iron_App.removeRender(f3);
			}
			t._render = null;
		}
		if(t._render2D != null) {
			var _g5 = 0;
			var _g14 = t._render2D;
			while(_g5 < _g14.length) {
				var f4 = _g14[_g5];
				++_g5;
				iron_App.removeRender2D(f4);
			}
			t._render2D = null;
		}
		if(t._remove != null) {
			var _g6 = 0;
			var _g15 = t._remove;
			while(_g6 < _g15.length) {
				var f5 = _g15[_g6];
				++_g6;
				f5();
			}
			t._remove = null;
		}
		HxOverrides.remove(this.traits,t);
		t.object = null;
	}
	,getTrait: function(c) {
		var _g = 0;
		var _g1 = this.traits;
		while(_g < _g1.length) {
			var t = _g1[_g];
			++_g;
			if((t == null ? null : js_Boot.getClass(t)) == c) {
				return t;
			}
		}
		return null;
	}
	,setupAnimation: function(setup) {
		this.animation = new iron_object_ObjectAnimation(this,setup);
	}
	,toString: function() {
		return "Object " + this.name;
	}
	,__class__: iron_object_Object
};
var iron_Scene = function() {
	this.traitInits = [];
	this.meshBatch = null;
	this.greasePencil = null;
	this.meshBatch = new iron_data_MeshBatch();
	this.meshes = [];
	this.lamps = [];
	this.cameras = [];
	this.speakers = [];
	this.decals = [];
	this.animations = [];
	this.embedded = new haxe_ds_StringMap();
	this.root = new iron_object_Object();
	this.traitInits = [];
};
$hxClasses["iron.Scene"] = iron_Scene;
iron_Scene.__name__ = ["iron","Scene"];
iron_Scene.create = function(format,done) {
	iron_Scene.active = new iron_Scene();
	iron_Scene.active.ready = false;
	iron_Scene.active.raw = format;
	iron_data_Data.getWorld(format.name,format.world_ref,function(world) {
		iron_Scene.active.world = world;
		iron_Scene.active.addScene(format.name,null,function(sceneObject) {
			if(iron_Scene.active.cameras.length == 0) {
				haxe_Log.trace("No camera found for scene \"" + Std.string(format) + ".name\"!",{ fileName : "Scene.hx", lineNumber : 75, className : "iron.Scene", methodName : "create"});
				done(null);
			}
			iron_Scene.active.camera = iron_Scene.active.getCamera(format.camera_ref);
			done(sceneObject);
			var _g = 0;
			var _g1 = iron_Scene.active.traitInits;
			while(_g < _g1.length) {
				var f = _g1[_g];
				++_g;
				f();
			}
			iron_Scene.active.traitInits = [];
		});
	});
};
iron_Scene.patch = function() {
	var cameraTransform = iron_Scene.active.camera.transform;
	iron_data_Data.clearSceneData();
	iron_Scene.setActive(iron_Scene.active.raw.name,function(o) {
		iron_Scene.active.camera.transform = cameraTransform;
	});
};
iron_Scene.setActive = function(sceneName,done) {
	if(iron_Scene.active != null) {
		iron_Scene.active.remove();
	}
	iron_data_Data.getSceneRaw(sceneName,function(format) {
		iron_Scene.create(format,function(o) {
			if(done != null) {
				done(o);
			}
			iron_Scene.active.ready = true;
		});
	});
};
iron_Scene.generateTranform = function(object,transform) {
	transform.matrix = iron_math_Mat4.fromArray(object.transform.values);
	transform.matrix.decompose(transform.loc,transform.rot,transform.scale);
	if(object.local_transform_only != null) {
		transform.localOnly = object.local_transform_only;
	}
	if(transform.object.parent != null && !transform.object.parent.visible) {
		transform.update();
	}
};
iron_Scene.setupAnimation = function(setup,object) {
	if(setup == null) {
		return;
	}
	object.setupAnimation(setup);
};
iron_Scene.createTraits = function(traits,object) {
	if(traits == null) {
		return;
	}
	var _g = 0;
	while(_g < traits.length) {
		var t = traits[_g];
		++_g;
		if(t.type == "Script") {
			var args = [];
			if(t.parameters != null) {
				args = t.parameters;
			}
			var traitInst = iron_Scene.createTraitClassInstance(t.class_name,args);
			if(traitInst == null) {
				haxe_Log.trace("Error: Trait '" + t.class_name + "' referenced in object '" + object.name + "' not found",{ fileName : "Scene.hx", lineNumber : 443, className : "iron.Scene", methodName : "createTraits"});
				continue;
			}
			object.addTrait(traitInst);
		}
	}
};
iron_Scene.createConstraints = function(constraints,object) {
	if(constraints == null) {
		return;
	}
	object.constraints = [];
	var _g = 0;
	while(_g < constraints.length) {
		var c = constraints[_g];
		++_g;
		var constr = new iron_object_Constraint(c);
		object.constraints.push(constr);
	}
};
iron_Scene.createTraitClassInstance = function(traitName,args) {
	var cname = Type.resolveClass(traitName);
	if(cname == null) {
		return null;
	}
	return Type.createInstance(cname,args);
};
iron_Scene.prototype = {
	remove: function() {
		this.meshBatch.remove();
		var _g = 0;
		var _g1 = this.meshes;
		while(_g < _g1.length) {
			var o = _g1[_g];
			++_g;
			o.remove();
		}
		var _g2 = 0;
		var _g11 = this.lamps;
		while(_g2 < _g11.length) {
			var o1 = _g11[_g2];
			++_g2;
			o1.remove();
		}
		var _g3 = 0;
		var _g12 = this.cameras;
		while(_g3 < _g12.length) {
			var o2 = _g12[_g3];
			++_g3;
			o2.remove();
		}
		var _g4 = 0;
		var _g13 = this.speakers;
		while(_g4 < _g13.length) {
			var o3 = _g13[_g4];
			++_g4;
			o3.remove();
		}
		var _g5 = 0;
		var _g14 = this.decals;
		while(_g5 < _g14.length) {
			var o4 = _g14[_g5];
			++_g5;
			o4.remove();
		}
		this.root.remove();
	}
	,updateFrame: function() {
		var _g = 0;
		var _g1 = this.animations;
		while(_g < _g1.length) {
			var anim = _g1[_g];
			++_g;
			anim.update(0.0166666666666666664);
		}
	}
	,renderFrame: function(g) {
		if(!this.ready) {
			return;
		}
		var activeCamera = this.camera;
		var _g = 0;
		var _g1 = this.cameras;
		while(_g < _g1.length) {
			var cam = _g1[_g];
			++_g;
			if(cam.data.mirror != null) {
				this.camera = cam;
				this.camera.renderFrame(g,this.root,this.lamps);
			}
		}
		this.camera = activeCamera;
		this.camera.renderFrame(g,this.root,this.lamps);
	}
	,addObject: function(parent) {
		var object = new iron_object_Object();
		if(parent != null) {
			parent.addChild(object);
		} else {
			this.root.addChild(object);
		}
		return object;
	}
	,getChild: function(name) {
		return this.root.getChild(name);
	}
	,getMesh: function(name) {
		var _g = 0;
		var _g1 = this.meshes;
		while(_g < _g1.length) {
			var m = _g1[_g];
			++_g;
			if(m.name == name) {
				return m;
			}
		}
		return null;
	}
	,getLamp: function(name) {
		var _g = 0;
		var _g1 = this.lamps;
		while(_g < _g1.length) {
			var l = _g1[_g];
			++_g;
			if(l.name == name) {
				return l;
			}
		}
		return null;
	}
	,getCamera: function(name) {
		var _g = 0;
		var _g1 = this.cameras;
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			if(c.name == name) {
				return c;
			}
		}
		return null;
	}
	,getSpeaker: function(name) {
		var _g = 0;
		var _g1 = this.speakers;
		while(_g < _g1.length) {
			var s = _g1[_g];
			++_g;
			if(s.name == name) {
				return s;
			}
		}
		return null;
	}
	,addMeshObject: function(data,materials,parent) {
		var object = new iron_object_MeshObject(data,materials);
		if(parent != null) {
			parent.addChild(object);
		} else {
			this.root.addChild(object);
		}
		return object;
	}
	,addLampObject: function(data,parent) {
		var object = new iron_object_LampObject(data);
		if(parent != null) {
			parent.addChild(object);
		} else {
			this.root.addChild(object);
		}
		return object;
	}
	,addCameraObject: function(data,parent) {
		var object = new iron_object_CameraObject(data);
		if(parent != null) {
			parent.addChild(object);
		} else {
			this.root.addChild(object);
		}
		return object;
	}
	,addSpeakerObject: function(data,parent) {
		var object = new iron_object_SpeakerObject(data);
		if(parent != null) {
			parent.addChild(object);
		} else {
			this.root.addChild(object);
		}
		return object;
	}
	,addDecalObject: function(material,parent) {
		var object = new iron_object_DecalObject(material);
		if(parent != null) {
			parent.addChild(object);
		} else {
			this.root.addChild(object);
		}
		return object;
	}
	,addScene: function(sceneName,parent,done) {
		var _gthis = this;
		if(parent == null) {
			parent = this.addObject();
		}
		iron_data_Data.getSceneRaw(sceneName,function(format) {
			iron_Scene.createTraits(format.traits,parent);
			_gthis.loadEmbeddedData(format.embedded_datas,function() {
				if(format.grease_pencil_ref != null) {
					var ref = format.grease_pencil_ref.split("/");
					var object_file = "";
					var data_ref = "";
					if(ref.length == 2) {
						object_file = ref[0];
						data_ref = ref[1];
					} else {
						object_file = sceneName;
						data_ref = format.grease_pencil_ref;
					}
					iron_data_Data.getGreasePencil(object_file,data_ref,function(gp) {
						_gthis.greasePencil = gp;
					});
				}
				_gthis.objectsTraversed = 0;
				var withGroup = [];
				var format1 = format.objects;
				var tmp = _gthis.getObjectsCount(format.objects);
				_gthis.traverseObjects(format,parent,format1,null,withGroup,function() {
					var _g = 0;
					while(_g < withGroup.length) {
						var object = withGroup[_g];
						++_g;
						_gthis.setupGroup(object,format);
					}
					done(parent);
				},tmp);
			});
		});
	}
	,getObjectsCount: function(objects) {
		var result = objects.length;
		var _g = 0;
		while(_g < objects.length) {
			var o = objects[_g];
			++_g;
			if(o.spawn != null && o.spawn == false) {
				continue;
			}
			if(o.children != null) {
				result += this.getObjectsCount(o.children);
			}
		}
		return result;
	}
	,traverseObjects: function(format,parent,objects,parentObject,withGroup,done,objectsCount) {
		var _gthis = this;
		if(objects == null) {
			return;
		}
		var _g1 = 0;
		var _g = objects.length;
		while(_g1 < _g) {
			var i = _g1++;
			var o = [objects[i]];
			if(o[0].spawn != null && o[0].spawn == false) {
				this.objectsTraversed++;
				if(this.objectsTraversed == objectsCount) {
					done();
				}
				continue;
			}
			var o1 = o[0];
			var tmp = (function(o2) {
				return function(object) {
					if(o2[0].group_ref != null) {
						withGroup.push(object);
					}
					if(object != null) {
						_gthis.traverseObjects(format,object,o2[0].children,o2[0],withGroup,done,objectsCount);
					}
					_gthis.objectsTraversed++;
					if(_gthis.objectsTraversed == objectsCount) {
						done();
					}
				};
			})(o);
			this.createObject(o1,format,parent,parentObject,tmp);
		}
	}
	,spawnObject: function(name,parent,done) {
		this.createObject(this.getObj(this.raw,name),this.raw,parent,null,done);
	}
	,parseObject: function(sceneName,objectName,parent,done) {
		var _gthis = this;
		iron_data_Data.getSceneRaw(sceneName,function(format) {
			var o = _gthis.getObj(format,objectName);
			if(o == null) {
				done(null);
			}
			_gthis.createObject(o,format,parent,null,done);
		});
	}
	,getObj: function(format,name) {
		return this.traverseObjs(format.objects,name);
	}
	,traverseObjs: function(children,name) {
		var _g = 0;
		while(_g < children.length) {
			var o = children[_g];
			++_g;
			if(o.name == name) {
				return o;
			}
			if(o.children != null) {
				var res = this.traverseObjs(o.children,name);
				if(res != null) {
					return res;
				}
			}
		}
		return null;
	}
	,createObject: function(o,format,parent,parentObject,done) {
		var _gthis = this;
		var sceneName = format.name;
		if(o.type == "camera_object") {
			iron_data_Data.getCamera(sceneName,o.data_ref,function(b) {
				var object = _gthis.addCameraObject(b,parent);
				_gthis.returnObject(object,o,done);
			});
		} else if(o.type == "lamp_object") {
			iron_data_Data.getLamp(sceneName,o.data_ref,function(b1) {
				var object1 = _gthis.addLampObject(b1,parent);
				_gthis.returnObject(object1,o,done);
			});
		} else if(o.type == "mesh_object") {
			if(o.material_refs.length == 0) {
				var object2 = this.addObject(parent);
				if(o.dimensions != null) {
					object2.transform.setDimensions(o.dimensions[0],o.dimensions[1],o.dimensions[2]);
				}
				this.returnObject(object2,o,done);
			} else {
				var length = o.material_refs.length;
				var this1 = new Array(length);
				var materials = this1;
				var materialsLoaded = 0;
				var _g1 = 0;
				var _g = o.material_refs.length;
				while(_g1 < _g) {
					var i = [_g1++];
					var ref = o.material_refs[i[0]];
					var tmp = (function(i1) {
						return function(mat) {
							materials[i1[0]] = mat;
							materialsLoaded += 1;
							if(materialsLoaded == o.material_refs.length) {
								var ref1 = o.data_ref.split("/");
								var object_file = "";
								var data_ref = "";
								if(ref1.length == 2) {
									object_file = ref1[0];
									data_ref = ref1[1];
								} else {
									object_file = sceneName;
									data_ref = o.data_ref;
								}
								if(parentObject != null && parentObject.bones_ref != null) {
									iron_data_Data.getSceneRaw(parentObject.bones_ref,(function() {
										return function(boneformat) {
											var boneObjects = boneformat.objects;
											_gthis.returnMeshObject(object_file,data_ref,sceneName,boneObjects,materials,parent,o,done);
										};
									})());
								} else {
									_gthis.returnMeshObject(object_file,data_ref,sceneName,null,materials,parent,o,done);
								}
							}
						};
					})(i);
					iron_data_Data.getMaterial(sceneName,ref,tmp);
				}
			}
		} else if(o.type == "speaker_object") {
			var object3 = this.addSpeakerObject(iron_data_Data.getSpeakerRawByName(format.speaker_datas,o.data_ref),parent);
			this.returnObject(object3,o,done);
		} else if(o.type == "decal_object") {
			if(o.material_refs != null && o.material_refs.length > 0) {
				iron_data_Data.getMaterial(sceneName,o.material_refs[0],function(material) {
					var object4 = _gthis.addDecalObject(material,parent);
					_gthis.returnObject(object4,o,done);
				});
			} else {
				var object5 = this.addDecalObject(null,parent);
				this.returnObject(object5,o,done);
			}
		} else if(o.type == "object") {
			var object6 = this.addObject(parent);
			this.returnObject(object6,o,done);
		} else {
			done(null);
		}
	}
	,returnMeshObject: function(object_file,data_ref,sceneName,boneObjects,materials,parent,o,done) {
		var _gthis = this;
		iron_data_Data.getMesh(object_file,data_ref,boneObjects,function(mesh) {
			var object = _gthis.addMeshObject(mesh,materials,parent);
			if(o.particle_refs != null && o.particle_refs.length > 0) {
				(js_Boot.__cast(object , iron_object_MeshObject)).setupParticleSystem(sceneName,o.particle_refs[0]);
			}
			if(o.dimensions != null) {
				object.transform.setDimensions(o.dimensions[0],o.dimensions[1],o.dimensions[2]);
			}
			_gthis.returnObject(object,o,done);
		});
	}
	,returnObject: function(object,o,done) {
		if(object != null) {
			object.raw = o;
			object.name = o.name;
			if(o.visible != null) {
				object.visible = o.visible;
			}
			if(o.visible_mesh != null) {
				object.visibleMesh = o.visible_mesh;
			}
			if(o.visible_shadow != null) {
				object.visibleShadow = o.visible_shadow;
			}
			iron_Scene.createConstraints(o.constraints,object);
			iron_Scene.generateTranform(o,object.transform);
			iron_Scene.setupAnimation(o.animation_setup,object);
			if(o.dimensions == null) {
				var sc = object.transform.scale;
				object.transform.setDimensions(2.0 * sc.x,2.0 * sc.y,2.0 * sc.z);
			}
			iron_Scene.createTraits(o.traits,object);
		}
		done(object);
	}
	,setupGroup: function(object,raw) {
		var o = object.raw;
		if(o.group_ref == null) {
			return;
		}
		var _g = 0;
		var _g1 = raw.groups;
		while(_g < _g1.length) {
			var g = _g1[_g];
			++_g;
			if(g.name == o.group_ref) {
				object.group = [];
				var _g2 = 0;
				var _g3 = g.object_refs;
				while(_g2 < _g3.length) {
					var s = _g3[_g2];
					++_g2;
					object.group.push(this.getChild(s));
				}
				break;
			}
		}
	}
	,loadEmbeddedData: function(datas,done) {
		var _gthis = this;
		if(datas == null) {
			done();
			return;
		}
		var loaded = 0;
		var _g = 0;
		while(_g < datas.length) {
			var file = [datas[_g]];
			++_g;
			iron_data_Data.getImage(file[0],(function(file1) {
				return function(image) {
					var _this = _gthis.embedded;
					if(__map_reserved[file1[0]] != null) {
						_this.setReserved(file1[0],image);
					} else {
						_this.h[file1[0]] = image;
					}
					loaded += 1;
					if(loaded == datas.length) {
						done();
					}
				};
			})(file));
		}
	}
	,notifyOnInit: function(f) {
		if(this.ready) {
			f();
		} else {
			this.traitInits.push(f);
		}
	}
	,removeInit: function(f) {
		HxOverrides.remove(this.traitInits,f);
	}
	,toString: function() {
		return "Scene " + this.raw.name;
	}
	,__class__: iron_Scene
};
var iron_system_Time = function() { };
$hxClasses["iron.system.Time"] = iron_system_Time;
iron_system_Time.__name__ = ["iron","system","Time"];
iron_system_Time.time = function() {
	return kha_Scheduler.time();
};
iron_system_Time.realTime = function() {
	return kha_Scheduler.realTime();
};
iron_system_Time.update = function() {
	iron_system_Time.realDelta = kha_Scheduler.realTime() - iron_system_Time.last;
	iron_system_Time.last = kha_Scheduler.realTime();
};
var armory_trait_internal_JSScriptAPI = $hx_exports["armory"] = function() {
};
$hxClasses["armory.trait.internal.JSScriptAPI"] = armory_trait_internal_JSScriptAPI;
armory_trait_internal_JSScriptAPI.__name__ = ["armory","trait","internal","JSScriptAPI"];
armory_trait_internal_JSScriptAPI.prototype = {
	__class__: armory_trait_internal_JSScriptAPI
};
var kha_math_FastMatrix4 = function(_00,_10,_20,_30,_01,_11,_21,_31,_02,_12,_22,_32,_03,_13,_23,_33) {
	this._00 = _00;
	this._10 = _10;
	this._20 = _20;
	this._30 = _30;
	this._01 = _01;
	this._11 = _11;
	this._21 = _21;
	this._31 = _31;
	this._02 = _02;
	this._12 = _12;
	this._22 = _22;
	this._32 = _32;
	this._03 = _03;
	this._13 = _13;
	this._23 = _23;
	this._33 = _33;
};
$hxClasses["kha.math.FastMatrix4"] = kha_math_FastMatrix4;
kha_math_FastMatrix4.__name__ = ["kha","math","FastMatrix4"];
kha_math_FastMatrix4.fromMatrix4 = function(m) {
	return new kha_math_FastMatrix4(m._00,m._10,m._20,m._30,m._01,m._11,m._21,m._31,m._02,m._12,m._22,m._32,m._03,m._13,m._23,m._33);
};
kha_math_FastMatrix4.orthogonalProjection = function(left,right,bottom,top,zn,zf) {
	var tx = -(right + left) / (right - left);
	var ty = -(top + bottom) / (top - bottom);
	var tz = -(zf + zn) / (zf - zn);
	return new kha_math_FastMatrix4(2 / (right - left),0,0,tx,0,2 / (top - bottom),0,ty,0,0,-2 / (zf - zn),tz,0,0,0,1);
};
kha_math_FastMatrix4.perspectiveProjection = function(fovY,aspect,zn,zf) {
	var uh = 1.0 / Math.tan(fovY / 2);
	var uw = uh / aspect;
	return new kha_math_FastMatrix4(uw,0,0,0,0,uh,0,0,0,0,(zf + zn) / (zn - zf),2 * zf * zn / (zn - zf),0,0,-1,0);
};
kha_math_FastMatrix4.lookAt = function(eye,at,up) {
	var zaxis = new kha_math_FastVector3(at.x - eye.x,at.y - eye.y,at.z - eye.z);
	zaxis.set_length(1);
	var _x = zaxis.y * up.z - zaxis.z * up.y;
	var _y = zaxis.z * up.x - zaxis.x * up.z;
	var _z = zaxis.x * up.y - zaxis.y * up.x;
	var xaxis = new kha_math_FastVector3(_x,_y,_z);
	xaxis.set_length(1);
	var yaxis_z;
	var yaxis_y;
	var yaxis_x;
	var _x1 = xaxis.y * zaxis.z - xaxis.z * zaxis.y;
	var _y1 = xaxis.z * zaxis.x - xaxis.x * zaxis.z;
	var _z1 = xaxis.x * zaxis.y - xaxis.y * zaxis.x;
	yaxis_x = _x1;
	yaxis_y = _y1;
	yaxis_z = _z1;
	return new kha_math_FastMatrix4(xaxis.x,xaxis.y,xaxis.z,-(xaxis.x * eye.x + xaxis.y * eye.y + xaxis.z * eye.z),yaxis_x,yaxis_y,yaxis_z,-(yaxis_x * eye.x + yaxis_y * eye.y + yaxis_z * eye.z),-zaxis.x,-zaxis.y,-zaxis.z,zaxis.x * eye.x + zaxis.y * eye.y + zaxis.z * eye.z,0,0,0,1);
};
kha_math_FastMatrix4.prototype = {
	__class__: kha_math_FastMatrix4
};
var iron_math_Vec4 = function(x,y,z,w) {
	if(w == null) {
		w = 1.0;
	}
	if(z == null) {
		z = 0.0;
	}
	if(y == null) {
		y = 0.0;
	}
	if(x == null) {
		x = 0.0;
	}
	this.x = x;
	this.y = y;
	this.z = z;
	this.w = w;
};
$hxClasses["iron.math.Vec4"] = iron_math_Vec4;
iron_math_Vec4.__name__ = ["iron","math","Vec4"];
iron_math_Vec4.lerp = function(v1,v2,t) {
	var target = new iron_math_Vec4();
	target.x = v2.x + (v1.x - v2.x) * t;
	target.y = v2.y + (v1.y - v2.y) * t;
	target.z = v2.z + (v1.z - v2.z) * t;
	return target;
};
iron_math_Vec4.distance3d = function(v1,v2) {
	var vx = v1.x - v2.x;
	var vy = v1.y - v2.y;
	var vz = v1.z - v2.z;
	return Math.sqrt(vx * vx + vy * vy + vz * vz);
};
iron_math_Vec4.distance3df = function(v1x,v1y,v1z,v2x,v2y,v2z) {
	var vx = v1x - v2x;
	var vy = v1y - v2y;
	var vz = v1z - v2z;
	return Math.sqrt(vx * vx + vy * vy + vz * vz);
};
iron_math_Vec4.xAxis = function() {
	return new iron_math_Vec4(1.0,0.0,0.0);
};
iron_math_Vec4.yAxis = function() {
	return new iron_math_Vec4(0.0,1.0,0.0);
};
iron_math_Vec4.zAxis = function() {
	return new iron_math_Vec4(0.0,0.0,1.0);
};
iron_math_Vec4.prototype = {
	cross: function(v) {
		var x2 = this.y * v.z - this.z * v.y;
		var y2 = this.z * v.x - this.x * v.z;
		var z2 = this.x * v.y - this.y * v.x;
		this.x = x2;
		this.y = y2;
		this.z = z2;
		return this;
	}
	,crossvecs: function(a,b) {
		var x2 = a.y * b.z - a.z * b.y;
		var y2 = a.z * b.x - a.x * b.z;
		var z2 = a.x * b.y - a.y * b.x;
		this.x = x2;
		this.y = y2;
		this.z = z2;
		return this;
	}
	,set: function(x,y,z,w) {
		if(w == null) {
			w = 1.0;
		}
		this.x = x;
		this.y = y;
		this.z = z;
		this.w = w;
		return this;
	}
	,add: function(v) {
		this.x += v.x;
		this.y += v.y;
		this.z += v.z;
		return this;
	}
	,addf: function(x,y,z) {
		this.x += x;
		this.y += y;
		this.z += z;
		return this;
	}
	,addvecs: function(a,b) {
		this.x = a.x + b.x;
		this.y = a.y + b.y;
		this.z = a.z + b.z;
		return this;
	}
	,subvecs: function(a,b) {
		this.x = a.x - b.x;
		this.y = a.y - b.y;
		this.z = a.z - b.z;
		return this;
	}
	,normalize: function() {
		var n = Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);
		if(n > 0.0) {
			var invN = 1.0 / n;
			this.x *= invN;
			this.y *= invN;
			this.z *= invN;
		}
		return this;
	}
	,mult: function(f) {
		this.x *= f;
		this.y *= f;
		this.z *= f;
		return this;
	}
	,dot: function(v) {
		return this.x * v.x + this.y * v.y + this.z * v.z;
	}
	,setFrom: function(v) {
		this.x = v.x;
		this.y = v.y;
		this.z = v.z;
		return this;
	}
	,clone: function() {
		return new iron_math_Vec4(this.x,this.y,this.z,this.w);
	}
	,applyproj: function(m) {
		var x = this.x;
		var y = this.y;
		var z = this.z;
		var d = 1.0 / (m.self._03 * x + m.self._13 * y + m.self._23 * z + m.self._33);
		this.x = (m.self._00 * x + m.self._10 * y + m.self._20 * z + m.self._30) * d;
		this.y = (m.self._01 * x + m.self._11 * y + m.self._21 * z + m.self._31) * d;
		this.z = (m.self._02 * x + m.self._12 * y + m.self._22 * z + m.self._32) * d;
		return this;
	}
	,applymat: function(m) {
		var x = this.x;
		var y = this.y;
		var z = this.z;
		this.x = m.self._00 * x + m.self._10 * y + m.self._20 * z + m.self._30;
		this.y = m.self._01 * x + m.self._11 * y + m.self._21 * z + m.self._31;
		this.z = m.self._02 * x + m.self._12 * y + m.self._22 * z + m.self._32;
		return this;
	}
	,applymat4: function(m) {
		var x = this.x;
		var y = this.y;
		var z = this.z;
		var w = this.w;
		this.x = m.self._00 * x + m.self._10 * y + m.self._20 * z + m.self._30 * w;
		this.y = m.self._01 * x + m.self._11 * y + m.self._21 * z + m.self._31 * w;
		this.z = m.self._02 * x + m.self._12 * y + m.self._22 * z + m.self._32 * w;
		this.w = m.self._03 * x + m.self._13 * y + m.self._23 * z + m.self._33 * w;
		return this;
	}
	,applyAxisAngle: function(axis,angle) {
		var quat = new iron_math_Quat();
		quat.fromAxisAngle(axis,angle);
		return this.applyQuat(quat);
	}
	,applyQuat: function(q) {
		var ix = q.w * this.x + q.y * this.z - q.z * this.y;
		var iy = q.w * this.y + q.z * this.x - q.x * this.z;
		var iz = q.w * this.z + q.x * this.y - q.y * this.x;
		var iw = -q.x * this.x - q.y * this.y - q.z * this.z;
		this.x = ix * q.w + iw * -q.x + iy * -q.z - iz * -q.y;
		this.y = iy * q.w + iw * -q.y + iz * -q.x - ix * -q.z;
		this.z = iz * q.w + iw * -q.z + ix * -q.y - iy * -q.x;
		return this;
	}
	,equals: function(v) {
		if(this.x == v.x && this.y == v.y) {
			return this.z == v.z;
		} else {
			return false;
		}
	}
	,length: function() {
		return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);
	}
	,sub: function(v) {
		this.x -= v.x;
		this.y -= v.y;
		this.z -= v.z;
		return this;
	}
	,unproject: function(P,V) {
		var VPInv = iron_math_Mat4.identity();
		var PInv = iron_math_Mat4.identity();
		var VInv = iron_math_Mat4.identity();
		PInv.getInverse(P);
		VInv.getInverse(V);
		VPInv.multmats(VInv,PInv);
		return this.applyproj(VPInv);
	}
	,distanceTo: function(p) {
		return Math.sqrt((p.x - this.x) * (p.x - this.x) + (p.y - this.y) * (p.y - this.y) + (p.z - this.z) * (p.z - this.z));
	}
	,toString: function() {
		return "(" + this.x + ", " + this.y + ", " + this.z + ", " + this.w + ")";
	}
	,__class__: iron_math_Vec4
};
var iron_math_Mat4 = function(_00,_10,_20,_30,_01,_11,_21,_31,_02,_12,_22,_32,_03,_13,_23,_33) {
	this.self = new kha_math_FastMatrix4(_00,_10,_20,_30,_01,_11,_21,_31,_02,_12,_22,_32,_03,_13,_23,_33);
};
$hxClasses["iron.math.Mat4"] = iron_math_Mat4;
iron_math_Mat4.__name__ = ["iron","math","Mat4"];
iron_math_Mat4.identity = function() {
	return new iron_math_Mat4(1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0);
};
iron_math_Mat4.fromArray = function(a,offset) {
	if(offset == null) {
		offset = 0;
	}
	return new iron_math_Mat4(a[offset],a[1 + offset],a[2 + offset],a[3 + offset],a[4 + offset],a[5 + offset],a[6 + offset],a[7 + offset],a[8 + offset],a[9 + offset],a[10 + offset],a[11 + offset],a[12 + offset],a[13 + offset],a[14 + offset],a[15 + offset]);
};
iron_math_Mat4.perspective = function(fovY,aspect,zn,zf) {
	var uh = 1.0 / Math.tan(fovY / 2);
	var uw = uh / aspect;
	return new iron_math_Mat4(uw,0,0,0,0,uh,0,0,0,0,(zf + zn) / (zn - zf),2 * zf * zn / (zn - zf),0,0,-1,0);
};
iron_math_Mat4.orthogonal = function(left,right,bottom,top,near,far,orthoScale) {
	if(orthoScale == null) {
		orthoScale = 2;
	}
	var w = right - left;
	var h = top - bottom;
	var p = far - near;
	var x = (right + left) / w;
	var y = (top + bottom) / h;
	var z = (far + near) / p;
	return new iron_math_Mat4(orthoScale / w,0,0,-x,0,orthoScale / h,0,-y,0,0,-orthoScale / p,-z,0,0,0,1);
};
iron_math_Mat4.lookAt = function(eye,center,up) {
	return iron_math_Mat4.identity().setLookAt(eye,center,up);
};
iron_math_Mat4.prototype = {
	compose: function(location,quaternion,sc) {
		this.fromQuaternion(quaternion);
		this.scale(sc);
		this.setLocation(location);
		return this;
	}
	,decompose: function(location,quaternion,scale) {
		iron_math_Mat4.helpVec.w = 0.0;
		var _this = iron_math_Mat4.helpVec.set(this.self._00,this.self._01,this.self._02);
		var sx = Math.sqrt(_this.x * _this.x + _this.y * _this.y + _this.z * _this.z);
		var _this1 = iron_math_Mat4.helpVec.set(this.self._10,this.self._11,this.self._12);
		var sy = Math.sqrt(_this1.x * _this1.x + _this1.y * _this1.y + _this1.z * _this1.z);
		var _this2 = iron_math_Mat4.helpVec.set(this.self._20,this.self._21,this.self._22);
		var sz = Math.sqrt(_this2.x * _this2.x + _this2.y * _this2.y + _this2.z * _this2.z);
		var _this3 = this.self;
		var m3 = _this3._12;
		var m4 = _this3._22;
		var m5 = _this3._32;
		var m6 = _this3._13;
		var m7 = _this3._23;
		var m8 = _this3._33;
		var c00 = _this3._11 * (m4 * m8 - m5 * m7) - _this3._21 * (m3 * m8 - m5 * m6) + _this3._31 * (m3 * m7 - m4 * m6);
		var m31 = _this3._12;
		var m41 = _this3._22;
		var m51 = _this3._32;
		var m61 = _this3._13;
		var m71 = _this3._23;
		var m81 = _this3._33;
		var c01 = _this3._10 * (m41 * m81 - m51 * m71) - _this3._20 * (m31 * m81 - m51 * m61) + _this3._30 * (m31 * m71 - m41 * m61);
		var m32 = _this3._11;
		var m42 = _this3._21;
		var m52 = _this3._31;
		var m62 = _this3._13;
		var m72 = _this3._23;
		var m82 = _this3._33;
		var c02 = _this3._10 * (m42 * m82 - m52 * m72) - _this3._20 * (m32 * m82 - m52 * m62) + _this3._30 * (m32 * m72 - m42 * m62);
		var m33 = _this3._11;
		var m43 = _this3._21;
		var m53 = _this3._31;
		var m63 = _this3._12;
		var m73 = _this3._22;
		var m83 = _this3._32;
		var c03 = _this3._10 * (m43 * m83 - m53 * m73) - _this3._20 * (m33 * m83 - m53 * m63) + _this3._30 * (m33 * m73 - m43 * m63);
		var det = _this3._00 * c00 - _this3._01 * c01 + _this3._02 * c02 - _this3._03 * c03;
		if(det < 0.0) {
			sx = -sx;
		}
		location.x = this.self._30;
		location.y = this.self._31;
		location.z = this.self._32;
		iron_math_Mat4.helpMat.self._00 = this.self._00;
		iron_math_Mat4.helpMat.self._10 = this.self._10;
		iron_math_Mat4.helpMat.self._20 = this.self._20;
		iron_math_Mat4.helpMat.self._30 = this.self._30;
		iron_math_Mat4.helpMat.self._01 = this.self._01;
		iron_math_Mat4.helpMat.self._11 = this.self._11;
		iron_math_Mat4.helpMat.self._21 = this.self._21;
		iron_math_Mat4.helpMat.self._31 = this.self._31;
		iron_math_Mat4.helpMat.self._02 = this.self._02;
		iron_math_Mat4.helpMat.self._12 = this.self._12;
		iron_math_Mat4.helpMat.self._22 = this.self._22;
		iron_math_Mat4.helpMat.self._32 = this.self._32;
		iron_math_Mat4.helpMat.self._03 = this.self._03;
		iron_math_Mat4.helpMat.self._13 = this.self._13;
		iron_math_Mat4.helpMat.self._23 = this.self._23;
		iron_math_Mat4.helpMat.self._33 = this.self._33;
		var invSX = 1.0 / sx;
		var invSY = 1.0 / sy;
		var invSZ = 1.0 / sz;
		var _g = iron_math_Mat4.helpMat;
		_g.self._00 *= invSX;
		var _g1 = iron_math_Mat4.helpMat;
		_g1.self._01 *= invSX;
		var _g2 = iron_math_Mat4.helpMat;
		_g2.self._02 *= invSX;
		iron_math_Mat4.helpMat.self._03 = 0.0;
		var _g3 = iron_math_Mat4.helpMat;
		_g3.self._10 *= invSY;
		var _g4 = iron_math_Mat4.helpMat;
		_g4.self._11 *= invSY;
		var _g5 = iron_math_Mat4.helpMat;
		_g5.self._12 *= invSY;
		iron_math_Mat4.helpMat.self._13 = 0.0;
		var _g6 = iron_math_Mat4.helpMat;
		_g6.self._20 *= invSZ;
		var _g7 = iron_math_Mat4.helpMat;
		_g7.self._21 *= invSZ;
		var _g8 = iron_math_Mat4.helpMat;
		_g8.self._22 *= invSZ;
		iron_math_Mat4.helpMat.self._23 = 0.0;
		iron_math_Mat4.helpMat.self._30 = 0.0;
		iron_math_Mat4.helpMat.self._31 = 0.0;
		iron_math_Mat4.helpMat.self._32 = 0.0;
		iron_math_Mat4.helpMat.self._33 = 0.0;
		quaternion.fromRotationMat(iron_math_Mat4.helpMat);
		scale.x = sx;
		scale.y = sy;
		scale.z = sz;
		return this;
	}
	,setLocation: function(v) {
		this.self._30 = v.x;
		this.self._31 = v.y;
		this.self._32 = v.z;
		return this;
	}
	,fromQuaternion: function(q) {
		var x = q.x;
		var y = q.y;
		var z = q.z;
		var w = q.w;
		var x2 = x + x;
		var y2 = y + y;
		var z2 = z + z;
		var xx = x * x2;
		var xy = x * y2;
		var xz = x * z2;
		var yy = y * y2;
		var yz = y * z2;
		var zz = z * z2;
		var wx = w * x2;
		var wy = w * y2;
		var wz = w * z2;
		this.self._00 = 1.0 - (yy + zz);
		this.self._10 = xy - wz;
		this.self._20 = xz + wy;
		this.self._01 = xy + wz;
		this.self._11 = 1.0 - (xx + zz);
		this.self._21 = yz - wx;
		this.self._02 = xz - wy;
		this.self._12 = yz + wx;
		this.self._22 = 1.0 - (xx + yy);
		this.self._03 = 0.0;
		this.self._13 = 0.0;
		this.self._23 = 0.0;
		this.self._30 = 0.0;
		this.self._31 = 0.0;
		this.self._32 = 0.0;
		this.self._33 = 1.0;
		return this;
	}
	,toArray: function() {
		return [this.self._00,this.self._10,this.self._20,this.self._30,this.self._01,this.self._11,this.self._21,this.self._31,this.self._02,this.self._12,this.self._22,this.self._32,this.self._03,this.self._13,this.self._23,this.self._33];
	}
	,setIdentity: function() {
		this.self._00 = 1.0;
		this.self._01 = 0.0;
		this.self._02 = 0.0;
		this.self._03 = 0.0;
		this.self._10 = 0.0;
		this.self._11 = 1.0;
		this.self._12 = 0.0;
		this.self._13 = 0.0;
		this.self._20 = 0.0;
		this.self._21 = 0.0;
		this.self._22 = 1.0;
		this.self._23 = 0.0;
		this.self._30 = 0.0;
		this.self._31 = 0.0;
		this.self._32 = 0.0;
		this.self._33 = 1.0;
		return this;
	}
	,initTranslate: function(x,y,z) {
		if(z == null) {
			z = 0.0;
		}
		if(y == null) {
			y = 0.0;
		}
		if(x == null) {
			x = 0.0;
		}
		this.self._00 = 1.0;
		this.self._01 = 0.0;
		this.self._02 = 0.0;
		this.self._03 = 0.0;
		this.self._10 = 0.0;
		this.self._11 = 1.0;
		this.self._12 = 0.0;
		this.self._13 = 0.0;
		this.self._20 = 0.0;
		this.self._21 = 0.0;
		this.self._22 = 1.0;
		this.self._23 = 0.0;
		this.self._30 = x;
		this.self._31 = y;
		this.self._32 = z;
		this.self._33 = 1.0;
	}
	,translate: function(x,y,z) {
		if(z == null) {
			z = 0.0;
		}
		if(y == null) {
			y = 0.0;
		}
		if(x == null) {
			x = 0.0;
		}
		var _g = this;
		_g.self._00 += x * this.self._03;
		var _g1 = this;
		_g1.self._01 += y * this.self._03;
		var _g2 = this;
		_g2.self._02 += z * this.self._03;
		var _g3 = this;
		_g3.self._10 += x * this.self._13;
		var _g4 = this;
		_g4.self._11 += y * this.self._13;
		var _g5 = this;
		_g5.self._12 += z * this.self._13;
		var _g6 = this;
		_g6.self._20 += x * this.self._23;
		var _g7 = this;
		_g7.self._21 += y * this.self._23;
		var _g8 = this;
		_g8.self._22 += z * this.self._23;
		var _g9 = this;
		_g9.self._30 += x * this.self._33;
		var _g10 = this;
		_g10.self._31 += y * this.self._33;
		var _g11 = this;
		_g11.self._32 += z * this.self._33;
	}
	,scale: function(v) {
		var _g = this;
		_g.self._00 *= v.x;
		var _g1 = this;
		_g1.self._01 *= v.x;
		var _g2 = this;
		_g2.self._02 *= v.x;
		var _g3 = this;
		_g3.self._03 *= v.x;
		var _g4 = this;
		_g4.self._10 *= v.y;
		var _g5 = this;
		_g5.self._11 *= v.y;
		var _g6 = this;
		_g6.self._12 *= v.y;
		var _g7 = this;
		_g7.self._13 *= v.y;
		var _g8 = this;
		_g8.self._20 *= v.z;
		var _g9 = this;
		_g9.self._21 *= v.z;
		var _g10 = this;
		_g10.self._22 *= v.z;
		var _g11 = this;
		_g11.self._23 *= v.z;
	}
	,multmat3x4: function(a,b) {
		var m11 = a.self._00;
		var m12 = a.self._01;
		var m13 = a.self._02;
		var m21 = a.self._10;
		var m22 = a.self._11;
		var m23 = a.self._12;
		var a31 = a.self._20;
		var a32 = a.self._21;
		var a33 = a.self._22;
		var a41 = a.self._30;
		var a42 = a.self._31;
		var a43 = a.self._32;
		var b11 = b.self._00;
		var b12 = b.self._01;
		var b13 = b.self._02;
		var b21 = b.self._10;
		var b22 = b.self._11;
		var b23 = b.self._12;
		var b31 = b.self._20;
		var b32 = b.self._21;
		var b33 = b.self._22;
		var b41 = b.self._30;
		var b42 = b.self._31;
		var b43 = b.self._32;
		this.self._00 = m11 * b11 + m12 * b21 + m13 * b31;
		this.self._01 = m11 * b12 + m12 * b22 + m13 * b32;
		this.self._02 = m11 * b13 + m12 * b23 + m13 * b33;
		this.self._03 = 0.0;
		this.self._10 = m21 * b11 + m22 * b21 + m23 * b31;
		this.self._11 = m21 * b12 + m22 * b22 + m23 * b32;
		this.self._12 = m21 * b13 + m22 * b23 + m23 * b33;
		this.self._13 = 0.0;
		this.self._20 = a31 * b11 + a32 * b21 + a33 * b31;
		this.self._21 = a31 * b12 + a32 * b22 + a33 * b32;
		this.self._22 = a31 * b13 + a32 * b23 + a33 * b33;
		this.self._23 = 0.0;
		this.self._30 = a41 * b11 + a42 * b21 + a43 * b31 + b41;
		this.self._31 = a41 * b12 + a42 * b22 + a43 * b32 + b42;
		this.self._32 = a41 * b13 + a42 * b23 + a43 * b33 + b43;
		this.self._33 = 1.0;
	}
	,multmat: function(m) {
		return new iron_math_Mat4(this.self._00 * m.self._00 + this.self._10 * m.self._01 + this.self._20 * m.self._02 + this.self._30 * m.self._03,this.self._00 * m.self._10 + this.self._10 * m.self._11 + this.self._20 * m.self._12 + this.self._30 * m.self._13,this.self._00 * m.self._20 + this.self._10 * m.self._21 + this.self._20 * m.self._22 + this.self._30 * m.self._23,this.self._00 * m.self._30 + this.self._10 * m.self._31 + this.self._20 * m.self._32 + this.self._30 * m.self._33,this.self._01 * m.self._00 + this.self._11 * m.self._01 + this.self._21 * m.self._02 + this.self._31 * m.self._03,this.self._01 * m.self._10 + this.self._11 * m.self._11 + this.self._21 * m.self._12 + this.self._31 * m.self._13,this.self._01 * m.self._20 + this.self._11 * m.self._21 + this.self._21 * m.self._22 + this.self._31 * m.self._23,this.self._01 * m.self._30 + this.self._11 * m.self._31 + this.self._21 * m.self._32 + this.self._31 * m.self._33,this.self._02 * m.self._00 + this.self._12 * m.self._01 + this.self._22 * m.self._02 + this.self._32 * m.self._03,this.self._02 * m.self._10 + this.self._12 * m.self._11 + this.self._22 * m.self._12 + this.self._32 * m.self._13,this.self._02 * m.self._20 + this.self._12 * m.self._21 + this.self._22 * m.self._22 + this.self._32 * m.self._23,this.self._02 * m.self._30 + this.self._12 * m.self._31 + this.self._22 * m.self._32 + this.self._32 * m.self._33,this.self._03 * m.self._00 + this.self._13 * m.self._01 + this.self._23 * m.self._02 + this.self._33 * m.self._03,this.self._03 * m.self._10 + this.self._13 * m.self._11 + this.self._23 * m.self._12 + this.self._33 * m.self._13,this.self._03 * m.self._20 + this.self._13 * m.self._21 + this.self._23 * m.self._22 + this.self._33 * m.self._23,this.self._03 * m.self._30 + this.self._13 * m.self._31 + this.self._23 * m.self._32 + this.self._33 * m.self._33);
	}
	,multmat2: function(m) {
		var a11 = this.self._00;
		var a12 = this.self._01;
		var a13 = this.self._02;
		var a14 = this.self._03;
		var a21 = this.self._10;
		var a22 = this.self._11;
		var a23 = this.self._12;
		var a24 = this.self._13;
		var a31 = this.self._20;
		var a32 = this.self._21;
		var a33 = this.self._22;
		var a34 = this.self._23;
		var a41 = this.self._30;
		var a42 = this.self._31;
		var a43 = this.self._32;
		var a44 = this.self._33;
		var b11 = m.self._00;
		var b12 = m.self._01;
		var b13 = m.self._02;
		var b14 = m.self._03;
		var b21 = m.self._10;
		var b22 = m.self._11;
		var b23 = m.self._12;
		var b24 = m.self._13;
		var b31 = m.self._20;
		var b32 = m.self._21;
		var b33 = m.self._22;
		var b34 = m.self._23;
		var b41 = m.self._30;
		var b42 = m.self._31;
		var b43 = m.self._32;
		var b44 = m.self._33;
		this.self._00 = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;
		this.self._01 = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;
		this.self._02 = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;
		this.self._03 = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;
		this.self._10 = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;
		this.self._11 = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;
		this.self._12 = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;
		this.self._13 = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;
		this.self._20 = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;
		this.self._21 = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;
		this.self._22 = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;
		this.self._23 = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;
		this.self._30 = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;
		this.self._31 = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;
		this.self._32 = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;
		this.self._33 = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;
		return this;
	}
	,multmats: function(a,b) {
		var a11 = a.self._00;
		var a12 = a.self._10;
		var a13 = a.self._20;
		var a14 = a.self._30;
		var a21 = a.self._01;
		var a22 = a.self._11;
		var a23 = a.self._21;
		var a24 = a.self._31;
		var a31 = a.self._02;
		var a32 = a.self._12;
		var a33 = a.self._22;
		var a34 = a.self._32;
		var a41 = a.self._03;
		var a42 = a.self._13;
		var a43 = a.self._23;
		var a44 = a.self._33;
		var b11 = b.self._00;
		var b12 = b.self._10;
		var b13 = b.self._20;
		var b14 = b.self._30;
		var b21 = b.self._01;
		var b22 = b.self._11;
		var b23 = b.self._21;
		var b24 = b.self._31;
		var b31 = b.self._02;
		var b32 = b.self._12;
		var b33 = b.self._22;
		var b34 = b.self._32;
		var b41 = b.self._03;
		var b42 = b.self._13;
		var b43 = b.self._23;
		var b44 = b.self._33;
		this.self._00 = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;
		this.self._10 = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;
		this.self._20 = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;
		this.self._30 = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;
		this.self._01 = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;
		this.self._11 = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;
		this.self._21 = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;
		this.self._31 = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;
		this.self._02 = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;
		this.self._12 = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;
		this.self._22 = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;
		this.self._32 = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;
		this.self._03 = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;
		this.self._13 = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;
		this.self._23 = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;
		this.self._33 = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;
		return this;
	}
	,getInverse: function(m) {
		var n11 = m.self._00;
		var n12 = m.self._10;
		var n13 = m.self._20;
		var n14 = m.self._30;
		var n21 = m.self._01;
		var n22 = m.self._11;
		var n23 = m.self._21;
		var n24 = m.self._31;
		var n31 = m.self._02;
		var n32 = m.self._12;
		var n33 = m.self._22;
		var n34 = m.self._32;
		var n41 = m.self._03;
		var n42 = m.self._13;
		var n43 = m.self._23;
		var n44 = m.self._33;
		this.self._00 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44;
		this.self._10 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44;
		this.self._20 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44;
		this.self._30 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;
		this.self._01 = n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44;
		this.self._11 = n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44;
		this.self._21 = n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44;
		this.self._31 = n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34;
		this.self._02 = n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44;
		this.self._12 = n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44;
		this.self._22 = n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44;
		this.self._32 = n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34;
		this.self._03 = n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43;
		this.self._13 = n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43;
		this.self._23 = n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43;
		this.self._33 = n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33;
		var det = n11 * this.self._00 + n21 * this.self._10 + n31 * this.self._20 + n41 * this.self._30;
		if(det == 0.0) {
			return this.setIdentity();
		}
		this.mult(1.0 / det);
		return this;
	}
	,transpose: function() {
		var tmp = this.self._01;
		this.self._01 = this.self._10;
		this.self._10 = tmp;
		tmp = this.self._02;
		this.self._02 = this.self._20;
		this.self._20 = tmp;
		tmp = this.self._03;
		this.self._03 = this.self._30;
		this.self._30 = tmp;
		tmp = this.self._12;
		this.self._12 = this.self._21;
		this.self._21 = tmp;
		tmp = this.self._13;
		this.self._13 = this.self._31;
		this.self._31 = tmp;
		tmp = this.self._23;
		this.self._23 = this.self._32;
		this.self._32 = tmp;
	}
	,transpose3x3: function() {
		var tmp = this.self._01;
		this.self._01 = this.self._10;
		this.self._10 = tmp;
		tmp = this.self._02;
		this.self._02 = this.self._20;
		this.self._20 = tmp;
		tmp = this.self._12;
		this.self._12 = this.self._21;
		this.self._21 = tmp;
	}
	,clone: function() {
		var m = iron_math_Mat4.identity();
		m.self._00 = this.self._00;
		m.self._01 = this.self._01;
		m.self._02 = this.self._02;
		m.self._03 = this.self._03;
		m.self._10 = this.self._10;
		m.self._11 = this.self._11;
		m.self._12 = this.self._12;
		m.self._13 = this.self._13;
		m.self._20 = this.self._20;
		m.self._21 = this.self._21;
		m.self._22 = this.self._22;
		m.self._23 = this.self._23;
		m.self._30 = this.self._30;
		m.self._31 = this.self._31;
		m.self._32 = this.self._32;
		m.self._33 = this.self._33;
		return m;
	}
	,init: function(_00,_10,_20,_30,_01,_11,_21,_31,_02,_12,_22,_32,_03,_13,_23,_33) {
		this.self._00 = _00;
		this.self._10 = _10;
		this.self._20 = _20;
		this.self._30 = _30;
		this.self._01 = _01;
		this.self._11 = _11;
		this.self._21 = _21;
		this.self._31 = _31;
		this.self._02 = _02;
		this.self._12 = _12;
		this.self._22 = _22;
		this.self._32 = _32;
		this.self._03 = _03;
		this.self._13 = _13;
		this.self._23 = _23;
		this.self._33 = _33;
	}
	,set: function(a,offset) {
		if(offset == null) {
			offset = 0;
		}
		this.self._00 = a[offset];
		this.self._10 = a[1 + offset];
		this.self._20 = a[2 + offset];
		this.self._30 = a[3 + offset];
		this.self._01 = a[4 + offset];
		this.self._11 = a[5 + offset];
		this.self._21 = a[6 + offset];
		this.self._31 = a[7 + offset];
		this.self._02 = a[8 + offset];
		this.self._12 = a[9 + offset];
		this.self._22 = a[10 + offset];
		this.self._32 = a[11 + offset];
		this.self._03 = a[12 + offset];
		this.self._13 = a[13 + offset];
		this.self._23 = a[14 + offset];
		this.self._33 = a[15 + offset];
	}
	,setFrom: function(m) {
		this.self._00 = m.self._00;
		this.self._01 = m.self._01;
		this.self._02 = m.self._02;
		this.self._03 = m.self._03;
		this.self._10 = m.self._10;
		this.self._11 = m.self._11;
		this.self._12 = m.self._12;
		this.self._13 = m.self._13;
		this.self._20 = m.self._20;
		this.self._21 = m.self._21;
		this.self._22 = m.self._22;
		this.self._23 = m.self._23;
		this.self._30 = m.self._30;
		this.self._31 = m.self._31;
		this.self._32 = m.self._32;
		this.self._33 = m.self._33;
	}
	,getLoc: function() {
		return new iron_math_Vec4(this.self._30,this.self._31,this.self._32,this.self._33);
	}
	,getScale: function() {
		return new iron_math_Vec4(Math.sqrt(this.self._00 * this.self._00 + this.self._10 * this.self._10 + this.self._20 * this.self._20),Math.sqrt(this.self._01 * this.self._01 + this.self._11 * this.self._11 + this.self._21 * this.self._21),Math.sqrt(this.self._02 * this.self._02 + this.self._12 * this.self._12 + this.self._22 * this.self._22));
	}
	,mult: function(s) {
		var _g = this;
		_g.self._00 *= s;
		var _g1 = this;
		_g1.self._10 *= s;
		var _g2 = this;
		_g2.self._20 *= s;
		var _g3 = this;
		_g3.self._30 *= s;
		var _g4 = this;
		_g4.self._01 *= s;
		var _g5 = this;
		_g5.self._11 *= s;
		var _g6 = this;
		_g6.self._21 *= s;
		var _g7 = this;
		_g7.self._31 *= s;
		var _g8 = this;
		_g8.self._02 *= s;
		var _g9 = this;
		_g9.self._12 *= s;
		var _g10 = this;
		_g10.self._22 *= s;
		var _g11 = this;
		_g11.self._32 *= s;
		var _g12 = this;
		_g12.self._03 *= s;
		var _g13 = this;
		_g13.self._13 *= s;
		var _g14 = this;
		_g14.self._23 *= s;
		var _g15 = this;
		_g15.self._33 *= s;
		return this;
	}
	,toRotation: function() {
		var v1 = new iron_math_Vec4();
		var _this = v1.set(this.self._00,this.self._01,this.self._02);
		var scaleX = 1.0 / Math.sqrt(_this.x * _this.x + _this.y * _this.y + _this.z * _this.z);
		var _this1 = v1.set(this.self._10,this.self._11,this.self._12);
		var scaleY = 1.0 / Math.sqrt(_this1.x * _this1.x + _this1.y * _this1.y + _this1.z * _this1.z);
		var _this2 = v1.set(this.self._20,this.self._21,this.self._22);
		var scaleZ = 1.0 / Math.sqrt(_this2.x * _this2.x + _this2.y * _this2.y + _this2.z * _this2.z);
		this.self._00 *= scaleX;
		this.self._01 *= scaleX;
		this.self._02 *= scaleX;
		this.self._03 = 0.0;
		this.self._10 *= scaleY;
		this.self._11 *= scaleY;
		this.self._12 *= scaleY;
		this.self._13 = 0.0;
		this.self._20 *= scaleZ;
		this.self._21 *= scaleZ;
		this.self._22 *= scaleZ;
		this.self._23 = 0.0;
		this.self._30 = 0.0;
		this.self._31 = 0.0;
		this.self._32 = 0.0;
		this.self._33 = 1.0;
		return this;
	}
	,getQuat: function() {
		var m = this.clone();
		m.toRotation();
		var q = new iron_math_Quat();
		var m11 = this.self._00;
		var m12 = this.self._10;
		var m13 = this.self._20;
		var m21 = this.self._01;
		var m22 = this.self._11;
		var m23 = this.self._21;
		var m31 = this.self._02;
		var m32 = this.self._12;
		var m33 = this.self._22;
		var ftrace = m11 + m22 + m33;
		var s = 0.0;
		if(ftrace > 0.0) {
			s = 0.5 / Math.sqrt(ftrace + 1.0);
			q.w = 0.25 / s;
			q.x = (m32 - m23) * s;
			q.y = (m13 - m31) * s;
			q.z = (m21 - m12) * s;
		} else if(m11 > m22 && m11 > m33) {
			s = 2.0 * Math.sqrt(1.0 + m11 - m22 - m33);
			q.w = (m32 - m23) / s;
			q.x = 0.25 * s;
			q.y = (m12 + m21) / s;
			q.z = (m13 + m31) / s;
		} else if(m22 > m33) {
			s = 2.0 * Math.sqrt(1.0 + m22 - m11 - m33);
			q.w = (m13 - m31) / s;
			q.x = (m12 + m21) / s;
			q.y = 0.25 * s;
			q.z = (m23 + m32) / s;
		} else {
			s = 2.0 * Math.sqrt(1.0 + m33 - m11 - m22);
			q.w = (m21 - m12) / s;
			q.x = (m13 + m31) / s;
			q.y = (m23 + m32) / s;
			q.z = 0.25 * s;
		}
		return q;
	}
	,setLookAt: function(eye,center,up) {
		var f0 = center.x - eye.x;
		var f1 = center.y - eye.y;
		var f2 = center.z - eye.z;
		var n = 1.0 / Math.sqrt(f0 * f0 + f1 * f1 + f2 * f2);
		f0 *= n;
		f1 *= n;
		f2 *= n;
		var s0 = f1 * up.z - f2 * up.y;
		var s1 = f2 * up.x - f0 * up.z;
		var s2 = f0 * up.y - f1 * up.x;
		n = 1.0 / Math.sqrt(s0 * s0 + s1 * s1 + s2 * s2);
		s0 *= n;
		s1 *= n;
		s2 *= n;
		var u0 = s1 * f2 - s2 * f1;
		var u1 = s2 * f0 - s0 * f2;
		var u2 = s0 * f1 - s1 * f0;
		var d0 = -eye.x * s0 - eye.y * s1 - eye.z * s2;
		var d1 = -eye.x * u0 - eye.y * u1 - eye.z * u2;
		var d2 = eye.x * f0 + eye.y * f1 + eye.z * f2;
		this.self._00 = s0;
		this.self._10 = s1;
		this.self._20 = s2;
		this.self._30 = d0;
		this.self._01 = u0;
		this.self._11 = u1;
		this.self._21 = u2;
		this.self._31 = d1;
		this.self._02 = -f0;
		this.self._12 = -f1;
		this.self._22 = -f2;
		this.self._32 = d2;
		this.self._03 = 0.0;
		this.self._13 = 0.0;
		this.self._23 = 0.0;
		this.self._33 = 1.0;
		return this;
	}
	,multvec: function(value) {
		var _this = this.self;
		var product = new kha_math_FastVector4();
		product.x = _this._00 * value.x + _this._10 * value.y + _this._20 * value.z + _this._30 * value.w;
		product.y = _this._01 * value.x + _this._11 * value.y + _this._21 * value.z + _this._31 * value.w;
		product.z = _this._02 * value.x + _this._12 * value.y + _this._22 * value.z + _this._32 * value.w;
		product.w = _this._03 * value.x + _this._13 * value.y + _this._23 * value.z + _this._33 * value.w;
		return product;
	}
	,right: function() {
		return new iron_math_Vec4(this.self._00,this.self._01,this.self._02);
	}
	,up: function() {
		return new iron_math_Vec4(this.self._20,this.self._21,this.self._22);
	}
	,look: function() {
		return new iron_math_Vec4(this.self._10,this.self._11,this.self._12);
	}
	,get__00: function() {
		return this.self._00;
	}
	,set__00: function(f) {
		return this.self._00 = f;
	}
	,get__01: function() {
		return this.self._01;
	}
	,set__01: function(f) {
		return this.self._01 = f;
	}
	,get__02: function() {
		return this.self._02;
	}
	,set__02: function(f) {
		return this.self._02 = f;
	}
	,get__03: function() {
		return this.self._03;
	}
	,set__03: function(f) {
		return this.self._03 = f;
	}
	,get__10: function() {
		return this.self._10;
	}
	,set__10: function(f) {
		return this.self._10 = f;
	}
	,get__11: function() {
		return this.self._11;
	}
	,set__11: function(f) {
		return this.self._11 = f;
	}
	,get__12: function() {
		return this.self._12;
	}
	,set__12: function(f) {
		return this.self._12 = f;
	}
	,get__13: function() {
		return this.self._13;
	}
	,set__13: function(f) {
		return this.self._13 = f;
	}
	,get__20: function() {
		return this.self._20;
	}
	,set__20: function(f) {
		return this.self._20 = f;
	}
	,get__21: function() {
		return this.self._21;
	}
	,set__21: function(f) {
		return this.self._21 = f;
	}
	,get__22: function() {
		return this.self._22;
	}
	,set__22: function(f) {
		return this.self._22 = f;
	}
	,get__23: function() {
		return this.self._23;
	}
	,set__23: function(f) {
		return this.self._23 = f;
	}
	,get__30: function() {
		return this.self._30;
	}
	,set__30: function(f) {
		return this.self._30 = f;
	}
	,get__31: function() {
		return this.self._31;
	}
	,set__31: function(f) {
		return this.self._31 = f;
	}
	,get__32: function() {
		return this.self._32;
	}
	,set__32: function(f) {
		return this.self._32 = f;
	}
	,get__33: function() {
		return this.self._33;
	}
	,set__33: function(f) {
		return this.self._33 = f;
	}
	,toString: function() {
		return "[[" + this.self._00 + ", " + this.self._10 + ", " + this.self._20 + ", " + this.self._30 + "], [" + this.self._01 + ", " + this.self._11 + ", " + this.self._21 + ", " + this.self._31 + "], [" + this.self._02 + ", " + this.self._12 + ", " + this.self._22 + ", " + this.self._32 + "], [" + this.self._03 + ", " + this.self._13 + ", " + this.self._23 + ", " + this.self._33 + "]]";
	}
	,__class__: iron_math_Mat4
	,__properties__: {set__33:"set__33",get__33:"get__33",set__32:"set__32",get__32:"get__32",set__31:"set__31",get__31:"get__31",set__30:"set__30",get__30:"get__30",set__23:"set__23",get__23:"get__23",set__22:"set__22",get__22:"get__22",set__21:"set__21",get__21:"get__21",set__20:"set__20",get__20:"get__20",set__13:"set__13",get__13:"get__13",set__12:"set__12",get__12:"get__12",set__11:"set__11",get__11:"get__11",set__10:"set__10",get__10:"get__10",set__03:"set__03",get__03:"get__03",set__02:"set__02",get__02:"get__02",set__01:"set__01",get__01:"get__01",set__00:"set__00",get__00:"get__00"}
};
var iron_math_Quat = function(x,y,z,w) {
	if(w == null) {
		w = 1.0;
	}
	if(z == null) {
		z = 0.0;
	}
	if(y == null) {
		y = 0.0;
	}
	if(x == null) {
		x = 0.0;
	}
	this.x = x;
	this.y = y;
	this.z = z;
	this.w = w;
};
$hxClasses["iron.math.Quat"] = iron_math_Quat;
iron_math_Quat.__name__ = ["iron","math","Quat"];
iron_math_Quat.lerp = function(q1,q2,ratio) {
	var c = new iron_math_Quat();
	var ca = new iron_math_Quat();
	ca.setFrom(q1);
	var dot = q1.dot(q2);
	if(dot < 0.0) {
		ca.w = -ca.w;
		ca.x = -ca.x;
		ca.y = -ca.y;
		ca.z = -ca.z;
	}
	c.x = ca.x + (q2.x - ca.x) * ratio;
	c.y = ca.y + (q2.y - ca.y) * ratio;
	c.z = ca.z + (q2.z - ca.z) * ratio;
	c.w = ca.w + (q2.w - ca.w) * ratio;
	c.normalize();
	return c;
};
iron_math_Quat.prototype = {
	set: function(x,y,z,w) {
		this.x = x;
		this.y = y;
		this.z = z;
		this.w = w;
	}
	,fromAxisAngle: function(axis,angle) {
		var s = Math.sin(angle * 0.5);
		this.x = axis.x * s;
		this.y = axis.y * s;
		this.z = axis.z * s;
		this.w = Math.cos(angle * 0.5);
	}
	,toAxisAngle: function(axis) {
		this.normalize();
		var angle = 2 * Math.acos(this.w);
		var s = Math.sqrt(1 - this.w * this.w);
		if(s < 0.001) {
			axis.x = this.x;
			axis.y = this.y;
			axis.z = this.z;
		} else {
			axis.x = this.x / s;
			axis.y = this.y / s;
			axis.z = this.z / s;
		}
		return angle;
	}
	,fromRotationMat: function(m) {
		var m11 = m.self._00;
		var m12 = m.self._10;
		var m13 = m.self._20;
		var m21 = m.self._01;
		var m22 = m.self._11;
		var m23 = m.self._21;
		var m31 = m.self._02;
		var m32 = m.self._12;
		var m33 = m.self._22;
		var tr = m11 + m22 + m33;
		var s = 0.0;
		if(tr > 0) {
			s = 0.5 / Math.sqrt(tr + 1.0);
			this.w = 0.25 / s;
			this.x = (m32 - m23) * s;
			this.y = (m13 - m31) * s;
			this.z = (m21 - m12) * s;
		} else if(m11 > m22 && m11 > m33) {
			s = 2.0 * Math.sqrt(1.0 + m11 - m22 - m33);
			this.w = (m32 - m23) / s;
			this.x = 0.25 * s;
			this.y = (m12 + m21) / s;
			this.z = (m13 + m31) / s;
		} else if(m22 > m33) {
			s = 2.0 * Math.sqrt(1.0 + m22 - m11 - m33);
			this.w = (m13 - m31) / s;
			this.x = (m12 + m21) / s;
			this.y = 0.25 * s;
			this.z = (m23 + m32) / s;
		} else {
			s = 2.0 * Math.sqrt(1.0 + m33 - m11 - m22);
			this.w = (m21 - m12) / s;
			this.x = (m13 + m31) / s;
			this.y = (m23 + m32) / s;
			this.z = 0.25 * s;
		}
		return this;
	}
	,mult: function(q) {
		this.multquats(this,q);
	}
	,multquats: function(q1,q2) {
		var x2 = q1.x * q2.w + q1.w * q2.x + q1.y * q2.z - q1.z * q2.y;
		var y2 = q1.w * q2.y - q1.x * q2.z + q1.y * q2.w + q1.z * q2.x;
		var z2 = q1.w * q2.z + q1.x * q2.y - q1.y * q2.x + q1.z * q2.w;
		var w2 = q1.w * q2.w - q1.x * q2.x - q1.y * q2.y - q1.z * q2.z;
		this.x = x2;
		this.y = y2;
		this.z = z2;
		this.w = w2;
	}
	,normalize: function() {
		var l = Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);
		if(l == 0.0) {
			this.x = 0;
			this.y = 0;
			this.z = 0;
			this.w = 0;
		} else {
			l = 1.0 / l;
			this.x *= l;
			this.y *= l;
			this.z *= l;
			this.w *= l;
		}
	}
	,setFrom: function(q) {
		this.x = q.x;
		this.y = q.y;
		this.z = q.z;
		this.w = q.w;
	}
	,getEuler: function() {
		var roll = NaN;
		var yaw = 0.0;
		var pitch = 0.0;
		var test = this.x * this.y + this.z * this.w;
		if(test > 0.499) {
			roll = 2 * Math.atan2(this.x,this.w);
			yaw = Math.PI / 2;
			pitch = 0;
		}
		if(test < -0.499) {
			roll = -2 * Math.atan2(this.x,this.w);
			yaw = -Math.PI / 2;
			pitch = 0;
		}
		if(isNaN(roll)) {
			var sqx = this.x * this.x;
			var sqy = this.y * this.y;
			var sqz = this.z * this.z;
			roll = Math.atan2(2 * this.y * this.w - 2 * this.x * this.z,1.0 - 2 * sqy - 2 * sqz);
			yaw = Math.asin(2 * test);
			pitch = Math.atan2(2 * this.x * this.w - 2 * this.y * this.z,1.0 - 2 * sqx - 2 * sqz);
		}
		return new iron_math_Vec4(pitch,roll,yaw);
	}
	,fromEuler: function(x,y,z) {
		var c1 = Math.cos(x / 2);
		var c2 = Math.cos(y / 2);
		var c3 = Math.cos(z / 2);
		var s1 = Math.sin(x / 2);
		var s2 = Math.sin(y / 2);
		var s3 = Math.sin(z / 2);
		this.x = s1 * c2 * c3 + c1 * s2 * s3;
		this.y = c1 * s2 * c3 + s1 * c2 * s3;
		this.z = c1 * c2 * s3 - s1 * s2 * c3;
		this.w = c1 * c2 * c3 - s1 * s2 * s3;
		return this;
	}
	,toMat: function(m) {
		var x2 = this.x + this.x;
		var y2 = this.y + this.y;
		var z2 = this.z + this.z;
		var xx = this.x * x2;
		var xy = this.x * y2;
		var xz = this.x * z2;
		var yy = this.y * y2;
		var yz = this.y * z2;
		var zz = this.z * z2;
		var wx = this.w * x2;
		var wy = this.w * y2;
		var wz = this.w * z2;
		m.self._00 = 1 - (yy + zz);
		m.self._10 = xy - wz;
		m.self._20 = xz + wy;
		m.self._01 = xy + wz;
		m.self._11 = 1 - (xx + zz);
		m.self._21 = yz - wx;
		m.self._02 = xz - wy;
		m.self._12 = yz + wx;
		m.self._22 = 1 - (xx + yy);
		m.self._03 = 0;
		m.self._13 = 0;
		m.self._23 = 0;
		m.self._30 = 0;
		m.self._31 = 0;
		m.self._32 = 0;
		m.self._33 = 1;
		return m;
	}
	,dot: function(q) {
		return this.x * q.x + this.y * q.y + this.z * q.z + this.w * q.w;
	}
	,toString: function() {
		return this.x + ", " + this.y + ", " + this.z + ", " + this.w;
	}
	,__class__: iron_math_Quat
};
var armory_trait_internal_JSScriptAPIMath = $hx_exports["armory"]["math"] = function() { };
$hxClasses["armory.trait.internal.JSScriptAPIMath"] = armory_trait_internal_JSScriptAPIMath;
armory_trait_internal_JSScriptAPIMath.__name__ = ["armory","trait","internal","JSScriptAPIMath"];
var armory_trait_internal_LoadBar = function() { };
$hxClasses["armory.trait.internal.LoadBar"] = armory_trait_internal_LoadBar;
armory_trait_internal_LoadBar.__name__ = ["armory","trait","internal","LoadBar"];
armory_trait_internal_LoadBar.render = function(g) {
	if(iron_Scene.active != null && iron_Scene.active.ready) {
		iron_App.removeRender2D(armory_trait_internal_LoadBar.render);
		return;
	}
	g.set_color(-3200189);
	g.fillRect(0,kha_System.windowHeight() - 4,kha_System.windowWidth() / 13 * iron_data_Data.assetsLoaded,4);
};
var armory_trait_internal_MovieTexture = function(videoName) {
	iron_Trait.call(this);
	this.videoName = videoName;
	if(!armory_trait_internal_MovieTexture.created) {
		armory_trait_internal_MovieTexture.created = true;
		this.notifyOnInit($bind(this,this.init));
		this.notifyOnRender2D($bind(this,this.render));
	}
};
$hxClasses["armory.trait.internal.MovieTexture"] = armory_trait_internal_MovieTexture;
armory_trait_internal_MovieTexture.__name__ = ["armory","trait","internal","MovieTexture"];
armory_trait_internal_MovieTexture.__super__ = iron_Trait;
armory_trait_internal_MovieTexture.prototype = $extend(iron_Trait.prototype,{
	pow: function(pow) {
		var ret = 1;
		var _g1 = 0;
		var _g = pow;
		while(_g1 < _g) {
			var i = _g1++;
			ret *= 2;
		}
		return ret;
	}
	,getPower2: function(i) {
		var power = 0;
		while(true) {
			var res = this.pow(power);
			if(res >= i) {
				return res;
			}
			++power;
		}
	}
	,init: function() {
		var _gthis = this;
		iron_data_Data.getVideo(this.videoName,function(vid) {
			_gthis.video = vid;
			_gthis.video.play(true);
			var tmp = _gthis.video.width();
			var tmp1 = _gthis.getPower2(tmp);
			var tmp2 = _gthis.video.height();
			armory_trait_internal_MovieTexture.image = kha_Image.createRenderTarget(tmp1,_gthis.getPower2(tmp2));
			var o = js_Boot.__cast(_gthis.object , iron_object_MeshObject);
			o.materials[0].contexts[0].textures[0] = armory_trait_internal_MovieTexture.image;
		});
	}
	,render: function(g) {
		if(this.video == null) {
			return;
		}
		g.end();
		var g2 = armory_trait_internal_MovieTexture.image.get_g2();
		g2.begin(true,-16777216);
		g2.set_color(-1);
		g2.drawVideo(this.video,0,0,1024,512);
		g2.end();
		g.begin(false);
	}
	,__class__: armory_trait_internal_MovieTexture
});
var armory_trait_internal_Navigation = function() {
	iron_Trait.call(this);
};
$hxClasses["armory.trait.internal.Navigation"] = armory_trait_internal_Navigation;
armory_trait_internal_Navigation.__name__ = ["armory","trait","internal","Navigation"];
armory_trait_internal_Navigation.__super__ = iron_Trait;
armory_trait_internal_Navigation.prototype = $extend(iron_Trait.prototype,{
	__class__: armory_trait_internal_Navigation
});
var armory_trait_internal_PathTracer = function() {
	iron_Trait.call(this);
	this.notifyOnInit($bind(this,this.init));
};
$hxClasses["armory.trait.internal.PathTracer"] = armory_trait_internal_PathTracer;
armory_trait_internal_PathTracer.__name__ = ["armory","trait","internal","PathTracer"];
armory_trait_internal_PathTracer.__super__ = iron_Trait;
armory_trait_internal_PathTracer.prototype = $extend(iron_Trait.prototype,{
	getColorFromNode: function(object) {
		var _g = 0;
		var _g1 = object.materials[0].contexts[0].raw.bind_constants;
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			if(c.name == "baseCol") {
				return c.vec4;
			}
		}
		return null;
	}
	,init: function() {
		var _gthis = this;
		iron_data_Data.getMaterial("pt_material","",function(b) {
			_gthis.context = b.getContext("pt_trace_pass");
			_gthis.context.raw.bind_constants.push({ name : "glossiness", 'float' : 0.6});
			_gthis.context.raw.bind_constants.push({ name : "ray00", vec3 : [0.0,0.0,0.0]});
			_gthis.ray00Location = _gthis.context.raw.bind_constants.length - 1;
			_gthis.context.raw.bind_constants.push({ name : "ray01", vec3 : [0.0,0.0,0.0]});
			_gthis.ray01Location = _gthis.context.raw.bind_constants.length - 1;
			_gthis.context.raw.bind_constants.push({ name : "ray10", vec3 : [0.0,0.0,0.0]});
			_gthis.ray10Location = _gthis.context.raw.bind_constants.length - 1;
			_gthis.context.raw.bind_constants.push({ name : "ray11", vec3 : [0.0,0.0,0.0]});
			_gthis.ray11Location = _gthis.context.raw.bind_constants.length - 1;
			_gthis.objectLocations = [];
			_gthis.transformMap = new haxe_ds_IntMap();
			var sphereNum = 0;
			var cubeNum = 0;
			var _g = 0;
			var _g1 = iron_Scene.active.meshes;
			while(_g < _g1.length) {
				var n = _g1[_g];
				++_g;
				if(n.name.split(".")[0] == "Sphere") {
					_gthis.context.raw.bind_constants.push({ name : "sphereCenter" + sphereNum, vec3 : [0.0,0.0,0.0]});
					var loc = _gthis.context.raw.bind_constants.length - 1;
					_gthis.objectLocations.push(loc);
					_gthis.transformMap.h[loc] = n.transform;
					_gthis.context.raw.bind_constants.push({ name : "sphereRadius" + sphereNum, 'float' : n.transform.size.x / 2 - 0.02});
					var col = _gthis.getColorFromNode(n);
					_gthis.context.raw.bind_constants.push({ name : "sphereColor" + sphereNum, vec3 : [col[0],col[1],col[2]]});
					++sphereNum;
				} else if(n.name.split(".")[0] == "Cube") {
					_gthis.context.raw.bind_constants.push({ name : "cubeCenter" + cubeNum, vec3 : [0.0,0.0,0.0]});
					var loc1 = _gthis.context.raw.bind_constants.length - 1;
					_gthis.objectLocations.push(loc1);
					_gthis.transformMap.h[loc1] = n.transform;
					_gthis.context.raw.bind_constants.push({ name : "cubeSize" + cubeNum, vec3 : [n.transform.size.x / 2,n.transform.size.y / 2,n.transform.size.z / 2]});
					var col1 = _gthis.getColorFromNode(n);
					_gthis.context.raw.bind_constants.push({ name : "cubeColor" + cubeNum, vec3 : [col1[0],col1[1],col1[2]]});
					++cubeNum;
				}
			}
			_gthis.notifyOnUpdate($bind(_gthis,_gthis.update));
		});
	}
	,update: function() {
		var camera = iron_Scene.active.camera;
		var eye = camera.transform.loc;
		var mvp = iron_math_Mat4.identity();
		mvp.multmat2(camera.V);
		mvp.multmat2(camera.P);
		var inverse = iron_math_Mat4.identity();
		var matrix = inverse;
		var v = this.getEyeRay(matrix,-1,-1,eye);
		this.context.raw.bind_constants[this.ray00Location].vec3 = [v.x,v.y,v.z];
		var v1 = this.getEyeRay(matrix,-1,1,eye);
		this.context.raw.bind_constants[this.ray01Location].vec3 = [v1.x,v1.y,v1.z];
		var v2 = this.getEyeRay(matrix,1,-1,eye);
		this.context.raw.bind_constants[this.ray10Location].vec3 = [v2.x,v2.y,v2.z];
		var v3 = this.getEyeRay(matrix,1,1,eye);
		this.context.raw.bind_constants[this.ray11Location].vec3 = [v3.x,v3.y,v3.z];
		var _g = 0;
		var _g1 = this.objectLocations;
		while(_g < _g1.length) {
			var loc = _g1[_g];
			++_g;
			var t = this.transformMap.h[loc];
			t.buildMatrix();
			var c = this.context.raw.bind_constants[loc];
			c.vec3[0] = t.matrix.self._30;
			c.vec3[1] = t.matrix.self._31;
			c.vec3[2] = t.matrix.self._32;
		}
	}
	,getEyeRay: function(matrix,x,y,eye) {
		var v = new iron_math_Vec4();
		var vv = new kha_math_FastVector4(x,y,0,1);
		var _this = matrix.self;
		var product = new kha_math_FastVector4();
		product.x = _this._00 * vv.x + _this._10 * vv.y + _this._20 * vv.z + _this._30 * vv.w;
		product.y = _this._01 * vv.x + _this._11 * vv.y + _this._21 * vv.z + _this._31 * vv.w;
		product.z = _this._02 * vv.x + _this._12 * vv.y + _this._22 * vv.z + _this._32 * vv.w;
		product.w = _this._03 * vv.x + _this._13 * vv.y + _this._23 * vv.z + _this._33 * vv.w;
		vv = product;
		v.x = vv.x;
		v.y = vv.y;
		v.z = vv.z;
		v.w = vv.w;
		v.x /= v.w;
		v.y /= v.w;
		v.z /= v.w;
		v.w /= v.w;
		v.sub(eye);
		return v;
	}
	,__class__: armory_trait_internal_PathTracer
});
var armory_trait_internal_PhysicsHook = function() {
	iron_Trait.call(this);
};
$hxClasses["armory.trait.internal.PhysicsHook"] = armory_trait_internal_PhysicsHook;
armory_trait_internal_PhysicsHook.__name__ = ["armory","trait","internal","PhysicsHook"];
armory_trait_internal_PhysicsHook.__super__ = iron_Trait;
armory_trait_internal_PhysicsHook.prototype = $extend(iron_Trait.prototype,{
	__class__: armory_trait_internal_PhysicsHook
});
var armory_trait_internal_ContactPair = function(a,b) {
	this.a = a;
	this.b = b;
};
$hxClasses["armory.trait.internal.ContactPair"] = armory_trait_internal_ContactPair;
armory_trait_internal_ContactPair.__name__ = ["armory","trait","internal","ContactPair"];
armory_trait_internal_ContactPair.prototype = {
	__class__: armory_trait_internal_ContactPair
};
var armory_trait_internal_PhysicsWorld = function() {
	iron_Trait.call(this);
};
$hxClasses["armory.trait.internal.PhysicsWorld"] = armory_trait_internal_PhysicsWorld;
armory_trait_internal_PhysicsWorld.__name__ = ["armory","trait","internal","PhysicsWorld"];
armory_trait_internal_PhysicsWorld.__super__ = iron_Trait;
armory_trait_internal_PhysicsWorld.prototype = $extend(iron_Trait.prototype,{
	__class__: armory_trait_internal_PhysicsWorld
});
var armory_trait_internal_RigidBody = function() {
	iron_Trait.call(this);
};
$hxClasses["armory.trait.internal.RigidBody"] = armory_trait_internal_RigidBody;
armory_trait_internal_RigidBody.__name__ = ["armory","trait","internal","RigidBody"];
armory_trait_internal_RigidBody.__super__ = iron_Trait;
armory_trait_internal_RigidBody.prototype = $extend(iron_Trait.prototype,{
	__class__: armory_trait_internal_RigidBody
});
var armory_trait_internal_SoftBody = function() {
	iron_Trait.call(this);
};
$hxClasses["armory.trait.internal.SoftBody"] = armory_trait_internal_SoftBody;
armory_trait_internal_SoftBody.__name__ = ["armory","trait","internal","SoftBody"];
armory_trait_internal_SoftBody.__super__ = iron_Trait;
armory_trait_internal_SoftBody.prototype = $extend(iron_Trait.prototype,{
	__class__: armory_trait_internal_SoftBody
});
var armory_trait_internal_SpaceArmory = function() {
	this.moveZ = false;
	this.moveY = false;
	this.moveX = false;
	this.selected = null;
	iron_Trait.call(this);
	this.notifyOnInit($bind(this,this.init));
};
$hxClasses["armory.trait.internal.SpaceArmory"] = armory_trait_internal_SpaceArmory;
armory_trait_internal_SpaceArmory.__name__ = ["armory","trait","internal","SpaceArmory"];
armory_trait_internal_SpaceArmory.__super__ = iron_Trait;
armory_trait_internal_SpaceArmory.prototype = $extend(iron_Trait.prototype,{
	init: function() {
		this.notifyOnUpdate($bind(this,this.update));
		if(armory_trait_internal_SpaceArmory.first) {
			armory_trait_internal_SpaceArmory.first = false;
		}
	}
	,update: function() {
		var keyboard = iron_system_Input.getKeyboard();
		if(keyboard.started("esc")) {
			haxe_Log.trace("__arm|quit",{ fileName : "SpaceArmory.hx", lineNumber : 55, className : "armory.trait.internal.SpaceArmory", methodName : "update"});
		}
		var mouse = iron_system_Input.getMouse();
		if(mouse.started("right")) {
			var transforms = [];
			var _g = 0;
			var _g1 = iron_Scene.active.meshes;
			while(_g < _g1.length) {
				var o = _g1[_g];
				++_g;
				transforms.push(o.transform);
			}
			var hit = iron_math_RayCaster.getClosestBoxIntersect(transforms,mouse.x,mouse.y,iron_Scene.active.camera);
			if(hit != null) {
				var loc = hit.loc;
				this.selected = hit;
				haxe_Log.trace("__arm|select|" + this.selected.object.name,{ fileName : "SpaceArmory.hx", lineNumber : 67, className : "armory.trait.internal.SpaceArmory", methodName : "update"});
			}
		}
	}
	,__class__: armory_trait_internal_SpaceArmory
});
var haxe_IMap = function() { };
$hxClasses["haxe.IMap"] = haxe_IMap;
haxe_IMap.__name__ = ["haxe","IMap"];
haxe_IMap.prototype = {
	__class__: haxe_IMap
};
var haxe__$Int64__$_$_$Int64 = function(high,low) {
	this.high = high;
	this.low = low;
};
$hxClasses["haxe._Int64.___Int64"] = haxe__$Int64__$_$_$Int64;
haxe__$Int64__$_$_$Int64.__name__ = ["haxe","_Int64","___Int64"];
haxe__$Int64__$_$_$Int64.prototype = {
	__class__: haxe__$Int64__$_$_$Int64
};
var haxe_Log = function() { };
$hxClasses["haxe.Log"] = haxe_Log;
haxe_Log.__name__ = ["haxe","Log"];
haxe_Log.trace = function(v,infos) {
	js_Boot.__trace(v,infos);
};
var haxe__$Unserializer_DefaultResolver = function() {
};
$hxClasses["haxe._Unserializer.DefaultResolver"] = haxe__$Unserializer_DefaultResolver;
haxe__$Unserializer_DefaultResolver.__name__ = ["haxe","_Unserializer","DefaultResolver"];
haxe__$Unserializer_DefaultResolver.prototype = {
	resolveClass: function(name) {
		return Type.resolveClass(name);
	}
	,resolveEnum: function(name) {
		return Type.resolveEnum(name);
	}
	,__class__: haxe__$Unserializer_DefaultResolver
};
var haxe_Unserializer = function(buf) {
	this.buf = buf;
	this.length = buf.length;
	this.pos = 0;
	this.scache = [];
	this.cache = [];
	var r = haxe_Unserializer.DEFAULT_RESOLVER;
	if(r == null) {
		r = new haxe__$Unserializer_DefaultResolver();
		haxe_Unserializer.DEFAULT_RESOLVER = r;
	}
	this.resolver = r;
};
$hxClasses["haxe.Unserializer"] = haxe_Unserializer;
haxe_Unserializer.__name__ = ["haxe","Unserializer"];
haxe_Unserializer.initCodes = function() {
	var codes = [];
	var _g1 = 0;
	var _g = haxe_Unserializer.BASE64.length;
	while(_g1 < _g) {
		var i = _g1++;
		codes[haxe_Unserializer.BASE64.charCodeAt(i)] = i;
	}
	return codes;
};
haxe_Unserializer.run = function(v) {
	return new haxe_Unserializer(v).unserialize();
};
haxe_Unserializer.prototype = {
	readDigits: function() {
		var k = 0;
		var s = false;
		var fpos = this.pos;
		while(true) {
			var c = this.buf.charCodeAt(this.pos);
			if(c != c) {
				break;
			}
			if(c == 45) {
				if(this.pos != fpos) {
					break;
				}
				s = true;
				this.pos++;
				continue;
			}
			if(c < 48 || c > 57) {
				break;
			}
			k = k * 10 + (c - 48);
			this.pos++;
		}
		if(s) {
			k *= -1;
		}
		return k;
	}
	,readFloat: function() {
		var p1 = this.pos;
		while(true) {
			var c = this.buf.charCodeAt(this.pos);
			if(c != c) {
				break;
			}
			if(c >= 43 && c < 58 || c == 101 || c == 69) {
				this.pos++;
			} else {
				break;
			}
		}
		return parseFloat(HxOverrides.substr(this.buf,p1,this.pos - p1));
	}
	,unserializeObject: function(o) {
		while(true) {
			if(this.pos >= this.length) {
				throw new js__$Boot_HaxeError("Invalid object");
			}
			if(this.buf.charCodeAt(this.pos) == 103) {
				break;
			}
			var k = this.unserialize();
			if(typeof(k) != "string") {
				throw new js__$Boot_HaxeError("Invalid object key");
			}
			var v = this.unserialize();
			o[k] = v;
		}
		this.pos++;
	}
	,unserializeEnum: function(edecl,tag) {
		if(this.buf.charCodeAt(this.pos++) != 58) {
			throw new js__$Boot_HaxeError("Invalid enum format");
		}
		var nargs = this.readDigits();
		if(nargs == 0) {
			return Type.createEnum(edecl,tag);
		}
		var args = [];
		while(nargs-- > 0) args.push(this.unserialize());
		return Type.createEnum(edecl,tag,args);
	}
	,unserialize: function() {
		var _g = this.buf.charCodeAt(this.pos++);
		switch(_g) {
		case 65:
			var name = this.unserialize();
			var cl = this.resolver.resolveClass(name);
			if(cl == null) {
				throw new js__$Boot_HaxeError("Class not found " + name);
			}
			return cl;
		case 66:
			var name1 = this.unserialize();
			var e = this.resolver.resolveEnum(name1);
			if(e == null) {
				throw new js__$Boot_HaxeError("Enum not found " + name1);
			}
			return e;
		case 67:
			var name2 = this.unserialize();
			var cl1 = this.resolver.resolveClass(name2);
			if(cl1 == null) {
				throw new js__$Boot_HaxeError("Class not found " + name2);
			}
			var o = Type.createEmptyInstance(cl1);
			this.cache.push(o);
			o.hxUnserialize(this);
			if(this.buf.charCodeAt(this.pos++) != 103) {
				throw new js__$Boot_HaxeError("Invalid custom data");
			}
			return o;
		case 77:
			var h = new haxe_ds_ObjectMap();
			this.cache.push(h);
			var buf = this.buf;
			while(this.buf.charCodeAt(this.pos) != 104) {
				var s = this.unserialize();
				h.set(s,this.unserialize());
			}
			this.pos++;
			return h;
		case 82:
			var n = this.readDigits();
			if(n < 0 || n >= this.scache.length) {
				throw new js__$Boot_HaxeError("Invalid string reference");
			}
			return this.scache[n];
		case 97:
			var buf1 = this.buf;
			var a = [];
			this.cache.push(a);
			while(true) {
				var c = this.buf.charCodeAt(this.pos);
				if(c == 104) {
					this.pos++;
					break;
				}
				if(c == 117) {
					this.pos++;
					var n1 = this.readDigits();
					a[a.length + n1 - 1] = null;
				} else {
					a.push(this.unserialize());
				}
			}
			return a;
		case 98:
			var h1 = new haxe_ds_StringMap();
			this.cache.push(h1);
			var buf2 = this.buf;
			while(this.buf.charCodeAt(this.pos) != 104) {
				var s1 = this.unserialize();
				var value = this.unserialize();
				if(__map_reserved[s1] != null) {
					h1.setReserved(s1,value);
				} else {
					h1.h[s1] = value;
				}
			}
			this.pos++;
			return h1;
		case 99:
			var name3 = this.unserialize();
			var cl2 = this.resolver.resolveClass(name3);
			if(cl2 == null) {
				throw new js__$Boot_HaxeError("Class not found " + name3);
			}
			var o1 = Type.createEmptyInstance(cl2);
			this.cache.push(o1);
			this.unserializeObject(o1);
			return o1;
		case 100:
			return this.readFloat();
		case 102:
			return false;
		case 105:
			return this.readDigits();
		case 106:
			var name4 = this.unserialize();
			var edecl = this.resolver.resolveEnum(name4);
			if(edecl == null) {
				throw new js__$Boot_HaxeError("Enum not found " + name4);
			}
			this.pos++;
			var index = this.readDigits();
			var tag = edecl.__constructs__.slice()[index];
			if(tag == null) {
				throw new js__$Boot_HaxeError("Unknown enum index " + name4 + "@" + index);
			}
			var e1 = this.unserializeEnum(edecl,tag);
			this.cache.push(e1);
			return e1;
		case 107:
			return NaN;
		case 108:
			var l = new List();
			this.cache.push(l);
			var buf3 = this.buf;
			while(this.buf.charCodeAt(this.pos) != 104) l.add(this.unserialize());
			this.pos++;
			return l;
		case 109:
			return -Infinity;
		case 110:
			return null;
		case 111:
			var o2 = { };
			this.cache.push(o2);
			this.unserializeObject(o2);
			return o2;
		case 112:
			return Infinity;
		case 113:
			var h2 = new haxe_ds_IntMap();
			this.cache.push(h2);
			var buf4 = this.buf;
			var c1 = this.buf.charCodeAt(this.pos++);
			while(c1 == 58) {
				var i = this.readDigits();
				var value1 = this.unserialize();
				h2.h[i] = value1;
				c1 = this.buf.charCodeAt(this.pos++);
			}
			if(c1 != 104) {
				throw new js__$Boot_HaxeError("Invalid IntMap format");
			}
			return h2;
		case 114:
			var n2 = this.readDigits();
			if(n2 < 0 || n2 >= this.cache.length) {
				throw new js__$Boot_HaxeError("Invalid reference");
			}
			return this.cache[n2];
		case 115:
			var len = this.readDigits();
			var buf5 = this.buf;
			if(this.buf.charCodeAt(this.pos++) != 58 || this.length - this.pos < len) {
				throw new js__$Boot_HaxeError("Invalid bytes length");
			}
			var codes = haxe_Unserializer.CODES;
			if(codes == null) {
				codes = haxe_Unserializer.initCodes();
				haxe_Unserializer.CODES = codes;
			}
			var i1 = this.pos;
			var rest = len & 3;
			var size = (len >> 2) * 3 + (rest >= 2 ? rest - 1 : 0);
			var max = i1 + (len - rest);
			var bytes = new haxe_io_Bytes(new ArrayBuffer(size));
			var bpos = 0;
			while(i1 < max) {
				var c11 = codes[buf5.charCodeAt(i1++)];
				var c2 = codes[buf5.charCodeAt(i1++)];
				bytes.b[bpos++] = (c11 << 2 | c2 >> 4) & 255;
				var c3 = codes[buf5.charCodeAt(i1++)];
				bytes.b[bpos++] = (c2 << 4 | c3 >> 2) & 255;
				var c4 = codes[buf5.charCodeAt(i1++)];
				bytes.b[bpos++] = (c3 << 6 | c4) & 255;
			}
			if(rest >= 2) {
				var c12 = codes[buf5.charCodeAt(i1++)];
				var c21 = codes[buf5.charCodeAt(i1++)];
				bytes.b[bpos++] = (c12 << 2 | c21 >> 4) & 255;
				if(rest == 3) {
					var c31 = codes[buf5.charCodeAt(i1++)];
					bytes.b[bpos++] = (c21 << 4 | c31 >> 2) & 255;
				}
			}
			this.pos += len;
			this.cache.push(bytes);
			return bytes;
		case 116:
			return true;
		case 118:
			var d;
			if(this.buf.charCodeAt(this.pos) >= 48 && this.buf.charCodeAt(this.pos) <= 57 && this.buf.charCodeAt(this.pos + 1) >= 48 && this.buf.charCodeAt(this.pos + 1) <= 57 && this.buf.charCodeAt(this.pos + 2) >= 48 && this.buf.charCodeAt(this.pos + 2) <= 57 && this.buf.charCodeAt(this.pos + 3) >= 48 && this.buf.charCodeAt(this.pos + 3) <= 57 && this.buf.charCodeAt(this.pos + 4) == 45) {
				d = HxOverrides.strDate(HxOverrides.substr(this.buf,this.pos,19));
				this.pos += 19;
			} else {
				var t = this.readFloat();
				d = new Date(t);
			}
			this.cache.push(d);
			return d;
		case 119:
			var name5 = this.unserialize();
			var edecl1 = this.resolver.resolveEnum(name5);
			if(edecl1 == null) {
				throw new js__$Boot_HaxeError("Enum not found " + name5);
			}
			var e2 = this.unserializeEnum(edecl1,this.unserialize());
			this.cache.push(e2);
			return e2;
		case 120:
			throw js__$Boot_HaxeError.wrap(this.unserialize());
			break;
		case 121:
			var len1 = this.readDigits();
			if(this.buf.charCodeAt(this.pos++) != 58 || this.length - this.pos < len1) {
				throw new js__$Boot_HaxeError("Invalid string length");
			}
			var s2 = HxOverrides.substr(this.buf,this.pos,len1);
			this.pos += len1;
			s2 = decodeURIComponent(s2.split("+").join(" "));
			this.scache.push(s2);
			return s2;
		case 122:
			return 0;
		default:
		}
		this.pos--;
		throw new js__$Boot_HaxeError("Invalid char " + this.buf.charAt(this.pos) + " at position " + this.pos);
	}
	,__class__: haxe_Unserializer
};
var haxe_crypto_Adler32 = function() {
	this.a1 = 1;
	this.a2 = 0;
};
$hxClasses["haxe.crypto.Adler32"] = haxe_crypto_Adler32;
haxe_crypto_Adler32.__name__ = ["haxe","crypto","Adler32"];
haxe_crypto_Adler32.read = function(i) {
	var a = new haxe_crypto_Adler32();
	var a2a = i.readByte();
	var a2b = i.readByte();
	var a1a = i.readByte();
	var a1b = i.readByte();
	a.a1 = a1a << 8 | a1b;
	a.a2 = a2a << 8 | a2b;
	return a;
};
haxe_crypto_Adler32.prototype = {
	update: function(b,pos,len) {
		var a1 = this.a1;
		var a2 = this.a2;
		var _g1 = pos;
		var _g = pos + len;
		while(_g1 < _g) {
			var p = _g1++;
			var c = b.b[p];
			a1 = (a1 + c) % 65521;
			a2 = (a2 + a1) % 65521;
		}
		this.a1 = a1;
		this.a2 = a2;
	}
	,equals: function(a) {
		if(a.a1 == this.a1) {
			return a.a2 == this.a2;
		} else {
			return false;
		}
	}
	,__class__: haxe_crypto_Adler32
};
var haxe_io_Bytes = function(data) {
	this.length = data.byteLength;
	this.b = new Uint8Array(data);
	this.b.bufferValue = data;
	data.hxBytes = this;
	data.bytes = this.b;
};
$hxClasses["haxe.io.Bytes"] = haxe_io_Bytes;
haxe_io_Bytes.__name__ = ["haxe","io","Bytes"];
haxe_io_Bytes.ofString = function(s) {
	var a = [];
	var i = 0;
	while(i < s.length) {
		var c = s.charCodeAt(i++);
		if(55296 <= c && c <= 56319) {
			c = c - 55232 << 10 | s.charCodeAt(i++) & 1023;
		}
		if(c <= 127) {
			a.push(c);
		} else if(c <= 2047) {
			a.push(192 | c >> 6);
			a.push(128 | c & 63);
		} else if(c <= 65535) {
			a.push(224 | c >> 12);
			a.push(128 | c >> 6 & 63);
			a.push(128 | c & 63);
		} else {
			a.push(240 | c >> 18);
			a.push(128 | c >> 12 & 63);
			a.push(128 | c >> 6 & 63);
			a.push(128 | c & 63);
		}
	}
	return new haxe_io_Bytes(new Uint8Array(a).buffer);
};
haxe_io_Bytes.ofData = function(b) {
	var hb = b.hxBytes;
	if(hb != null) {
		return hb;
	}
	return new haxe_io_Bytes(b);
};
haxe_io_Bytes.prototype = {
	blit: function(pos,src,srcpos,len) {
		if(pos < 0 || srcpos < 0 || len < 0 || pos + len > this.length || srcpos + len > src.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		if(srcpos == 0 && len == src.b.byteLength) {
			this.b.set(src.b,pos);
		} else {
			this.b.set(src.b.subarray(srcpos,srcpos + len),pos);
		}
	}
	,sub: function(pos,len) {
		if(pos < 0 || len < 0 || pos + len > this.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		return new haxe_io_Bytes(this.b.buffer.slice(pos + this.b.byteOffset,pos + this.b.byteOffset + len));
	}
	,getDouble: function(pos) {
		if(this.data == null) {
			this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		}
		return this.data.getFloat64(pos,true);
	}
	,getFloat: function(pos) {
		if(this.data == null) {
			this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		}
		return this.data.getFloat32(pos,true);
	}
	,setDouble: function(pos,v) {
		if(this.data == null) {
			this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		}
		this.data.setFloat64(pos,v,true);
	}
	,setFloat: function(pos,v) {
		if(this.data == null) {
			this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		}
		this.data.setFloat32(pos,v,true);
	}
	,getUInt16: function(pos) {
		if(this.data == null) {
			this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		}
		return this.data.getUint16(pos,true);
	}
	,getInt32: function(pos) {
		if(this.data == null) {
			this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		}
		return this.data.getInt32(pos,true);
	}
	,setInt32: function(pos,v) {
		if(this.data == null) {
			this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		}
		this.data.setInt32(pos,v,true);
	}
	,getString: function(pos,len) {
		if(pos < 0 || len < 0 || pos + len > this.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		var s = "";
		var b = this.b;
		var fcc = String.fromCharCode;
		var i = pos;
		var max = pos + len;
		while(i < max) {
			var c = b[i++];
			if(c < 128) {
				if(c == 0) {
					break;
				}
				s += fcc(c);
			} else if(c < 224) {
				s += fcc((c & 63) << 6 | b[i++] & 127);
			} else if(c < 240) {
				var c2 = b[i++];
				s += fcc((c & 31) << 12 | (c2 & 127) << 6 | b[i++] & 127);
			} else {
				var c21 = b[i++];
				var c3 = b[i++];
				var u = (c & 15) << 18 | (c21 & 127) << 12 | (c3 & 127) << 6 | b[i++] & 127;
				s += fcc((u >> 10) + 55232);
				s += fcc(u & 1023 | 56320);
			}
		}
		return s;
	}
	,toString: function() {
		return this.getString(0,this.length);
	}
	,__class__: haxe_io_Bytes
};
var haxe_crypto_Base64 = function() { };
$hxClasses["haxe.crypto.Base64"] = haxe_crypto_Base64;
haxe_crypto_Base64.__name__ = ["haxe","crypto","Base64"];
haxe_crypto_Base64.encode = function(bytes,complement) {
	if(complement == null) {
		complement = true;
	}
	var str = new haxe_crypto_BaseCode(haxe_crypto_Base64.BYTES).encodeBytes(bytes).toString();
	if(complement) {
		var _g = bytes.length % 3;
		switch(_g) {
		case 1:
			str += "==";
			break;
		case 2:
			str += "=";
			break;
		default:
		}
	}
	return str;
};
var haxe_crypto_BaseCode = function(base) {
	var len = base.length;
	var nbits = 1;
	while(len > 1 << nbits) ++nbits;
	if(nbits > 8 || len != 1 << nbits) {
		throw new js__$Boot_HaxeError("BaseCode : base length must be a power of two.");
	}
	this.base = base;
	this.nbits = nbits;
};
$hxClasses["haxe.crypto.BaseCode"] = haxe_crypto_BaseCode;
haxe_crypto_BaseCode.__name__ = ["haxe","crypto","BaseCode"];
haxe_crypto_BaseCode.prototype = {
	encodeBytes: function(b) {
		var nbits = this.nbits;
		var base = this.base;
		var size = b.length * 8 / nbits | 0;
		var out = new haxe_io_Bytes(new ArrayBuffer(size + (b.length * 8 % nbits == 0 ? 0 : 1)));
		var buf = 0;
		var curbits = 0;
		var mask = (1 << nbits) - 1;
		var pin = 0;
		var pout = 0;
		while(pout < size) {
			while(curbits < nbits) {
				curbits += 8;
				buf <<= 8;
				buf |= b.b[pin++];
			}
			curbits -= nbits;
			out.b[pout++] = base.b[buf >> curbits & mask] & 255;
		}
		if(curbits > 0) {
			out.b[pout++] = base.b[buf << nbits - curbits & mask] & 255;
		}
		return out;
	}
	,__class__: haxe_crypto_BaseCode
};
var haxe_ds_IntMap = function() {
	this.h = { };
};
$hxClasses["haxe.ds.IntMap"] = haxe_ds_IntMap;
haxe_ds_IntMap.__name__ = ["haxe","ds","IntMap"];
haxe_ds_IntMap.__interfaces__ = [haxe_IMap];
haxe_ds_IntMap.prototype = {
	get: function(key) {
		return this.h[key];
	}
	,keys: function() {
		var a = [];
		for( var key in this.h ) if(this.h.hasOwnProperty(key)) {
			a.push(key | 0);
		}
		return HxOverrides.iter(a);
	}
	,iterator: function() {
		return { ref : this.h, it : this.keys(), hasNext : function() {
			return this.it.hasNext();
		}, next : function() {
			var i = this.it.next();
			return this.ref[i];
		}};
	}
	,__class__: haxe_ds_IntMap
};
var haxe_ds_ObjectMap = function() {
	this.h = { __keys__ : { }};
};
$hxClasses["haxe.ds.ObjectMap"] = haxe_ds_ObjectMap;
haxe_ds_ObjectMap.__name__ = ["haxe","ds","ObjectMap"];
haxe_ds_ObjectMap.__interfaces__ = [haxe_IMap];
haxe_ds_ObjectMap.prototype = {
	set: function(key,value) {
		var id = key.__id__ || (key.__id__ = ++haxe_ds_ObjectMap.count);
		this.h[id] = value;
		this.h.__keys__[id] = key;
	}
	,get: function(key) {
		return this.h[key.__id__];
	}
	,keys: function() {
		var a = [];
		for( var key in this.h.__keys__ ) {
		if(this.h.hasOwnProperty(key)) {
			a.push(this.h.__keys__[key]);
		}
		}
		return HxOverrides.iter(a);
	}
	,iterator: function() {
		return { ref : this.h, it : this.keys(), hasNext : function() {
			return this.it.hasNext();
		}, next : function() {
			var i = this.it.next();
			return this.ref[i.__id__];
		}};
	}
	,__class__: haxe_ds_ObjectMap
};
var haxe_ds__$StringMap_StringMapIterator = function(map,keys) {
	this.map = map;
	this.keys = keys;
	this.index = 0;
	this.count = keys.length;
};
$hxClasses["haxe.ds._StringMap.StringMapIterator"] = haxe_ds__$StringMap_StringMapIterator;
haxe_ds__$StringMap_StringMapIterator.__name__ = ["haxe","ds","_StringMap","StringMapIterator"];
haxe_ds__$StringMap_StringMapIterator.prototype = {
	hasNext: function() {
		return this.index < this.count;
	}
	,next: function() {
		var _this = this.map;
		var key = this.keys[this.index++];
		if(__map_reserved[key] != null) {
			return _this.getReserved(key);
		} else {
			return _this.h[key];
		}
	}
	,__class__: haxe_ds__$StringMap_StringMapIterator
};
var haxe_ds_StringMap = function() {
	this.h = { };
};
$hxClasses["haxe.ds.StringMap"] = haxe_ds_StringMap;
haxe_ds_StringMap.__name__ = ["haxe","ds","StringMap"];
haxe_ds_StringMap.__interfaces__ = [haxe_IMap];
haxe_ds_StringMap.prototype = {
	get: function(key) {
		if(__map_reserved[key] != null) {
			return this.getReserved(key);
		}
		return this.h[key];
	}
	,setReserved: function(key,value) {
		if(this.rh == null) {
			this.rh = { };
		}
		this.rh["$" + key] = value;
	}
	,getReserved: function(key) {
		if(this.rh == null) {
			return null;
		} else {
			return this.rh["$" + key];
		}
	}
	,existsReserved: function(key) {
		if(this.rh == null) {
			return false;
		}
		return this.rh.hasOwnProperty("$" + key);
	}
	,remove: function(key) {
		if(__map_reserved[key] != null) {
			key = "$" + key;
			if(this.rh == null || !this.rh.hasOwnProperty(key)) {
				return false;
			}
			delete(this.rh[key]);
			return true;
		} else {
			if(!this.h.hasOwnProperty(key)) {
				return false;
			}
			delete(this.h[key]);
			return true;
		}
	}
	,keys: function() {
		return HxOverrides.iter(this.arrayKeys());
	}
	,arrayKeys: function() {
		var out = [];
		for( var key in this.h ) {
		if(this.h.hasOwnProperty(key)) {
			out.push(key);
		}
		}
		if(this.rh != null) {
			for( var key in this.rh ) {
			if(key.charCodeAt(0) == 36) {
				out.push(key.substr(1));
			}
			}
		}
		return out;
	}
	,iterator: function() {
		return new haxe_ds__$StringMap_StringMapIterator(this,this.arrayKeys());
	}
	,__class__: haxe_ds_StringMap
};
var haxe_io_BytesBuffer = function() {
	this.b = [];
};
$hxClasses["haxe.io.BytesBuffer"] = haxe_io_BytesBuffer;
haxe_io_BytesBuffer.__name__ = ["haxe","io","BytesBuffer"];
haxe_io_BytesBuffer.prototype = {
	getBytes: function() {
		var bytes = new haxe_io_Bytes(new Uint8Array(this.b).buffer);
		this.b = null;
		return bytes;
	}
	,__class__: haxe_io_BytesBuffer
};
var haxe_io_Input = function() { };
$hxClasses["haxe.io.Input"] = haxe_io_Input;
haxe_io_Input.__name__ = ["haxe","io","Input"];
haxe_io_Input.prototype = {
	readByte: function() {
		throw new js__$Boot_HaxeError("Not implemented");
	}
	,readBytes: function(s,pos,len) {
		var k = len;
		var b = s.b;
		if(pos < 0 || len < 0 || pos + len > s.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		try {
			while(k > 0) {
				b[pos] = this.readByte();
				++pos;
				--k;
			}
		} catch( eof ) {
			if (eof instanceof js__$Boot_HaxeError) eof = eof.val;
			if( js_Boot.__instanceof(eof,haxe_io_Eof) ) {
			} else throw(eof);
		}
		return len - k;
	}
	,set_bigEndian: function(b) {
		this.bigEndian = b;
		return b;
	}
	,readFullBytes: function(s,pos,len) {
		while(len > 0) {
			var k = this.readBytes(s,pos,len);
			if(k == 0) {
				throw new js__$Boot_HaxeError(haxe_io_Error.Blocked);
			}
			pos += k;
			len -= k;
		}
	}
	,read: function(nbytes) {
		var s = new haxe_io_Bytes(new ArrayBuffer(nbytes));
		var p = 0;
		while(nbytes > 0) {
			var k = this.readBytes(s,p,nbytes);
			if(k == 0) {
				throw new js__$Boot_HaxeError(haxe_io_Error.Blocked);
			}
			p += k;
			nbytes -= k;
		}
		return s;
	}
	,readFloat: function() {
		return haxe_io_FPHelper.i32ToFloat(this.readInt32());
	}
	,readDouble: function() {
		var i1 = this.readInt32();
		var i2 = this.readInt32();
		if(this.bigEndian) {
			return haxe_io_FPHelper.i64ToDouble(i2,i1);
		} else {
			return haxe_io_FPHelper.i64ToDouble(i1,i2);
		}
	}
	,readInt8: function() {
		var n = this.readByte();
		if(n >= 128) {
			return n - 256;
		}
		return n;
	}
	,readInt16: function() {
		var ch1 = this.readByte();
		var ch2 = this.readByte();
		var n = this.bigEndian ? ch2 | ch1 << 8 : ch1 | ch2 << 8;
		if((n & 32768) != 0) {
			return n - 65536;
		}
		return n;
	}
	,readUInt16: function() {
		var ch1 = this.readByte();
		var ch2 = this.readByte();
		if(this.bigEndian) {
			return ch2 | ch1 << 8;
		} else {
			return ch1 | ch2 << 8;
		}
	}
	,readInt32: function() {
		var ch1 = this.readByte();
		var ch2 = this.readByte();
		var ch3 = this.readByte();
		var ch4 = this.readByte();
		if(this.bigEndian) {
			return ch4 | ch3 << 8 | ch2 << 16 | ch1 << 24;
		} else {
			return ch1 | ch2 << 8 | ch3 << 16 | ch4 << 24;
		}
	}
	,readString: function(len) {
		var b = new haxe_io_Bytes(new ArrayBuffer(len));
		this.readFullBytes(b,0,len);
		return b.toString();
	}
	,__class__: haxe_io_Input
	,__properties__: {set_bigEndian:"set_bigEndian"}
};
var haxe_io_BytesInput = function(b,pos,len) {
	if(pos == null) {
		pos = 0;
	}
	if(len == null) {
		len = b.length - pos;
	}
	if(pos < 0 || len < 0 || pos + len > b.length) {
		throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
	}
	this.b = b.b;
	this.pos = pos;
	this.len = len;
	this.totlen = len;
};
$hxClasses["haxe.io.BytesInput"] = haxe_io_BytesInput;
haxe_io_BytesInput.__name__ = ["haxe","io","BytesInput"];
haxe_io_BytesInput.__super__ = haxe_io_Input;
haxe_io_BytesInput.prototype = $extend(haxe_io_Input.prototype,{
	set_position: function(p) {
		if(p < 0) {
			p = 0;
		} else if(p > this.totlen) {
			p = this.totlen;
		}
		this.len = this.totlen - p;
		return this.pos = p;
	}
	,readByte: function() {
		if(this.len == 0) {
			throw new js__$Boot_HaxeError(new haxe_io_Eof());
		}
		this.len--;
		return this.b[this.pos++];
	}
	,readBytes: function(buf,pos,len) {
		if(pos < 0 || len < 0 || pos + len > buf.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		if(this.len == 0 && len > 0) {
			throw new js__$Boot_HaxeError(new haxe_io_Eof());
		}
		if(this.len < len) {
			len = this.len;
		}
		var b1 = this.b;
		var b2 = buf.b;
		var _g1 = 0;
		var _g = len;
		while(_g1 < _g) {
			var i = _g1++;
			b2[pos + i] = b1[this.pos + i];
		}
		this.pos += len;
		this.len -= len;
		return len;
	}
	,__class__: haxe_io_BytesInput
	,__properties__: $extend(haxe_io_Input.prototype.__properties__,{set_position:"set_position"})
});
var haxe_io_Output = function() { };
$hxClasses["haxe.io.Output"] = haxe_io_Output;
haxe_io_Output.__name__ = ["haxe","io","Output"];
haxe_io_Output.prototype = {
	writeByte: function(c) {
		throw new js__$Boot_HaxeError("Not implemented");
	}
	,writeBytes: function(s,pos,len) {
		if(pos < 0 || len < 0 || pos + len > s.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		var b = s.b;
		var k = len;
		while(k > 0) {
			this.writeByte(b[pos]);
			++pos;
			--k;
		}
		return len;
	}
	,set_bigEndian: function(b) {
		this.bigEndian = b;
		return b;
	}
	,write: function(s) {
		var l = s.length;
		var p = 0;
		while(l > 0) {
			var k = this.writeBytes(s,p,l);
			if(k == 0) {
				throw new js__$Boot_HaxeError(haxe_io_Error.Blocked);
			}
			p += k;
			l -= k;
		}
	}
	,writeFullBytes: function(s,pos,len) {
		while(len > 0) {
			var k = this.writeBytes(s,pos,len);
			pos += k;
			len -= k;
		}
	}
	,writeFloat: function(x) {
		this.writeInt32(haxe_io_FPHelper.floatToI32(x));
	}
	,writeDouble: function(x) {
		var i64 = haxe_io_FPHelper.doubleToI64(x);
		if(this.bigEndian) {
			this.writeInt32(i64.high);
			this.writeInt32(i64.low);
		} else {
			this.writeInt32(i64.low);
			this.writeInt32(i64.high);
		}
	}
	,writeInt8: function(x) {
		if(x < -128 || x >= 128) {
			throw new js__$Boot_HaxeError(haxe_io_Error.Overflow);
		}
		this.writeByte(x & 255);
	}
	,writeInt16: function(x) {
		if(x < -32768 || x >= 32768) {
			throw new js__$Boot_HaxeError(haxe_io_Error.Overflow);
		}
		this.writeUInt16(x & 65535);
	}
	,writeUInt16: function(x) {
		if(x < 0 || x >= 65536) {
			throw new js__$Boot_HaxeError(haxe_io_Error.Overflow);
		}
		if(this.bigEndian) {
			this.writeByte(x >> 8);
			this.writeByte(x & 255);
		} else {
			this.writeByte(x & 255);
			this.writeByte(x >> 8);
		}
	}
	,writeInt32: function(x) {
		if(this.bigEndian) {
			this.writeByte(x >>> 24);
			this.writeByte(x >> 16 & 255);
			this.writeByte(x >> 8 & 255);
			this.writeByte(x & 255);
		} else {
			this.writeByte(x & 255);
			this.writeByte(x >> 8 & 255);
			this.writeByte(x >> 16 & 255);
			this.writeByte(x >>> 24);
		}
	}
	,writeString: function(s) {
		var b = haxe_io_Bytes.ofString(s);
		this.writeFullBytes(b,0,b.length);
	}
	,__class__: haxe_io_Output
	,__properties__: {set_bigEndian:"set_bigEndian"}
};
var haxe_io_BytesOutput = function() {
	this.b = new haxe_io_BytesBuffer();
};
$hxClasses["haxe.io.BytesOutput"] = haxe_io_BytesOutput;
haxe_io_BytesOutput.__name__ = ["haxe","io","BytesOutput"];
haxe_io_BytesOutput.__super__ = haxe_io_Output;
haxe_io_BytesOutput.prototype = $extend(haxe_io_Output.prototype,{
	writeByte: function(c) {
		this.b.b.push(c);
	}
	,writeBytes: function(buf,pos,len) {
		var _this = this.b;
		if(pos < 0 || len < 0 || pos + len > buf.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		var b1 = _this.b;
		var b2 = buf.b;
		var _g1 = pos;
		var _g = pos + len;
		while(_g1 < _g) {
			var i = _g1++;
			_this.b.push(b2[i]);
		}
		return len;
	}
	,getBytes: function() {
		return this.b.getBytes();
	}
	,__class__: haxe_io_BytesOutput
});
var haxe_io_Eof = function() {
};
$hxClasses["haxe.io.Eof"] = haxe_io_Eof;
haxe_io_Eof.__name__ = ["haxe","io","Eof"];
haxe_io_Eof.prototype = {
	toString: function() {
		return "Eof";
	}
	,__class__: haxe_io_Eof
};
var haxe_io_Error = $hxClasses["haxe.io.Error"] = { __ename__ : true, __constructs__ : ["Blocked","Overflow","OutsideBounds","Custom"] };
haxe_io_Error.Blocked = ["Blocked",0];
haxe_io_Error.Blocked.toString = $estr;
haxe_io_Error.Blocked.__enum__ = haxe_io_Error;
haxe_io_Error.Overflow = ["Overflow",1];
haxe_io_Error.Overflow.toString = $estr;
haxe_io_Error.Overflow.__enum__ = haxe_io_Error;
haxe_io_Error.OutsideBounds = ["OutsideBounds",2];
haxe_io_Error.OutsideBounds.toString = $estr;
haxe_io_Error.OutsideBounds.__enum__ = haxe_io_Error;
haxe_io_Error.Custom = function(e) { var $x = ["Custom",3,e]; $x.__enum__ = haxe_io_Error; $x.toString = $estr; return $x; };
var haxe_io_FPHelper = function() { };
$hxClasses["haxe.io.FPHelper"] = haxe_io_FPHelper;
haxe_io_FPHelper.__name__ = ["haxe","io","FPHelper"];
haxe_io_FPHelper.i32ToFloat = function(i) {
	var sign = 1 - (i >>> 31 << 1);
	var exp = i >>> 23 & 255;
	var sig = i & 8388607;
	if(sig == 0 && exp == 0) {
		return 0.0;
	}
	return sign * (1 + Math.pow(2,-23) * sig) * Math.pow(2,exp - 127);
};
haxe_io_FPHelper.floatToI32 = function(f) {
	if(f == 0) {
		return 0;
	}
	var af = f < 0 ? -f : f;
	var exp = Math.floor(Math.log(af) / 0.6931471805599453);
	if(exp < -127) {
		exp = -127;
	} else if(exp > 128) {
		exp = 128;
	}
	var sig = Math.round((af / Math.pow(2,exp) - 1) * 8388608);
	if(sig == 8388608 && exp < 128) {
		sig = 0;
		++exp;
	}
	return (f < 0 ? -2147483648 : 0) | exp + 127 << 23 | sig;
};
haxe_io_FPHelper.i64ToDouble = function(low,high) {
	var sign = 1 - (high >>> 31 << 1);
	var exp = (high >> 20 & 2047) - 1023;
	var sig = (high & 1048575) * 4294967296. + (low >>> 31) * 2147483648. + (low & 2147483647);
	if(sig == 0 && exp == -1023) {
		return 0.0;
	}
	return sign * (1.0 + Math.pow(2,-52) * sig) * Math.pow(2,exp);
};
haxe_io_FPHelper.doubleToI64 = function(v) {
	var i64 = haxe_io_FPHelper.i64tmp;
	if(v == 0) {
		i64.low = 0;
		i64.high = 0;
	} else if(!isFinite(v)) {
		if(v > 0) {
			i64.low = 0;
			i64.high = 2146435072;
		} else {
			i64.low = 0;
			i64.high = -1048576;
		}
	} else {
		var av = v < 0 ? -v : v;
		var exp = Math.floor(Math.log(av) / 0.6931471805599453);
		var sig = Math.round((av / Math.pow(2,exp) - 1) * 4503599627370496.);
		var sig_l = sig | 0;
		var sig_h = sig / 4294967296.0 | 0;
		i64.low = sig_l;
		i64.high = (v < 0 ? -2147483648 : 0) | exp + 1023 << 20 | sig_h;
	}
	return i64;
};
var haxe_io__$Float32Array_Float32Array_$Impl_$ = {};
$hxClasses["haxe.io._Float32Array.Float32Array_Impl_"] = haxe_io__$Float32Array_Float32Array_$Impl_$;
haxe_io__$Float32Array_Float32Array_$Impl_$.__name__ = ["haxe","io","_Float32Array","Float32Array_Impl_"];
haxe_io__$Float32Array_Float32Array_$Impl_$.fromArray = function(a,pos,length) {
	if(pos == null) {
		pos = 0;
	}
	if(length == null) {
		length = a.length - pos;
	}
	if(pos < 0 || length < 0 || pos + length > a.length) {
		throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
	}
	if(pos == 0 && length == a.length) {
		return new Float32Array(a);
	}
	var this1 = new Float32Array(a.length);
	var i = this1;
	var _g1 = 0;
	var _g = length;
	while(_g1 < _g) {
		var idx = _g1++;
		i[idx] = a[idx + pos];
	}
	return i;
};
var haxe_io__$UInt8Array_UInt8Array_$Impl_$ = {};
$hxClasses["haxe.io._UInt8Array.UInt8Array_Impl_"] = haxe_io__$UInt8Array_UInt8Array_$Impl_$;
haxe_io__$UInt8Array_UInt8Array_$Impl_$.__name__ = ["haxe","io","_UInt8Array","UInt8Array_Impl_"];
haxe_io__$UInt8Array_UInt8Array_$Impl_$.fromBytes = function(bytes,bytePos,length) {
	if(bytePos == null) {
		bytePos = 0;
	}
	if(length == null) {
		length = bytes.length - bytePos;
	}
	return new Uint8Array(bytes.b.bufferValue,bytePos,length);
};
var haxe_zip_ExtraField = $hxClasses["haxe.zip.ExtraField"] = { __ename__ : true, __constructs__ : ["FUnknown","FInfoZipUnicodePath","FUtf8"] };
haxe_zip_ExtraField.FUnknown = function(tag,bytes) { var $x = ["FUnknown",0,tag,bytes]; $x.__enum__ = haxe_zip_ExtraField; $x.toString = $estr; return $x; };
haxe_zip_ExtraField.FInfoZipUnicodePath = function(name,crc) { var $x = ["FInfoZipUnicodePath",1,name,crc]; $x.__enum__ = haxe_zip_ExtraField; $x.toString = $estr; return $x; };
haxe_zip_ExtraField.FUtf8 = ["FUtf8",2];
haxe_zip_ExtraField.FUtf8.toString = $estr;
haxe_zip_ExtraField.FUtf8.__enum__ = haxe_zip_ExtraField;
var haxe_zip_Huffman = $hxClasses["haxe.zip.Huffman"] = { __ename__ : true, __constructs__ : ["Found","NeedBit","NeedBits"] };
haxe_zip_Huffman.Found = function(i) { var $x = ["Found",0,i]; $x.__enum__ = haxe_zip_Huffman; $x.toString = $estr; return $x; };
haxe_zip_Huffman.NeedBit = function(left,right) { var $x = ["NeedBit",1,left,right]; $x.__enum__ = haxe_zip_Huffman; $x.toString = $estr; return $x; };
haxe_zip_Huffman.NeedBits = function(n,table) { var $x = ["NeedBits",2,n,table]; $x.__enum__ = haxe_zip_Huffman; $x.toString = $estr; return $x; };
var haxe_zip_HuffTools = function() {
};
$hxClasses["haxe.zip.HuffTools"] = haxe_zip_HuffTools;
haxe_zip_HuffTools.__name__ = ["haxe","zip","HuffTools"];
haxe_zip_HuffTools.prototype = {
	treeDepth: function(t) {
		switch(t[1]) {
		case 0:
			return 0;
		case 1:
			var b = t[3];
			var a = t[2];
			var da = this.treeDepth(a);
			var db = this.treeDepth(b);
			return 1 + (da < db ? da : db);
		case 2:
			throw new js__$Boot_HaxeError("assert");
			break;
		}
	}
	,treeCompress: function(t) {
		var d = this.treeDepth(t);
		if(d == 0) {
			return t;
		}
		if(d == 1) {
			if(t[1] == 1) {
				var b = t[3];
				var a = t[2];
				return haxe_zip_Huffman.NeedBit(this.treeCompress(a),this.treeCompress(b));
			} else {
				throw new js__$Boot_HaxeError("assert");
			}
		}
		var size = 1 << d;
		var table = [];
		var _g1 = 0;
		var _g = size;
		while(_g1 < _g) {
			var i = _g1++;
			table.push(haxe_zip_Huffman.Found(-1));
		}
		this.treeWalk(table,0,0,d,t);
		return haxe_zip_Huffman.NeedBits(d,table);
	}
	,treeWalk: function(table,p,cd,d,t) {
		if(t[1] == 1) {
			var b = t[3];
			var a = t[2];
			if(d > 0) {
				this.treeWalk(table,p,cd + 1,d - 1,a);
				this.treeWalk(table,p | 1 << cd,cd + 1,d - 1,b);
			} else {
				table[p] = this.treeCompress(t);
			}
		} else {
			table[p] = this.treeCompress(t);
		}
	}
	,treeMake: function(bits,maxbits,v,len) {
		if(len > maxbits) {
			throw new js__$Boot_HaxeError("Invalid huffman");
		}
		var idx = v << 5 | len;
		if(bits.h.hasOwnProperty(idx)) {
			return haxe_zip_Huffman.Found(bits.h[idx]);
		}
		v <<= 1;
		++len;
		return haxe_zip_Huffman.NeedBit(this.treeMake(bits,maxbits,v,len),this.treeMake(bits,maxbits,v | 1,len));
	}
	,make: function(lengths,pos,nlengths,maxbits) {
		var counts = [];
		var tmp = [];
		if(maxbits > 32) {
			throw new js__$Boot_HaxeError("Invalid huffman");
		}
		var _g1 = 0;
		var _g = maxbits;
		while(_g1 < _g) {
			var i = _g1++;
			counts.push(0);
			tmp.push(0);
		}
		var _g11 = 0;
		var _g2 = nlengths;
		while(_g11 < _g2) {
			var i1 = _g11++;
			var p = lengths[i1 + pos];
			if(p >= maxbits) {
				throw new js__$Boot_HaxeError("Invalid huffman");
			}
			counts[p]++;
		}
		var code = 0;
		var _g12 = 1;
		var _g3 = maxbits - 1;
		while(_g12 < _g3) {
			var i2 = _g12++;
			code = code + counts[i2] << 1;
			tmp[i2] = code;
		}
		var bits = new haxe_ds_IntMap();
		var _g13 = 0;
		var _g4 = nlengths;
		while(_g13 < _g4) {
			var i3 = _g13++;
			var l = lengths[i3 + pos];
			if(l != 0) {
				var n = tmp[l - 1];
				tmp[l - 1] = n + 1;
				bits.h[n << 5 | l] = i3;
			}
		}
		return this.treeCompress(haxe_zip_Huffman.NeedBit(this.treeMake(bits,maxbits,0,1),this.treeMake(bits,maxbits,1,1)));
	}
	,__class__: haxe_zip_HuffTools
};
var haxe_zip__$InflateImpl_Window = function(hasCrc) {
	this.buffer = new haxe_io_Bytes(new ArrayBuffer(65536));
	this.pos = 0;
	if(hasCrc) {
		this.crc = new haxe_crypto_Adler32();
	}
};
$hxClasses["haxe.zip._InflateImpl.Window"] = haxe_zip__$InflateImpl_Window;
haxe_zip__$InflateImpl_Window.__name__ = ["haxe","zip","_InflateImpl","Window"];
haxe_zip__$InflateImpl_Window.prototype = {
	slide: function() {
		if(this.crc != null) {
			this.crc.update(this.buffer,0,32768);
		}
		var b = new haxe_io_Bytes(new ArrayBuffer(65536));
		this.pos -= 32768;
		b.blit(0,this.buffer,32768,this.pos);
		this.buffer = b;
	}
	,addBytes: function(b,p,len) {
		if(this.pos + len > 65536) {
			this.slide();
		}
		this.buffer.blit(this.pos,b,p,len);
		this.pos += len;
	}
	,addByte: function(c) {
		if(this.pos == 65536) {
			this.slide();
		}
		this.buffer.b[this.pos] = c & 255;
		this.pos++;
	}
	,getLastChar: function() {
		return this.buffer.b[this.pos - 1];
	}
	,available: function() {
		return this.pos;
	}
	,checksum: function() {
		if(this.crc != null) {
			this.crc.update(this.buffer,0,this.pos);
		}
		return this.crc;
	}
	,__class__: haxe_zip__$InflateImpl_Window
};
var haxe_zip__$InflateImpl_State = $hxClasses["haxe.zip._InflateImpl.State"] = { __ename__ : true, __constructs__ : ["Head","Block","CData","Flat","Crc","Dist","DistOne","Done"] };
haxe_zip__$InflateImpl_State.Head = ["Head",0];
haxe_zip__$InflateImpl_State.Head.toString = $estr;
haxe_zip__$InflateImpl_State.Head.__enum__ = haxe_zip__$InflateImpl_State;
haxe_zip__$InflateImpl_State.Block = ["Block",1];
haxe_zip__$InflateImpl_State.Block.toString = $estr;
haxe_zip__$InflateImpl_State.Block.__enum__ = haxe_zip__$InflateImpl_State;
haxe_zip__$InflateImpl_State.CData = ["CData",2];
haxe_zip__$InflateImpl_State.CData.toString = $estr;
haxe_zip__$InflateImpl_State.CData.__enum__ = haxe_zip__$InflateImpl_State;
haxe_zip__$InflateImpl_State.Flat = ["Flat",3];
haxe_zip__$InflateImpl_State.Flat.toString = $estr;
haxe_zip__$InflateImpl_State.Flat.__enum__ = haxe_zip__$InflateImpl_State;
haxe_zip__$InflateImpl_State.Crc = ["Crc",4];
haxe_zip__$InflateImpl_State.Crc.toString = $estr;
haxe_zip__$InflateImpl_State.Crc.__enum__ = haxe_zip__$InflateImpl_State;
haxe_zip__$InflateImpl_State.Dist = ["Dist",5];
haxe_zip__$InflateImpl_State.Dist.toString = $estr;
haxe_zip__$InflateImpl_State.Dist.__enum__ = haxe_zip__$InflateImpl_State;
haxe_zip__$InflateImpl_State.DistOne = ["DistOne",6];
haxe_zip__$InflateImpl_State.DistOne.toString = $estr;
haxe_zip__$InflateImpl_State.DistOne.__enum__ = haxe_zip__$InflateImpl_State;
haxe_zip__$InflateImpl_State.Done = ["Done",7];
haxe_zip__$InflateImpl_State.Done.toString = $estr;
haxe_zip__$InflateImpl_State.Done.__enum__ = haxe_zip__$InflateImpl_State;
var haxe_zip_InflateImpl = function(i,header,crc) {
	if(crc == null) {
		crc = true;
	}
	if(header == null) {
		header = true;
	}
	this["final"] = false;
	this.htools = new haxe_zip_HuffTools();
	this.huffman = this.buildFixedHuffman();
	this.huffdist = null;
	this.len = 0;
	this.dist = 0;
	this.state = header ? haxe_zip__$InflateImpl_State.Head : haxe_zip__$InflateImpl_State.Block;
	this.input = i;
	this.bits = 0;
	this.nbits = 0;
	this.needed = 0;
	this.output = null;
	this.outpos = 0;
	this.lengths = [];
	var _g = 0;
	while(_g < 19) {
		var i1 = _g++;
		this.lengths.push(-1);
	}
	this.window = new haxe_zip__$InflateImpl_Window(crc);
};
$hxClasses["haxe.zip.InflateImpl"] = haxe_zip_InflateImpl;
haxe_zip_InflateImpl.__name__ = ["haxe","zip","InflateImpl"];
haxe_zip_InflateImpl.prototype = {
	buildFixedHuffman: function() {
		if(haxe_zip_InflateImpl.FIXED_HUFFMAN != null) {
			return haxe_zip_InflateImpl.FIXED_HUFFMAN;
		}
		var a = [];
		var _g = 0;
		while(_g < 288) {
			var n = _g++;
			a.push(n <= 143 ? 8 : n <= 255 ? 9 : n <= 279 ? 7 : 8);
		}
		haxe_zip_InflateImpl.FIXED_HUFFMAN = this.htools.make(a,0,288,10);
		return haxe_zip_InflateImpl.FIXED_HUFFMAN;
	}
	,readBytes: function(b,pos,len) {
		this.needed = len;
		this.outpos = pos;
		this.output = b;
		if(len > 0) {
			while(this.inflateLoop()) {
			}
		}
		return len - this.needed;
	}
	,getBits: function(n) {
		while(this.nbits < n) {
			this.bits |= this.input.readByte() << this.nbits;
			this.nbits += 8;
		}
		var b = this.bits & (1 << n) - 1;
		this.nbits -= n;
		this.bits >>= n;
		return b;
	}
	,getBit: function() {
		if(this.nbits == 0) {
			this.nbits = 8;
			this.bits = this.input.readByte();
		}
		var b = (this.bits & 1) == 1;
		this.nbits--;
		this.bits >>= 1;
		return b;
	}
	,getRevBits: function(n) {
		if(n == 0) {
			return 0;
		} else if(this.getBit()) {
			return 1 << n - 1 | this.getRevBits(n - 1);
		} else {
			return this.getRevBits(n - 1);
		}
	}
	,resetBits: function() {
		this.bits = 0;
		this.nbits = 0;
	}
	,addBytes: function(b,p,len) {
		this.window.addBytes(b,p,len);
		this.output.blit(this.outpos,b,p,len);
		this.needed -= len;
		this.outpos += len;
	}
	,addByte: function(b) {
		this.window.addByte(b);
		this.output.b[this.outpos] = b & 255;
		this.needed--;
		this.outpos++;
	}
	,addDistOne: function(n) {
		var c = this.window.getLastChar();
		var _g1 = 0;
		var _g = n;
		while(_g1 < _g) {
			var i = _g1++;
			this.addByte(c);
		}
	}
	,addDist: function(d,len) {
		this.addBytes(this.window.buffer,this.window.pos - d,len);
	}
	,applyHuffman: function(h) {
		switch(h[1]) {
		case 0:
			var n = h[2];
			return n;
		case 1:
			var b = h[3];
			var a = h[2];
			return this.applyHuffman(this.getBit() ? b : a);
		case 2:
			var tbl = h[3];
			var n1 = h[2];
			return this.applyHuffman(tbl[this.getBits(n1)]);
		}
	}
	,inflateLengths: function(a,max) {
		var i = 0;
		var prev = 0;
		while(i < max) {
			var n = this.applyHuffman(this.huffman);
			switch(n) {
			case 0:case 1:case 2:case 3:case 4:case 5:case 6:case 7:case 8:case 9:case 10:case 11:case 12:case 13:case 14:case 15:
				prev = n;
				a[i] = n;
				++i;
				break;
			case 16:
				var end = i + 3 + this.getBits(2);
				if(end > max) {
					throw new js__$Boot_HaxeError("Invalid data");
				}
				while(i < end) {
					a[i] = prev;
					++i;
				}
				break;
			case 17:
				i += 3 + this.getBits(3);
				if(i > max) {
					throw new js__$Boot_HaxeError("Invalid data");
				}
				break;
			case 18:
				i += 11 + this.getBits(7);
				if(i > max) {
					throw new js__$Boot_HaxeError("Invalid data");
				}
				break;
			default:
				throw new js__$Boot_HaxeError("Invalid data");
			}
		}
	}
	,inflateLoop: function() {
		var _g = this.state;
		switch(_g[1]) {
		case 0:
			var cmf = this.input.readByte();
			var cm = cmf & 15;
			var cinfo = cmf >> 4;
			if(cm != 8) {
				throw new js__$Boot_HaxeError("Invalid data");
			}
			var flg = this.input.readByte();
			var fdict = (flg & 32) != 0;
			if(((cmf << 8) + flg) % 31 != 0) {
				throw new js__$Boot_HaxeError("Invalid data");
			}
			if(fdict) {
				throw new js__$Boot_HaxeError("Unsupported dictionary");
			}
			this.state = haxe_zip__$InflateImpl_State.Block;
			return true;
		case 1:
			this["final"] = this.getBit();
			var _g1 = this.getBits(2);
			switch(_g1) {
			case 0:
				this.len = this.input.readUInt16();
				var nlen = this.input.readUInt16();
				if(nlen != 65535 - this.len) {
					throw new js__$Boot_HaxeError("Invalid data");
				}
				this.state = haxe_zip__$InflateImpl_State.Flat;
				var r = this.inflateLoop();
				this.resetBits();
				return r;
			case 1:
				this.huffman = this.buildFixedHuffman();
				this.huffdist = null;
				this.state = haxe_zip__$InflateImpl_State.CData;
				return true;
			case 2:
				var hlit = this.getBits(5) + 257;
				var hdist = this.getBits(5) + 1;
				var hclen = this.getBits(4) + 4;
				var _g11 = 0;
				var _g2 = hclen;
				while(_g11 < _g2) {
					var i = _g11++;
					this.lengths[haxe_zip_InflateImpl.CODE_LENGTHS_POS[i]] = this.getBits(3);
				}
				var _g3 = hclen;
				while(_g3 < 19) {
					var i1 = _g3++;
					this.lengths[haxe_zip_InflateImpl.CODE_LENGTHS_POS[i1]] = 0;
				}
				this.huffman = this.htools.make(this.lengths,0,19,8);
				var lengths = [];
				var _g12 = 0;
				var _g4 = hlit + hdist;
				while(_g12 < _g4) {
					var i2 = _g12++;
					lengths.push(0);
				}
				this.inflateLengths(lengths,hlit + hdist);
				this.huffdist = this.htools.make(lengths,hlit,hdist,16);
				this.huffman = this.htools.make(lengths,0,hlit,16);
				this.state = haxe_zip__$InflateImpl_State.CData;
				return true;
			default:
				throw new js__$Boot_HaxeError("Invalid data");
			}
			break;
		case 2:
			var n = this.applyHuffman(this.huffman);
			if(n < 256) {
				this.addByte(n);
				return this.needed > 0;
			} else if(n == 256) {
				this.state = this["final"] ? haxe_zip__$InflateImpl_State.Crc : haxe_zip__$InflateImpl_State.Block;
				return true;
			} else {
				n -= 257;
				var extra_bits = haxe_zip_InflateImpl.LEN_EXTRA_BITS_TBL[n];
				if(extra_bits == -1) {
					throw new js__$Boot_HaxeError("Invalid data");
				}
				this.len = haxe_zip_InflateImpl.LEN_BASE_VAL_TBL[n] + this.getBits(extra_bits);
				var dist_code = this.huffdist == null ? this.getRevBits(5) : this.applyHuffman(this.huffdist);
				extra_bits = haxe_zip_InflateImpl.DIST_EXTRA_BITS_TBL[dist_code];
				if(extra_bits == -1) {
					throw new js__$Boot_HaxeError("Invalid data");
				}
				this.dist = haxe_zip_InflateImpl.DIST_BASE_VAL_TBL[dist_code] + this.getBits(extra_bits);
				if(this.dist > this.window.available()) {
					throw new js__$Boot_HaxeError("Invalid data");
				}
				this.state = this.dist == 1 ? haxe_zip__$InflateImpl_State.DistOne : haxe_zip__$InflateImpl_State.Dist;
				return true;
			}
			break;
		case 3:
			var rlen = this.len < this.needed ? this.len : this.needed;
			var bytes = this.input.read(rlen);
			this.len -= rlen;
			this.addBytes(bytes,0,rlen);
			if(this.len == 0) {
				this.state = this["final"] ? haxe_zip__$InflateImpl_State.Crc : haxe_zip__$InflateImpl_State.Block;
			}
			return this.needed > 0;
		case 4:
			var calc = this.window.checksum();
			if(calc == null) {
				this.state = haxe_zip__$InflateImpl_State.Done;
				return true;
			}
			var crc = haxe_crypto_Adler32.read(this.input);
			if(!calc.equals(crc)) {
				throw new js__$Boot_HaxeError("Invalid CRC");
			}
			this.state = haxe_zip__$InflateImpl_State.Done;
			return true;
		case 5:
			while(this.len > 0 && this.needed > 0) {
				var rdist = this.len < this.dist ? this.len : this.dist;
				var rlen1 = this.needed < rdist ? this.needed : rdist;
				this.addDist(this.dist,rlen1);
				this.len -= rlen1;
			}
			if(this.len == 0) {
				this.state = haxe_zip__$InflateImpl_State.CData;
			}
			return this.needed > 0;
		case 6:
			var rlen2 = this.len < this.needed ? this.len : this.needed;
			this.addDistOne(rlen2);
			this.len -= rlen2;
			if(this.len == 0) {
				this.state = haxe_zip__$InflateImpl_State.CData;
			}
			return this.needed > 0;
		case 7:
			return false;
		}
	}
	,__class__: haxe_zip_InflateImpl
};
var haxe_zip_Reader = function(i) {
	this.i = i;
};
$hxClasses["haxe.zip.Reader"] = haxe_zip_Reader;
haxe_zip_Reader.__name__ = ["haxe","zip","Reader"];
haxe_zip_Reader.readZip = function(i) {
	var r = new haxe_zip_Reader(i);
	return r.read();
};
haxe_zip_Reader.unzip = function(f) {
	if(!f.compressed) {
		return f.data;
	}
	var c = new haxe_zip_Uncompress(-15);
	var s = new haxe_io_Bytes(new ArrayBuffer(f.fileSize));
	var r = c.execute(f.data,0,s,0);
	c.close();
	if(!r.done || r.read != f.data.length || r.write != f.fileSize) {
		throw new js__$Boot_HaxeError("Invalid compressed data for " + f.fileName);
	}
	f.compressed = false;
	f.dataSize = f.fileSize;
	f.data = s;
	return f.data;
};
haxe_zip_Reader.prototype = {
	readZipDate: function() {
		var t = this.i.readUInt16();
		var hour = t >> 11 & 31;
		var min = t >> 5 & 63;
		var sec = t & 31;
		var d = this.i.readUInt16();
		var year = d >> 9;
		var month = d >> 5 & 15;
		var day = d & 31;
		return new Date(year + 1980,month - 1,day,hour,min,sec << 1);
	}
	,readExtraFields: function(length) {
		var fields = new List();
		while(length > 0) {
			if(length < 4) {
				throw new js__$Boot_HaxeError("Invalid extra fields data");
			}
			var tag = this.i.readUInt16();
			var len = this.i.readUInt16();
			if(length < len) {
				throw new js__$Boot_HaxeError("Invalid extra fields data");
			}
			if(tag == 28789) {
				var version = this.i.readByte();
				if(version != 1) {
					var data = new haxe_io_BytesBuffer();
					data.b.push(version);
					var src = this.i.read(len - 1);
					var b1 = data.b;
					var b2 = src.b;
					var _g1 = 0;
					var _g = src.length;
					while(_g1 < _g) {
						var i = _g1++;
						data.b.push(b2[i]);
					}
					fields.add(haxe_zip_ExtraField.FUnknown(tag,data.getBytes()));
				} else {
					var crc = this.i.readInt32();
					var name = this.i.read(len - 5).toString();
					fields.add(haxe_zip_ExtraField.FInfoZipUnicodePath(name,crc));
				}
			} else {
				fields.add(haxe_zip_ExtraField.FUnknown(tag,this.i.read(len)));
			}
			length -= 4 + len;
		}
		return fields;
	}
	,readEntryHeader: function() {
		var i = this.i;
		var h = i.readInt32();
		if(h == 33639248 || h == 101010256) {
			return null;
		}
		if(h != 67324752) {
			throw new js__$Boot_HaxeError("Invalid Zip Data");
		}
		var version = i.readUInt16();
		var flags = i.readUInt16();
		var utf8 = (flags & 2048) != 0;
		if((flags & 63473) != 0) {
			throw new js__$Boot_HaxeError("Unsupported flags " + flags);
		}
		var compression = i.readUInt16();
		var compressed = compression != 0;
		if(compressed && compression != 8) {
			throw new js__$Boot_HaxeError("Unsupported compression " + compression);
		}
		var mtime = this.readZipDate();
		var crc32 = i.readInt32();
		var csize = i.readInt32();
		var usize = i.readInt32();
		var fnamelen = i.readInt16();
		var elen = i.readInt16();
		var fname = i.readString(fnamelen);
		var fields = this.readExtraFields(elen);
		if(utf8) {
			fields.push(haxe_zip_ExtraField.FUtf8);
		}
		var data = null;
		if((flags & 8) != 0) {
			crc32 = null;
		}
		return { fileName : fname, fileSize : usize, fileTime : mtime, compressed : compressed, dataSize : csize, data : data, crc32 : crc32, extraFields : fields};
	}
	,read: function() {
		var l = new List();
		var buf = null;
		var tmp = null;
		while(true) {
			var e = this.readEntryHeader();
			if(e == null) {
				break;
			}
			if(e.crc32 == null) {
				if(e.compressed) {
					var bufSize = 65536;
					if(tmp == null) {
						tmp = new haxe_io_Bytes(new ArrayBuffer(bufSize));
					}
					var out = new haxe_io_BytesBuffer();
					var z = new haxe_zip_InflateImpl(this.i,false,false);
					while(true) {
						var n = z.readBytes(tmp,0,bufSize);
						if(n < 0 || n > tmp.length) {
							throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
						}
						var b1 = out.b;
						var b2 = tmp.b;
						var _g1 = 0;
						var _g = n;
						while(_g1 < _g) {
							var i = _g1++;
							out.b.push(b2[i]);
						}
						if(n < bufSize) {
							break;
						}
					}
					e.data = out.getBytes();
				} else {
					e.data = this.i.read(e.dataSize);
				}
				e.crc32 = this.i.readInt32();
				if(e.crc32 == 134695760) {
					e.crc32 = this.i.readInt32();
				}
				e.dataSize = this.i.readInt32();
				e.fileSize = this.i.readInt32();
				e.dataSize = e.fileSize;
				e.compressed = false;
			} else {
				e.data = this.i.read(e.dataSize);
			}
			l.add(e);
		}
		return l;
	}
	,__class__: haxe_zip_Reader
};
var haxe_zip_Uncompress = function(windowBits) {
	throw new js__$Boot_HaxeError("Not implemented for this platform");
};
$hxClasses["haxe.zip.Uncompress"] = haxe_zip_Uncompress;
haxe_zip_Uncompress.__name__ = ["haxe","zip","Uncompress"];
haxe_zip_Uncompress.prototype = {
	execute: function(src,srcPos,dst,dstPos) {
		return null;
	}
	,close: function() {
	}
	,__class__: haxe_zip_Uncompress
};
var iron_data_CameraData = function(raw,done) {
	this.mirror = null;
	var _gthis = this;
	iron_data_Data.call(this);
	this.raw = raw;
	this.name = raw.name;
	var pathName = raw.render_path.split("/");
	iron_data_Data.getRenderPath(pathName[0],pathName[1],function(b) {
		_gthis.pathdata = b;
		if(raw.is_mirror) {
			_gthis.mirror = kha_Image.createRenderTarget(raw.mirror_resolution_x,raw.mirror_resolution_y,kha_graphics4_TextureFormat.RGBA32,0);
		}
		done(_gthis);
	});
};
$hxClasses["iron.data.CameraData"] = iron_data_CameraData;
iron_data_CameraData.__name__ = ["iron","data","CameraData"];
iron_data_CameraData.parse = function(name,id,done) {
	iron_data_Data.getSceneRaw(name,function(format) {
		var raw = iron_data_Data.getCameraRawByName(format.camera_datas,id);
		if(raw == null) {
			haxe_Log.trace("Camera data \"" + id + "\" not found!",{ fileName : "CameraData.hx", lineNumber : 37, className : "iron.data.CameraData", methodName : "parse"});
			done(null);
		}
		new iron_data_CameraData(raw,done);
	});
};
iron_data_CameraData.__super__ = iron_data_Data;
iron_data_CameraData.prototype = $extend(iron_data_Data.prototype,{
	__class__: iron_data_CameraData
});
var iron_data_ConstData = function() { };
$hxClasses["iron.data.ConstData"] = iron_data_ConstData;
iron_data_ConstData.__name__ = ["iron","data","ConstData"];
var iron_data_GreasePencilData = function(raw,done) {
	var _gthis = this;
	iron_data_Data.call(this);
	this.raw = raw;
	this.name = raw.name;
	if(iron_data_GreasePencilData.structure == null) {
		iron_data_GreasePencilData.structure = new kha_graphics4_VertexStructure();
		iron_data_GreasePencilData.structure.add("pos",kha_graphics4_VertexData.Float3);
		iron_data_GreasePencilData.structure.add("col",kha_graphics4_VertexData.Float4);
		iron_data_GreasePencilData.usage = kha_graphics4_Usage.StaticUsage;
	}
	if(iron_data_GreasePencilData.first) {
		iron_data_GreasePencilData.first = false;
		var shaderName = raw.shader.split("/");
		iron_data_Data.getShader(shaderName[0],shaderName[1],null,function(b) {
			iron_data_GreasePencilData.shaderData = b;
			_gthis.makeLayers(done);
		});
	} else {
		this.makeLayers(done);
	}
};
$hxClasses["iron.data.GreasePencilData"] = iron_data_GreasePencilData;
iron_data_GreasePencilData.__name__ = ["iron","data","GreasePencilData"];
iron_data_GreasePencilData.parse = function(name,id,done) {
	iron_data_Data.getSceneRaw(name,function(format) {
		var raw = iron_data_Data.getGreasePencilRawByName(format.grease_pencil_datas,id);
		if(raw == null) {
			haxe_Log.trace("Grease pencil data \"" + id + "\" not found!",{ fileName : "GreasePencilData.hx", lineNumber : 66, className : "iron.data.GreasePencilData", methodName : "parse"});
			done(null);
		}
		new iron_data_GreasePencilData(raw,done);
	});
};
iron_data_GreasePencilData.getContext = function(name) {
	return iron_data_GreasePencilData.shaderData.getContext(name);
};
iron_data_GreasePencilData.__super__ = iron_data_Data;
iron_data_GreasePencilData.prototype = $extend(iron_data_Data.prototype,{
	makeLayers: function(done) {
		this.layers = [];
		var _g = 0;
		var _g1 = this.raw.layers;
		while(_g < _g1.length) {
			var l = _g1[_g];
			++_g;
			this.layers.push(new iron_data_GreasePencilLayer(l));
		}
		done(this);
	}
	,__class__: iron_data_GreasePencilData
});
var iron_data_GreasePencilLayer = function(l) {
	this.currentFrame = 0;
	this.name = l.name;
	this.frames = [];
	var _g = 0;
	var _g1 = l.frames;
	while(_g < _g1.length) {
		var f = _g1[_g];
		++_g;
		this.frames.push(new iron_data_GreasePencilFrame(f));
	}
};
$hxClasses["iron.data.GreasePencilLayer"] = iron_data_GreasePencilLayer;
iron_data_GreasePencilLayer.__name__ = ["iron","data","GreasePencilLayer"];
iron_data_GreasePencilLayer.prototype = {
	__class__: iron_data_GreasePencilLayer
};
var iron_data_GreasePencilFrame = function(f) {
	this.raw = f;
	var va = f.vertex_array.values;
	var cola = f.col_array.values;
	var colfilla = f.colfill_array.values;
	var indices = f.index_array.values;
	this.numVertices = va.length / 3 | 0;
	this.vertexBuffer = new kha_graphics4_VertexBuffer(this.numVertices,iron_data_GreasePencilData.structure,iron_data_GreasePencilData.usage);
	var vertices = this.vertexBuffer.lock();
	var di = -1;
	var _g1 = 0;
	var _g = this.numVertices;
	while(_g1 < _g) {
		var i = _g1++;
		vertices[++di] = va[i * 3];
		vertices[++di] = va[i * 3 + 1];
		vertices[++di] = va[i * 3 + 2];
		vertices[++di] = colfilla[i * 4];
		vertices[++di] = colfilla[i * 4 + 1];
		vertices[++di] = colfilla[i * 4 + 2];
		vertices[++di] = colfilla[i * 4 + 3];
	}
	this.vertexBuffer.unlock();
	this.indexBuffer = new kha_graphics4_IndexBuffer(indices.length,iron_data_GreasePencilData.usage);
	var indicesA = this.indexBuffer.lock();
	var _g11 = 0;
	var _g2 = indicesA.length;
	while(_g11 < _g2) {
		var i1 = _g11++;
		indicesA[i1] = indices[i1];
	}
	this.indexBuffer.unlock();
	this.vertexStrokeBuffer = new kha_graphics4_VertexBuffer(this.numVertices,iron_data_GreasePencilData.structure,iron_data_GreasePencilData.usage);
	vertices = this.vertexStrokeBuffer.lock();
	di = -1;
	var _g12 = 0;
	var _g3 = this.numVertices;
	while(_g12 < _g3) {
		var i2 = _g12++;
		vertices[++di] = va[i2 * 3];
		vertices[++di] = va[i2 * 3 + 1];
		vertices[++di] = va[i2 * 3 + 2];
		vertices[++di] = cola[i2 * 4];
		vertices[++di] = cola[i2 * 4 + 1];
		vertices[++di] = cola[i2 * 4 + 2];
		vertices[++di] = cola[i2 * 4 + 3];
	}
	this.vertexStrokeBuffer.unlock();
	if(iron_data_GreasePencilData.frameEnd < this.raw.frame_number) {
		iron_data_GreasePencilData.frameEnd = this.raw.frame_number;
	}
};
$hxClasses["iron.data.GreasePencilFrame"] = iron_data_GreasePencilFrame;
iron_data_GreasePencilFrame.__name__ = ["iron","data","GreasePencilFrame"];
iron_data_GreasePencilFrame.prototype = {
	'delete': function() {
		this.vertexBuffer["delete"]();
	}
	,__class__: iron_data_GreasePencilFrame
};
var iron_data_LampData = function(raw,done) {
	this.colorTexture = null;
	var _gthis = this;
	iron_data_Data.call(this);
	this.raw = raw;
	this.name = raw.name;
	if(raw.color_texture != null) {
		iron_data_Data.getImage(raw.color_texture,function(image) {
			_gthis.colorTexture = image;
			done(_gthis);
		});
	} else {
		done(this);
	}
};
$hxClasses["iron.data.LampData"] = iron_data_LampData;
iron_data_LampData.__name__ = ["iron","data","LampData"];
iron_data_LampData.typeToInt = function(s) {
	switch(s) {
	case "area":
		return 3;
	case "point":
		return 1;
	case "spot":
		return 2;
	case "sun":
		return 0;
	default:
		return 0;
	}
};
iron_data_LampData.parse = function(name,id,done) {
	iron_data_Data.getSceneRaw(name,function(format) {
		var raw = iron_data_Data.getLampRawByName(format.lamp_datas,id);
		if(raw == null) {
			haxe_Log.trace("Lamp data \"" + id + "\" not found!",{ fileName : "LampData.hx", lineNumber : 42, className : "iron.data.LampData", methodName : "parse"});
			done(null);
		}
		new iron_data_LampData(raw,done);
	});
};
iron_data_LampData.__super__ = iron_data_Data;
iron_data_LampData.prototype = $extend(iron_data_Data.prototype,{
	__class__: iron_data_LampData
});
var iron_data_MaterialData = function(raw,done) {
	this.contexts = null;
	var _gthis = this;
	iron_data_Data.call(this);
	this.uid = ++iron_data_MaterialData.uidCounter;
	this.raw = raw;
	this.name = raw.name;
	var shaderName = raw.shader.split("/");
	iron_data_Data.getShader(shaderName[0],shaderName[1],raw.override_context,function(b) {
		_gthis.shader = b;
		var length = raw.contexts.length;
		var this1 = new Array(length);
		_gthis.contexts = this1;
		var contextsLoaded = 0;
		var _g1 = 0;
		var _g = raw.contexts.length;
		while(_g1 < _g) {
			var i = [_g1++];
			var c = raw.contexts[i[0]];
			new iron_data_MaterialContext(c,(function(i1) {
				return function(self) {
					_gthis.contexts[i1[0]] = self;
					contextsLoaded += 1;
					if(contextsLoaded == raw.contexts.length) {
						done(_gthis);
					}
				};
			})(i));
		}
	});
};
$hxClasses["iron.data.MaterialData"] = iron_data_MaterialData;
iron_data_MaterialData.__name__ = ["iron","data","MaterialData"];
iron_data_MaterialData.parse = function(file,name,done) {
	iron_data_Data.getSceneRaw(file,function(format) {
		var raw = iron_data_Data.getMaterialRawByName(format.material_datas,name);
		if(raw == null) {
			haxe_Log.trace("Material data \"" + name + "\" not found!",{ fileName : "MaterialData.hx", lineNumber : 48, className : "iron.data.MaterialData", methodName : "parse"});
			done(null);
		}
		new iron_data_MaterialData(raw,done);
	});
};
iron_data_MaterialData.__super__ = iron_data_Data;
iron_data_MaterialData.prototype = $extend(iron_data_Data.prototype,{
	getContext: function(name) {
		var _g = 0;
		var _g1 = this.contexts;
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			if(HxOverrides.substr(c.raw.name,0,name.length) == name) {
				return c;
			}
		}
		return null;
	}
	,toString: function() {
		return "Material " + this.name;
	}
	,__class__: iron_data_MaterialData
});
var iron_data_MaterialContext = function(raw,done) {
	this.id = 0;
	this.textures = null;
	var _gthis = this;
	this.raw = raw;
	this.id = iron_data_MaterialContext.num++;
	if(raw.bind_textures != null && raw.bind_textures.length > 0) {
		var length = raw.bind_textures.length;
		var this1 = new Array(length);
		this.textures = this1;
		var texturesLoaded = 0;
		var _g1 = 0;
		var _g = raw.bind_textures.length;
		while(_g1 < _g) {
			var i = [_g1++];
			var tex = [raw.bind_textures[i[0]]];
			if(tex[0].file == "") {
				texturesLoaded += 1;
				if(texturesLoaded == raw.bind_textures.length) {
					done(this);
				}
				continue;
			}
			iron_data_Data.getImage(tex[0].file,(function(tex1,i1) {
				return function(image) {
					_gthis.textures[i1[0]] = image;
					texturesLoaded += 1;
					if(tex1[0].mipmaps != null) {
						var mipmaps = [];
						while(mipmaps.length < tex1[0].mipmaps.length) mipmaps.push(null);
						var mipmapsLoaded = 0;
						var _g3 = 0;
						var _g2 = tex1[0].mipmaps.length;
						while(_g3 < _g2) {
							var j = [_g3++];
							var name = tex1[0].mipmaps[j[0]];
							iron_data_Data.getImage(name,(function(j1,tex2) {
								return function(mipimg) {
									mipmaps[j1[0]] = mipimg;
									mipmapsLoaded += 1;
									if(mipmapsLoaded == tex2[0].mipmaps.length) {
										image.setMipmaps(mipmaps);
										tex2[0].mipmaps = null;
										tex2[0].generate_mipmaps = false;
										if(texturesLoaded == raw.bind_textures.length) {
											done(_gthis);
										}
									}
								};
							})(j,tex1));
						}
					} else if(tex1[0].generate_mipmaps == true && image != null) {
						image.generateMipmaps(1000);
						tex1[0].mipmaps = null;
						tex1[0].generate_mipmaps = false;
						if(texturesLoaded == raw.bind_textures.length) {
							done(_gthis);
						}
					} else if(texturesLoaded == raw.bind_textures.length) {
						done(_gthis);
					}
				};
			})(tex,i),false,tex[0].format != null ? tex[0].format : "RGBA32");
		}
	} else {
		done(this);
	}
};
$hxClasses["iron.data.MaterialContext"] = iron_data_MaterialContext;
iron_data_MaterialContext.__name__ = ["iron","data","MaterialContext"];
iron_data_MaterialContext.prototype = {
	setTextureParameters: function(g,textureIndex,context,unitIndex) {
		var tex = this.raw.bind_textures[textureIndex];
		if(tex.params_set == null) {
			context.setTextureParameters(g,unitIndex,tex);
			tex.params_set = true;
		}
	}
	,__class__: iron_data_MaterialContext
};
var iron_data_Mesh = function(indices,materialIndices,positions,normals,uvs,uvs1,cols,tangents,bones,weights,usage,instanceOffsets) {
	this.skeletonTransformsI = null;
	this.skeletonTransforms = null;
	this.skeletonBones = null;
	this.skeletonBoneRefs = null;
	this.skinBoneWeights = null;
	this.skinBoneIndices = null;
	this.skinBoneCounts = null;
	this.skinTransformI = null;
	this.skinTransform = null;
	this.aabb = null;
	this.instanceCount = 0;
	this.instanced = false;
	this.built = false;
	if(usage == null) {
		usage = kha_graphics4_Usage.StaticUsage;
	}
	this.ids = indices;
	this.materialIndices = materialIndices;
	this.usage = usage;
	this.positions = positions;
	this.normals = normals;
	this.uvs = uvs;
	this.uvs1 = uvs1;
	this.cols = cols;
	this.tangents = tangents;
	this.bones = bones;
	this.weights = weights;
	this.instanceOffsets = instanceOffsets;
	this.struct = iron_data_Mesh.getVertexStructure(positions != null,normals != null,uvs != null,uvs1 != null,cols != null,tangents != null,bones != null,weights != null);
	this.structLength = this.struct.byteSize() / 4 | 0;
};
$hxClasses["iron.data.Mesh"] = iron_data_Mesh;
iron_data_Mesh.__name__ = ["iron","data","Mesh"];
iron_data_Mesh.getVertexStructure = function(pos,nor,tex,tex1,col,tang,bone,weight) {
	if(weight == null) {
		weight = false;
	}
	if(bone == null) {
		bone = false;
	}
	if(tang == null) {
		tang = false;
	}
	if(col == null) {
		col = false;
	}
	if(tex1 == null) {
		tex1 = false;
	}
	if(tex == null) {
		tex = false;
	}
	if(nor == null) {
		nor = false;
	}
	if(pos == null) {
		pos = false;
	}
	var structure = new kha_graphics4_VertexStructure();
	if(pos) {
		structure.add("pos",kha_graphics4_VertexData.Float3);
	}
	if(nor) {
		structure.add("nor",kha_graphics4_VertexData.Float3);
	}
	if(tex) {
		structure.add("tex",kha_graphics4_VertexData.Float2);
	}
	if(tex1) {
		structure.add("tex1",kha_graphics4_VertexData.Float2);
	}
	if(col) {
		structure.add("col",kha_graphics4_VertexData.Float3);
	}
	if(tang) {
		structure.add("tang",kha_graphics4_VertexData.Float3);
	}
	if(bone) {
		structure.add("bone",kha_graphics4_VertexData.Float4);
	}
	if(weight) {
		structure.add("weight",kha_graphics4_VertexData.Float4);
	}
	return structure;
};
iron_data_Mesh.buildVertices = function(vertices,pa,na,uva,uva1,ca,tanga,bonea,weighta,offset) {
	if(offset == null) {
		offset = 0;
	}
	var numVertices = pa.length / 3 | 0;
	var di = -1 + offset;
	var _g1 = 0;
	var _g = numVertices;
	while(_g1 < _g) {
		var i = _g1++;
		vertices[++di] = pa[i * 3];
		vertices[++di] = pa[i * 3 + 1];
		vertices[++di] = pa[i * 3 + 2];
		if(na != null) {
			vertices[++di] = na[i * 3];
			vertices[++di] = na[i * 3 + 1];
			vertices[++di] = na[i * 3 + 2];
		}
		if(uva != null) {
			vertices[++di] = uva[i * 2];
			vertices[++di] = uva[i * 2 + 1];
		}
		if(uva1 != null) {
			vertices[++di] = uva1[i * 2];
			vertices[++di] = uva1[i * 2 + 1];
		}
		if(ca != null) {
			vertices[++di] = ca[i * 3];
			vertices[++di] = ca[i * 3 + 1];
			vertices[++di] = ca[i * 3 + 2];
		}
		if(tanga != null) {
			vertices[++di] = tanga[i * 3];
			vertices[++di] = tanga[i * 3 + 1];
			vertices[++di] = tanga[i * 3 + 2];
		}
		if(bonea != null) {
			vertices[++di] = bonea[i * 4];
			vertices[++di] = bonea[i * 4 + 1];
			vertices[++di] = bonea[i * 4 + 2];
			vertices[++di] = bonea[i * 4 + 3];
		}
		if(weighta != null) {
			vertices[++di] = weighta[i * 4];
			vertices[++di] = weighta[i * 4 + 1];
			vertices[++di] = weighta[i * 4 + 2];
			vertices[++di] = weighta[i * 4 + 3];
		}
	}
};
iron_data_Mesh.prototype = {
	'delete': function() {
		this.vertexBuffer["delete"]();
		var _g = 0;
		var _g1 = this.indexBuffers;
		while(_g < _g1.length) {
			var buf = _g1[_g];
			++_g;
			buf["delete"]();
		}
	}
	,setupInstanced: function(offsets,usage) {
		this.offsetVecs = [];
		var _g1 = 0;
		var _g = offsets.length / 3 | 0;
		while(_g1 < _g) {
			var i = _g1++;
			this.offsetVecs.push(new iron_math_Vec4(offsets[i * 3],offsets[i * 3 + 1],offsets[i * 3 + 2]));
		}
		this.instanced = true;
		this.instanceCount = offsets.length / 3 | 0;
		var structure = new kha_graphics4_VertexStructure();
		structure.add("off",kha_graphics4_VertexData.Float3);
		var instVB = new kha_graphics4_VertexBuffer(this.instanceCount,structure,usage,1);
		var vertices = instVB.lock();
		var _g11 = 0;
		var _g2 = vertices.length;
		while(_g11 < _g2) {
			var i1 = _g11++;
			vertices[i1] = offsets[i1];
		}
		instVB.unlock();
		this.instancedVertexBuffers = [this.vertexBuffer,instVB];
	}
	,sortInstanced: function(camX,camY,camZ) {
		var _g = 0;
		var _g1 = this.offsetVecs;
		while(_g < _g1.length) {
			var v = _g1[_g];
			++_g;
			var vx = camX - v.x;
			var vy = camY - v.y;
			var vz = camZ - v.z;
			v.w = Math.sqrt(vx * vx + vy * vy + vz * vz);
		}
		this.offsetVecs.sort(function(a,b) {
			if(a.w > b.w) {
				return 1;
			} else {
				return -1;
			}
		});
		var vb = this.instancedVertexBuffers[1];
		var vertices = vb.lock();
		var _g11 = 0;
		var _g2 = vertices.length / 3 | 0;
		while(_g11 < _g2) {
			var i = _g11++;
			vertices[i * 3] = this.offsetVecs[i].x;
			vertices[i * 3 + 1] = this.offsetVecs[i].y;
			vertices[i * 3 + 2] = this.offsetVecs[i].z;
		}
		vb.unlock();
	}
	,copyVertices: function(vertices,offset) {
		if(offset == null) {
			offset = 0;
		}
		iron_data_Mesh.buildVertices(vertices,this.positions,this.normals,this.uvs,this.uvs1,this.cols,this.tangents,this.bones,this.weights,offset);
	}
	,getVerticesLength: function() {
		var res = this.positions.length;
		if(this.normals != null) {
			res += this.normals.length;
		}
		if(this.uvs != null) {
			res += this.uvs.length;
		}
		if(this.uvs1 != null) {
			res += this.uvs1.length;
		}
		if(this.cols != null) {
			res += this.cols.length;
		}
		if(this.tangents != null) {
			res += this.tangents.length;
		}
		if(this.bones != null) {
			res += this.bones.length;
		}
		if(this.weights != null) {
			res += this.weights.length;
		}
		return res;
	}
	,build: function() {
		if(this.built) {
			return;
		}
		this.vertexBuffer = new kha_graphics4_VertexBuffer(this.positions.length / 3 | 0,this.struct,this.usage);
		this.vertices = this.vertexBuffer.lock();
		iron_data_Mesh.buildVertices(this.vertices,this.positions,this.normals,this.uvs,this.uvs1,this.cols,this.tangents,this.bones,this.weights);
		this.vertexBuffer.unlock();
		this.indexBuffers = [];
		this.indices = [];
		var _g = 0;
		var _g1 = this.ids;
		while(_g < _g1.length) {
			var id = _g1[_g];
			++_g;
			var indexBuffer = new kha_graphics4_IndexBuffer(id.length,this.usage);
			var indicesA = indexBuffer.lock();
			var _g3 = 0;
			var _g2 = indicesA.length;
			while(_g3 < _g2) {
				var i = _g3++;
				indicesA[i] = id[i];
			}
			indexBuffer.unlock();
			this.indexBuffers.push(indexBuffer);
			this.indices.push(indicesA);
		}
		if(this.instanceOffsets != null) {
			this.setupInstanced(this.instanceOffsets,this.usage);
		}
		this.built = true;
	}
	,getVerticesCount: function() {
		return this.positions.length / 3 | 0;
	}
	,initSkeletonBones: function(bones) {
		this.skeletonBones = [];
		var _g = 0;
		var _g1 = this.skeletonBoneRefs;
		while(_g < _g1.length) {
			var s = _g1[_g];
			++_g;
			var _g2 = 0;
			while(_g2 < bones.length) {
				var b = bones[_g2];
				++_g2;
				if(b.name == s) {
					this.skeletonBones.push(b);
				}
			}
		}
	}
	,initSkeletonTransforms: function(transforms) {
		this.skeletonTransforms = [];
		this.skeletonTransformsI = [];
		var _g = 0;
		while(_g < transforms.length) {
			var t = transforms[_g];
			++_g;
			var m = iron_math_Mat4.fromArray(t);
			this.skeletonTransforms.push(m);
			var mi = iron_math_Mat4.identity();
			mi.getInverse(m);
			this.skeletonTransformsI.push(mi);
		}
	}
	,initSkinTransform: function(t) {
		this.skinTransform = iron_math_Mat4.fromArray(t);
		this.skinTransformI = iron_math_Mat4.identity();
		this.skinTransformI.getInverse(this.skinTransform);
	}
	,calculateAABB: function() {
		var aabbMin = new iron_math_Vec4(-0.01,-0.01,-0.01);
		var aabbMax = new iron_math_Vec4(0.01,0.01,0.01);
		this.aabb = new iron_math_Vec4();
		var i = 0;
		while(i < this.positions.length) {
			if(this.positions[i] > aabbMax.x) {
				aabbMax.x = this.positions[i];
			}
			if(this.positions[i + 1] > aabbMax.y) {
				aabbMax.y = this.positions[i + 1];
			}
			if(this.positions[i + 2] > aabbMax.z) {
				aabbMax.z = this.positions[i + 2];
			}
			if(this.positions[i] < aabbMin.x) {
				aabbMin.x = this.positions[i];
			}
			if(this.positions[i + 1] < aabbMin.y) {
				aabbMin.y = this.positions[i + 1];
			}
			if(this.positions[i + 2] < aabbMin.z) {
				aabbMin.z = this.positions[i + 2];
			}
			i += 3;
		}
		this.aabb.x = Math.abs(aabbMin.x) + Math.abs(aabbMax.x);
		this.aabb.y = Math.abs(aabbMin.y) + Math.abs(aabbMax.y);
		this.aabb.z = Math.abs(aabbMin.z) + Math.abs(aabbMax.z);
	}
	,__class__: iron_data_Mesh
};
var iron_data_MeshBatch = function() {
	this.nonBatched = [];
	this.buckets = new haxe_ds_ObjectMap();
};
$hxClasses["iron.data.MeshBatch"] = iron_data_MeshBatch;
iron_data_MeshBatch.__name__ = ["iron","data","MeshBatch"];
iron_data_MeshBatch.isLod = function(m) {
	if(m.raw != null && m.raw.lods != null) {
		return m.raw.lods.length > 0;
	} else {
		return false;
	}
};
iron_data_MeshBatch.isBatchable = function(m) {
	return !(m.data.isSkinned || m.materials.length > 1 || iron_data_MeshBatch.isLod(m) || m.data.mesh.instanced);
};
iron_data_MeshBatch.prototype = {
	remove: function() {
		var b = this.buckets.iterator();
		while(b.hasNext()) {
			var b1 = b.next();
			this.remove();
		}
	}
	,addMesh: function(m) {
		if(!iron_data_MeshBatch.isBatchable(m)) {
			this.nonBatched.push(m);
			return;
		}
		var shader = m.materials[0].shader;
		var b = this.buckets.h[shader.__id__];
		if(b == null) {
			b = new iron_data_Bucket(shader);
			this.buckets.set(shader,b);
		}
		b.addMesh(m);
	}
	,removeMesh: function(m) {
		var shader = m.materials[0].shader;
		var b = this.buckets.h[shader.__id__];
		if(b != null) {
			b.removeMesh(m);
		}
	}
	,render: function(g,context,camera,lamp,bindParams) {
		var b = this.buckets.iterator();
		while(b.hasNext()) {
			var b1 = b.next();
			if(!b1.batched) {
				b1.batch();
			}
			if(b1.meshes.length > 0 && b1.meshes[0].cullMaterial(context,camera)) {
				continue;
			}
			g.setPipeline(b1.shader.getContext(context).pipeState);
			g.setVertexBuffer(b1.vertexBuffer);
			g.setIndexBuffer(b1.indexBuffer);
			iron_data_RenderPath.sortMeshes(b1.meshes,camera);
			var _g = 0;
			var _g1 = b1.meshes;
			while(_g < _g1.length) {
				var m = _g1[_g];
				++_g;
				m.renderBatch(g,context,camera,lamp,bindParams,m.data.start,m.data.count);
			}
		}
		var _g2 = 0;
		var _g11 = this.nonBatched;
		while(_g2 < _g11.length) {
			var m1 = _g11[_g2];
			++_g2;
			m1.render(g,context,camera,lamp,bindParams);
		}
	}
	,__class__: iron_data_MeshBatch
};
var iron_data_Bucket = function(shader) {
	this.meshes = [];
	this.batched = false;
	this.shader = shader;
};
$hxClasses["iron.data.Bucket"] = iron_data_Bucket;
iron_data_Bucket.__name__ = ["iron","data","Bucket"];
iron_data_Bucket.prototype = {
	remove: function() {
		this.vertexBuffer["delete"]();
		this.indexBuffer["delete"]();
		this.meshes = [];
	}
	,addMesh: function(m) {
		this.meshes.push(m);
	}
	,removeMesh: function(m) {
		HxOverrides.remove(this.meshes,m);
	}
	,batch: function() {
		this.batched = true;
		var vcount = 0;
		var icount = 0;
		var mdatas = [];
		var _g = 0;
		var _g1 = this.meshes;
		while(_g < _g1.length) {
			var m = _g1[_g];
			++_g;
			var mdFound = false;
			var _g2 = 0;
			while(_g2 < mdatas.length) {
				var md = mdatas[_g2];
				++_g2;
				if(m.data == md) {
					mdFound = true;
					break;
				}
			}
			if(!mdFound) {
				mdatas.push(m.data);
				m.data.start = icount;
				m.data.count = m.data.mesh.ids[0].length;
				icount += m.data.count;
				vcount += m.data.mesh.getVerticesLength();
			}
		}
		this.vertexBuffer = new kha_graphics4_VertexBuffer(vcount,this.shader.structure,kha_graphics4_Usage.StaticUsage);
		var vertices = this.vertexBuffer.lock();
		var offset = 0;
		var _g3 = 0;
		while(_g3 < mdatas.length) {
			var md1 = mdatas[_g3];
			++_g3;
			md1.mesh.copyVertices(vertices,offset);
			offset += md1.mesh.getVerticesLength();
		}
		this.vertexBuffer.unlock();
		this.indexBuffer = new kha_graphics4_IndexBuffer(icount,kha_graphics4_Usage.StaticUsage);
		var indices = this.indexBuffer.lock();
		var di = -1;
		var offset1 = 0;
		var _g4 = 0;
		while(_g4 < mdatas.length) {
			var md2 = mdatas[_g4];
			++_g4;
			var _g21 = 0;
			var _g11 = md2.mesh.ids[0].length;
			while(_g21 < _g11) {
				var i = _g21++;
				indices[++di] = md2.mesh.ids[0][i] + offset1;
			}
			offset1 += md2.mesh.getVerticesLength() / this.shader.structureLength | 0;
		}
		this.indexBuffer.unlock();
	}
	,__class__: iron_data_Bucket
};
var iron_data_MeshData = function(raw,done) {
	this.bones = [];
	this.count = -1;
	this.start = 0;
	iron_data_Data.call(this);
	this.raw = raw;
	this.name = raw.name;
	var indices = [];
	var materialIndices = [];
	var _g = 0;
	var _g1 = raw.mesh.index_arrays;
	while(_g < _g1.length) {
		var ind = _g1[_g];
		++_g;
		indices.push(ind.values);
		materialIndices.push(ind.material);
	}
	var paVA = this.getVertexArray("position");
	var pa = paVA != null ? paVA.values : null;
	var naVA = this.getVertexArray("normal");
	var na = naVA != null ? naVA.values : null;
	var uvaVA = this.getVertexArray("texcoord");
	var uva = uvaVA != null ? uvaVA.values : null;
	var uva1VA = this.getVertexArray("texcoord1");
	var uva1 = uva1VA != null ? uva1VA.values : null;
	var caVA = this.getVertexArray("color");
	var ca = caVA != null ? caVA.values : null;
	var tangaVA = this.getVertexArray("tangent");
	var tanga = tangaVA != null ? tangaVA.values : null;
	this.isSkinned = raw.mesh.skin != null;
	var parsedUsage = kha_graphics4_Usage.StaticUsage;
	if(raw.mesh.dynamic_usage != null && raw.mesh.dynamic_usage == true) {
		parsedUsage = kha_graphics4_Usage.DynamicUsage;
	}
	var usage = this.isSkinned && false ? kha_graphics4_Usage.DynamicUsage : parsedUsage;
	var bonea = null;
	var weighta = null;
	if(this.isSkinned) {
		bonea = [];
		weighta = [];
		var index = 0;
		var _g11 = 0;
		var _g2 = pa.length / 3 | 0;
		while(_g11 < _g2) {
			var i = _g11++;
			var boneCount = raw.mesh.skin.bone_count_array[i];
			var _g3 = index;
			var _g21 = index + boneCount;
			while(_g3 < _g21) {
				var j = _g3++;
				bonea.push(raw.mesh.skin.bone_index_array[j]);
				weighta.push(raw.mesh.skin.bone_weight_array[j]);
			}
			var _g22 = boneCount;
			while(_g22 < 4) {
				var j1 = _g22++;
				bonea.push(0);
				weighta.push(0);
			}
			index += boneCount;
		}
	}
	this.mesh = new iron_data_Mesh(indices,materialIndices,pa,na,uva,uva1,ca,tanga,bonea,weighta,usage,raw.mesh.instance_offsets);
	done(this);
};
$hxClasses["iron.data.MeshData"] = iron_data_MeshData;
iron_data_MeshData.__name__ = ["iron","data","MeshData"];
iron_data_MeshData.newSync = function(raw) {
	return new iron_data_MeshData(raw,function(data) {
	});
};
iron_data_MeshData.parse = function(name,id,boneObjects,done) {
	iron_data_Data.getSceneRaw(name,function(format) {
		var raw = iron_data_Data.getMeshRawByName(format.mesh_datas,id);
		if(raw == null) {
			haxe_Log.trace("Mesh data \"" + id + "\" not found!",{ fileName : "MeshData.hx", lineNumber : 108, className : "iron.data.MeshData", methodName : "parse"});
			done(null);
		}
		new iron_data_MeshData(raw,function(dat) {
			if(raw.mesh.skin != null) {
				var objects = boneObjects != null ? boneObjects : format.objects;
				if(objects != null) {
					var _g = 0;
					while(_g < objects.length) {
						var o = objects[_g];
						++_g;
						iron_data_MeshData.setParents(o);
					}
					iron_data_MeshData.traverseObjects(objects,function(object) {
						if(object.type == "bone_object") {
							dat.bones.push(object);
						}
					});
				}
				dat.mesh.initSkinTransform(raw.mesh.skin.transform.values);
				dat.mesh.skinBoneCounts = raw.mesh.skin.bone_count_array;
				dat.mesh.skinBoneIndices = raw.mesh.skin.bone_index_array;
				dat.mesh.skinBoneWeights = raw.mesh.skin.bone_weight_array;
				dat.mesh.skeletonBoneRefs = raw.mesh.skin.skeleton.bone_ref_array;
				dat.mesh.initSkeletonBones(dat.bones);
				dat.mesh.initSkeletonTransforms(raw.mesh.skin.skeleton.transforms);
			}
			done(dat);
		});
	});
};
iron_data_MeshData.setParents = function(object) {
	if(object.children == null) {
		return;
	}
	var _g = 0;
	var _g1 = object.children;
	while(_g < _g1.length) {
		var o = _g1[_g];
		++_g;
		o.parent = object;
		iron_data_MeshData.setParents(o);
	}
};
iron_data_MeshData.traverseObjects = function(objects,callback) {
	var _g1 = 0;
	var _g = objects.length;
	while(_g1 < _g) {
		var i = _g1++;
		iron_data_MeshData.traverseObjectsStep(objects[i],callback);
	}
};
iron_data_MeshData.traverseObjectsStep = function(object,callback) {
	callback(object);
	if(object.children == null) {
		return;
	}
	var _g1 = 0;
	var _g = object.children.length;
	while(_g1 < _g) {
		var i = _g1++;
		iron_data_MeshData.traverseObjectsStep(object.children[i],callback);
	}
};
iron_data_MeshData.__super__ = iron_data_Data;
iron_data_MeshData.prototype = $extend(iron_data_Data.prototype,{
	'delete': function() {
		this.mesh["delete"]();
	}
	,getVertexArray: function(attrib) {
		var _g = 0;
		var _g1 = this.raw.mesh.vertex_arrays;
		while(_g < _g1.length) {
			var va = _g1[_g];
			++_g;
			if(va.attrib == attrib) {
				return va;
			}
		}
		return null;
	}
	,__class__: iron_data_MeshData
});
var iron_data_ParticleData = function(raw,done) {
	iron_data_Data.call(this);
	this.raw = raw;
	this.name = raw.name;
	done(this);
};
$hxClasses["iron.data.ParticleData"] = iron_data_ParticleData;
iron_data_ParticleData.__name__ = ["iron","data","ParticleData"];
iron_data_ParticleData.parse = function(name,id,done) {
	iron_data_Data.getSceneRaw(name,function(format) {
		var raw = iron_data_Data.getParticleRawByName(format.particle_datas,id);
		if(raw == null) {
			haxe_Log.trace("Particle data \"" + id + "\" not found!",{ fileName : "ParticleData.hx", lineNumber : 23, className : "iron.data.ParticleData", methodName : "parse"});
			done(null);
		}
		new iron_data_ParticleData(raw,done);
	});
};
iron_data_ParticleData.__super__ = iron_data_Data;
iron_data_ParticleData.prototype = $extend(iron_data_Data.prototype,{
	__class__: iron_data_ParticleData
});
var iron_data_RenderPath = function(camera) {
	this.currentMaterial = null;
	this.drawPerformed = false;
	this.loopFinished = 0;
	this.cachedShaderContexts = new haxe_ds_StringMap();
	this.currentLampIndex = 0;
	this.currentStageIndexOffset = 0;
	this.currentStageIndex = 0;
	this.currentStages = null;
	this.helpMat = iron_math_Mat4.identity();
	this.viewportScaled = false;
	this.scissorSet = false;
	this.frameScissorH = 0;
	this.frameScissorW = 0;
	this.frameScissorY = 0;
	this.frameScissorX = 0;
	this.frameScissor = false;
	var _gthis = this;
	this.camera = camera;
	this.data = camera.data;
	this.ready = false;
	this.loadStageCommands(this.data.pathdata.raw.stages,function() {
		_gthis.ready = true;
	});
};
$hxClasses["iron.data.RenderPath"] = iron_data_RenderPath;
iron_data_RenderPath.__name__ = ["iron","data","RenderPath"];
iron_data_RenderPath.lampCastShadow = function(rp) {
	return (rp.lamps.length > 0 ? rp.lamps[rp.currentLampIndex] : null).data.raw.cast_shadow;
};
iron_data_RenderPath.lampIsSun = function(rp) {
	return (rp.lamps.length > 0 ? rp.lamps[rp.currentLampIndex] : null).data.raw.type == "sun";
};
iron_data_RenderPath.voxelize = function(rp) {
	if(++iron_data_RenderPath.voxelized > 2) {
		return false;
	} else {
		return true;
	}
};
iron_data_RenderPath.createScreenAlignedData = function() {
	var data = [-1.0,-1.0,3.0,-1.0,-1.0,3.0];
	var indices = [0,1,2];
	var structure = new kha_graphics4_VertexStructure();
	structure.add("pos",kha_graphics4_VertexData.Float2);
	iron_data_RenderPath.screenAlignedVB = new kha_graphics4_VertexBuffer(data.length / (structure.byteSize() / 4 | 0) | 0,structure,kha_graphics4_Usage.StaticUsage);
	var vertices = iron_data_RenderPath.screenAlignedVB.lock();
	var _g1 = 0;
	var _g = vertices.length;
	while(_g1 < _g) {
		var i = _g1++;
		vertices[i] = data[i];
	}
	iron_data_RenderPath.screenAlignedVB.unlock();
	iron_data_RenderPath.screenAlignedIB = new kha_graphics4_IndexBuffer(indices.length,kha_graphics4_Usage.StaticUsage);
	var id = iron_data_RenderPath.screenAlignedIB.lock();
	var _g11 = 0;
	var _g2 = id.length;
	while(_g11 < _g2) {
		var i1 = _g11++;
		id[i1] = indices[i1];
	}
	iron_data_RenderPath.screenAlignedIB.unlock();
};
iron_data_RenderPath.createRectData = function() {
	var data = [-1.0,-1.0,1.0,-1.0,1.0,1.0,-1.0,1.0];
	var indices = [0,1,2,0,2,3];
	var structure = new kha_graphics4_VertexStructure();
	structure.add("pos",kha_graphics4_VertexData.Float2);
	iron_data_RenderPath.rectVB = new kha_graphics4_VertexBuffer(data.length / (structure.byteSize() / 4 | 0) | 0,structure,kha_graphics4_Usage.StaticUsage);
	var vertices = iron_data_RenderPath.rectVB.lock();
	var _g1 = 0;
	var _g = vertices.length;
	while(_g1 < _g) {
		var i = _g1++;
		vertices[i] = data[i];
	}
	iron_data_RenderPath.rectVB.unlock();
	iron_data_RenderPath.rectIB = new kha_graphics4_IndexBuffer(indices.length,kha_graphics4_Usage.StaticUsage);
	var id = iron_data_RenderPath.rectIB.lock();
	var _g11 = 0;
	var _g2 = id.length;
	while(_g11 < _g2) {
		var i1 = _g11++;
		id[i1] = indices[i1];
	}
	iron_data_RenderPath.rectIB.unlock();
};
iron_data_RenderPath.createBoxData = function() {
	var data = [-1.0,1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,1.0,-1.0,1.0,1.0,-1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,-1.0,-1.0,1.0,-1.0,1.0,1.0,1.0,1.0,-1.0,1.0,1.0,-1.0,-1.0,1.0,1.0,-1.0,-1.0,-1.0,-1.0,1.0,-1.0,-1.0,1.0,-1.0,1.0,-1.0,-1.0,1.0,-1.0,-1.0,-1.0,-1.0,1.0,-1.0,1.0,1.0,-1.0,1.0,-1.0,-1.0,1.0,-1.0,1.0,1.0,1.0,1.0,-1.0,1.0,1.0,-1.0,-1.0,1.0];
	var indices = [0,1,2,0,2,3,4,5,6,4,6,7,8,9,10,8,10,11,12,13,14,12,14,15,16,17,18,16,18,19,20,21,22,20,22,23];
	var structure = new kha_graphics4_VertexStructure();
	structure.add("pos",kha_graphics4_VertexData.Float3);
	iron_data_RenderPath.boxVB = new kha_graphics4_VertexBuffer(data.length / (structure.byteSize() / 4 | 0) | 0,structure,kha_graphics4_Usage.StaticUsage);
	var vertices = iron_data_RenderPath.boxVB.lock();
	var _g1 = 0;
	var _g = vertices.length;
	while(_g1 < _g) {
		var i = _g1++;
		vertices[i] = data[i];
	}
	iron_data_RenderPath.boxVB.unlock();
	iron_data_RenderPath.boxIB = new kha_graphics4_IndexBuffer(indices.length,kha_graphics4_Usage.StaticUsage);
	var id = iron_data_RenderPath.boxIB.lock();
	var _g11 = 0;
	var _g2 = id.length;
	while(_g11 < _g2) {
		var i1 = _g11++;
		id[i1] = indices[i1];
	}
	iron_data_RenderPath.boxIB.unlock();
};
iron_data_RenderPath.createSkydomeData = function() {
	var structure = new kha_graphics4_VertexStructure();
	structure.add("pos",kha_graphics4_VertexData.Float3);
	structure.add("nor",kha_graphics4_VertexData.Float3);
	var structLength = structure.byteSize() / 4 | 0;
	var pos = iron_data_ConstData.skydomePos;
	var nor = iron_data_ConstData.skydomeNor;
	iron_data_RenderPath.skydomeVB = new kha_graphics4_VertexBuffer(pos.length / 3 | 0,structure,kha_graphics4_Usage.StaticUsage);
	var vertices = iron_data_RenderPath.skydomeVB.lock();
	var _g1 = 0;
	var _g = vertices.length / structLength | 0;
	while(_g1 < _g) {
		var i = _g1++;
		vertices[i * structLength] = pos[i * 3];
		vertices[i * structLength + 1] = pos[i * 3 + 1];
		vertices[i * structLength + 2] = pos[i * 3 + 2];
		vertices[i * structLength + 3] = -nor[i * 3];
		vertices[i * structLength + 4] = -nor[i * 3 + 1];
		vertices[i * structLength + 5] = -nor[i * 3 + 2];
	}
	iron_data_RenderPath.skydomeVB.unlock();
	var indices = iron_data_ConstData.skydomeIndices;
	iron_data_RenderPath.skydomeIB = new kha_graphics4_IndexBuffer(indices.length,kha_graphics4_Usage.StaticUsage);
	var id = iron_data_RenderPath.skydomeIB.lock();
	var _g11 = 0;
	var _g2 = id.length;
	while(_g11 < _g2) {
		var i1 = _g11++;
		id[i1] = indices[i1];
	}
	iron_data_RenderPath.skydomeIB.unlock();
};
iron_data_RenderPath.createSphereData = function() {
	var structure = new kha_graphics4_VertexStructure();
	structure.add("pos",kha_graphics4_VertexData.Float3);
	var data = iron_data_ConstData.spherePos;
	iron_data_RenderPath.sphereVB = new kha_graphics4_VertexBuffer(data.length / (structure.byteSize() / 4 | 0) | 0,structure,kha_graphics4_Usage.StaticUsage);
	var vertices = iron_data_RenderPath.sphereVB.lock();
	var _g1 = 0;
	var _g = vertices.length;
	while(_g1 < _g) {
		var i = _g1++;
		vertices[i] = data[i];
	}
	iron_data_RenderPath.sphereVB.unlock();
	var indices = iron_data_ConstData.sphereIndices;
	iron_data_RenderPath.sphereIB = new kha_graphics4_IndexBuffer(indices.length,kha_graphics4_Usage.StaticUsage);
	var id = iron_data_RenderPath.sphereIB.lock();
	var _g11 = 0;
	var _g2 = id.length;
	while(_g11 < _g2) {
		var i1 = _g11++;
		id[i1] = indices[i1];
	}
	iron_data_RenderPath.sphereIB.unlock();
};
iron_data_RenderPath.createConeData = function() {
	var structure = new kha_graphics4_VertexStructure();
	structure.add("pos",kha_graphics4_VertexData.Float3);
	var data = iron_data_ConstData.conePos;
	iron_data_RenderPath.coneVB = new kha_graphics4_VertexBuffer(data.length / (structure.byteSize() / 4 | 0) | 0,structure,kha_graphics4_Usage.StaticUsage);
	var vertices = iron_data_RenderPath.coneVB.lock();
	var _g1 = 0;
	var _g = vertices.length;
	while(_g1 < _g) {
		var i = _g1++;
		vertices[i] = data[i];
	}
	iron_data_RenderPath.coneVB.unlock();
	var indices = iron_data_ConstData.coneIndices;
	iron_data_RenderPath.coneIB = new kha_graphics4_IndexBuffer(indices.length,kha_graphics4_Usage.StaticUsage);
	var id = iron_data_RenderPath.coneIB.lock();
	var _g11 = 0;
	var _g2 = id.length;
	while(_g11 < _g2) {
		var i1 = _g11++;
		id[i1] = indices[i1];
	}
	iron_data_RenderPath.coneIB.unlock();
};
iron_data_RenderPath.sortMeshes = function(meshes,camera) {
	var camX = camera.transform.matrix.self._30;
	var camY = camera.transform.matrix.self._31;
	var camZ = camera.transform.matrix.self._32;
	var _g = 0;
	while(_g < meshes.length) {
		var mesh = meshes[_g];
		++_g;
		var vx = camX - mesh.transform.matrix.self._30;
		var vy = camY - mesh.transform.matrix.self._31;
		var vz = camZ - mesh.transform.matrix.self._32;
		mesh.cameraDistance = Math.sqrt(vx * vx + vy * vy + vz * vz);
	}
	meshes.sort(function(a,b) {
		if(a.cameraDistance > b.cameraDistance) {
			return 1;
		} else {
			return -1;
		}
	});
};
iron_data_RenderPath.prototype = {
	unload: function() {
		this.data.pathdata.unload();
	}
	,getLamp: function(index) {
		if(this.lamps.length > 0) {
			return this.lamps[index];
		} else {
			return null;
		}
	}
	,renderFrame: function(g,root,lamps) {
		if(!this.ready) {
			return;
		}
		this.frameRenderTarget = this.camera.data.mirror == null ? g : this.camera.data.mirror.get_g4();
		this.currentRenderTarget = this.frameRenderTarget;
		this.currentRenderTargetW = kha_System.windowWidth();
		this.currentRenderTargetH = kha_System.windowHeight();
		this.currentRenderTargetD = 1;
		this.currentRenderTargetCube = false;
		this.currentRenderTargetFace = -1;
		this.meshesSorted = false;
		this.lamps = lamps;
		this.currentLampIndex = 0;
		var _g = 0;
		while(_g < lamps.length) {
			var l = lamps[_g];
			++_g;
			if(l.visible) {
				l.buildMatrices(this.camera);
			}
		}
		this.currentStages = this.data.pathdata.raw.stages;
		this.callCurrentStages(root);
	}
	,callCurrentStages: function(root) {
		var i = 0;
		while(i < this.currentStages.length) {
			this.currentStageIndex = i;
			var f = this.commandToFunction(this.currentStages[i].command);
			f(this.currentStages[i].params,root);
			i += 1 + this.currentStageIndexOffset;
			this.currentStageIndexOffset = 0;
		}
	}
	,setTarget: function(params,root) {
		if(iron_data_RenderPath.lastPongRT != null && this.drawPerformed && this.loopFinished == 0) {
			iron_data_RenderPath.lastPongRT.pongState = !iron_data_RenderPath.lastPongRT.pongState;
			iron_data_RenderPath.lastPongRT = null;
		}
		this.drawPerformed = false;
		var target = params[1];
		if(target == "") {
			this.currentRenderTarget = this.frameRenderTarget;
			this.currentRenderTargetW = kha_System.windowWidth();
			this.currentRenderTargetH = kha_System.windowHeight();
			this.currentRenderTargetD = 1;
			this.currentRenderTargetCube = false;
			this.currentRenderTargetFace = -1;
			if(this.frameScissor) {
				this.setFrameScissor();
			}
			var g = this.currentRenderTarget;
			g.begin(null);
		} else {
			var _this = this.data.pathdata.renderTargets;
			var rt = __map_reserved[target] != null ? _this.getReserved(target) : _this.h[target];
			if(target == "shadowMap" && (this.lamps.length > 0 ? this.lamps[this.currentLampIndex] : null).data.raw.shadowmap_cube) {
				var _this1 = this.data.pathdata.renderTargets;
				var key = target + "Cube";
				if(__map_reserved[key] != null) {
					rt = _this1.getReserved(key);
				} else {
					rt = _this1.h[key];
				}
				if(rt == null) {
					var size = (this.lamps.length > 0 ? this.lamps[this.currentLampIndex] : null).data.raw.shadowmap_size / 2 | 0;
					var t = { name : target + "Cube", width : size, height : size, format : "DEPTH16", is_cubemap : true};
					rt = this.data.pathdata.createRenderTarget(t);
				}
			}
			if(target == "shadowMap" && rt == null) {
				var size1 = (this.lamps.length > 0 ? this.lamps[this.currentLampIndex] : null).data.raw.shadowmap_size;
				var t1 = { name : target, width : size1, height : size1, format : "DEPTH16"};
				rt = this.data.pathdata.createRenderTarget(t1);
			}
			var additionalImages = null;
			if(params.length > 2) {
				additionalImages = [];
				var _g1 = 2;
				var _g = params.length;
				while(_g1 < _g) {
					var i = _g1++;
					var _this2 = this.data.pathdata.renderTargets;
					var key1 = params[i];
					var t2 = __map_reserved[key1] != null ? _this2.getReserved(key1) : _this2.h[key1];
					additionalImages.push(t2.image);
				}
			}
			if(rt.pong != null) {
				iron_data_RenderPath.lastPongRT = rt;
				if(rt.pongState) {
					rt = rt.pong;
				}
			}
			this.currentRenderTarget = rt.isCubeMap ? rt.cubeMap.get_g4() : rt.image.get_g4();
			this.currentRenderTargetW = rt.isCubeMap ? rt.cubeMap.get_width() : rt.image.get_width();
			this.currentRenderTargetH = rt.isCubeMap ? rt.cubeMap.get_height() : rt.image.get_height();
			if(rt.is3D) {
				this.currentRenderTargetD = rt.image.get_depth();
			}
			this.currentRenderTargetCube = rt.isCubeMap;
			if(this.currentRenderTargetFace >= 0) {
				this.currentRenderTargetFace++;
			} else {
				this.currentRenderTargetFace = rt.isCubeMap ? 0 : -1;
			}
			var g1 = this.currentRenderTarget;
			var face = this.currentRenderTargetFace;
			if(face >= 0) {
				g1.beginFace(face);
			} else {
				g1.begin(additionalImages);
			}
		}
		var viewportScale = parseFloat(params[0]);
		if(viewportScale != 1.0) {
			this.viewportScaled = true;
			var viewW = this.currentRenderTargetW * viewportScale | 0;
			var viewH = this.currentRenderTargetH * viewportScale | 0;
			this.currentRenderTarget.viewport(0,viewH,viewW,viewH);
			this.currentRenderTarget.scissor(0,viewH,viewW,viewH);
		} else if(this.viewportScaled) {
			this.viewportScaled = false;
			this.setCurrentViewport(this.currentRenderTargetW,this.currentRenderTargetH);
			this.setCurrentScissor(this.currentRenderTargetW,this.currentRenderTargetH);
		}
		this.bindParams = null;
	}
	,begin: function(g,additionalRenderTargets,face) {
		if(face == null) {
			face = -1;
		}
		if(face >= 0) {
			g.beginFace(face);
		} else {
			g.begin(additionalRenderTargets);
		}
	}
	,end: function(g) {
		g.end();
		if(this.scissorSet) {
			g.disableScissor();
			this.scissorSet = false;
		}
		this.bindParams = null;
		this.drawPerformed = true;
	}
	,setCurrentViewport: function(viewW,viewH) {
		this.currentRenderTarget.viewport(0,this.currentRenderTargetH - viewH,viewW,viewH);
	}
	,setCurrentScissor: function(viewW,viewH) {
		this.currentRenderTarget.scissor(0,this.currentRenderTargetH - viewH,viewW,viewH);
		this.scissorSet = true;
	}
	,setFrameScissor: function() {
		this.frameRenderTarget.scissor(this.frameScissorX,this.currentRenderTargetH - (this.frameScissorH - this.frameScissorY),this.frameScissorW,this.frameScissorH);
	}
	,setViewport: function(params,root) {
		var viewW = parseFloat(params[0]) | 0;
		var viewH = parseFloat(params[1]) | 0;
		this.setCurrentViewport(viewW,viewH);
		this.setCurrentScissor(viewW,viewH);
	}
	,clearTarget: function(params,root) {
		var colorFlag = null;
		var depthFlag = null;
		var _g1 = 0;
		var _g = params.length / 2 | 0;
		while(_g1 < _g) {
			var i = _g1++;
			var pos = i * 2;
			var val = pos + 1;
			if(params[pos] == "color") {
				if(params[val] == "-1") {
					colorFlag = iron_Scene.active.world.raw.background_color;
				} else {
					colorFlag = kha__$Color_Color_$Impl_$.fromString(params[val]);
				}
			} else if(params[pos] == "depth") {
				if(params[val] == "1.0") {
					depthFlag = 1.0;
				} else {
					depthFlag = 0.0;
				}
			}
		}
		kha_SystemImpl.gl.colorMask(true,true,true,true);
		this.currentRenderTarget.clear(colorFlag,depthFlag,null);
	}
	,clearImage: function(params,root) {
		var target = params[0];
		var color = kha__$Color_Color_$Impl_$.fromString(params[1]);
		var _this = this.data.pathdata.renderTargets;
		var rt = __map_reserved[target] != null ? _this.getReserved(target) : _this.h[target];
		rt.image.clear(0,0,0,rt.image.get_width(),rt.image.get_height(),rt.image.get_depth(),color);
	}
	,generateMipmaps: function(params,root) {
		var target = params[0];
		var _this = this.data.pathdata.renderTargets;
		var rt = __map_reserved[target] != null ? _this.getReserved(target) : _this.h[target];
		rt.image.generateMipmaps(1000);
	}
	,drawMeshes: function(params,root) {
		var context = params[0];
		var lamp = this.lamps.length > 0 ? this.lamps[this.currentLampIndex] : null;
		if(lamp != null && !lamp.visible) {
			if(this.currentLampIndex > 0) {
				return;
			}
		}
		if(context == this.data.pathdata.raw.shadows_context) {
			if(lamp == null || !lamp.data.raw.cast_shadow) {
				return;
			}
		}
		if(this.currentRenderTargetFace >= 0 && lamp != null) {
			lamp.setCubeFace(this.currentRenderTargetFace,this.camera);
		}
		var g = this.currentRenderTarget;
		if(!this.meshesSorted) {
			iron_data_RenderPath.sortMeshes(iron_Scene.active.meshes,this.camera);
			this.meshesSorted = true;
		}
		var _g = 0;
		var _g1 = iron_Scene.active.meshes;
		while(_g < _g1.length) {
			var m = _g1[_g];
			++_g;
			m.render(g,context,this.camera,lamp,this.bindParams);
		}
		g.end();
		if(this.scissorSet) {
			g.disableScissor();
			this.scissorSet = false;
		}
		this.bindParams = null;
		this.drawPerformed = true;
		if(this.currentRenderTargetFace >= 0 && this.currentRenderTargetFace < 5) {
			this.currentStageIndexOffset = -3;
		} else {
			this.currentRenderTargetFace = -1;
		}
	}
	,getRectContexts: function(mat,context,materialContexts,shaderContexts) {
		var _g1 = 0;
		var _g = mat.raw.contexts.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(HxOverrides.substr(mat.raw.contexts[i].name,0,context.length) == context) {
				materialContexts.push(mat.contexts[i]);
				shaderContexts.push(mat.shader.getContext(context));
				break;
			}
		}
	}
	,clampRect: function(f) {
		if(f < -1.0) {
			return -1.0;
		} else if(f > 1.0) {
			return 1.0;
		} else {
			return f;
		}
	}
	,drawRects: function(params,root) {
		if(iron_data_RenderPath.rectVB == null) {
			iron_data_RenderPath.createRectData();
		}
		var g = this.currentRenderTarget;
		var context = params[0];
		var lamp = this.lamps.length > 0 ? this.lamps[this.currentLampIndex] : null;
		var mats = [];
		var volumesMin = [];
		var volumesMax = [];
		var _g = 0;
		var _g1 = iron_Scene.active.meshes;
		while(_g < _g1.length) {
			var m = _g1[_g];
			++_g;
			var found = false;
			var _g3 = 0;
			var _g2 = mats.length;
			while(_g3 < _g2) {
				var i = _g3++;
				var mat = mats[i];
				if(mat == m.materials[0]) {
					var loc = new iron_math_Vec4(m.transform.matrix.self._30,m.transform.matrix.self._31,m.transform.matrix.self._32);
					var dim = m.transform.size;
					var min = volumesMin[i];
					var max = volumesMax[i];
					if(min.x > loc.x - dim.x / 2.0) {
						min.x = loc.x - dim.x / 2.0;
					}
					if(min.y > loc.y - dim.y / 2.0) {
						min.y = loc.y - dim.y / 2.0;
					}
					if(min.z > loc.z - dim.z / 2.0) {
						min.z = loc.z - dim.z / 2.0;
					}
					if(max.x < loc.x + dim.x / 2.0) {
						max.x = loc.x + dim.x / 2.0;
					}
					if(max.y < loc.y + dim.y / 2.0) {
						max.y = loc.y + dim.y / 2.0;
					}
					if(max.z < loc.z + dim.z / 2.0) {
						max.z = loc.z + dim.z / 2.0;
					}
					found = true;
					break;
				}
			}
			if(found) {
				continue;
			}
			var loc1 = new iron_math_Vec4(m.transform.matrix.self._30,m.transform.matrix.self._31,m.transform.matrix.self._32);
			var dim1 = m.transform.size;
			volumesMin.push(new iron_math_Vec4(loc1.x - dim1.x / 2.0,loc1.y - dim1.y / 2.0,loc1.z - dim1.z / 2.0));
			volumesMax.push(new iron_math_Vec4(loc1.x + dim1.x / 2.0,loc1.y + dim1.y / 2.0,loc1.z + dim1.z / 2.0));
			mats.push(m.materials[0]);
		}
		var rectBounds = [];
		var _g11 = 0;
		var _g4 = volumesMin.length;
		while(_g11 < _g4) {
			var i1 = _g11++;
			var min1 = volumesMin[i1];
			var max1 = volumesMax[i1];
			var dx = max1.x - min1.x;
			var dy = max1.y - min1.y;
			var dz = max1.z - min1.z;
			var ps = [];
			ps.push(new iron_math_Vec4(min1.x,min1.y,min1.z));
			ps.push(new iron_math_Vec4(min1.x + dx,min1.y,min1.z));
			ps.push(new iron_math_Vec4(min1.x,min1.y + dy,min1.z));
			ps.push(new iron_math_Vec4(min1.x,min1.y,min1.z + dz));
			ps.push(new iron_math_Vec4(min1.x + dx,min1.y + dy,min1.z));
			ps.push(new iron_math_Vec4(min1.x,min1.y + dy,min1.z + dz));
			ps.push(new iron_math_Vec4(min1.x + dx,min1.y,min1.z + dz));
			ps.push(new iron_math_Vec4(min1.x + dx,min1.y + dy,min1.z + dz));
			this.helpMat.setFrom(this.camera.V);
			this.helpMat.multmat2(this.camera.P);
			var b = null;
			var _g21 = 0;
			while(_g21 < ps.length) {
				var v = ps[_g21];
				++_g21;
				v.applymat4(this.helpMat);
				v.x /= v.w;
				v.y /= v.w;
				v.z /= v.w;
				if(b == null) {
					b = new iron_math_Vec4(v.x,v.y,v.x,v.y);
				} else {
					if(v.x < b.x) {
						b.x = v.x;
					}
					if(v.y < b.y) {
						b.y = v.y;
					}
					if(v.x > b.z) {
						b.z = v.x;
					}
					if(v.y > b.w) {
						b.w = v.y;
					}
				}
			}
			rectBounds.push(b);
		}
		g.setIndexBuffer(iron_data_RenderPath.rectIB);
		var _g12 = 0;
		var _g5 = mats.length;
		while(_g12 < _g5) {
			var i2 = _g12++;
			var mat1 = mats[i2];
			var b1 = rectBounds[i2];
			var dx1 = b1.z - b1.x;
			var dy1 = b1.w - b1.y;
			var v1 = iron_data_RenderPath.rectVB.lock();
			var f = b1.x;
			v1[0] = f < -1.0 ? -1.0 : f > 1.0 ? 1.0 : f;
			var f1 = b1.y;
			v1[1] = f1 < -1.0 ? -1.0 : f1 > 1.0 ? 1.0 : f1;
			var f2 = b1.x + dx1;
			v1[2] = f2 < -1.0 ? -1.0 : f2 > 1.0 ? 1.0 : f2;
			var f3 = b1.y;
			v1[3] = f3 < -1.0 ? -1.0 : f3 > 1.0 ? 1.0 : f3;
			var f4 = b1.x + dx1;
			v1[4] = f4 < -1.0 ? -1.0 : f4 > 1.0 ? 1.0 : f4;
			var f5 = b1.y + dy1;
			v1[5] = f5 < -1.0 ? -1.0 : f5 > 1.0 ? 1.0 : f5;
			var f6 = b1.x;
			v1[6] = f6 < -1.0 ? -1.0 : f6 > 1.0 ? 1.0 : f6;
			var f7 = b1.y + dy1;
			v1[7] = f7 < -1.0 ? -1.0 : f7 > 1.0 ? 1.0 : f7;
			iron_data_RenderPath.rectVB.unlock();
			g.setVertexBuffer(iron_data_RenderPath.rectVB);
			this.currentMaterial = mat1;
			var materialContexts = [];
			var shaderContexts = [];
			this.getRectContexts(mat1,context,materialContexts,shaderContexts);
			g.setPipeline(mat1.shader.getContext(context).pipeState);
			iron_object_Uniforms.setConstants(g,shaderContexts[0],null,this.camera,lamp,this.bindParams);
			iron_object_Uniforms.setMaterialConstants(g,shaderContexts[0],materialContexts[0]);
			g.drawIndexedVertices();
		}
		this.currentMaterial = null;
		g.end();
		if(this.scissorSet) {
			g.disableScissor();
			this.scissorSet = false;
		}
		this.bindParams = null;
		this.drawPerformed = true;
	}
	,drawDecals: function(params,root) {
		if(iron_data_RenderPath.boxVB == null) {
			iron_data_RenderPath.createBoxData();
		}
		var context = params[0];
		var g = this.currentRenderTarget;
		var lamp = this.lamps.length > 0 ? this.lamps[this.currentLampIndex] : null;
		var _g = 0;
		var _g1 = iron_Scene.active.decals;
		while(_g < _g1.length) {
			var decal = _g1[_g];
			++_g;
			decal.render(g,context,this.camera,lamp,this.bindParams);
			g.setVertexBuffer(iron_data_RenderPath.boxVB);
			g.setIndexBuffer(iron_data_RenderPath.boxIB);
			g.drawIndexedVertices();
		}
		g.end();
		if(this.scissorSet) {
			g.disableScissor();
			this.scissorSet = false;
		}
		this.bindParams = null;
		this.drawPerformed = true;
	}
	,drawGreasePencil: function(params,root) {
		var gp = iron_Scene.active.greasePencil;
		if(gp == null) {
			return;
		}
		var g = this.currentRenderTarget;
		var lamp = this.lamps.length > 0 ? this.lamps[this.currentLampIndex] : null;
		var context = iron_data_GreasePencilData.getContext(params[0]);
		g.setPipeline(context.pipeState);
		iron_object_Uniforms.setConstants(g,context,null,this.camera,lamp,null);
		var _g = 0;
		var _g1 = gp.layers;
		while(_g < _g1.length) {
			var layer = _g1[_g];
			++_g;
			if(layer.frames.length - 1 > layer.currentFrame && iron_data_RenderPath.gpFrame >= layer.frames[layer.currentFrame + 1].raw.frame_number) {
				layer.currentFrame++;
			}
			var frame = layer.frames[layer.currentFrame];
			if(frame.numVertices > 0) {
				g.setVertexBuffer(frame.vertexBuffer);
				g.setIndexBuffer(frame.indexBuffer);
				g.drawIndexedVertices();
			}
		}
		iron_data_RenderPath.gpFrame++;
		if(iron_data_RenderPath.gpFrame > iron_data_GreasePencilData.frameEnd) {
			iron_data_RenderPath.gpFrame = 0;
			var _g2 = 0;
			var _g11 = gp.layers;
			while(_g2 < _g11.length) {
				var layer1 = _g11[_g2];
				++_g2;
				layer1.currentFrame = 0;
			}
		}
		g.end();
		if(this.scissorSet) {
			g.disableScissor();
			this.scissorSet = false;
		}
		this.bindParams = null;
		this.drawPerformed = true;
	}
	,parseMaterialLink: function(handle) {
		if(handle == "_worldMaterial" && iron_Scene.active.world != null) {
			return iron_Scene.active.world.raw.material_ref.split("/");
		}
		return null;
	}
	,drawSkydome: function(params,root) {
		if(iron_data_RenderPath.skydomeVB == null) {
			iron_data_RenderPath.createSkydomeData();
		}
		var handle = params[0];
		var _this = this.cachedShaderContexts;
		var cc = __map_reserved[handle] != null ? _this.getReserved(handle) : _this.h[handle];
		if(cc.context == null) {
			return;
		}
		var g = this.currentRenderTarget;
		g.setPipeline(cc.context.pipeState);
		var lamp = this.lamps.length > 0 ? this.lamps[this.currentLampIndex] : null;
		iron_object_Uniforms.setConstants(g,cc.context,null,this.camera,lamp,this.bindParams);
		if(cc.materialContext != null) {
			iron_object_Uniforms.setMaterialConstants(g,cc.context,cc.materialContext);
		}
		g.setVertexBuffer(iron_data_RenderPath.skydomeVB);
		g.setIndexBuffer(iron_data_RenderPath.skydomeIB);
		g.drawIndexedVertices();
		g.end();
		if(this.scissorSet) {
			g.disableScissor();
			this.scissorSet = false;
		}
		this.bindParams = null;
		this.drawPerformed = true;
	}
	,drawLampVolume: function(params,root) {
		var vb = null;
		var ib = null;
		var lamp = this.lamps.length > 0 ? this.lamps[this.currentLampIndex] : null;
		var type = lamp.data.raw.type;
		if(type == "point" || type == "area") {
			if(iron_data_RenderPath.sphereVB == null) {
				iron_data_RenderPath.createSphereData();
			}
			vb = iron_data_RenderPath.sphereVB;
			ib = iron_data_RenderPath.sphereIB;
		} else if(type == "spot") {
			if(iron_data_RenderPath.sphereVB == null) {
				iron_data_RenderPath.createSphereData();
			}
			vb = iron_data_RenderPath.sphereVB;
			ib = iron_data_RenderPath.sphereIB;
		}
		var handle = params[0];
		var _this = this.cachedShaderContexts;
		var cc = __map_reserved[handle] != null ? _this.getReserved(handle) : _this.h[handle];
		var g = this.currentRenderTarget;
		g.setPipeline(cc.context.pipeState);
		iron_object_Uniforms.setConstants(g,cc.context,null,this.camera,lamp,this.bindParams);
		if(cc.materialContext != null) {
			iron_object_Uniforms.setMaterialConstants(g,cc.context,cc.materialContext);
		}
		g.setVertexBuffer(vb);
		g.setIndexBuffer(ib);
		g.drawIndexedVertices();
		g.end();
		if(this.scissorSet) {
			g.disableScissor();
			this.scissorSet = false;
		}
		this.bindParams = null;
		this.drawPerformed = true;
	}
	,bindTarget: function(params,root) {
		if(this.bindParams != null) {
			var _g = 0;
			while(_g < params.length) {
				var p = params[_g];
				++_g;
				this.bindParams.push(p);
			}
		} else {
			this.bindParams = params;
		}
	}
	,drawShaderQuad: function(params,root) {
		var handle = params[0];
		var _this = this.cachedShaderContexts;
		var cc = __map_reserved[handle] != null ? _this.getReserved(handle) : _this.h[handle];
		this.drawQuad(cc,root);
	}
	,drawMaterialQuad: function(params,root) {
		var handle = params[0];
		var _this = this.cachedShaderContexts;
		var cc = __map_reserved[handle] != null ? _this.getReserved(handle) : _this.h[handle];
		this.drawQuad(cc,root);
	}
	,drawQuad: function(cc,root) {
		if(iron_data_RenderPath.screenAlignedVB == null) {
			iron_data_RenderPath.createScreenAlignedData();
		}
		var g = this.currentRenderTarget;
		g.setPipeline(cc.context.pipeState);
		var lamp = this.lamps.length > 0 ? this.lamps[this.currentLampIndex] : null;
		iron_object_Uniforms.setConstants(g,cc.context,null,this.camera,lamp,this.bindParams);
		if(cc.materialContext != null) {
			iron_object_Uniforms.setMaterialConstants(g,cc.context,cc.materialContext);
		}
		g.setVertexBuffer(iron_data_RenderPath.screenAlignedVB);
		g.setIndexBuffer(iron_data_RenderPath.screenAlignedIB);
		g.drawIndexedVertices();
		g.end();
		if(this.scissorSet) {
			g.disableScissor();
			this.scissorSet = false;
		}
		this.bindParams = null;
		this.drawPerformed = true;
	}
	,callFunction: function(params,root) {
		var path = params[0];
		var dotIndex = path.lastIndexOf(".");
		var classPath = HxOverrides.substr(path,0,dotIndex);
		var classType = Type.resolveClass(classPath);
		var funName = HxOverrides.substr(path,dotIndex + 1,null);
		var stage = this.currentStages[this.currentStageIndex];
		if(stage.returns_true == null && stage.returns_false == null) {
			Reflect.field(classType,funName).apply(classType,[this]);
		} else {
			var result = Reflect.field(classType,funName).apply(classType,[this]);
			var nestedStages = result ? stage.returns_true : stage.returns_false;
			if(nestedStages != null) {
				var parentStages = this.currentStages;
				this.currentStages = nestedStages;
				this.callCurrentStages(root);
				this.currentStages = parentStages;
			}
		}
	}
	,loopLamps: function(params,root) {
		var nestedStages = this.currentStages[this.currentStageIndex].returns_true;
		var parentStages = this.currentStages;
		this.currentStages = nestedStages;
		this.currentLampIndex = 0;
		this.loopFinished++;
		var _g1 = 0;
		var _g = this.lamps.length;
		while(_g1 < _g) {
			var i = _g1++;
			var l = this.lamps[i];
			if(!l.visible) {
				continue;
			}
			this.currentLampIndex = i;
			this.callCurrentStages(root);
		}
		this.currentLampIndex = 0;
		this.loopFinished--;
		this.currentStages = parentStages;
	}
	,drawStereo: function(params,root) {
		var nestedStages = this.currentStages[this.currentStageIndex].returns_true;
		var parentStages = this.currentStages;
		this.currentStages = nestedStages;
		this.loopFinished++;
		var g = this.currentRenderTarget;
		var vr = kha_vr_VrInterface.instance;
		if(vr != null && vr.IsPresenting()) {
			var appw = kha_System.windowWidth();
			var apph = kha_System.windowHeight();
			var halfw = appw / 2 | 0;
			this.camera.V.setFrom(this.camera.leftV);
			this.camera.P.self = vr.GetProjectionMatrix(0);
			g.viewport(0,0,halfw,apph);
			this.callCurrentStages(root);
			this.camera.V.setFrom(this.camera.rightV);
			this.camera.P.self = vr.GetProjectionMatrix(1);
			g.viewport(halfw,0,halfw,apph);
			this.callCurrentStages(root);
		} else {
			this.callCurrentStages(root);
		}
		this.loopFinished--;
		this.currentStages = parentStages;
	}
	,loadStageCommands: function(stages,done) {
		var stagesLoaded = 0;
		var _g1 = 0;
		var _g = stages.length;
		while(_g1 < _g) {
			var i = _g1++;
			this.loadCommand(stages[i],function() {
				stagesLoaded += 1;
				if(stagesLoaded == stages.length) {
					done();
				}
			});
		}
	}
	,commandToFunction: function(command) {
		switch(command) {
		case "bind_target":
			return $bind(this,this.bindTarget);
		case "call_function":
			return $bind(this,this.callFunction);
		case "clear_image":
			return $bind(this,this.clearImage);
		case "clear_target":
			return $bind(this,this.clearTarget);
		case "draw_decals":
			return $bind(this,this.drawDecals);
		case "draw_grease_pencil":
			return $bind(this,this.drawGreasePencil);
		case "draw_lamp_volume":
			return $bind(this,this.drawLampVolume);
		case "draw_material_quad":
			return $bind(this,this.drawMaterialQuad);
		case "draw_meshes":
			return $bind(this,this.drawMeshes);
		case "draw_rects":
			return $bind(this,this.drawRects);
		case "draw_shader_quad":
			return $bind(this,this.drawShaderQuad);
		case "draw_skydome":
			return $bind(this,this.drawSkydome);
		case "draw_stereo":
			return $bind(this,this.drawStereo);
		case "generate_mipmaps":
			return $bind(this,this.generateMipmaps);
		case "loop_lamps":
			return $bind(this,this.loopLamps);
		case "set_target":
			return $bind(this,this.setTarget);
		case "set_viewport":
			return $bind(this,this.setViewport);
		default:
			return null;
		}
	}
	,loadCommand: function(stage,done) {
		var handle = stage.params.length > 0 ? stage.params[0] : "";
		var _g = stage.command;
		switch(_g) {
		case "call_function":
			this.cacheReturnsBoth(stage,done);
			break;
		case "draw_lamp_volume":
			this.cacheShaderQuad(handle,done);
			break;
		case "draw_material_quad":
			this.cacheMaterialQuad(handle,done);
			break;
		case "draw_shader_quad":
			this.cacheShaderQuad(handle,done);
			break;
		case "draw_skydome":
			this.cacheMaterialQuad(handle,done);
			break;
		case "draw_stereo":
			this.cacheReturnsTrue(stage,done);
			break;
		case "loop_lamps":
			this.cacheReturnsTrue(stage,done);
			break;
		default:
			done();
		}
	}
	,cacheReturnsBoth: function(stage,done) {
		var cached = 0;
		var cacheTo = 0;
		if(stage.returns_true != null && stage.returns_true.length > 0) {
			cacheTo += 1;
		}
		if(stage.returns_false != null && stage.returns_false.length > 0) {
			cacheTo += 1;
		}
		if(cacheTo == 0) {
			done();
		}
		if(stage.returns_true != null && stage.returns_true.length > 0) {
			this.loadStageCommands(stage.returns_true,function() {
				cached += 1;
				if(cached == cacheTo) {
					done();
				}
			});
		}
		if(stage.returns_false != null && stage.returns_false.length > 0) {
			this.loadStageCommands(stage.returns_false,function() {
				cached += 1;
				if(cached == cacheTo) {
					done();
				}
			});
		}
	}
	,cacheReturnsTrue: function(stage,done) {
		if(stage.returns_true != null) {
			this.loadStageCommands(stage.returns_true,done);
		} else {
			done();
		}
	}
	,cacheMaterialQuad: function(handle,done) {
		var _this = this.cachedShaderContexts;
		var cc = __map_reserved[handle] != null ? _this.getReserved(handle) : _this.h[handle];
		if(cc != null) {
			done();
			return;
		}
		cc = new iron_data_CachedShaderContext();
		var _this1 = this.cachedShaderContexts;
		if(__map_reserved[handle] != null) {
			_this1.setReserved(handle,cc);
		} else {
			_this1.h[handle] = cc;
		}
		var matPath = null;
		if(handle.charAt(0) == "_") {
			matPath = this.parseMaterialLink(handle);
		} else {
			matPath = handle.split("/");
		}
		if(matPath == null) {
			done();
			return;
		}
		iron_data_Data.getMaterial(matPath[0],matPath[1],function(res) {
			cc.materialContext = res.getContext(matPath[2]);
			cc.context = res.shader.getContext(matPath[2]);
			done();
		});
	}
	,cacheShaderQuad: function(handle,done) {
		var _this = this.cachedShaderContexts;
		var cc = __map_reserved[handle] != null ? _this.getReserved(handle) : _this.h[handle];
		if(cc != null) {
			done();
			return;
		}
		cc = new iron_data_CachedShaderContext();
		var _this1 = this.cachedShaderContexts;
		if(__map_reserved[handle] != null) {
			_this1.setReserved(handle,cc);
		} else {
			_this1.h[handle] = cc;
		}
		var shaderPath = handle.split("/");
		iron_data_Data.getShader(shaderPath[0],shaderPath[1],null,function(res) {
			cc.materialContext = null;
			cc.context = res.getContext(shaderPath[2]);
			done();
		});
	}
	,__class__: iron_data_RenderPath
};
var iron_data_CachedShaderContext = function() {
};
$hxClasses["iron.data.CachedShaderContext"] = iron_data_CachedShaderContext;
iron_data_CachedShaderContext.__name__ = ["iron","data","CachedShaderContext"];
iron_data_CachedShaderContext.prototype = {
	__class__: iron_data_CachedShaderContext
};
var iron_data_RenderPathData = function(raw,done) {
	this.depthToRenderTarget = new haxe_ds_StringMap();
	this.renderTargets = new haxe_ds_StringMap();
	iron_data_Data.call(this);
	this.raw = raw;
	this.name = raw.name;
	if(raw.render_targets != null && raw.render_targets.length > 0) {
		var _g = 0;
		var _g1 = raw.render_targets;
		while(_g < _g1.length) {
			var t = _g1[_g];
			++_g;
			this.createRenderTarget(t);
		}
	}
	var tempty = { name : "arm_empty", width : 1, height : 1, format : "DEPTH16"};
	this.createRenderTarget(tempty);
	done(this);
};
$hxClasses["iron.data.RenderPathData"] = iron_data_RenderPathData;
iron_data_RenderPathData.__name__ = ["iron","data","RenderPathData"];
iron_data_RenderPathData.parse = function(file,name,done) {
	iron_data_Data.getSceneRaw(file,function(format) {
		var raw = iron_data_Data.getRenderPathRawByName(format.renderpath_datas,name);
		if(raw == null) {
			haxe_Log.trace("Render path data \"" + name + "\" not found!",{ fileName : "RenderPathData.hx", lineNumber : 56, className : "iron.data.RenderPathData", methodName : "parse"});
			done(null);
		}
		new iron_data_RenderPathData(raw,done);
	});
};
iron_data_RenderPathData.__super__ = iron_data_Data;
iron_data_RenderPathData.prototype = $extend(iron_data_Data.prototype,{
	unload: function() {
		var _this = this.renderTargets;
		var rt = new haxe_ds__$StringMap_StringMapIterator(_this,_this.arrayKeys());
		while(rt.hasNext()) {
			var rt1 = rt.next();
			rt1.unload();
		}
	}
	,createRenderTarget: function(t) {
		var rt = this._createRenderTarget(t);
		if(t.ping_pong != null && t.ping_pong) {
			rt.pong = this.createRenderTarget(t);
		}
		var key = t.name;
		var _this = this.renderTargets;
		if(__map_reserved[key] != null) {
			_this.setReserved(key,rt);
		} else {
			_this.h[key] = rt;
		}
		return rt;
	}
	,_createRenderTarget: function(t) {
		var rt = new iron_data_RenderTarget();
		if(t.depth_buffer != null) {
			rt.hasDepth = true;
			var key = t.depth_buffer;
			var _this = this.depthToRenderTarget;
			var depthTarget = __map_reserved[key] != null ? _this.getReserved(key) : _this.h[key];
			if(depthTarget == null) {
				var _g = 0;
				var _g1 = this.raw.depth_buffers;
				while(_g < _g1.length) {
					var db = _g1[_g];
					++_g;
					if(db.name == t.depth_buffer) {
						var key1 = db.name;
						var _this1 = this.depthToRenderTarget;
						if(__map_reserved[key1] != null) {
							_this1.setReserved(key1,rt);
						} else {
							_this1.h[key1] = rt;
						}
						var s = db.format;
						var tmp;
						if(s == null || s == "") {
							tmp = 1;
						} else {
							switch(s) {
							case "DEPTH16":
								tmp = 5;
								break;
							case "DEPTH24":
								tmp = 1;
								break;
							default:
								tmp = 1;
							}
						}
						rt.image = this.createImage(t,tmp);
						break;
					}
				}
			} else {
				rt.image = this.createImage(t,0);
				rt.image.setDepthStencilFrom(depthTarget.image);
			}
		} else {
			rt.hasDepth = false;
			if(t.depth != null && t.depth > 1) {
				rt.is3D = true;
			}
			if(t.is_cubemap) {
				rt.isCubeMap = true;
				rt.cubeMap = this.createCubeMap(t,0);
			} else {
				rt.image = this.createImage(t,0);
			}
		}
		return rt;
	}
	,createImage: function(t,depthStencil) {
		var width = t.width == 0 ? kha_System.windowWidth() : t.width;
		var height = t.height == 0 ? kha_System.windowHeight() : t.height;
		var depth = t.depth != null ? t.depth : 0;
		if(t.scale != null) {
			width = width * t.scale | 0;
			height = height * t.scale | 0;
			depth = depth * t.scale | 0;
		}
		if(t.depth != null && t.depth > 1) {
			var tmp;
			if(t.format != null) {
				switch(t.format) {
				case "A16":
					tmp = kha_graphics4_TextureFormat.A16;
					break;
				case "A32":
					tmp = kha_graphics4_TextureFormat.A32;
					break;
				case "A8":
					tmp = kha_graphics4_TextureFormat.L8;
					break;
				case "DEPTH16":
					tmp = kha_graphics4_TextureFormat.DEPTH16;
					break;
				case "RGBA128":
					tmp = kha_graphics4_TextureFormat.RGBA128;
					break;
				case "RGBA32":
					tmp = kha_graphics4_TextureFormat.RGBA32;
					break;
				case "RGBA64":
					tmp = kha_graphics4_TextureFormat.RGBA64;
					break;
				default:
					tmp = kha_graphics4_TextureFormat.RGBA32;
				}
			} else {
				tmp = kha_graphics4_TextureFormat.RGBA32;
			}
			return kha_Image.create3D(width,height,depth,tmp);
		} else if(t.is_image != null && t.is_image) {
			var tmp1;
			if(t.format != null) {
				switch(t.format) {
				case "A16":
					tmp1 = kha_graphics4_TextureFormat.A16;
					break;
				case "A32":
					tmp1 = kha_graphics4_TextureFormat.A32;
					break;
				case "A8":
					tmp1 = kha_graphics4_TextureFormat.L8;
					break;
				case "DEPTH16":
					tmp1 = kha_graphics4_TextureFormat.DEPTH16;
					break;
				case "RGBA128":
					tmp1 = kha_graphics4_TextureFormat.RGBA128;
					break;
				case "RGBA32":
					tmp1 = kha_graphics4_TextureFormat.RGBA32;
					break;
				case "RGBA64":
					tmp1 = kha_graphics4_TextureFormat.RGBA64;
					break;
				default:
					tmp1 = kha_graphics4_TextureFormat.RGBA32;
				}
			} else {
				tmp1 = kha_graphics4_TextureFormat.RGBA32;
			}
			return kha_Image.create(width,height,tmp1);
		} else {
			var tmp2;
			if(t.format != null) {
				switch(t.format) {
				case "A16":
					tmp2 = kha_graphics4_TextureFormat.A16;
					break;
				case "A32":
					tmp2 = kha_graphics4_TextureFormat.A32;
					break;
				case "A8":
					tmp2 = kha_graphics4_TextureFormat.L8;
					break;
				case "DEPTH16":
					tmp2 = kha_graphics4_TextureFormat.DEPTH16;
					break;
				case "RGBA128":
					tmp2 = kha_graphics4_TextureFormat.RGBA128;
					break;
				case "RGBA32":
					tmp2 = kha_graphics4_TextureFormat.RGBA32;
					break;
				case "RGBA64":
					tmp2 = kha_graphics4_TextureFormat.RGBA64;
					break;
				default:
					tmp2 = kha_graphics4_TextureFormat.RGBA32;
				}
			} else {
				tmp2 = kha_graphics4_TextureFormat.RGBA32;
			}
			return kha_Image.createRenderTarget(width,height,tmp2,depthStencil);
		}
	}
	,createCubeMap: function(t,depthStencil) {
		var tmp;
		if(t.format != null) {
			switch(t.format) {
			case "A16":
				tmp = kha_graphics4_TextureFormat.A16;
				break;
			case "A32":
				tmp = kha_graphics4_TextureFormat.A32;
				break;
			case "A8":
				tmp = kha_graphics4_TextureFormat.L8;
				break;
			case "DEPTH16":
				tmp = kha_graphics4_TextureFormat.DEPTH16;
				break;
			case "RGBA128":
				tmp = kha_graphics4_TextureFormat.RGBA128;
				break;
			case "RGBA32":
				tmp = kha_graphics4_TextureFormat.RGBA32;
				break;
			case "RGBA64":
				tmp = kha_graphics4_TextureFormat.RGBA64;
				break;
			default:
				tmp = kha_graphics4_TextureFormat.RGBA32;
			}
		} else {
			tmp = kha_graphics4_TextureFormat.RGBA32;
		}
		return kha_graphics4_CubeMap.createRenderTarget(t.width,tmp,depthStencil);
	}
	,getTextureFormat: function(s) {
		switch(s) {
		case "A16":
			return kha_graphics4_TextureFormat.A16;
		case "A32":
			return kha_graphics4_TextureFormat.A32;
		case "A8":
			return kha_graphics4_TextureFormat.L8;
		case "DEPTH16":
			return kha_graphics4_TextureFormat.DEPTH16;
		case "RGBA128":
			return kha_graphics4_TextureFormat.RGBA128;
		case "RGBA32":
			return kha_graphics4_TextureFormat.RGBA32;
		case "RGBA64":
			return kha_graphics4_TextureFormat.RGBA64;
		default:
			return kha_graphics4_TextureFormat.RGBA32;
		}
	}
	,getDepthStencilFormat: function(s) {
		if(s == null || s == "") {
			return 1;
		}
		switch(s) {
		case "DEPTH16":
			return 5;
		case "DEPTH24":
			return 1;
		default:
			return 1;
		}
	}
	,__class__: iron_data_RenderPathData
});
var iron_data_RenderTarget = function() {
	this.isCubeMap = false;
	this.is3D = false;
	this.pong = null;
	this.pongState = false;
	this.hasDepth = false;
	this.cubeMap = null;
	this.image = null;
};
$hxClasses["iron.data.RenderTarget"] = iron_data_RenderTarget;
iron_data_RenderTarget.__name__ = ["iron","data","RenderTarget"];
iron_data_RenderTarget.prototype = {
	unload: function() {
		if(this.image != null) {
			this.image.unload();
		}
		if(this.cubeMap != null) {
			this.cubeMap.unload();
		}
		if(this.pong != null) {
			this.pong.unload();
		}
	}
	,__class__: iron_data_RenderTarget
};
var iron_data_ShaderData = function(raw,overrideContext,done) {
	this.contexts = [];
	this.instancing = false;
	this.structureLength = 0;
	iron_data_Data.call(this);
	this.raw = raw;
	this.name = raw.name;
	this.parseVertexStructure();
	var _g = 0;
	var _g1 = raw.contexts;
	while(_g < _g1.length) {
		var c = _g1[_g];
		++_g;
		var fragName = StringTools.replace(c.fragment_shader,".","_");
		if(Reflect.field(kha_Shaders,fragName) == null) {
			continue;
		}
		var struct = this.structure;
		var inst = this.instancing;
		if(c.name == "rect") {
			struct = iron_data_ShaderData.getStructureRect();
			inst = false;
		}
		this.contexts.push(new iron_data_ShaderContext(c,struct,inst,overrideContext));
	}
	done(this);
};
$hxClasses["iron.data.ShaderData"] = iron_data_ShaderData;
iron_data_ShaderData.__name__ = ["iron","data","ShaderData"];
iron_data_ShaderData.getStructureRect = function() {
	if(iron_data_ShaderData.structureRect == null) {
		iron_data_ShaderData.structureRect = new kha_graphics4_VertexStructure();
		iron_data_ShaderData.structureRect.add("pos",kha_graphics4_VertexData.Float2);
		iron_data_ShaderData.structureRectLength += 2;
	}
	return iron_data_ShaderData.structureRect;
};
iron_data_ShaderData.parse = function(file,name,overrideContext,done) {
	iron_data_Data.getSceneRaw(file,function(format) {
		var raw = iron_data_Data.getShaderRawByName(format.shader_datas,name);
		if(raw == null) {
			haxe_Log.trace("Shader data \"" + name + "\" not found!",{ fileName : "ShaderData.hx", lineNumber : 72, className : "iron.data.ShaderData", methodName : "parse"});
			done(null);
		}
		new iron_data_ShaderData(raw,overrideContext,done);
	});
};
iron_data_ShaderData.__super__ = iron_data_Data;
iron_data_ShaderData.prototype = $extend(iron_data_Data.prototype,{
	'delete': function() {
		var _g = 0;
		var _g1 = this.contexts;
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			c["delete"]();
		}
	}
	,sizeToVD: function(size) {
		if(size == 1) {
			return kha_graphics4_VertexData.Float1;
		} else if(size == 2) {
			return kha_graphics4_VertexData.Float2;
		} else if(size == 3) {
			return kha_graphics4_VertexData.Float3;
		} else if(size == 4) {
			return kha_graphics4_VertexData.Float4;
		}
		return null;
	}
	,parseVertexStructure: function() {
		this.structure = new kha_graphics4_VertexStructure();
		var _g = 0;
		var _g1 = this.raw.vertex_structure;
		while(_g < _g1.length) {
			var vs = _g1[_g];
			++_g;
			if(vs.name == "off") {
				this.instancing = true;
				continue;
			}
			this.structure.add(vs.name,this.sizeToVD(vs.size));
			this.structureLength += vs.size;
		}
	}
	,getContext: function(name) {
		var _g = 0;
		var _g1 = this.contexts;
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			if(HxOverrides.substr(c.raw.name,0,name.length) == name) {
				return c;
			}
		}
		return null;
	}
	,__class__: iron_data_ShaderData
});
var iron_data_ShaderContext = function(raw,structure,inst,overrideContext) {
	if(inst == null) {
		inst = false;
	}
	this.textureUnits = [];
	this.constants = [];
	this.raw = raw;
	this.pipeState = new kha_graphics4_PipelineState();
	if(inst) {
		var instStruct = new kha_graphics4_VertexStructure();
		instStruct.add("off",kha_graphics4_VertexData.Float3);
		this.pipeState.inputLayout = [structure,instStruct];
	} else {
		this.pipeState.inputLayout = [structure];
	}
	this.pipeState.depthWrite = raw.depth_write;
	this.pipeState.depthMode = this.getCompareMode(raw.compare_mode);
	if(raw.stencil_mode != null) {
		if(raw.stencil_mode == "always") {
			this.pipeState.stencilMode = kha_graphics4_CompareMode.Always;
		} else if(raw.stencil_mode == "equal") {
			this.pipeState.stencilMode = kha_graphics4_CompareMode.Equal;
		} else if(raw.stencil_mode == "not_equal") {
			this.pipeState.stencilMode = kha_graphics4_CompareMode.NotEqual;
		}
	}
	if(raw.stencil_pass != null) {
		if(raw.stencil_pass == "replace") {
			this.pipeState.stencilBothPass = kha_graphics4_StencilAction.Replace;
		} else if(raw.stencil_pass == "keep") {
			this.pipeState.stencilBothPass = kha_graphics4_StencilAction.Keep;
		}
	}
	if(raw.stencil_fail != null && raw.stencil_fail == "keep") {
		this.pipeState.stencilDepthFail = kha_graphics4_StencilAction.Keep;
		this.pipeState.stencilFail = kha_graphics4_StencilAction.Keep;
	}
	if(raw.stencil_reference_value != null) {
		this.pipeState.stencilReferenceValue = raw.stencil_reference_value;
	}
	this.pipeState.cullMode = this.getCullMode(raw.cull_mode);
	if(raw.blend_source != null) {
		this.pipeState.blendSource = this.getBlendingFactor(raw.blend_source);
	}
	if(raw.blend_destination != null) {
		this.pipeState.blendDestination = this.getBlendingFactor(raw.blend_destination);
	}
	if(raw.blend_operation != null) {
		this.pipeState.blendOperation = this.getBlendingOperation(raw.blend_operation);
	}
	if(raw.alpha_blend_source != null) {
		this.pipeState.alphaBlendSource = this.getBlendingFactor(raw.alpha_blend_source);
	}
	if(raw.alpha_blend_destination != null) {
		this.pipeState.alphaBlendDestination = this.getBlendingFactor(raw.alpha_blend_destination);
	}
	if(raw.alpha_blend_operation != null) {
		this.pipeState.alphaBlendOperation = this.getBlendingOperation(raw.alpha_blend_operation);
	}
	if(raw.color_write_red != null) {
		this.pipeState.colorWriteMaskRed = raw.color_write_red;
	}
	if(raw.color_write_green != null) {
		this.pipeState.colorWriteMaskGreen = raw.color_write_green;
	}
	if(raw.color_write_blue != null) {
		this.pipeState.colorWriteMaskBlue = raw.color_write_blue;
	}
	if(raw.color_write_alpha != null) {
		this.pipeState.colorWriteMaskAlpha = raw.color_write_alpha;
	}
	var tmp = StringTools.replace(raw.fragment_shader,".","_");
	this.pipeState.fragmentShader = Reflect.field(kha_Shaders,tmp);
	var tmp1 = StringTools.replace(raw.vertex_shader,".","_");
	this.pipeState.vertexShader = Reflect.field(kha_Shaders,tmp1);
	if(raw.geometry_shader != null) {
		var tmp2 = StringTools.replace(raw.geometry_shader,".","_");
		this.pipeState.geometryShader = Reflect.field(kha_Shaders,tmp2);
	}
	if(raw.tesscontrol_shader != null) {
		var tmp3 = StringTools.replace(raw.tesscontrol_shader,".","_");
		this.pipeState.tessellationControlShader = Reflect.field(kha_Shaders,tmp3);
	}
	if(raw.tesseval_shader != null) {
		var tmp4 = StringTools.replace(raw.tesseval_shader,".","_");
		this.pipeState.tessellationEvaluationShader = Reflect.field(kha_Shaders,tmp4);
	}
	if(overrideContext != null) {
		if(overrideContext.cull_mode != null) {
			this.pipeState.cullMode = this.getCullMode(overrideContext.cull_mode);
		}
	}
	this.pipeState.compile();
	if(raw.constants != null) {
		var _g = 0;
		var _g1 = raw.constants;
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			this.addConstant(c);
		}
	}
	if(raw.texture_units != null) {
		var _g2 = 0;
		var _g11 = raw.texture_units;
		while(_g2 < _g11.length) {
			var tu = _g11[_g2];
			++_g2;
			this.addTexture(tu);
		}
	}
};
$hxClasses["iron.data.ShaderContext"] = iron_data_ShaderContext;
iron_data_ShaderContext.__name__ = ["iron","data","ShaderContext"];
iron_data_ShaderContext.prototype = {
	deleteShader: function(shader) {
		shader["delete"]();
	}
	,'delete': function() {
		if(this.pipeState.fragmentShader != null) {
			this.pipeState.fragmentShader["delete"]();
		}
		if(this.pipeState.vertexShader != null) {
			this.pipeState.vertexShader["delete"]();
		}
		if(this.pipeState.geometryShader != null) {
			this.pipeState.geometryShader["delete"]();
		}
		if(this.pipeState.tessellationControlShader != null) {
			this.pipeState.tessellationControlShader["delete"]();
		}
		if(this.pipeState.tessellationEvaluationShader != null) {
			this.pipeState.tessellationEvaluationShader["delete"]();
		}
		this.pipeState["delete"]();
	}
	,getCompareMode: function(s) {
		switch(s) {
		case "always":
			return kha_graphics4_CompareMode.Always;
		case "equal":
			return kha_graphics4_CompareMode.Equal;
		case "greater":
			return kha_graphics4_CompareMode.Greater;
		case "greater_equal":
			return kha_graphics4_CompareMode.GreaterEqual;
		case "less":
			return kha_graphics4_CompareMode.Less;
		case "less_equal":
			return kha_graphics4_CompareMode.LessEqual;
		case "never":
			return kha_graphics4_CompareMode.Never;
		case "not_equal":
			return kha_graphics4_CompareMode.NotEqual;
		default:
			return kha_graphics4_CompareMode.Less;
		}
	}
	,getCullMode: function(s) {
		switch(s) {
		case "clockwise":
			return kha_graphics4_CullMode.Clockwise;
		case "none":
			return kha_graphics4_CullMode.None;
		default:
			return kha_graphics4_CullMode.CounterClockwise;
		}
	}
	,getBlendingOperation: function(s) {
		switch(s) {
		case "add":
			return kha_graphics4_BlendingOperation.Add;
		case "max":
			return kha_graphics4_BlendingOperation.Max;
		case "min":
			return kha_graphics4_BlendingOperation.Min;
		case "reverse_substract":
			return kha_graphics4_BlendingOperation.ReverseSubtract;
		case "substract":
			return kha_graphics4_BlendingOperation.Subtract;
		default:
			return kha_graphics4_BlendingOperation.Add;
		}
	}
	,getBlendingFactor: function(s) {
		switch(s) {
		case "blend_one":
			return kha_graphics4_BlendingFactor.BlendOne;
		case "blend_zero":
			return kha_graphics4_BlendingFactor.BlendZero;
		case "destination_alpha":
			return kha_graphics4_BlendingFactor.DestinationAlpha;
		case "destination_color":
			return kha_graphics4_BlendingFactor.DestinationColor;
		case "inverse_destination_alpha":
			return kha_graphics4_BlendingFactor.InverseDestinationAlpha;
		case "inverse_destination_color":
			return kha_graphics4_BlendingFactor.InverseDestinationColor;
		case "inverse_source_alpha":
			return kha_graphics4_BlendingFactor.InverseSourceAlpha;
		case "inverse_source_color":
			return kha_graphics4_BlendingFactor.InverseSourceColor;
		case "source_alpha":
			return kha_graphics4_BlendingFactor.SourceAlpha;
		case "source_color":
			return kha_graphics4_BlendingFactor.SourceColor;
		default:
			return kha_graphics4_BlendingFactor.Undefined;
		}
	}
	,getTextureAddresing: function(s) {
		switch(s) {
		case "mirror":
			return kha_graphics4_TextureAddressing.Mirror;
		case "repeat":
			return kha_graphics4_TextureAddressing.Repeat;
		default:
			return kha_graphics4_TextureAddressing.Clamp;
		}
	}
	,getTextureFilter: function(s) {
		switch(s) {
		case "linear":
			return kha_graphics4_TextureFilter.LinearFilter;
		case "point":
			return kha_graphics4_TextureFilter.PointFilter;
		default:
			return kha_graphics4_TextureFilter.AnisotropicFilter;
		}
	}
	,getMipmapFilter: function(s) {
		switch(s) {
		case "no":
			return kha_graphics4_MipMapFilter.NoMipFilter;
		case "point":
			return kha_graphics4_MipMapFilter.PointMipFilter;
		default:
			return kha_graphics4_MipMapFilter.LinearMipFilter;
		}
	}
	,addConstant: function(c) {
		this.constants.push(this.pipeState.getConstantLocation(c.name));
	}
	,addTexture: function(tu) {
		var unit = this.pipeState.getTextureUnit(tu.name);
		this.textureUnits.push(unit);
	}
	,setTextureParameters: function(g,unitIndex,tex) {
		var unit = this.textureUnits[unitIndex];
		g.setTextureParameters(unit,tex.u_addressing == null ? kha_graphics4_TextureAddressing.Repeat : this.getTextureAddresing(tex.u_addressing),tex.v_addressing == null ? kha_graphics4_TextureAddressing.Repeat : this.getTextureAddresing(tex.v_addressing),tex.min_filter == null ? kha_graphics4_TextureFilter.LinearFilter : this.getTextureFilter(tex.min_filter),tex.mag_filter == null ? kha_graphics4_TextureFilter.LinearFilter : this.getTextureFilter(tex.mag_filter),tex.mipmap_filter == null ? kha_graphics4_MipMapFilter.NoMipFilter : this.getMipmapFilter(tex.mipmap_filter));
	}
	,__class__: iron_data_ShaderContext
};
var iron_data_WorldData = function(raw,done) {
	this.vec = new iron_math_Vec4();
	this.shirr = null;
	var _gthis = this;
	iron_data_Data.call(this);
	this.raw = raw;
	this.name = raw.name;
	if(raw.probes != null && raw.probes.length > 0) {
		this.probes = [];
		var _g = 0;
		var _g1 = raw.probes;
		while(_g < _g1.length) {
			var p = _g1[_g];
			++_g;
			new iron_data_Probe(p,function(self) {
				_gthis.probes.push(self);
				if(_gthis.probes.length == raw.probes.length) {
					done(_gthis);
				}
			});
		}
	} else {
		done(this);
	}
};
$hxClasses["iron.data.WorldData"] = iron_data_WorldData;
iron_data_WorldData.__name__ = ["iron","data","WorldData"];
iron_data_WorldData.parse = function(name,id,done) {
	iron_data_Data.getSceneRaw(name,function(format) {
		var raw = iron_data_Data.getWorldRawByName(format.world_datas,id);
		if(raw == null) {
			haxe_Log.trace("World data \"" + id + "\" not found!",{ fileName : "WorldData.hx", lineNumber : 40, className : "iron.data.WorldData", methodName : "parse"});
			done(null);
		}
		new iron_data_WorldData(raw,done);
	});
};
iron_data_WorldData.getEmptyIrradiance = function() {
	if(iron_data_WorldData.emptyIrr == null) {
		var this1 = new Array(28);
		iron_data_WorldData.emptyIrr = this1;
		var _g1 = 0;
		var _g = iron_data_WorldData.emptyIrr.length;
		while(_g1 < _g) {
			var i = _g1++;
			iron_data_WorldData.emptyIrr[i] = 0.0;
		}
	}
	return iron_data_WorldData.emptyIrr;
};
iron_data_WorldData.__super__ = iron_data_Data;
iron_data_WorldData.prototype = $extend(iron_data_Data.prototype,{
	getGlobalProbe: function() {
		return this.probes[0];
	}
	,getLocalProbe: function(i) {
		if(i < this.probes.length) {
			return this.probes[i];
		} else {
			return null;
		}
	}
	,getSHIrradiance: function() {
		if(this.shirr == null) {
			var this1 = new Array(28);
			this.shirr = this1;
			var p = this.probes[0];
			var _g1 = 0;
			var _g = p.irradiance.length;
			while(_g1 < _g) {
				var j = _g1++;
				this.shirr[j] = p.irradiance[j];
			}
		}
		return this.shirr;
	}
	,getProbeID: function(t) {
		this.vec.x = t.matrix.self._30;
		this.vec.y = t.matrix.self._31;
		this.vec.z = t.matrix.self._32;
		var size = t.size;
		var _g1 = 1;
		var _g = this.probes.length;
		while(_g1 < _g) {
			var i = _g1++;
			var p = this.probes[i];
			if(this.vec.x + size.x / 2 < p.volumeMin.x || this.vec.x - size.x / 2 > p.volumeMax.x || this.vec.y + size.y / 2 < p.volumeMin.y || this.vec.y - size.y / 2 > p.volumeMax.y || this.vec.z + size.z / 2 < p.volumeMin.z || this.vec.z - size.z / 2 > p.volumeMax.z) {
				continue;
			}
			return i;
		}
		return 0;
	}
	,getProbeVolumeCenter: function(t) {
		return this.probes[this.getProbeID(t)].volumeCenter;
	}
	,getProbeVolumeSize: function(t) {
		return this.probes[this.getProbeID(t)].volume;
	}
	,getProbeStrength: function(t) {
		return this.probes[this.getProbeID(t)].raw.strength;
	}
	,getProbeBlending: function(t) {
		return this.probes[this.getProbeID(t)].raw.blending;
	}
	,__class__: iron_data_WorldData
});
var iron_data_Probe = function(raw,done) {
	var _gthis = this;
	this.raw = raw;
	this.setIrradiance(function(irr) {
		_gthis.irradiance = irr;
		if(raw.radiance != null) {
			iron_data_Data.getImage(raw.radiance,function(rad) {
				_gthis.radiance = rad;
				var radianceMipmaps = [];
				while(radianceMipmaps.length < raw.radiance_mipmaps) radianceMipmaps.push(null);
				var ext = raw.radiance.substring(raw.radiance.length - 4);
				var base = raw.radiance.substring(0,raw.radiance.length - 4);
				var mipsLoaded = 0;
				var _g1 = 0;
				var _g = raw.radiance_mipmaps;
				while(_g1 < _g) {
					var i = [_g1++];
					iron_data_Data.getImage(base + "_" + i[0] + ext,(function(i1) {
						return function(mipimg) {
							radianceMipmaps[i1[0]] = mipimg;
							mipsLoaded += 1;
							if(mipsLoaded == raw.radiance_mipmaps) {
								_gthis.radiance.setMipmaps(radianceMipmaps);
								_gthis.mipsSet(done);
							}
						};
					})(i),true);
				}
			});
		} else {
			_gthis.mipsSet(done);
		}
	});
};
$hxClasses["iron.data.Probe"] = iron_data_Probe;
iron_data_Probe.__name__ = ["iron","data","Probe"];
iron_data_Probe.prototype = {
	mipsSet: function(done) {
		this.volume = new iron_math_Vec4(this.raw.volume[0],this.raw.volume[1],this.raw.volume[2]);
		this.volumeCenter = new iron_math_Vec4(this.raw.volume_center[0],this.raw.volume_center[1],this.raw.volume_center[2]);
		this.volumeMin = new iron_math_Vec4(this.volumeCenter.x - this.volume.x,this.volumeCenter.y - this.volume.y,this.volumeCenter.z - this.volume.z);
		this.volumeMax = new iron_math_Vec4(this.volumeCenter.x + this.volume.x,this.volumeCenter.y + this.volume.y,this.volumeCenter.z + this.volume.z);
		done(this);
	}
	,setIrradiance: function(done) {
		if(this.raw.irradiance == "") {
			var irr = [1.0281457342829743,1.1617608778901902,1.3886220898440544,-0.13044863139637752,-0.2794659158733846,-0.5736106907295643,0.04065421813873111,0.0434367391348577,0.03567450494792305,0.10964557605577738,0.1129839085793664,0.11261660812141877,-0.08271974283263238,-0.08068091195339556,-0.06432614970480094,-0.12517787967665814,-0.11638582546310804,-0.09743696224655113,0.20068697715947176,0.2158788783296805,0.2109374396869599,0.19636637427150455,0.19445523113118082,0.17825330699680575,0.31440860839538637,0.33041120060402407,0.30867788630062676];
			irr.push(0.0);
			done(irr);
		} else {
			iron_data_Data.getBlob(this.raw.irradiance + ".arm",function(b) {
				var irradianceData = b;
				var b1 = irradianceData.toBytes();
				var option = null;
				if(option == null) {
					option = iron_system_msgpack_DecodeOption.AsObject;
				}
				var irradianceParsed = new iron_system_msgpack_Decoder(b1,option).o;
				irradianceParsed.irradiance.push(0.0);
				done(irradianceParsed.irradiance);
			});
		}
	}
	,__class__: iron_data_Probe
};
var iron_math_Mat3 = function(_00,_10,_20,_01,_11,_21,_02,_12,_22) {
	this.self = new kha_math_FastMatrix3(_00,_10,_20,_01,_11,_21,_02,_12,_22);
};
$hxClasses["iron.math.Mat3"] = iron_math_Mat3;
iron_math_Mat3.__name__ = ["iron","math","Mat3"];
iron_math_Mat3.identity = function() {
	return new iron_math_Mat3(1,0,0,0,1,0,0,0,1);
};
iron_math_Mat3.prototype = {
	setFrom4: function(m) {
		this.self._00 = m.self._00;
		this.self._01 = m.self._01;
		this.self._02 = m.self._02;
		this.self._10 = m.self._10;
		this.self._11 = m.self._11;
		this.self._12 = m.self._12;
		this.self._20 = m.self._20;
		this.self._21 = m.self._21;
		this.self._22 = m.self._22;
	}
	,get__00: function() {
		return this.self._00;
	}
	,set__00: function(f) {
		return this.self._00 = f;
	}
	,get__01: function() {
		return this.self._01;
	}
	,set__01: function(f) {
		return this.self._01 = f;
	}
	,get__02: function() {
		return this.self._02;
	}
	,set__02: function(f) {
		return this.self._02 = f;
	}
	,get__10: function() {
		return this.self._10;
	}
	,set__10: function(f) {
		return this.self._10 = f;
	}
	,get__11: function() {
		return this.self._11;
	}
	,set__11: function(f) {
		return this.self._11 = f;
	}
	,get__12: function() {
		return this.self._12;
	}
	,set__12: function(f) {
		return this.self._12 = f;
	}
	,get__20: function() {
		return this.self._20;
	}
	,set__20: function(f) {
		return this.self._20 = f;
	}
	,get__21: function() {
		return this.self._21;
	}
	,set__21: function(f) {
		return this.self._21 = f;
	}
	,get__22: function() {
		return this.self._22;
	}
	,set__22: function(f) {
		return this.self._22 = f;
	}
	,__class__: iron_math_Mat3
	,__properties__: {set__22:"set__22",get__22:"get__22",set__21:"set__21",get__21:"get__21",set__20:"set__20",get__20:"get__20",set__12:"set__12",get__12:"get__12",set__11:"set__11",get__11:"get__11",set__10:"set__10",get__10:"get__10",set__02:"set__02",get__02:"get__02",set__01:"set__01",get__01:"get__01",set__00:"set__00",get__00:"get__00"}
};
var iron_math_Ray = function(origin,direction) {
	this.origin = origin == null ? new iron_math_Vec4() : origin;
	this.direction = direction == null ? new iron_math_Vec4() : direction;
};
$hxClasses["iron.math.Ray"] = iron_math_Ray;
iron_math_Ray.__name__ = ["iron","math","Ray"];
iron_math_Ray.prototype = {
	at: function(t) {
		var result = new iron_math_Vec4();
		return result.setFrom(this.direction).mult(t).add(this.origin);
	}
	,distanceToPoint: function(point) {
		var v1 = new iron_math_Vec4();
		var directionDistance = v1.subvecs(point,this.origin).dot(this.direction);
		if(directionDistance < 0) {
			return this.origin.distanceTo(point);
		}
		v1.setFrom(this.direction).mult(directionDistance).add(this.origin);
		return v1.distanceTo(point);
	}
	,intersectsSphere: function(sphereCenter,sphereRadius) {
		return this.distanceToPoint(sphereCenter) <= sphereRadius;
	}
	,intersectsPlane: function(plane) {
		var distToPoint = plane.distanceToPoint(this.origin);
		if(distToPoint == 0) {
			return true;
		}
		var denominator = plane.normal.dot(this.direction);
		if(denominator * distToPoint < 0) {
			return true;
		}
		return false;
	}
	,distanceToPlane: function(plane) {
		var denominator = plane.normal.dot(this.direction);
		if(denominator == 0) {
			if(plane.distanceToPoint(this.origin) == 0) {
				return 0;
			}
			return -1;
		}
		var t = -(this.origin.dot(plane.normal) + plane.constant) / denominator;
		if(t >= 0) {
			return t;
		} else {
			return -1;
		}
	}
	,intersectPlane: function(plane) {
		var t = this.distanceToPlane(plane);
		if(t == -1) {
			return null;
		}
		return this.at(t);
	}
	,intersectsBox: function(center,size) {
		return this.intersectBox(center,size) != null;
	}
	,intersectBox: function(center,size) {
		var tmin;
		var tmax;
		var tymin;
		var tymax;
		var tzmin;
		var tzmax;
		var halfX = size.x / 2;
		var halfY = size.x / 2;
		var halfZ = size.x / 2;
		var boxMinX = center.x - halfX;
		var boxMinY = center.y - halfY;
		var boxMinZ = center.z - halfZ;
		var boxMaxX = center.x + halfX;
		var boxMaxY = center.y + halfY;
		var boxMaxZ = center.z + halfZ;
		var invdirx = 1 / this.direction.x;
		var invdiry = 1 / this.direction.y;
		var invdirz = 1 / this.direction.z;
		var origin = this.origin;
		if(invdirx >= 0) {
			tmin = (boxMinX - origin.x) * invdirx;
			tmax = (boxMaxX - origin.x) * invdirx;
		} else {
			tmin = (boxMaxX - origin.x) * invdirx;
			tmax = (boxMinX - origin.x) * invdirx;
		}
		if(invdiry >= 0) {
			tymin = (boxMinY - origin.y) * invdiry;
			tymax = (boxMaxY - origin.y) * invdiry;
		} else {
			tymin = (boxMaxY - origin.y) * invdiry;
			tymax = (boxMinY - origin.y) * invdiry;
		}
		if(tmin > tymax || tymin > tmax) {
			return null;
		}
		if(tymin > tmin || tmin != tmin) {
			tmin = tymin;
		}
		if(tymax < tmax || tmax != tmax) {
			tmax = tymax;
		}
		if(invdirz >= 0) {
			tzmin = (boxMinZ - origin.z) * invdirz;
			tzmax = (boxMaxZ - origin.z) * invdirz;
		} else {
			tzmin = (boxMaxZ - origin.z) * invdirz;
			tzmax = (boxMinZ - origin.z) * invdirz;
		}
		if(tmin > tzmax || tzmin > tmax) {
			return null;
		}
		if(tzmin > tmin || tmin != tmin) {
			tmin = tzmin;
		}
		if(tzmax < tmax || tmax != tmax) {
			tmax = tzmax;
		}
		if(tmax < 0) {
			return null;
		}
		return this.at(tmin >= 0 ? tmin : tmax);
	}
	,intersectTriangle: function(a,b,c,backfaceCulling) {
		var diff = new iron_math_Vec4();
		var edge1 = new iron_math_Vec4();
		var edge2 = new iron_math_Vec4();
		var normal = new iron_math_Vec4();
		edge1.subvecs(b,a);
		edge2.subvecs(c,a);
		normal.crossvecs(edge1,edge2);
		var DdN = this.direction.dot(normal);
		var sign;
		if(DdN > 0) {
			if(backfaceCulling) {
				return null;
			}
			sign = 1;
		} else if(DdN < 0) {
			sign = -1;
			DdN = -DdN;
		} else {
			return null;
		}
		diff.subvecs(this.origin,a);
		var DdQxE2 = sign * this.direction.dot(edge2.crossvecs(diff,edge2));
		if(DdQxE2 < 0) {
			return null;
		}
		var DdE1xQ = sign * this.direction.dot(edge1.cross(diff));
		if(DdE1xQ < 0) {
			return null;
		}
		if(DdQxE2 + DdE1xQ > DdN) {
			return null;
		}
		var QdN = -sign * diff.dot(normal);
		if(QdN < 0) {
			return null;
		}
		return this.at(QdN / DdN);
	}
	,__class__: iron_math_Ray
};
var iron_math_Plane = function() {
	this.constant = 0.0;
	this.normal = new iron_math_Vec4(1.0,0.0,0.0);
};
$hxClasses["iron.math.Plane"] = iron_math_Plane;
iron_math_Plane.__name__ = ["iron","math","Plane"];
iron_math_Plane.prototype = {
	distanceToPoint: function(point) {
		return this.normal.dot(point) + this.constant;
	}
	,setFromNormalAndCoplanarPoint: function(normal,point) {
		this.normal.setFrom(normal);
		this.constant = -point.dot(this.normal);
		return this;
	}
	,__class__: iron_math_Plane
};
var iron_math_RayCaster = function() { };
$hxClasses["iron.math.RayCaster"] = iron_math_RayCaster;
iron_math_RayCaster.__name__ = ["iron","math","RayCaster"];
iron_math_RayCaster.getRay = function(inputX,inputY,camera) {
	var start = new iron_math_Vec4();
	var end = new iron_math_Vec4();
	iron_math_RayCaster.getDirection(start,end,inputX,inputY,camera);
	return new iron_math_Ray(start,end);
};
iron_math_RayCaster.getDirection = function(start,end,inputX,inputY,camera) {
	start.x = inputX / kha_System.windowWidth() * 2 - 1;
	start.y = -(inputY / kha_System.windowHeight()) * 2 + 1;
	start.z = -1.0;
	end.x = start.x;
	end.y = start.y;
	end.z = 0.0;
	start.unproject(camera.P,camera.V);
	end.unproject(camera.P,camera.V);
	end.sub(start);
	end.normalize();
	end.x *= camera.data.raw.far_plane;
	end.y *= camera.data.raw.far_plane;
	end.z *= camera.data.raw.far_plane;
};
iron_math_RayCaster.boxIntersect = function(transform,inputX,inputY,camera) {
	var ray = iron_math_RayCaster.getRay(inputX,inputY,camera);
	var t = transform;
	var c = new iron_math_Vec4(t.matrix.self._30,t.matrix.self._31,t.matrix.self._32);
	var s = new iron_math_Vec4(t.size.x,t.size.y,t.size.z);
	return ray.intersectBox(c,s);
};
iron_math_RayCaster.getClosestBoxIntersect = function(transforms,inputX,inputY,camera) {
	var intersects = [];
	var _g = 0;
	while(_g < transforms.length) {
		var t = transforms[_g];
		++_g;
		var intersect = iron_math_RayCaster.boxIntersect(t,inputX,inputY,camera);
		if(intersect != null) {
			intersects.push(t);
		}
	}
	if(intersects.length == 0) {
		return null;
	}
	var closest = null;
	var minDist = Infinity;
	var _g1 = 0;
	while(_g1 < intersects.length) {
		var t1 = intersects[_g1];
		++_g1;
		var v1 = t1.loc;
		var v2 = camera.transform.loc;
		var vx = v1.x - v2.x;
		var vy = v1.y - v2.y;
		var vz = v1.z - v2.z;
		var dist = Math.sqrt(vx * vx + vy * vy + vz * vz);
		if(dist < minDist) {
			minDist = dist;
			closest = t1;
		}
	}
	return closest;
};
iron_math_RayCaster.planeIntersect = function(normal,a,inputX,inputY,camera) {
	var ray = iron_math_RayCaster.getRay(inputX,inputY,camera);
	var plane = new iron_math_Plane();
	plane.setFromNormalAndCoplanarPoint(normal,a);
	return ray.intersectPlane(plane);
};
iron_math_RayCaster.getPlaneUV = function(obj,screenX,screenY,camera) {
	var normals = obj.data.mesh.normals;
	iron_math_RayCaster.nor.set(normals[0],normals[1],normals[2]);
	iron_math_RayCaster.m.setFrom(obj.transform.matrix);
	iron_math_RayCaster.m.getInverse(iron_math_RayCaster.m);
	iron_math_RayCaster.m.transpose3x3();
	iron_math_RayCaster.m.self._30 = iron_math_RayCaster.m.self._31 = iron_math_RayCaster.m.self._32 = 0;
	iron_math_RayCaster.nor.applymat(iron_math_RayCaster.m);
	iron_math_RayCaster.nor.normalize();
	iron_math_RayCaster.loc.set(obj.transform.matrix.self._30,obj.transform.matrix.self._31,obj.transform.matrix.self._32);
	var hit = iron_math_RayCaster.planeIntersect(iron_math_RayCaster.nor,iron_math_RayCaster.loc,screenX,screenY,camera);
	if(hit != null) {
		var a = iron_math_RayCaster.nor.x;
		var b = iron_math_RayCaster.nor.y;
		var c = iron_math_RayCaster.nor.z;
		var e = 0.0001;
		var u = a >= e && b >= e ? new iron_math_Vec4(b,-a,0) : new iron_math_Vec4(c,-a,0);
		u.normalize();
		var v = iron_math_RayCaster.nor.clone();
		v.cross(u);
		hit.sub(iron_math_RayCaster.loc);
		var uCoord = u.dot(hit);
		var vCoord = v.dot(hit);
		var size = obj.transform.size;
		var hx = size.x / 2;
		var hy = size.z > size.y ? size.z / 2 : size.y / 2;
		var ix = uCoord / hx * -1 * 0.5 + 0.5;
		var iy = vCoord / hy * 0.5 + 0.5;
		return new iron_math_Vec2(ix,iy);
	}
	return null;
};
var iron_math_Vec2 = function(x,y) {
	if(y == null) {
		y = 0.0;
	}
	if(x == null) {
		x = 0.0;
	}
	this.x = x;
	this.y = y;
};
$hxClasses["iron.math.Vec2"] = iron_math_Vec2;
iron_math_Vec2.__name__ = ["iron","math","Vec2"];
iron_math_Vec2.prototype = {
	__class__: iron_math_Vec2
};
var iron_object_Animation = function(setup) {
	this.player = null;
	this.player = new iron_object_Player(setup);
	iron_Scene.active.animations.push(this);
};
$hxClasses["iron.object.Animation"] = iron_object_Animation;
iron_object_Animation.__name__ = ["iron","object","Animation"];
iron_object_Animation.prototype = {
	remove: function() {
		HxOverrides.remove(iron_Scene.active.animations,this);
	}
	,update: function(delta) {
		if(this.player.paused) {
			return;
		}
		this.player.animTime += delta * this.player.speed * this.player.dir;
	}
	,checkTimeIndex: function(player,timeValues) {
		if(player.dir > 0) {
			if(player.timeIndex + 1 < timeValues.length) {
				return player.animTime > timeValues[player.timeIndex + 1];
			} else {
				return false;
			}
		} else if(player.timeIndex - 1 > 0) {
			return player.animTime < timeValues[player.timeIndex - 1];
		} else {
			return false;
		}
	}
	,checkTrackEnd: function(player,track) {
		if(player.dir > 0) {
			if(player.timeIndex < track.times.length - 1) {
				return player.timeIndex >= player.current.end;
			} else {
				return true;
			}
		} else if(player.timeIndex > 1) {
			return player.timeIndex <= player.current.start;
		} else {
			return true;
		}
	}
	,updateAnimSampled: function(anim,targetMatrix,setFrame) {
		if(anim == null || this.player.current == null) {
			return;
		}
		var track = anim.tracks[0];
		if(this.player.dirty) {
			this.player.dirty = false;
			if(this.player.current.frames == 0) {
				this.player.paused = true;
				setFrame(this.player.current.start);
				return;
			} else {
				if(this.player.current.reflect) {
					this.player.dir *= -1;
				}
				this.player.timeIndex = this.player.dir > 0 ? this.player.current.start : this.player.current.end;
				this.player.animTime = track.times[this.player.timeIndex];
			}
		}
		while(true) {
			var player = this.player;
			var timeValues = track.times;
			if(!(player.dir > 0 ? player.timeIndex + 1 < timeValues.length && player.animTime > timeValues[player.timeIndex + 1] : player.timeIndex - 1 > 0 && player.animTime < timeValues[player.timeIndex - 1])) {
				break;
			}
			this.player.timeIndex += this.player.dir;
		}
		if(this.player.timeIndex >= track.times.length) {
			this.player.timeIndex = track.times.length - 1;
		}
		var player1 = this.player;
		if(player1.dir > 0 ? player1.timeIndex >= track.times.length - 1 || player1.timeIndex >= player1.current.end : player1.timeIndex <= 1 || player1.timeIndex <= player1.current.start) {
			if(this.player.current.loop) {
				this.player.dirty = true;
			} else {
				this.player.paused = true;
			}
			if(this.player.onTrackComplete != null) {
				this.player.onTrackComplete();
			}
			return;
		}
		var t = this.player.animTime;
		var ti = this.player.timeIndex;
		var t1 = track.times[ti];
		var t2 = track.times[ti + this.player.dir];
		var s = (t - t1) / (t2 - t1);
		iron_object_Animation.m1.set(track.values,ti * 16);
		iron_object_Animation.m2.set(track.values,(ti + this.player.dir) * 16);
		iron_object_Animation.m1.decompose(iron_object_Animation.vpos,iron_object_Animation.q1,iron_object_Animation.vscl);
		iron_object_Animation.m2.decompose(iron_object_Animation.vpos2,iron_object_Animation.q2,iron_object_Animation.vscl2);
		var fp = iron_math_Vec4.lerp(iron_object_Animation.vpos,iron_object_Animation.vpos2,1.0 - s);
		var fq = iron_math_Quat.lerp(iron_object_Animation.q1,iron_object_Animation.q2,s);
		var fs = iron_math_Vec4.lerp(iron_object_Animation.vscl,iron_object_Animation.vscl2,s);
		var m = targetMatrix;
		fq.toMat(m);
		m.scale(fs);
		m.self._30 = fp.x;
		m.self._31 = fp.y;
		m.self._32 = fp.z;
	}
	,__class__: iron_object_Animation
};
var iron_object_Player = function(setup) {
	this.paused = false;
	this.onTrackComplete = null;
	this.tracks = new haxe_ds_StringMap();
	this.current = null;
	this.dirty = false;
	this.timeIndex = 0;
	this.animTime = 0;
	this.ft = setup.frame_time;
	var _g1 = 0;
	var _g = setup.names.length;
	while(_g1 < _g) {
		var i = _g1++;
		this.addTrack(setup.names[i],setup.starts[i],setup.ends[i],setup.speeds[i],setup.loops[i],setup.reflects[i]);
	}
	this.play(setup.start_track);
};
$hxClasses["iron.object.Player"] = iron_object_Player;
iron_object_Player.__name__ = ["iron","object","Player"];
iron_object_Player.prototype = {
	play: function(name,onTrackComplete) {
		var _this = this.tracks;
		this.current = __map_reserved[name] != null ? _this.getReserved(name) : _this.h[name];
		if(this.current == null) {
			return;
		}
		this.onTrackComplete = onTrackComplete;
		this.dirty = true;
		this.paused = false;
		this.dir = this.current.speed >= 0 ? 1 : -1;
		if(this.current.reflect) {
			this.dir *= -1;
		}
		this.speed = Math.abs(this.current.speed);
	}
	,pause: function() {
		this.paused = true;
	}
	,addTrack: function(name,start,end,speed,loop,reflect) {
		var t = new iron_object_Track(name,start,end,speed,loop,reflect);
		var _this = this.tracks;
		if(__map_reserved[name] != null) {
			_this.setReserved(name,t);
		} else {
			_this.h[name] = t;
		}
	}
	,__class__: iron_object_Player
};
var iron_object_Track = function(name,start,end,speed,loop,reflect) {
	this.name = name;
	this.start = start;
	this.end = end;
	this.frames = end - start;
	this.speed = speed;
	this.loop = loop;
	this.reflect = reflect;
};
$hxClasses["iron.object.Track"] = iron_object_Track;
iron_object_Track.__name__ = ["iron","object","Track"];
iron_object_Track.prototype = {
	__class__: iron_object_Track
};
var iron_object_BoneAnimation = function(data,setup) {
	this.nor = new iron_math_Vec4();
	this.pos = new iron_math_Vec4();
	this.bm = iron_math_Mat4.identity();
	this.m = iron_math_Mat4.identity();
	this.boneTimeIndices = new haxe_ds_ObjectMap();
	this.boneMats = new haxe_ds_ObjectMap();
	iron_object_Animation.call(this,setup);
	this.data = data;
	this.isSkinned = data.isSkinned;
	this.isSampled = false;
	if(this.isSkinned) {
		var length = setup.max_bones * 8;
		var this1 = new Array(length);
		this.skinBuffer = this1;
		var _g1 = 0;
		var _g = this.skinBuffer.length;
		while(_g1 < _g) {
			var i = _g1++;
			this.skinBuffer[i] = 0;
		}
		var _g2 = 0;
		var _g11 = data.mesh.skeletonBones;
		while(_g2 < _g11.length) {
			var b = _g11[_g2];
			++_g2;
			this.boneMats.set(b,iron_math_Mat4.fromArray(b.transform.values));
			this.boneTimeIndices.set(b,0);
		}
	}
};
$hxClasses["iron.object.BoneAnimation"] = iron_object_BoneAnimation;
iron_object_BoneAnimation.__name__ = ["iron","object","BoneAnimation"];
iron_object_BoneAnimation.__super__ = iron_object_Animation;
iron_object_BoneAnimation.prototype = $extend(iron_object_Animation.prototype,{
	update: function(delta) {
		iron_object_Animation.prototype.update.call(this,delta);
		if(this.player.paused) {
			return;
		}
		if(this.isSkinned) {
			this.updateBoneAnim();
			this.updateSkin();
		}
	}
	,updateBoneAnim: function() {
		var _g = 0;
		var _g1 = this.data.mesh.skeletonBones;
		while(_g < _g1.length) {
			var b = _g1[_g];
			++_g;
			this.updateAnimSampled(b.animation,this.boneMats.h[b.__id__],$bind(this,this.setBoneAnimFrame));
		}
	}
	,setBoneAnimFrame: function(frame) {
		var _g = 0;
		var _g1 = this.data.mesh.skeletonBones;
		while(_g < _g1.length) {
			var b = _g1[_g];
			++_g;
			var boneAnim = b.animation;
			if(boneAnim != null) {
				var track = boneAnim.tracks[0];
				var m1 = iron_math_Mat4.fromArray(track.values,frame * 16);
				this.boneMats.set(b,m1);
			}
		}
		this.updateSkin();
	}
	,updateSkin: function() {
		this.updateSkinGpu();
	}
	,updateSkinGpu: function() {
		var bones = this.data.mesh.skeletonBones;
		var _g1 = 0;
		var _g = bones.length;
		while(_g1 < _g) {
			var i = _g1++;
			this.bm.setFrom(this.data.mesh.skinTransform);
			this.bm.multmat2(this.data.mesh.skeletonTransformsI[i]);
			this.m.setFrom(this.boneMats.h[bones[i].__id__]);
			var p = bones[i].parent;
			while(p != null) {
				var pm = this.boneMats.h[p.__id__];
				if(pm == null) {
					pm = iron_math_Mat4.fromArray(p.transform.values);
				}
				this.m.multmat2(pm);
				p = p.parent;
			}
			this.bm.multmat2(this.m);
			this.bm.decompose(iron_object_BoneAnimation.vpos,iron_object_BoneAnimation.q1,iron_object_BoneAnimation.vscl);
			iron_object_BoneAnimation.q1.normalize();
			iron_object_BoneAnimation.q2.set(iron_object_BoneAnimation.vpos.x,iron_object_BoneAnimation.vpos.y,iron_object_BoneAnimation.vpos.z,0.0);
			iron_object_BoneAnimation.q2.multquats(iron_object_BoneAnimation.q2,iron_object_BoneAnimation.q1);
			iron_object_BoneAnimation.q2.x *= 0.5;
			iron_object_BoneAnimation.q2.y *= 0.5;
			iron_object_BoneAnimation.q2.z *= 0.5;
			iron_object_BoneAnimation.q2.w *= 0.5;
			this.skinBuffer[i * 8] = iron_object_BoneAnimation.q1.x;
			this.skinBuffer[i * 8 + 1] = iron_object_BoneAnimation.q1.y;
			this.skinBuffer[i * 8 + 2] = iron_object_BoneAnimation.q1.z;
			this.skinBuffer[i * 8 + 3] = iron_object_BoneAnimation.q1.w;
			this.skinBuffer[i * 8 + 4] = iron_object_BoneAnimation.q2.x;
			this.skinBuffer[i * 8 + 5] = iron_object_BoneAnimation.q2.y;
			this.skinBuffer[i * 8 + 6] = iron_object_BoneAnimation.q2.z;
			this.skinBuffer[i * 8 + 7] = iron_object_BoneAnimation.q2.w;
		}
	}
	,updateSkinCpu: function() {
		var v = this.data.mesh.vertexBuffer.lock();
		var l = this.data.mesh.structLength;
		var index = 0;
		var _g1 = 0;
		var _g = v.length / l | 0;
		while(_g1 < _g) {
			var i = _g1++;
			var boneCount = this.data.mesh.skinBoneCounts[i];
			var boneIndices = [];
			var boneWeights = [];
			var _g3 = index;
			var _g2 = index + boneCount;
			while(_g3 < _g2) {
				var j = _g3++;
				boneIndices.push(this.data.mesh.skinBoneIndices[j]);
				boneWeights.push(this.data.mesh.skinBoneWeights[j]);
			}
			index += boneCount;
			this.pos.set(0,0,0);
			this.nor.set(0,0,0);
			var _g31 = 0;
			var _g21 = boneCount;
			while(_g31 < _g21) {
				var j1 = _g31++;
				var boneIndex = boneIndices[j1];
				var boneWeight = boneWeights[j1];
				var bone = this.data.mesh.skeletonBones[boneIndex];
				this.m.initTranslate(this.data.mesh.positions[i * 3],this.data.mesh.positions[i * 3 + 1],this.data.mesh.positions[i * 3 + 2]);
				this.m.multmat2(this.data.mesh.skinTransform);
				this.m.multmat2(this.data.mesh.skeletonTransformsI[boneIndex]);
				this.bm.setFrom(this.boneMats.h[bone.__id__]);
				var p = bone.parent;
				while(p != null) {
					var pm = this.boneMats.h[p.__id__];
					if(pm == null) {
						pm = iron_math_Mat4.fromArray(p.transform.values);
					}
					this.bm.multmat2(pm);
					p = p.parent;
				}
				this.m.multmat2(this.bm);
				this.m.mult(boneWeight);
				var _this = this.m;
				this.pos.add(new iron_math_Vec4(_this.self._30,_this.self._31,_this.self._32,_this.self._33));
				this.m.getInverse(this.bm);
				this.m.multmat2(this.data.mesh.skeletonTransforms[boneIndex]);
				this.m.multmat2(this.data.mesh.skinTransformI);
				this.m.translate(this.data.mesh.normals[i * 3],this.data.mesh.normals[i * 3 + 1],this.data.mesh.normals[i * 3 + 2]);
				this.m.mult(boneWeight);
				var _this1 = this.m;
				this.nor.add(new iron_math_Vec4(_this1.self._30,_this1.self._31,_this1.self._32,_this1.self._33));
			}
			v[i * l] = this.pos.x;
			v[i * l + 1] = this.pos.y;
			v[i * l + 2] = this.pos.z;
			v[i * l + 3] = this.nor.x;
			v[i * l + 4] = this.nor.y;
			v[i * l + 5] = this.nor.z;
		}
		this.data.mesh.vertexBuffer.unlock();
	}
	,__class__: iron_object_BoneAnimation
});
var iron_object_CameraObject = function(data) {
	this.rightV = iron_math_Mat4.identity();
	this.leftV = iron_math_Mat4.identity();
	this.helpMat = iron_math_Mat4.identity();
	this.frustumPlanes = null;
	this.prevV = null;
	iron_object_Object.call(this);
	this.data = data;
	this.renderPath = new iron_data_RenderPath(this);
	this.nearPlane = data.raw.near_plane;
	this.farPlane = data.raw.far_plane;
	var fov = data.raw.fov;
	if(data.raw.type == "perspective") {
		var _this = iron_Scene.active.embedded;
		var vrImage = __map_reserved["vr.png"] != null ? _this.getReserved("vr.png") : _this.h["vr.png"];
		var vrDownListener = function(index,x,y) {
			var vr = kha_vr_VrInterface.instance;
			if(vr == null || !vr.IsVrEnabled() || vr.IsPresenting()) {
				return;
			}
			var w = kha_System.windowWidth();
			var h = kha_System.windowHeight();
			if(x < w - 150 || y < h - 150) {
				return;
			}
			vr.onVRRequestPresent();
		};
		var vrRender2D = function(g) {
			var vr1 = kha_vr_VrInterface.instance;
			if(vr1 == null || !vr1.IsVrEnabled() || vr1.IsPresenting()) {
				return;
			}
			var w1 = kha_System.windowWidth();
			var h1 = kha_System.windowHeight();
			g.set_color(-1);
			g.drawImage(vrImage,w1 - 150,h1 - 150);
		};
		kha_input_Mouse.get().notify(vrDownListener,null,null,null);
		iron_App.notifyOnRender2D(vrRender2D);
		var vr2 = kha_vr_VrInterface.instance;
		if(vr2 != null && vr2.IsVrEnabled()) {
			vr2.onVRRequestPresent();
		}
		var w2 = kha_System.windowWidth();
		var h2 = kha_System.windowHeight();
		this.P = iron_math_Mat4.perspective(fov,w2 / h2,this.nearPlane,this.farPlane);
	} else if(data.raw.type == "orthographic") {
		this.P = iron_math_Mat4.orthogonal(-10,10,-6,6,-this.farPlane,this.farPlane);
	}
	this.V = iron_math_Mat4.identity();
	this.VP = iron_math_Mat4.identity();
	if(data.raw.frustum_culling) {
		this.frustumPlanes = [];
		var _g = 0;
		while(_g < 6) {
			var i = _g++;
			this.frustumPlanes.push(new iron_object_FrustumPlane());
		}
	}
	iron_Scene.active.cameras.push(this);
};
$hxClasses["iron.object.CameraObject"] = iron_object_CameraObject;
iron_object_CameraObject.__name__ = ["iron","object","CameraObject"];
iron_object_CameraObject.buildViewFrustum = function(VP,frustumPlanes) {
	var _this = frustumPlanes[0];
	var w = VP.self._33 + VP.self._30;
	_this.normal.set(VP.self._03 + VP.self._00,VP.self._13 + VP.self._10,VP.self._23 + VP.self._20);
	_this.constant = w;
	var _this1 = frustumPlanes[1];
	var w1 = VP.self._33 - VP.self._30;
	_this1.normal.set(VP.self._03 - VP.self._00,VP.self._13 - VP.self._10,VP.self._23 - VP.self._20);
	_this1.constant = w1;
	var _this2 = frustumPlanes[2];
	var w2 = VP.self._33 - VP.self._31;
	_this2.normal.set(VP.self._03 - VP.self._01,VP.self._13 - VP.self._11,VP.self._23 - VP.self._21);
	_this2.constant = w2;
	var _this3 = frustumPlanes[3];
	var w3 = VP.self._33 + VP.self._31;
	_this3.normal.set(VP.self._03 + VP.self._01,VP.self._13 + VP.self._11,VP.self._23 + VP.self._21);
	_this3.constant = w3;
	var _this4 = frustumPlanes[4];
	var w4 = VP.self._32;
	_this4.normal.set(VP.self._02,VP.self._12,VP.self._22);
	_this4.constant = w4;
	var _this5 = frustumPlanes[5];
	var w5 = VP.self._33 - VP.self._32;
	_this5.normal.set(VP.self._03 - VP.self._02,VP.self._13 - VP.self._12,VP.self._23 - VP.self._22);
	_this5.constant = w5;
	var _g = 0;
	while(_g < frustumPlanes.length) {
		var plane = frustumPlanes[_g];
		++_g;
		plane.normalize();
	}
};
iron_object_CameraObject.sphereInFrustum = function(frustumPlanes,t,radiusScale,offsetX,offsetY,offsetZ) {
	if(offsetZ == null) {
		offsetZ = 0.0;
	}
	if(offsetY == null) {
		offsetY = 0.0;
	}
	if(offsetX == null) {
		offsetX = 0.0;
	}
	if(radiusScale == null) {
		radiusScale = 1.0;
	}
	var radius = t.radius * radiusScale;
	var _g = 0;
	while(_g < frustumPlanes.length) {
		var plane = frustumPlanes[_g];
		++_g;
		iron_object_CameraObject.sphereCenter.set(t.matrix.self._30 + offsetX,t.matrix.self._31 + offsetY,t.matrix.self._32 + offsetZ);
		if(plane.distanceToSphere(iron_object_CameraObject.sphereCenter,radius) + radius * 2 < 0) {
			return false;
		}
	}
	return true;
};
iron_object_CameraObject.__super__ = iron_object_Object;
iron_object_CameraObject.prototype = $extend(iron_object_Object.prototype,{
	remove: function() {
		HxOverrides.remove(iron_Scene.active.cameras,this);
		iron_object_Object.prototype.remove.call(this);
	}
	,renderFrame: function(g,root,lamps) {
		this.buildMatrix();
		if(this.prevV == null) {
			this.prevV = iron_math_Mat4.identity();
			this.prevV.setFrom(this.V);
		}
		this.renderPath.renderFrame(g,root,lamps);
		this.prevV.setFrom(this.V);
	}
	,buildMatrix: function() {
		this.transform.buildMatrix();
		var sc = this.transform.matrix.getScale();
		iron_object_CameraObject.temp.set(1.0 / sc.x,1.0 / sc.y,1.0 / sc.z);
		this.transform.matrix.scale(iron_object_CameraObject.temp);
		this.V.getInverse(this.transform.matrix);
		var vr = kha_vr_VrInterface.instance;
		if(vr != null && vr.IsPresenting()) {
			this.leftV.setFrom(this.V);
			this.helpMat.self = vr.GetViewMatrix(0);
			this.leftV.multmat2(this.helpMat);
			this.rightV.setFrom(this.V);
			this.helpMat.self = vr.GetViewMatrix(1);
			this.rightV.multmat2(this.helpMat);
		} else {
			this.leftV.setFrom(this.V);
		}
		if(this.data.raw.frustum_culling) {
			this.VP.multmats(this.P,this.leftV);
			iron_object_CameraObject.buildViewFrustum(this.VP,this.frustumPlanes);
		}
	}
	,rotate: function(axis,f) {
		iron_object_CameraObject.q.fromAxisAngle(axis,f);
		this.transform.rot.multquats(iron_object_CameraObject.q,this.transform.rot);
		this.buildMatrix();
	}
	,move: function(axis,f) {
		if(f == null) {
			f = 1.0;
		}
		this.transform.loc.addf(axis.x * f,axis.y * f,axis.z * f);
		this.buildMatrix();
	}
	,right: function() {
		return new iron_math_Vec4(this.transform.local.self._00,this.transform.local.self._01,this.transform.local.self._02);
	}
	,up: function() {
		return new iron_math_Vec4(this.transform.local.self._10,this.transform.local.self._11,this.transform.local.self._12);
	}
	,look: function() {
		return new iron_math_Vec4(-this.transform.local.self._20,-this.transform.local.self._21,-this.transform.local.self._22);
	}
	,rightAbs: function() {
		return new iron_math_Vec4(this.transform.matrix.self._00,this.transform.matrix.self._01,this.transform.matrix.self._02);
	}
	,upAbs: function() {
		return new iron_math_Vec4(this.transform.matrix.self._10,this.transform.matrix.self._11,this.transform.matrix.self._12);
	}
	,lookAbs: function() {
		return new iron_math_Vec4(-this.transform.matrix.self._20,-this.transform.matrix.self._21,-this.transform.matrix.self._22);
	}
	,toString: function() {
		return "Camera Object " + this.name;
	}
	,__class__: iron_object_CameraObject
});
var iron_object_FrustumPlane = function() {
	this.constant = 0.0;
	this.normal = new iron_math_Vec4(1.0,0.0,0.0);
};
$hxClasses["iron.object.FrustumPlane"] = iron_object_FrustumPlane;
iron_object_FrustumPlane.__name__ = ["iron","object","FrustumPlane"];
iron_object_FrustumPlane.prototype = {
	normalize: function() {
		var _this = this.normal;
		var inverseNormalLength = 1.0 / Math.sqrt(_this.x * _this.x + _this.y * _this.y + _this.z * _this.z);
		this.normal.mult(inverseNormalLength);
		this.constant *= inverseNormalLength;
	}
	,distanceToSphere: function(sphereCenter,sphereRadius) {
		return this.normal.dot(sphereCenter) + this.constant - sphereRadius;
	}
	,setComponents: function(x,y,z,w) {
		this.normal.set(x,y,z);
		this.constant = w;
	}
	,__class__: iron_object_FrustumPlane
};
var iron_object_Constraint = function(constr) {
	this.target = null;
	this.raw = constr;
};
$hxClasses["iron.object.Constraint"] = iron_object_Constraint;
iron_object_Constraint.__name__ = ["iron","object","Constraint"];
iron_object_Constraint.prototype = {
	apply: function(transform) {
		if(this.target == null && this.raw.target != null) {
			this.target = iron_Scene.active.getChild(this.raw.target).transform;
		}
		if(this.raw.type == "COPY_LOCATION") {
			if(this.raw.use_x) {
				transform.matrix.self._30 = this.target.loc.x;
				if(this.raw.use_offset) {
					var _g = transform.matrix;
					_g.self._30 += transform.loc.x;
				}
			}
			if(this.raw.use_y) {
				transform.matrix.self._31 = this.target.loc.y;
				if(this.raw.use_offset) {
					var _g1 = transform.matrix;
					_g1.self._31 += transform.loc.y;
				}
			}
			if(this.raw.use_z) {
				transform.matrix.self._32 = this.target.loc.z;
				if(this.raw.use_offset) {
					var _g2 = transform.matrix;
					_g2.self._32 += transform.loc.z;
				}
			}
		}
	}
	,__class__: iron_object_Constraint
};
var iron_object_DecalObject = function(material) {
	iron_object_Object.call(this);
	this.material = material;
	iron_Scene.active.decals.push(this);
};
$hxClasses["iron.object.DecalObject"] = iron_object_DecalObject;
iron_object_DecalObject.__name__ = ["iron","object","DecalObject"];
iron_object_DecalObject.__super__ = iron_object_Object;
iron_object_DecalObject.prototype = $extend(iron_object_Object.prototype,{
	remove: function() {
		HxOverrides.remove(iron_Scene.active.decals,this);
		iron_object_Object.prototype.remove.call(this);
	}
	,render: function(g,context,camera,lamp,bindParams) {
		if(this.material.raw.skip_context != null && this.material.raw.skip_context == context) {
			return;
		}
		var materialContext = null;
		var _g1 = 0;
		var _g = this.material.raw.contexts.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(this.material.raw.contexts[i].name == context) {
				materialContext = this.material.contexts[i];
				break;
			}
		}
		var shaderContext = this.material.shader.getContext(context);
		g.setPipeline(shaderContext.pipeState);
		iron_object_Uniforms.setConstants(g,shaderContext,this,camera,lamp,bindParams);
		iron_object_Uniforms.setMaterialConstants(g,shaderContext,materialContext);
	}
	,__class__: iron_object_DecalObject
});
var iron_object_LampObject = function(data) {
	this.camSlicedP = null;
	this.frustumPlanes = null;
	this.P = null;
	this.V = iron_math_Mat4.identity();
	iron_object_Object.call(this);
	this.data = data;
	var type = data.raw.type;
	var fov = data.raw.fov;
	if(type == "sun") {
		if(iron_object_LampObject.corners == null) {
			iron_object_LampObject.corners = [];
			var _g = 0;
			while(_g < 8) {
				var i = _g++;
				iron_object_LampObject.corners.push(new iron_math_Vec4());
			}
		}
	} else if(type == "point" || type == "area") {
		this.P = iron_math_Mat4.perspective(fov,1,data.raw.near_plane,data.raw.far_plane);
	} else if(type == "spot") {
		this.P = iron_math_Mat4.perspective(fov,1,data.raw.near_plane,data.raw.far_plane);
	}
	iron_Scene.active.lamps.push(this);
};
$hxClasses["iron.object.LampObject"] = iron_object_LampObject;
iron_object_LampObject.__name__ = ["iron","object","LampObject"];
iron_object_LampObject.setCorners = function() {
	iron_object_LampObject.corners[0].set(-1.0,-1.0,1.0);
	iron_object_LampObject.corners[1].set(-1.0,-1.0,-1.0);
	iron_object_LampObject.corners[2].set(-1.0,1.0,1.0);
	iron_object_LampObject.corners[3].set(-1.0,1.0,-1.0);
	iron_object_LampObject.corners[4].set(1.0,-1.0,1.0);
	iron_object_LampObject.corners[5].set(1.0,-1.0,-1.0);
	iron_object_LampObject.corners[6].set(1.0,1.0,1.0);
	iron_object_LampObject.corners[7].set(1.0,1.0,-1.0);
};
iron_object_LampObject.__super__ = iron_object_Object;
iron_object_LampObject.prototype = $extend(iron_object_Object.prototype,{
	remove: function() {
		HxOverrides.remove(iron_Scene.active.lamps,this);
		iron_object_Object.prototype.remove.call(this);
	}
	,buildMatrices: function(camera) {
		this.transform.buildMatrix();
		if(this.data.raw.type == "sun") {
			if(this.camSlicedP == null) {
				var raw = this.data.raw;
				this.camSlicedP = iron_math_Mat4.perspective(raw.fov,kha_System.windowWidth() / kha_System.windowHeight(),raw.near_plane,raw.far_plane);
			}
			iron_object_LampObject.m.setFrom(camera.leftV);
			iron_object_LampObject.m.multmat2(this.camSlicedP);
			iron_object_LampObject.m.getInverse(iron_object_LampObject.m);
			this.V.setFrom(this.transform.matrix);
			this.V.toRotation();
			this.V.getInverse(this.V);
			iron_object_LampObject.m.multmat2(this.V);
			iron_object_LampObject.setCorners();
			var _g = 0;
			var _g1 = iron_object_LampObject.corners;
			while(_g < _g1.length) {
				var v = _g1[_g];
				++_g;
				v.applymat4(iron_object_LampObject.m);
				v.set(v.x / v.w,v.y / v.w,v.z / v.w);
			}
			var minx = iron_object_LampObject.corners[0].x;
			var miny = iron_object_LampObject.corners[0].y;
			var minz = iron_object_LampObject.corners[0].z;
			var maxx = iron_object_LampObject.corners[0].x;
			var maxy = iron_object_LampObject.corners[0].y;
			var maxz = iron_object_LampObject.corners[0].z;
			var _g2 = 0;
			var _g11 = iron_object_LampObject.corners;
			while(_g2 < _g11.length) {
				var v1 = _g11[_g2];
				++_g2;
				if(v1.x < minx) {
					minx = v1.x;
				}
				if(v1.x > maxx) {
					maxx = v1.x;
				}
				if(v1.y < miny) {
					miny = v1.y;
				}
				if(v1.y > maxy) {
					maxy = v1.y;
				}
				if(v1.z < minz) {
					minz = v1.z;
				}
				if(v1.z > maxz) {
					maxz = v1.z;
				}
			}
			var v11 = iron_object_LampObject.corners[0];
			var v2 = iron_object_LampObject.corners[7];
			var vx = v11.x - v2.x;
			var vy = v11.y - v2.y;
			var vz = v11.z - v2.z;
			var diag0 = Math.sqrt(vx * vx + vy * vy + vz * vz);
			var offx = (diag0 - (maxx - minx)) * 0.5;
			var offy = (diag0 - (maxy - miny)) * 0.5;
			minx -= offx;
			maxx += offx;
			miny -= offy;
			maxy += offy;
			var worldPerTexelX = (maxx - minx) / this.data.raw.shadowmap_size;
			var worldPerTexelY = (maxy - miny) / this.data.raw.shadowmap_size;
			var worldPerTexelZ = (maxz - minz) / this.data.raw.shadowmap_size;
			minx = Math.floor(minx / worldPerTexelX) * worldPerTexelX;
			miny = Math.floor(miny / worldPerTexelY) * worldPerTexelY;
			minz = Math.floor(minz / worldPerTexelZ) * worldPerTexelZ;
			maxx = Math.floor(maxx / worldPerTexelX) * worldPerTexelX;
			maxy = Math.floor(maxy / worldPerTexelY) * worldPerTexelY;
			maxz = Math.floor(maxz / worldPerTexelZ) * worldPerTexelZ;
			var hx = (maxx - minx) / 2;
			var hy = (maxy - miny) / 2;
			var hz = (maxz - minz) / 2;
			this.V.self._30 = -(minx + hx);
			this.V.self._31 = -(miny + hy);
			this.V.self._32 = -(minz + hz);
			this.P = iron_math_Mat4.orthogonal(-hx,hx,-hy,hy,-hz * 4,hz);
		} else {
			this.V.getInverse(this.transform.matrix);
		}
		this.updateViewFrustum(camera);
	}
	,updateViewFrustum: function(camera) {
		if(camera.data.raw.frustum_culling) {
			if(this.frustumPlanes == null) {
				this.frustumPlanes = [];
				var _g = 0;
				while(_g < 6) {
					var i = _g++;
					this.frustumPlanes.push(new iron_object_FrustumPlane());
				}
				if(iron_object_LampObject.VP == null) {
					iron_object_LampObject.VP = iron_math_Mat4.identity();
				}
			}
			iron_object_LampObject.VP.multmats(this.P,this.V);
			iron_object_CameraObject.buildViewFrustum(iron_object_LampObject.VP,this.frustumPlanes);
		}
	}
	,setCubeFace: function(face,camera) {
		iron_object_LampObject.p1.set(this.transform.matrix.self._30,this.transform.matrix.self._31,this.transform.matrix.self._32);
		iron_object_LampObject.p2.setFrom(iron_object_LampObject.p1);
		switch(face) {
		case 0:
			iron_object_LampObject.p2.addf(1.0,0.0,0.0);
			iron_object_LampObject.p3.set(0.0,-1.0,0.0);
			break;
		case 1:
			iron_object_LampObject.p2.addf(-1.0,0.0,0.0);
			iron_object_LampObject.p3.set(0.0,-1.0,0.0);
			break;
		case 2:
			iron_object_LampObject.p2.addf(0.0,1.0,0.0);
			iron_object_LampObject.p3.set(0.0,0.0,1.0);
			break;
		case 3:
			iron_object_LampObject.p2.addf(0.0,-1.0,0.0);
			iron_object_LampObject.p3.set(0.0,0.0,-1.0);
			break;
		case 4:
			iron_object_LampObject.p2.addf(0.0,0.0,1.0);
			iron_object_LampObject.p3.set(0.0,-1.0,0.0);
			break;
		case 5:
			iron_object_LampObject.p2.addf(0.0,0.0,-1.0);
			iron_object_LampObject.p3.set(0.0,-1.0,0.0);
			break;
		}
		this.V.setLookAt(iron_object_LampObject.p1,iron_object_LampObject.p2,iron_object_LampObject.p3);
		this.updateViewFrustum(camera);
	}
	,right: function() {
		return new iron_math_Vec4(this.V.self._00,this.V.self._10,this.V.self._20);
	}
	,up: function() {
		return new iron_math_Vec4(this.V.self._01,this.V.self._11,this.V.self._21);
	}
	,look: function() {
		return new iron_math_Vec4(this.V.self._02,this.V.self._12,this.V.self._22);
	}
	,toString: function() {
		return "Lamp Object " + this.name;
	}
	,__class__: iron_object_LampObject
});
var iron_object_MeshObject = function(data,materials) {
	this.frustumCulling = true;
	this.screenSize = 0.0;
	this.particleSystem = null;
	iron_object_Object.call(this);
	this.data = data;
	this.materials = materials;
	iron_Scene.active.meshes.push(this);
	var makeBuffers = true;
	if(makeBuffers) {
		data.mesh.build();
	}
};
$hxClasses["iron.object.MeshObject"] = iron_object_MeshObject;
iron_object_MeshObject.__name__ = ["iron","object","MeshObject"];
iron_object_MeshObject.__super__ = iron_object_Object;
iron_object_MeshObject.prototype = $extend(iron_object_Object.prototype,{
	remove: function() {
		HxOverrides.remove(iron_Scene.active.meshes,this);
		iron_object_Object.prototype.remove.call(this);
	}
	,setupAnimation: function(setup) {
		if(this.data.isSkinned) {
			this.animation = new iron_object_BoneAnimation(this.data,setup);
		} else {
			iron_object_Object.prototype.setupAnimation.call(this,setup);
		}
	}
	,setupParticleSystem: function(sceneName,pref) {
		this.particleSystem = new iron_object_ParticleSystem(this,sceneName,pref);
	}
	,isLodMaterial: function() {
		if(this.raw != null && this.raw.lod_material != null) {
			return this.raw.lod_material == true;
		} else {
			return false;
		}
	}
	,cullMaterial: function(context,camera) {
		var mats = this.materials;
		if(!(this.raw != null && this.raw.lod_material != null && this.raw.lod_material == true) && mats[0].getContext(context) == null) {
			this.culled = true;
			return this.culled;
		}
		var shadowsContext = camera.data.pathdata.raw.shadows_context;
		if(!this.visibleMesh && context != shadowsContext) {
			this.culled = true;
			return this.culled;
		}
		if(!this.visibleShadow && context == shadowsContext) {
			this.culled = true;
			return this.culled;
		}
		if(this.skipContext(context)) {
			this.culled = true;
			return this.culled;
		}
		this.culled = false;
		return this.culled;
	}
	,cullMesh: function(context,camera,lamp) {
		if(camera.data.raw.frustum_culling && this.frustumCulling) {
			var radiusScale = this.data.isSkinned ? 2.0 : 1.0;
			if(this.particleSystem != null) {
				radiusScale *= 100;
			}
			if(context == "voxel") {
				radiusScale *= 100;
			}
			var shadowsContext = camera.data.pathdata.raw.shadows_context;
			var frustumPlanes = context == shadowsContext ? lamp.frustumPlanes : camera.frustumPlanes;
			if(this.data.mesh.instanced) {
				var instanceInFrustum = false;
				var _g = 0;
				var _g1 = this.data.mesh.offsetVecs;
				while(_g < _g1.length) {
					var v = _g1[_g];
					++_g;
					if(iron_object_CameraObject.sphereInFrustum(frustumPlanes,this.transform,radiusScale,v.x,v.y,v.z)) {
						instanceInFrustum = true;
						break;
					}
				}
				if(!instanceInFrustum) {
					this.culled = true;
					return this.culled;
				}
				var camX = camera.transform.matrix.self._30;
				var camY = camera.transform.matrix.self._31;
				var camZ = camera.transform.matrix.self._32;
				this.data.mesh.sortInstanced(camX,camY,camZ);
			} else if(!iron_object_CameraObject.sphereInFrustum(frustumPlanes,this.transform,radiusScale)) {
				this.culled = true;
				return this.culled;
			}
		}
		this.culled = false;
		return this.culled;
	}
	,skipContext: function(context) {
		var _g = 0;
		var _g1 = this.materials;
		while(_g < _g1.length) {
			var mat = _g1[_g];
			++_g;
			if(mat.raw.skip_context != null && mat.raw.skip_context == context) {
				return true;
			}
		}
		return false;
	}
	,getContexts: function(context,materials,materialContexts,shaderContexts) {
		var _g = 0;
		while(_g < materials.length) {
			var mat = materials[_g];
			++_g;
			var _g2 = 0;
			var _g1 = mat.raw.contexts.length;
			while(_g2 < _g1) {
				var i = _g2++;
				if(HxOverrides.substr(mat.raw.contexts[i].name,0,context.length) == context) {
					materialContexts.push(mat.contexts[i]);
					shaderContexts.push(mat.shader.getContext(context));
					break;
				}
			}
		}
	}
	,render: function(g,context,camera,lamp,bindParams) {
		if(!this.visible) {
			return;
		}
		if(this.cullMaterial(context,camera)) {
			return;
		}
		if(this.cullMesh(context,camera,lamp)) {
			return;
		}
		var mats = this.materials;
		var lod = this;
		if(this.raw != null && this.raw.lods != null && this.raw.lods.length > 0) {
			var tr = this.transform;
			var volume = tr.size.x * tr.scale.x * tr.size.y * tr.scale.y * tr.size.z * tr.scale.z;
			this.screenSize = volume * (1.0 / this.cameraDistance);
			this.screenSize = this.screenSize > 1.0 ? 1.0 : this.screenSize;
			if(this.lods == null) {
				this.lods = [];
				var _g = 0;
				var _g1 = this.raw.lods;
				while(_g < _g1.length) {
					var l = _g1[_g];
					++_g;
					if(l.object_ref == "") {
						this.lods.push(null);
					} else {
						this.lods.push(iron_Scene.active.getChild(l.object_ref));
					}
				}
			}
			var _g11 = 0;
			var _g2 = this.raw.lods.length;
			while(_g11 < _g2) {
				var i = _g11++;
				if(this.screenSize > this.raw.lods[i].screen_size) {
					break;
				}
				lod = this.lods[i];
				if(this.raw != null && this.raw.lod_material != null && this.raw.lod_material == true) {
					mats = lod.materials;
				}
			}
			if(lod == null) {
				return;
			}
		}
		if(this.raw != null && this.raw.lod_material != null && this.raw.lod_material == true && mats[0].getContext(context) == null) {
			return;
		}
		var materialContexts = [];
		var shaderContexts = [];
		this.getContexts(context,mats,materialContexts,shaderContexts);
		if(lod.particleSystem != null) {
			lod.particleSystem.update();
		}
		this.transform.update();
		var ldata = lod.data;
		if(ldata.mesh.instanced) {
			g.setVertexBuffers(ldata.mesh.instancedVertexBuffers);
		} else {
			g.setVertexBuffer(ldata.mesh.vertexBuffer);
		}
		var _g12 = 0;
		var _g3 = ldata.mesh.indexBuffers.length;
		while(_g12 < _g3) {
			var i1 = _g12++;
			var mi = ldata.mesh.materialIndices[i1];
			if(shaderContexts.length <= mi) {
				continue;
			}
			g.setIndexBuffer(ldata.mesh.indexBuffers[i1]);
			g.setPipeline(shaderContexts[mi].pipeState);
			iron_object_Uniforms.setConstants(g,shaderContexts[mi],this,camera,lamp,bindParams);
			if(materialContexts.length > mi) {
				iron_object_Uniforms.setMaterialConstants(g,shaderContexts[mi],materialContexts[mi]);
			}
			if(ldata.mesh.instanced) {
				g.drawIndexedVerticesInstanced(ldata.mesh.instanceCount);
			} else {
				g.drawIndexedVertices();
			}
		}
		if(this.group != null) {
			var _g4 = 0;
			var _g13 = this.group;
			while(_g4 < _g13.length) {
				var o = _g13[_g4];
				++_g4;
				if(js_Boot.__instanceof(o,iron_object_MeshObject)) {
					o.transform.appendMatrix(this.transform.matrix);
					o.transform.buildMatrix();
					(js_Boot.__cast(o , iron_object_MeshObject)).render(g,context,camera,lamp,bindParams);
					o.transform.popAppendMatrix();
					o.transform.buildMatrix();
				}
			}
		}
	}
	,renderBatch: function(g,context,camera,lamp,bindParams,start,count) {
		if(count == null) {
			count = -1;
		}
		if(start == null) {
			start = 0;
		}
		if(!this.visible) {
			return;
		}
		if(this.cullMesh(context,camera,lamp)) {
			return;
		}
		var lod = this;
		var materialContexts = [];
		var shaderContexts = [];
		this.getContexts(context,this.materials,materialContexts,shaderContexts);
		if(lod.particleSystem != null) {
			lod.particleSystem.update();
		}
		this.transform.update();
		iron_object_Uniforms.setConstants(g,shaderContexts[0],this,camera,lamp,bindParams);
		iron_object_Uniforms.setMaterialConstants(g,shaderContexts[0],materialContexts[0]);
		g.drawIndexedVertices(start,count);
	}
	,validContext: function(mat,context) {
		return mat.getContext(context) != null;
	}
	,computeCameraDistance: function(camX,camY,camZ) {
		var vx = camX - this.transform.matrix.self._30;
		var vy = camY - this.transform.matrix.self._31;
		var vz = camZ - this.transform.matrix.self._32;
		this.cameraDistance = Math.sqrt(vx * vx + vy * vy + vz * vz);
	}
	,computeScreenSize: function(camera) {
		var tr = this.transform;
		var volume = tr.size.x * tr.scale.x * tr.size.y * tr.scale.y * tr.size.z * tr.scale.z;
		this.screenSize = volume * (1.0 / this.cameraDistance);
		this.screenSize = this.screenSize > 1.0 ? 1.0 : this.screenSize;
	}
	,initLods: function() {
		if(this.lods == null) {
			this.lods = [];
			var _g = 0;
			var _g1 = this.raw.lods;
			while(_g < _g1.length) {
				var l = _g1[_g];
				++_g;
				if(l.object_ref == "") {
					this.lods.push(null);
				} else {
					this.lods.push(iron_Scene.active.getChild(l.object_ref));
				}
			}
		}
	}
	,toString: function() {
		return "Mesh Object " + this.name;
	}
	,__class__: iron_object_MeshObject
});
var iron_object_ObjectAnimation = function(object,setup) {
	iron_object_Animation.call(this,setup);
	this.isSkinned = false;
	this.object = object;
	if(object.raw.animation_transforms != null) {
		this.isSampled = false;
		iron_object_ObjectAnimation.parseAnimationTransforms(object.transform,object.raw.animation_transforms);
	} else {
		this.isSampled = true;
	}
};
$hxClasses["iron.object.ObjectAnimation"] = iron_object_ObjectAnimation;
iron_object_ObjectAnimation.__name__ = ["iron","object","ObjectAnimation"];
iron_object_ObjectAnimation.parseAnimationTransforms = function(t,animation_transforms) {
	var _g = 0;
	while(_g < animation_transforms.length) {
		var at = animation_transforms[_g];
		++_g;
		var _g1 = at.type;
		switch(_g1) {
		case "rotation":
			t.setRotation(at.values[0],at.values[1],at.values[2]);
			break;
		case "rotation_x":
			t.setRotation(at.value,0,0);
			break;
		case "rotation_y":
			t.setRotation(0,at.value,0);
			break;
		case "rotation_z":
			t.setRotation(0,0,at.value);
			break;
		case "scale":
			t.scale.set(at.values[0],at.values[1],at.values[2]);
			break;
		case "scale_x":
			t.scale.x = at.value;
			break;
		case "scale_y":
			t.scale.y = at.value;
			break;
		case "scale_z":
			t.scale.z = at.value;
			break;
		case "translation":
			t.loc.set(at.values[0],at.values[1],at.values[2]);
			break;
		case "translation_x":
			t.loc.x = at.value;
			break;
		case "translation_y":
			t.loc.y = at.value;
			break;
		case "translation_z":
			t.loc.z = at.value;
			break;
		}
	}
	t.buildMatrix();
};
iron_object_ObjectAnimation.__super__ = iron_object_Animation;
iron_object_ObjectAnimation.prototype = $extend(iron_object_Animation.prototype,{
	update: function(delta) {
		iron_object_Animation.prototype.update.call(this,delta);
		if(this.player.paused) {
			return;
		}
		if(!this.isSkinned) {
			this.updateObjectAnim();
		}
	}
	,updateObjectAnim: function() {
		if(this.isSampled) {
			this.updateAnimSampled(this.object.raw.animation,this.object.transform.matrix,$bind(this,this.setObjectAnimFrame));
			this.object.transform.matrix.decompose(this.object.transform.loc,this.object.transform.rot,this.object.transform.scale);
		} else {
			this.updateAnimNonSampled(this.object.raw.animation,this.object.transform);
			this.object.transform.buildMatrix();
		}
	}
	,setObjectAnimFrame: function(frame) {
		var objectAnim = this.object.raw.animation;
		if(objectAnim != null) {
			var track = objectAnim.tracks[0];
			var m1 = iron_math_Mat4.fromArray(track.values,frame * 16);
			this.object.transform.matrix = m1;
		}
	}
	,interpolateLinear: function(t,t1,t2) {
		return (t - t1) / (t2 - t1);
	}
	,interpolateBezier: function(t,t1,t2) {
		var k = (t - t1) / (t2 - t1);
		if(k == 1) {
			return 1;
		} else {
			return 1 - Math.pow(2,-10 * k);
		}
	}
	,interpolateTcb: function() {
	}
	,updateAnimNonSampled: function(anim,transform) {
		if(anim == null || this.player.current == null) {
			return;
		}
		var begin = anim.begin;
		var end = anim.end;
		var total = end - begin;
		if(this.player.dirty) {
			this.player.dirty = false;
			this.player.animTime = this.player.current.start * this.player.ft;
			this.player.timeIndex = 0;
			var track = anim.tracks[0];
			while(this.player.animTime > track.times[this.player.timeIndex] + this.player.ft) this.player.timeIndex++;
		}
		if(this.player.current.frames == 0) {
			return;
		}
		var _g = 0;
		var _g1 = anim.tracks;
		while(_g < _g1.length) {
			var track1 = _g1[_g];
			++_g;
			if(this.player.timeIndex >= track1.times.length) {
				continue;
			}
			if(this.player.animTime > total || this.player.animTime < 0 || this.player.animTime > this.player.current.end * this.player.ft - this.player.ft && this.player.dir > 0 || this.player.animTime < this.player.current.start * this.player.ft + this.player.ft && this.player.dir < 0) {
				if(!this.player.current.loop) {
					this.player.paused = true;
					return;
				}
				if(this.player.current.reflect) {
					this.player.dir *= -1;
				}
				this.player.animTime = this.player.dir > 0 ? 0 : total;
				this.player.timeIndex = this.player.dir > 0 ? 0 : track1.times.length - 1;
			}
			var t = this.player.animTime + begin;
			if(this.player.dir > 0) {
				while(this.player.timeIndex < track1.times.length - 2 && t > track1.times[this.player.timeIndex + 1]) this.player.timeIndex++;
			} else {
				while(this.player.timeIndex > 1 && t < track1.times[this.player.timeIndex - 1]) this.player.timeIndex--;
			}
			var ti = this.player.timeIndex;
			var t1 = track1.times[ti];
			var t2 = track1.times[ti + this.player.dir];
			var interpolate = $bind(this,this.interpolateLinear);
			var _g2 = track1.curve;
			switch(_g2) {
			case "bezier":
				interpolate = $bind(this,this.interpolateBezier);
				break;
			case "linear":
				interpolate = $bind(this,this.interpolateLinear);
				break;
			}
			var s = this.player.dir > 0 ? interpolate(t,t1,t2) : interpolate(t1 - (t - t2),t2,t1);
			var invs = 1.0 - s;
			var v1 = track1.values[ti];
			var v2 = track1.values[ti + this.player.dir];
			var v = v1 * invs + v2 * s;
			var _g3 = track1.target;
			switch(_g3) {
			case "xloc":
				transform.loc.x = v;
				break;
			case "xrot":
				transform.setRotation(v,transform._eulerY,transform._eulerZ);
				break;
			case "xscl":
				transform.scale.x = v;
				break;
			case "yloc":
				transform.loc.y = v;
				break;
			case "yrot":
				transform.setRotation(transform._eulerX,v,transform._eulerZ);
				break;
			case "yscl":
				transform.scale.y = v;
				break;
			case "zloc":
				transform.loc.z = v;
				break;
			case "zrot":
				transform.setRotation(transform._eulerX,transform._eulerY,v);
				break;
			case "zscl":
				transform.scale.z = v;
				break;
			}
		}
	}
	,__class__: iron_object_ObjectAnimation
});
var iron_object_ParticleSystem = function(object,sceneName,pref) {
	var _gthis = this;
	this.object = object;
	this.name = pref.name;
	this.seed = pref.seed;
	this.particles = [];
	this.ready = false;
	iron_data_Data.getParticle(sceneName,pref.particle,function(b) {
		_gthis.data = b;
		var r = _gthis.data.raw;
		var _g1 = 0;
		var _g = r.count;
		while(_g1 < _g) {
			var i = _g1++;
			var p = new iron_object_Particle();
			_gthis.particles.push(p);
			p.offset = new iron_math_Vec4(0.0,0.0,0.0);
			p.velocity = new iron_math_Vec4(0.0,0.0,0.0);
			_gthis.setVelocity(p.velocity);
			p.lifetime = Std.random(r.lifetime * 1000 | 0) / 1000;
		}
		var instancedData = [];
		var _g2 = 0;
		var _g11 = _gthis.particles;
		while(_g2 < _g11.length) {
			var p1 = _g11[_g2];
			++_g2;
			instancedData.push(p1.offset.x);
			instancedData.push(p1.offset.y);
			instancedData.push(p1.offset.z);
		}
		object.data.mesh.setupInstanced(instancedData,kha_graphics4_Usage.DynamicUsage);
		_gthis.ready = true;
	});
};
$hxClasses["iron.object.ParticleSystem"] = iron_object_ParticleSystem;
iron_object_ParticleSystem.__name__ = ["iron","object","ParticleSystem"];
iron_object_ParticleSystem.prototype = {
	update: function() {
		if(!this.ready) {
			return;
		}
		var _g = 0;
		var _g1 = this.particles;
		while(_g < _g1.length) {
			var p = _g1[_g];
			++_g;
			p.lifetime += 0.0166666666666666664;
			if(p.lifetime > this.data.raw.lifetime) {
				p.lifetime = 0;
				this.setVelocity(p.velocity);
			}
			p.offset.x = p.lifetime * p.velocity.x;
			p.offset.y = p.lifetime * p.velocity.y;
			p.offset.z = p.lifetime * p.velocity.z;
		}
		this.sort();
		var vb = this.object.data.mesh.instancedVertexBuffers[1];
		var instancedData = vb.lock();
		var _g11 = 0;
		var _g2 = this.particles.length;
		while(_g11 < _g2) {
			var i = _g11++;
			var p1 = this.particles[i];
			instancedData[i * 3] = p1.offset.x;
			instancedData[i * 3 + 1] = p1.offset.y;
			instancedData[i * 3 + 2] = p1.offset.z;
		}
		vb.unlock();
	}
	,setVelocity: function(v) {
		var r = this.data.raw;
		v.set(r.object_align_factor[0],r.object_align_factor[1],r.object_align_factor[2]);
		if(r.factor_random != 0) {
			v.x += Std.random(r.factor_random * 1000 | 0) / 1000 - r.factor_random / 2;
			v.y += Std.random(r.factor_random * 1000 | 0) / 1000 - r.factor_random / 2;
			v.z += Std.random(r.factor_random * 1000 | 0) / 1000 - r.factor_random / 2;
		}
	}
	,sort: function() {
		var camera = iron_Scene.active.camera;
		var _g = 0;
		var _g1 = this.particles;
		while(_g < _g1.length) {
			var p = _g1[_g];
			++_g;
			var v1 = p.offset;
			var v2 = camera.transform.loc;
			var vx = v1.x - v2.x;
			var vy = v1.y - v2.y;
			var vz = v1.z - v2.z;
			p.cameraDistance = Math.sqrt(vx * vx + vy * vy + vz * vz);
		}
		this.particles.sort(function(p1,p2) {
			if(p1.cameraDistance > p2.cameraDistance) {
				return -1;
			}
			if(p1.cameraDistance < p2.cameraDistance) {
				return 1;
			}
			return 0;
		});
	}
	,__class__: iron_object_ParticleSystem
};
var iron_object_Particle = function() {
};
$hxClasses["iron.object.Particle"] = iron_object_Particle;
iron_object_Particle.__name__ = ["iron","object","Particle"];
iron_object_Particle.prototype = {
	__class__: iron_object_Particle
};
var iron_object_SpeakerObject = function(data) {
	this.sound = null;
	var _gthis = this;
	iron_object_Object.call(this);
	this.data = data;
	iron_Scene.active.speakers.push(this);
	if(data.sound == "") {
		return;
	}
	iron_data_Data.getSound(data.sound,function(sound) {
		_gthis.sound = sound;
		if(!data.muted) {
			iron_Scene.active.notifyOnInit($bind(_gthis,_gthis.play));
		}
	});
};
$hxClasses["iron.object.SpeakerObject"] = iron_object_SpeakerObject;
iron_object_SpeakerObject.__name__ = ["iron","object","SpeakerObject"];
iron_object_SpeakerObject.__super__ = iron_object_Object;
iron_object_SpeakerObject.prototype = $extend(iron_object_Object.prototype,{
	play: function() {
		if(this.sound == null) {
			return;
		}
		iron_system_Audio.playSound(this.sound,this.data.loop);
	}
	,remove: function() {
		HxOverrides.remove(iron_Scene.active.speakers,this);
		iron_object_Object.prototype.remove.call(this);
	}
	,__class__: iron_object_SpeakerObject
});
var iron_object_Transform = function(object) {
	this.appendMats = null;
	this.prependMats = null;
	this.localOnly = false;
	this.object = object;
	this.reset();
};
$hxClasses["iron.object.Transform"] = iron_object_Transform;
iron_object_Transform.__name__ = ["iron","object","Transform"];
iron_object_Transform.prototype = {
	reset: function() {
		this.matrix = iron_math_Mat4.identity();
		this.local = iron_math_Mat4.identity();
		this.loc = new iron_math_Vec4();
		this.abs = new iron_math_Vec4();
		this.rot = new iron_math_Quat();
		this.scale = new iron_math_Vec4(1.0,1.0,1.0);
		this.size = new iron_math_Vec4();
		this.dirty = true;
	}
	,update: function() {
		if(this.dirty) {
			this.dirty = false;
			this.buildMatrix();
		}
	}
	,prependMatrix: function(m) {
		if(this.prependMats == null) {
			this.prependMats = [];
		}
		this.prependMats.push(m);
	}
	,popPrependMatrix: function() {
		if(this.prependMats != null) {
			this.prependMats.pop();
			if(this.prependMats.length == 0) {
				this.prependMats = null;
			}
		}
	}
	,appendMatrix: function(m) {
		if(this.appendMats == null) {
			this.appendMats = [];
		}
		this.appendMats.push(m);
	}
	,popAppendMatrix: function() {
		if(this.appendMats != null) {
			this.appendMats.pop();
			if(this.appendMats.length == 0) {
				this.appendMats = null;
			}
		}
	}
	,buildMatrix: function() {
		this.local.compose(this.loc,this.rot,this.scale);
		if(this.prependMats != null) {
			iron_object_Transform.temp.setIdentity();
			var _g = 0;
			var _g1 = this.prependMats;
			while(_g < _g1.length) {
				var m = _g1[_g];
				++_g;
				iron_object_Transform.temp.multmat2(m);
			}
			iron_object_Transform.temp.multmat2(this.local);
			this.local.setFrom(iron_object_Transform.temp);
		}
		if(this.appendMats != null) {
			var _g2 = 0;
			var _g11 = this.appendMats;
			while(_g2 < _g11.length) {
				var m1 = _g11[_g2];
				++_g2;
				this.local.multmat2(m1);
			}
		}
		if(!this.localOnly && this.object.parent != null) {
			this.matrix.multmat3x4(this.local,this.object.parent.transform.matrix);
		} else {
			this.matrix = this.local;
		}
		if(this.object.constraints != null) {
			var _g3 = 0;
			var _g12 = this.object.constraints;
			while(_g3 < _g12.length) {
				var c = _g12[_g3];
				++_g3;
				c.apply(this);
			}
		}
		var _g4 = 0;
		var _g13 = this.object.children;
		while(_g4 < _g13.length) {
			var n = _g13[_g4];
			++_g4;
			n.transform.buildMatrix();
		}
		this.abs.set(this.matrix.self._30,this.matrix.self._31,this.matrix.self._32);
	}
	,set: function(x,y,z,rX,rY,rZ,sX,sY,sZ) {
		if(sZ == null) {
			sZ = 1.0;
		}
		if(sY == null) {
			sY = 1.0;
		}
		if(sX == null) {
			sX = 1.0;
		}
		if(rZ == null) {
			rZ = 0.0;
		}
		if(rY == null) {
			rY = 0.0;
		}
		if(rX == null) {
			rX = 0.0;
		}
		if(z == null) {
			z = 0.0;
		}
		if(y == null) {
			y = 0.0;
		}
		if(x == null) {
			x = 0.0;
		}
		this.loc.set(x,y,z);
		this.setRotation(rX,rY,rZ);
		this.scale.set(sX,sY,sZ);
		this.buildMatrix();
	}
	,translate: function(x,y,z) {
		this.loc.x += x;
		this.loc.y += y;
		this.loc.z += z;
		this.buildMatrix();
	}
	,setMatrix: function(mat) {
		this.matrix.setFrom(mat);
		this.matrix.decompose(this.loc,this.rot,this.scale);
	}
	,multMatrix: function(mat) {
		this.matrix.multmat2(mat);
		this.matrix.decompose(this.loc,this.rot,this.scale);
	}
	,rotate: function(axis,f) {
		var q = new iron_math_Quat();
		q.fromAxisAngle(axis,f);
		this.rot.multquats(q,this.rot);
		this.dirty = true;
	}
	,setRotation: function(x,y,z) {
		this.rot.fromEuler(x,y,z);
		this.dirty = true;
		this._eulerX = x;
		this._eulerY = y;
		this._eulerZ = z;
	}
	,computeRadius: function() {
		this.radius = Math.sqrt(this.size.x * this.size.x + this.size.y * this.size.y + this.size.z * this.size.z);
	}
	,setDimensions: function(x,y,z) {
		this.size.set(x,y,z);
		this.computeRadius();
	}
	,look: function() {
		var _this = this.matrix;
		return new iron_math_Vec4(_this.self._10,_this.self._11,_this.self._12);
	}
	,right: function() {
		var _this = this.matrix;
		return new iron_math_Vec4(_this.self._00,_this.self._01,_this.self._02);
	}
	,up: function() {
		var _this = this.matrix;
		return new iron_math_Vec4(_this.self._20,_this.self._21,_this.self._22);
	}
	,absx: function() {
		return this.matrix.self._30;
	}
	,absy: function() {
		return this.matrix.self._31;
	}
	,absz: function() {
		return this.matrix.self._32;
	}
	,__class__: iron_object_Transform
};
var kha_math_FastMatrix3 = function(_00,_10,_20,_01,_11,_21,_02,_12,_22) {
	this._00 = _00;
	this._10 = _10;
	this._20 = _20;
	this._01 = _01;
	this._11 = _11;
	this._21 = _21;
	this._02 = _02;
	this._12 = _12;
	this._22 = _22;
};
$hxClasses["kha.math.FastMatrix3"] = kha_math_FastMatrix3;
kha_math_FastMatrix3.__name__ = ["kha","math","FastMatrix3"];
kha_math_FastMatrix3.fromMatrix3 = function(m) {
	return new kha_math_FastMatrix3(m._00,m._10,m._20,m._01,m._11,m._21,m._02,m._12,m._22);
};
kha_math_FastMatrix3.prototype = {
	__class__: kha_math_FastMatrix3
};
var iron_object_Uniforms = function() { };
$hxClasses["iron.object.Uniforms"] = iron_object_Uniforms;
iron_object_Uniforms.__name__ = ["iron","object","Uniforms"];
iron_object_Uniforms.setConstants = function(g,context,object,camera,lamp,bindParams) {
	if(context.raw.constants != null) {
		var _g1 = 0;
		var _g = context.raw.constants.length;
		while(_g1 < _g) {
			var i = _g1++;
			var c = context.raw.constants[i];
			iron_object_Uniforms.setConstant(g,object,camera,lamp,context.constants[i],c);
		}
	}
	if(bindParams != null) {
		var _g11 = 0;
		var _g2 = bindParams.length / 2 | 0;
		while(_g11 < _g2) {
			var i1 = _g11++;
			var pos = i1 * 2;
			var rtID = bindParams[pos];
			var samplerID = bindParams[pos + 1];
			var pathdata = camera.data.pathdata;
			var attachDepth = false;
			var $char = rtID.charAt(0);
			if($char == "_") {
				attachDepth = true;
			}
			if(attachDepth) {
				rtID = HxOverrides.substr(rtID,1,null);
			}
			if(rtID == "shadowMap" && lamp != null && lamp.data.raw.shadowmap_cube) {
				var _this = pathdata.renderTargets;
				iron_object_Uniforms.bindRenderTarget(g,__map_reserved["arm_empty"] != null ? _this.getReserved("arm_empty") : _this.h["arm_empty"],context,samplerID,attachDepth);
				rtID += "Cube";
				samplerID += "Cube";
			} else {
				var _this1 = pathdata.renderTargets;
				iron_object_Uniforms.bindRenderTarget(g,__map_reserved["arm_empty"] != null ? _this1.getReserved("arm_empty") : _this1.h["arm_empty"],context,samplerID + "Cube",attachDepth);
			}
			var rt;
			if(attachDepth) {
				var _this2 = pathdata.depthToRenderTarget;
				if(__map_reserved[rtID] != null) {
					rt = _this2.getReserved(rtID);
				} else {
					rt = _this2.h[rtID];
				}
			} else {
				var _this3 = pathdata.renderTargets;
				if(__map_reserved[rtID] != null) {
					rt = _this3.getReserved(rtID);
				} else {
					rt = _this3.h[rtID];
				}
			}
			iron_object_Uniforms.bindRenderTarget(g,rt,context,samplerID,attachDepth);
		}
	}
	if(context.raw.texture_units != null) {
		var _g12 = 0;
		var _g3 = context.raw.texture_units.length;
		while(_g12 < _g3) {
			var j = _g12++;
			var tulink = context.raw.texture_units[j].link;
			if(tulink == null) {
				continue;
			}
			var tuid = context.raw.texture_units[j].name;
			if(tulink == "_envmapRadiance") {
				g.setTexture(context.textureUnits[j],iron_Scene.active.world.getGlobalProbe().radiance);
				g.setTextureParameters(context.textureUnits[j],kha_graphics4_TextureAddressing.Repeat,kha_graphics4_TextureAddressing.Repeat,kha_graphics4_TextureFilter.LinearFilter,kha_graphics4_TextureFilter.LinearFilter,kha_graphics4_MipMapFilter.LinearMipFilter);
			} else if(tulink == "_envmapBrdf") {
				var _this4 = iron_Scene.active.embedded;
				g.setTexture(context.textureUnits[j],__map_reserved["brdf.png"] != null ? _this4.getReserved("brdf.png") : _this4.h["brdf.png"]);
			} else if(tulink == "_noise8") {
				var _this5 = iron_Scene.active.embedded;
				g.setTexture(context.textureUnits[j],__map_reserved["noise8.png"] != null ? _this5.getReserved("noise8.png") : _this5.h["noise8.png"]);
				g.setTextureParameters(context.textureUnits[j],kha_graphics4_TextureAddressing.Repeat,kha_graphics4_TextureAddressing.Repeat,kha_graphics4_TextureFilter.LinearFilter,kha_graphics4_TextureFilter.LinearFilter,kha_graphics4_MipMapFilter.NoMipFilter);
			} else if(tulink == "_noise64") {
				var _this6 = iron_Scene.active.embedded;
				g.setTexture(context.textureUnits[j],__map_reserved["noise64.png"] != null ? _this6.getReserved("noise64.png") : _this6.h["noise64.png"]);
				g.setTextureParameters(context.textureUnits[j],kha_graphics4_TextureAddressing.Repeat,kha_graphics4_TextureAddressing.Repeat,kha_graphics4_TextureFilter.LinearFilter,kha_graphics4_TextureFilter.LinearFilter,kha_graphics4_MipMapFilter.NoMipFilter);
			} else if(tulink == "_noise256") {
				var _this7 = iron_Scene.active.embedded;
				g.setTexture(context.textureUnits[j],__map_reserved["noise256.png"] != null ? _this7.getReserved("noise256.png") : _this7.h["noise256.png"]);
				g.setTextureParameters(context.textureUnits[j],kha_graphics4_TextureAddressing.Repeat,kha_graphics4_TextureAddressing.Repeat,kha_graphics4_TextureFilter.LinearFilter,kha_graphics4_TextureFilter.LinearFilter,kha_graphics4_MipMapFilter.NoMipFilter);
			} else if(tulink == "_lampColorTexture") {
				if(lamp != null) {
					g.setTexture(context.textureUnits[j],lamp.data.colorTexture);
					g.setTextureParameters(context.textureUnits[j],kha_graphics4_TextureAddressing.Repeat,kha_graphics4_TextureAddressing.Repeat,kha_graphics4_TextureFilter.LinearFilter,kha_graphics4_TextureFilter.LinearFilter,kha_graphics4_MipMapFilter.NoMipFilter);
				}
			} else if(tulink == "_lensTexture") {
				var _this8 = iron_Scene.active.embedded;
				g.setTexture(context.textureUnits[j],__map_reserved["lenstexture.jpg"] != null ? _this8.getReserved("lenstexture.jpg") : _this8.h["lenstexture.jpg"]);
			} else if(iron_object_Uniforms.externalTextureLinks != null) {
				var _g21 = 0;
				var _g31 = iron_object_Uniforms.externalTextureLinks;
				while(_g21 < _g31.length) {
					var f = _g31[_g21];
					++_g21;
					var image = f(tulink);
					if(image != null) {
						g.setTexture(context.textureUnits[j],image);
						break;
					}
				}
			}
		}
	}
};
iron_object_Uniforms.bindRenderTarget = function(g,rt,context,samplerID,attachDepth) {
	if(rt != null) {
		var tus = context.raw.texture_units;
		if(rt.pong != null && !rt.pongState) {
			rt = rt.pong;
		}
		var _g1 = 0;
		var _g = tus.length;
		while(_g1 < _g) {
			var j = _g1++;
			if(samplerID == tus[j].name) {
				if(!(tus[j].is_image != null && tus[j].is_image)) {
					if(rt.isCubeMap) {
						if(attachDepth) {
							g.setCubeMapDepth(context.textureUnits[j],rt.cubeMap);
						} else {
							g.setCubeMap(context.textureUnits[j],rt.cubeMap);
						}
					} else if(attachDepth) {
						g.setTextureDepth(context.textureUnits[j],rt.image);
					} else {
						g.setTexture(context.textureUnits[j],rt.image);
					}
				}
			}
		}
	}
};
iron_object_Uniforms.setConstant = function(g,object,camera,lamp,location,c) {
	if(c.link == null) {
		return;
	}
	if(c.type == "mat4") {
		var m = null;
		if(c.link == "_worldMatrix") {
			m = object.transform.matrix;
		} else if(c.link == "_inverseWorldMatrix") {
			iron_object_Uniforms.helpMat.getInverse(object.transform.matrix);
			m = iron_object_Uniforms.helpMat;
		} else if(c.link == "_viewMatrix") {
			m = camera.V;
		} else if(c.link == "_transposeInverseViewMatrix") {
			iron_object_Uniforms.helpMat.setIdentity();
			iron_object_Uniforms.helpMat.multmat2(camera.V);
			iron_object_Uniforms.helpMat.getInverse(iron_object_Uniforms.helpMat);
			iron_object_Uniforms.helpMat.transpose();
			m = iron_object_Uniforms.helpMat;
		} else if(c.link == "_inverseViewMatrix") {
			iron_object_Uniforms.helpMat.getInverse(camera.V);
			m = iron_object_Uniforms.helpMat;
		} else if(c.link == "_transposeViewMatrix") {
			iron_object_Uniforms.helpMat.setIdentity();
			iron_object_Uniforms.helpMat.multmat2(camera.V);
			iron_object_Uniforms.helpMat.transpose3x3();
			m = iron_object_Uniforms.helpMat;
		} else if(c.link == "_projectionMatrix") {
			m = camera.P;
		} else if(c.link == "_inverseProjectionMatrix") {
			iron_object_Uniforms.helpMat.getInverse(camera.P);
			m = iron_object_Uniforms.helpMat;
		} else if(c.link == "_inverseViewProjectionMatrix") {
			iron_object_Uniforms.helpMat.setIdentity();
			iron_object_Uniforms.helpMat.multmat2(camera.V);
			iron_object_Uniforms.helpMat.multmat2(camera.P);
			iron_object_Uniforms.helpMat.getInverse(iron_object_Uniforms.helpMat);
			m = iron_object_Uniforms.helpMat;
		} else if(c.link == "_worldViewProjectionMatrix") {
			iron_object_Uniforms.helpMat.setIdentity();
			iron_object_Uniforms.helpMat.multmat2(object.transform.matrix);
			iron_object_Uniforms.helpMat.multmat2(camera.V);
			iron_object_Uniforms.helpMat.multmat2(camera.P);
			m = iron_object_Uniforms.helpMat;
		} else if(c.link == "_worldViewMatrix") {
			iron_object_Uniforms.helpMat.setIdentity();
			iron_object_Uniforms.helpMat.multmat2(object.transform.matrix);
			iron_object_Uniforms.helpMat.multmat2(camera.V);
			m = iron_object_Uniforms.helpMat;
		} else if(c.link == "_viewProjectionMatrix") {
			iron_object_Uniforms.helpMat.setIdentity();
			iron_object_Uniforms.helpMat.multmat2(camera.V);
			iron_object_Uniforms.helpMat.multmat2(camera.P);
			m = iron_object_Uniforms.helpMat;
		} else if(c.link == "_prevViewProjectionMatrix") {
			iron_object_Uniforms.helpMat.setIdentity();
			iron_object_Uniforms.helpMat.multmat2(camera.prevV);
			iron_object_Uniforms.helpMat.multmat2(camera.P);
			m = iron_object_Uniforms.helpMat;
		} else if(c.link == "_lampWorldViewProjectionMatrix") {
			if(lamp != null) {
				iron_object_Uniforms.helpMat.setIdentity();
				if(object != null) {
					iron_object_Uniforms.helpMat.multmat2(object.transform.matrix);
				}
				iron_object_Uniforms.helpMat.multmat2(lamp.V);
				iron_object_Uniforms.helpMat.multmat2(lamp.P);
				m = iron_object_Uniforms.helpMat;
			}
		} else if(c.link == "_biasLampWorldViewProjectionMatrix") {
			if(lamp != null) {
				iron_object_Uniforms.helpMat.setIdentity();
				if(object != null) {
					iron_object_Uniforms.helpMat.multmat2(object.transform.matrix);
				}
				iron_object_Uniforms.helpMat.multmat2(lamp.V);
				iron_object_Uniforms.helpMat.multmat2(lamp.P);
				iron_object_Uniforms.helpMat.multmat2(iron_object_Uniforms.biasMat);
				m = iron_object_Uniforms.helpMat;
			}
		} else if(c.link == "_lampViewProjectionMatrix") {
			if(lamp != null) {
				iron_object_Uniforms.helpMat.setIdentity();
				iron_object_Uniforms.helpMat.multmat2(lamp.V);
				iron_object_Uniforms.helpMat.multmat2(lamp.P);
				m = iron_object_Uniforms.helpMat;
			}
		} else if(c.link == "_biasLampViewProjectionMatrix") {
			if(lamp != null) {
				iron_object_Uniforms.helpMat.setIdentity();
				iron_object_Uniforms.helpMat.multmat2(lamp.V);
				iron_object_Uniforms.helpMat.multmat2(lamp.P);
				iron_object_Uniforms.helpMat.multmat2(iron_object_Uniforms.biasMat);
				m = iron_object_Uniforms.helpMat;
			}
		} else if(c.link == "_lampVolumeWorldViewProjectionMatrix") {
			if(lamp != null) {
				var tr = lamp.transform;
				var type = lamp.data.raw.type;
				if(type == "spot") {
					iron_object_Uniforms.helpVec.set(tr.matrix.self._30,tr.matrix.self._31,tr.matrix.self._32);
					iron_object_Uniforms.helpVec2.set(lamp.data.raw.far_plane,lamp.data.raw.far_plane * 2.0,lamp.data.raw.far_plane * 2.0);
					iron_object_Uniforms.helpMat.compose(iron_object_Uniforms.helpVec,iron_object_Uniforms.helpQuat,iron_object_Uniforms.helpVec2);
				} else if(type == "point" || type == "area") {
					iron_object_Uniforms.helpVec.set(tr.matrix.self._30,tr.matrix.self._31,tr.matrix.self._32);
					iron_object_Uniforms.helpVec2.set(lamp.data.raw.far_plane,lamp.data.raw.far_plane * 2.0,lamp.data.raw.far_plane * 2.0);
					iron_object_Uniforms.helpMat.compose(iron_object_Uniforms.helpVec,iron_object_Uniforms.helpQuat,iron_object_Uniforms.helpVec2);
				}
				iron_object_Uniforms.helpMat.multmat2(camera.V);
				iron_object_Uniforms.helpMat.multmat2(camera.P);
				m = iron_object_Uniforms.helpMat;
			}
		} else if(c.link == "_skydomeMatrix") {
			var tr1 = camera.transform;
			iron_object_Uniforms.helpVec.set(tr1.matrix.self._30,tr1.matrix.self._31,tr1.matrix.self._32 - 3.5);
			var bounds = camera.farPlane * 0.95;
			iron_object_Uniforms.helpVec2.set(bounds,bounds,bounds);
			iron_object_Uniforms.helpMat.compose(iron_object_Uniforms.helpVec,iron_object_Uniforms.helpQuat,iron_object_Uniforms.helpVec2);
			iron_object_Uniforms.helpMat.multmat2(camera.V);
			iron_object_Uniforms.helpMat.multmat2(camera.P);
			m = iron_object_Uniforms.helpMat;
		} else if(c.link == "_lampViewMatrix") {
			if(lamp != null) {
				m = lamp.V;
			}
		} else if(c.link == "_lampProjectionMatrix") {
			if(lamp != null) {
				m = lamp.P;
			}
		} else if(c.link == "_undistortionMatrix") {
			m = iron_system_VR.getUndistortionMatrix();
		} else if(iron_object_Uniforms.externalMat4Links != null) {
			var _g = 0;
			var _g1 = iron_object_Uniforms.externalMat4Links;
			while(_g < _g1.length) {
				var fn = _g1[_g];
				++_g;
				m = fn(c.link);
				if(m != null) {
					break;
				}
			}
		}
		if(m == null) {
			return;
		}
		g.setMatrix(location,m.self);
	} else if(c.type == "mat3") {
		var m1 = null;
		if(c.link == "_normalMatrix") {
			iron_object_Uniforms.helpMat.setIdentity();
			iron_object_Uniforms.helpMat.multmat2(object.transform.matrix);
			iron_object_Uniforms.helpMat.getInverse(iron_object_Uniforms.helpMat);
			iron_object_Uniforms.helpMat.transpose3x3();
			iron_object_Uniforms.helpMat3.setFrom4(iron_object_Uniforms.helpMat);
			m1 = iron_object_Uniforms.helpMat3;
		}
		if(m1 == null) {
			return;
		}
		g.setMatrix3(location,m1.self);
	} else if(c.type == "vec4") {
		var v = null;
		if(c.link == "_input") {
			iron_object_Uniforms.helpVec.set(iron_system_Input.getMouse().x / kha_System.windowWidth(),iron_system_Input.getMouse().y / kha_System.windowHeight(),iron_system_Input.getMouse().down() ? 1.0 : 0.0,0.0);
			v = iron_object_Uniforms.helpVec;
		} else if(iron_object_Uniforms.externalVec4Links != null) {
			var _g2 = 0;
			var _g11 = iron_object_Uniforms.externalVec4Links;
			while(_g2 < _g11.length) {
				var fn1 = _g11[_g2];
				++_g2;
				v = fn1(c.link);
				if(v != null) {
					break;
				}
			}
		}
		if(v == null) {
			return;
		}
		g.setFloat4(location,v.x,v.y,v.z,v.w);
	} else if(c.type == "vec3") {
		var v1 = null;
		if(c.link == "_lampPosition") {
			if(lamp != null) {
				iron_object_Uniforms.helpVec.set(lamp.transform.matrix.self._30,lamp.transform.matrix.self._31,lamp.transform.matrix.self._32);
			}
			v1 = iron_object_Uniforms.helpVec;
		} else if(c.link == "_lampDirection") {
			if(lamp != null) {
				iron_object_Uniforms.helpVec = new iron_math_Vec4(lamp.V.self._02,lamp.V.self._12,lamp.V.self._22);
			}
			v1 = iron_object_Uniforms.helpVec;
		} else if(c.link == "_lampColor") {
			if(lamp != null) {
				var str = lamp.data.raw.strength;
				iron_object_Uniforms.helpVec.set(lamp.data.raw.color[0] * str,lamp.data.raw.color[1] * str,lamp.data.raw.color[2] * str);
			}
			v1 = iron_object_Uniforms.helpVec;
		} else if(c.link == "_lampArea0") {
			if(lamp != null && lamp.data.raw.size != null) {
				var sx = lamp.data.raw.size / 2;
				var sy = lamp.data.raw.size_y / 2;
				iron_object_Uniforms.helpVec.set(-sx,sy,0.0);
				iron_object_Uniforms.helpVec.applymat(lamp.transform.matrix);
				v1 = iron_object_Uniforms.helpVec;
			}
		} else if(c.link == "_lampArea1") {
			if(lamp != null && lamp.data.raw.size != null) {
				var sx1 = lamp.data.raw.size / 2;
				var sy1 = lamp.data.raw.size_y / 2;
				iron_object_Uniforms.helpVec.set(sx1,sy1,0.0);
				iron_object_Uniforms.helpVec.applymat(lamp.transform.matrix);
				v1 = iron_object_Uniforms.helpVec;
			}
		} else if(c.link == "_lampArea2") {
			if(lamp != null && lamp.data.raw.size != null) {
				var sx2 = lamp.data.raw.size / 2;
				var sy2 = lamp.data.raw.size_y / 2;
				iron_object_Uniforms.helpVec.set(sx2,-sy2,0.0);
				iron_object_Uniforms.helpVec.applymat(lamp.transform.matrix);
				v1 = iron_object_Uniforms.helpVec;
			}
		} else if(c.link == "_lampArea3") {
			if(lamp != null && lamp.data.raw.size != null) {
				var sx3 = lamp.data.raw.size / 2;
				var sy3 = lamp.data.raw.size_y / 2;
				iron_object_Uniforms.helpVec.set(-sx3,-sy3,0.0);
				iron_object_Uniforms.helpVec.applymat(lamp.transform.matrix);
				v1 = iron_object_Uniforms.helpVec;
			}
		} else if(c.link == "_cameraPosition") {
			iron_object_Uniforms.helpVec.set(camera.transform.matrix.self._30,camera.transform.matrix.self._31,camera.transform.matrix.self._32);
			v1 = iron_object_Uniforms.helpVec;
		} else if(c.link == "_cameraLook") {
			iron_object_Uniforms.helpVec = new iron_math_Vec4(-camera.transform.matrix.self._20,-camera.transform.matrix.self._21,-camera.transform.matrix.self._22);
			v1 = iron_object_Uniforms.helpVec;
		} else if(c.link == "_backgroundCol") {
			iron_object_Uniforms.helpVec.set(camera.data.raw.clear_color[0],camera.data.raw.clear_color[1],camera.data.raw.clear_color[2]);
			v1 = iron_object_Uniforms.helpVec;
		} else if(c.link == "_probeVolumeCenter") {
			v1 = iron_Scene.active.world.getProbeVolumeCenter(object.transform);
		} else if(c.link == "_probeVolumeSize") {
			v1 = iron_Scene.active.world.getProbeVolumeSize(object.transform);
		} else if(iron_object_Uniforms.externalVec3Links != null) {
			var _g3 = 0;
			var _g12 = iron_object_Uniforms.externalVec3Links;
			while(_g3 < _g12.length) {
				var f = _g12[_g3];
				++_g3;
				v1 = f(c.link);
				if(v1 != null) {
					break;
				}
			}
		}
		if(v1 == null) {
			return;
		}
		g.setFloat3(location,v1.x,v1.y,v1.z);
	} else if(c.type == "vec2") {
		var vx = 0;
		var vy = 0;
		if(c.link == "_vec2x") {
			vx = 1.0;
		} else if(c.link == "_vec2xInv") {
			vx = 1.0 / camera.renderPath.currentRenderTargetW;
		} else if(c.link == "_vec2x2") {
			vx = 2.0;
		} else if(c.link == "_vec2x2Inv") {
			vx = 2.0 / camera.renderPath.currentRenderTargetW;
		} else if(c.link == "_vec2y") {
			vy = 1.0;
		} else if(c.link == "_vec2yInv") {
			vy = 1.0 / camera.renderPath.currentRenderTargetH;
		} else if(c.link == "_vec2y2") {
			vy = 2.0;
		} else if(c.link == "_vec2y2Inv") {
			vy = 2.0 / camera.renderPath.currentRenderTargetH;
		} else if(c.link == "_vec2y3") {
			vy = 3.0;
		} else if(c.link == "_vec2y3Inv") {
			vy = 3.0 / camera.renderPath.currentRenderTargetH;
		} else if(c.link == "_windowSize") {
			vx = kha_System.windowWidth();
			vy = kha_System.windowHeight();
		} else if(c.link == "_windowSizeInv") {
			vx = 1.0 / kha_System.windowWidth();
			vy = 1.0 / kha_System.windowHeight();
		} else if(c.link == "_screenSize") {
			vx = camera.renderPath.currentRenderTargetW;
			vy = camera.renderPath.currentRenderTargetH;
		} else if(c.link == "_screenSizeInv") {
			vx = 1.0 / camera.renderPath.currentRenderTargetW;
			vy = 1.0 / camera.renderPath.currentRenderTargetH;
		} else if(c.link == "_aspectRatio") {
			vx = camera.renderPath.currentRenderTargetH / camera.renderPath.currentRenderTargetW;
			vy = camera.renderPath.currentRenderTargetW / camera.renderPath.currentRenderTargetH;
			if(vx > 1.0) {
				vx = 1.0;
			} else {
				vx = vx;
			}
			if(vy > 1.0) {
				vy = 1.0;
			} else {
				vy = vy;
			}
		} else if(c.link == "_cameraPlane") {
			vx = camera.data.raw.near_plane;
			vy = camera.data.raw.far_plane;
		} else if(c.link == "_lampPlane") {
			if(lamp == null) {
				vx = 0.0;
			} else {
				vx = lamp.data.raw.near_plane;
			}
			if(lamp == null) {
				vy = 0.0;
			} else {
				vy = lamp.data.raw.far_plane;
			}
		} else if(c.link == "_spotlampData") {
			if(lamp == null) {
				vx = 0.0;
			} else {
				vx = lamp.data.raw.spot_size;
			}
			if(lamp == null) {
				vy = 0.0;
			} else {
				vy = vx - lamp.data.raw.spot_blend;
			}
		} else if(iron_object_Uniforms.externalVec2Links != null) {
			var _g4 = 0;
			var _g13 = iron_object_Uniforms.externalVec2Links;
			while(_g4 < _g13.length) {
				var fn2 = _g13[_g4];
				++_g4;
				var v2 = fn2(c.link);
				if(v2 != null) {
					vx = v2.x;
					vy = v2.y;
					break;
				}
			}
		}
		g.setFloat2(location,vx,vy);
	} else if(c.type == "float") {
		var f1 = 0.0;
		if(c.link == "_time") {
			f1 = kha_Scheduler.time();
		} else if(c.link == "_deltaTime") {
			f1 = 0.0166666666666666664;
		} else if(c.link == "_lampRadius") {
			if(lamp == null) {
				f1 = 0.0;
			} else {
				f1 = lamp.data.raw.far_plane;
			}
		} else if(c.link == "_lampShadowsBias") {
			if(lamp == null) {
				f1 = 0.0;
			} else {
				f1 = lamp.data.raw.shadows_bias;
			}
		} else if(c.link == "_lampSize") {
			if(lamp != null && lamp.data.raw.lamp_size != null) {
				f1 = lamp.data.raw.lamp_size;
			}
		} else if(c.link == "_lampSizeUV") {
			if(lamp != null && lamp.data.raw.lamp_size != null) {
				f1 = lamp.data.raw.lamp_size / lamp.data.raw.fov;
			}
		} else if(c.link == "_envmapStrength") {
			if(iron_Scene.active.world == null) {
				f1 = 0.0;
			} else {
				f1 = iron_Scene.active.world.getGlobalProbe().raw.strength;
			}
		} else if(c.link == "_probeStrength") {
			f1 = iron_Scene.active.world.getProbeStrength(object.transform);
		} else if(c.link == "_probeBlending") {
			f1 = iron_Scene.active.world.getProbeBlending(object.transform);
		} else if(c.link == "_aspectRatioF") {
			f1 = camera.renderPath.currentRenderTargetW / camera.renderPath.currentRenderTargetH;
		} else if(c.link == "_objectInfoIndex") {
			f1 = object.uid;
		} else if(c.link == "_objectInfoMaterialIndex") {
			if(camera.renderPath.currentMaterial != null) {
				f1 = camera.renderPath.currentMaterial.uid;
			} else {
				f1 = (js_Boot.__cast(object , iron_object_MeshObject)).materials[0].uid;
			}
		} else if(c.link == "_objectInfoRandom") {
			f1 = object.urandom;
		} else if(c.link == "_maxRadiusSq") {
			f1 = iron_system_VR.getMaxRadiusSq();
		} else if(iron_object_Uniforms.externalFloatLinks != null) {
			var _g5 = 0;
			var _g14 = iron_object_Uniforms.externalFloatLinks;
			while(_g5 < _g14.length) {
				var fn3 = _g14[_g5];
				++_g5;
				var res = fn3(c.link);
				if(res != null) {
					f1 = res;
					break;
				}
			}
		}
		g.setFloat(location,f1);
	} else if(c.type == "floats") {
		var fa = null;
		if(c.link == "_skinBones") {
			if(object.animation != null) {
				fa = (js_Boot.__cast(object.animation , iron_object_BoneAnimation)).skinBuffer;
			}
		} else if(c.link == "_envmapIrradiance") {
			if(iron_Scene.active.world == null) {
				fa = iron_data_WorldData.getEmptyIrradiance();
			} else {
				fa = iron_Scene.active.world.getSHIrradiance();
			}
		} else if(iron_object_Uniforms.externalFloatsLinks != null) {
			var _g6 = 0;
			var _g15 = iron_object_Uniforms.externalFloatsLinks;
			while(_g6 < _g15.length) {
				var fn4 = _g15[_g6];
				++_g6;
				fa = fn4(c.link);
				if(fa != null) {
					break;
				}
			}
		}
		if(fa != null) {
			g.setFloats(location,fa);
		}
	} else if(c.type == "int") {
		var i = 0;
		if(c.link == "_uid") {
			i = object.uid;
		}
		if(c.link == "_lampType") {
			if(lamp == null) {
				i = 0;
			} else {
				switch(lamp.data.raw.type) {
				case "area":
					i = 3;
					break;
				case "point":
					i = 1;
					break;
				case "spot":
					i = 2;
					break;
				case "sun":
					i = 0;
					break;
				default:
					i = 0;
				}
			}
		} else if(c.link == "_lampIndex") {
			i = camera.renderPath.currentLampIndex;
		} else if(c.link == "_lampCastShadow") {
			if(lamp != null && lamp.data.raw.cast_shadow) {
				if(lamp.data.raw.shadowmap_cube) {
					i = 2;
				} else {
					i = 1;
				}
			}
		} else if(c.link == "_envmapNumMipmaps") {
			i = iron_Scene.active.world.getGlobalProbe().raw.radiance_mipmaps + 1;
		} else if(c.link == "_probeID") {
			i = iron_Scene.active.world.getProbeID(object.transform);
		} else if(iron_object_Uniforms.externalIntLinks != null) {
			var _g7 = 0;
			var _g16 = iron_object_Uniforms.externalIntLinks;
			while(_g7 < _g16.length) {
				var fn5 = _g16[_g7];
				++_g7;
				var res1 = fn5(c.link);
				if(res1 != null) {
					i = res1;
					break;
				}
			}
		}
		g.setInt(location,i);
	}
};
iron_object_Uniforms.setMaterialConstants = function(g,context,materialContext) {
	if(materialContext.raw.bind_constants != null) {
		var _g1 = 0;
		var _g = materialContext.raw.bind_constants.length;
		while(_g1 < _g) {
			var i = _g1++;
			var matc = materialContext.raw.bind_constants[i];
			var pos = -1;
			var _g3 = 0;
			var _g2 = context.raw.constants.length;
			while(_g3 < _g2) {
				var i1 = _g3++;
				if(context.raw.constants[i1].name == matc.name) {
					pos = i1;
					break;
				}
			}
			if(pos == -1) {
				continue;
			}
			var c = context.raw.constants[pos];
			iron_object_Uniforms.setMaterialConstant(g,context.constants[pos],c,matc);
		}
	}
	if(materialContext.textures != null) {
		var _g11 = 0;
		var _g4 = materialContext.textures.length;
		while(_g11 < _g4) {
			var i2 = _g11++;
			var mname = materialContext.raw.bind_textures[i2].name;
			var _g31 = 0;
			var _g21 = context.textureUnits.length;
			while(_g31 < _g21) {
				var j = _g31++;
				var sname = context.raw.texture_units[j].name;
				if(mname == sname) {
					g.setTexture(context.textureUnits[j],materialContext.textures[i2]);
					materialContext.setTextureParameters(g,i2,context,j);
					break;
				}
			}
		}
	}
};
iron_object_Uniforms.setMaterialConstant = function(g,location,c,matc) {
	var _g = c.type;
	switch(_g) {
	case "bool":
		g.setBool(location,matc.bool);
		break;
	case "float":
		g.setFloat(location,matc["float"]);
		break;
	case "vec2":
		g.setFloat2(location,matc.vec2[0],matc.vec2[1]);
		break;
	case "vec3":
		g.setFloat3(location,matc.vec3[0],matc.vec3[1],matc.vec3[2]);
		break;
	case "vec4":
		g.setFloat4(location,matc.vec4[0],matc.vec4[1],matc.vec4[2],matc.vec4[3]);
		break;
	}
};
var iron_system_Audio = function() {
};
$hxClasses["iron.system.Audio"] = iron_system_Audio;
iron_system_Audio.__name__ = ["iron","system","Audio"];
iron_system_Audio.playSound = function(sound,loop) {
	if(loop == null) {
		loop = false;
	}
	kha_audio2_Audio1.play(sound,loop);
};
iron_system_Audio.prototype = {
	__class__: iron_system_Audio
};
var iron_system_CompileTime = function() { };
$hxClasses["iron.system.CompileTime"] = iron_system_CompileTime;
iron_system_CompileTime.__name__ = ["iron","system","CompileTime"];
var iron_system_Input = function() { };
$hxClasses["iron.system.Input"] = iron_system_Input;
iron_system_Input.__name__ = ["iron","system","Input"];
iron_system_Input.reset = function() {
	iron_system_Input.occupied = false;
	if(iron_system_Input.mouse != null) {
		iron_system_Input.mouse.reset();
	}
	if(iron_system_Input.keyboard != null) {
		iron_system_Input.keyboard.reset();
	}
	var _g = 0;
	var _g1 = iron_system_Input.gamepads;
	while(_g < _g1.length) {
		var gamepad = _g1[_g];
		++_g;
		gamepad.reset();
	}
};
iron_system_Input.endFrame = function() {
	if(iron_system_Input.mouse != null) {
		iron_system_Input.mouse.endFrame();
	}
	if(iron_system_Input.keyboard != null) {
		iron_system_Input.keyboard.endFrame();
	}
	var _g = 0;
	var _g1 = iron_system_Input.gamepads;
	while(_g < _g1.length) {
		var gamepad = _g1[_g];
		++_g;
		gamepad.endFrame();
	}
	if(iron_system_Input.virtualButtons != null) {
		var _this = iron_system_Input.virtualButtons;
		var vb = new haxe_ds__$StringMap_StringMapIterator(_this,_this.arrayKeys());
		while(vb.hasNext()) {
			var vb1 = vb.next();
			vb1.started = vb1.released = false;
		}
	}
};
iron_system_Input.getMouse = function() {
	if(iron_system_Input.mouse == null) {
		iron_system_Input.mouse = new iron_system_Mouse();
	}
	return iron_system_Input.mouse;
};
iron_system_Input.getSurface = function() {
	return iron_system_Input.getMouse();
};
iron_system_Input.getKeyboard = function() {
	if(iron_system_Input.keyboard == null) {
		iron_system_Input.keyboard = new iron_system_Keyboard();
	}
	return iron_system_Input.keyboard;
};
iron_system_Input.getGamepad = function(i) {
	if(i == null) {
		i = 0;
	}
	if(i >= 4) {
		return null;
	}
	while(iron_system_Input.gamepads.length <= i) iron_system_Input.gamepads.push(new iron_system_Gamepad(iron_system_Input.gamepads.length));
	if(iron_system_Input.gamepads[i].connected) {
		return iron_system_Input.gamepads[i];
	} else {
		return null;
	}
};
iron_system_Input.getSensor = function() {
	if(iron_system_Input.sensor == null) {
		iron_system_Input.sensor = new iron_system_Sensor();
	}
	return iron_system_Input.sensor;
};
iron_system_Input.getVirtualButton = function(virtual) {
	if(iron_system_Input.virtualButtons == null) {
		return null;
	}
	var _this = iron_system_Input.virtualButtons;
	if(__map_reserved[virtual] != null) {
		return _this.getReserved(virtual);
	} else {
		return _this.h[virtual];
	}
};
var iron_system_VirtualButton = function() {
	this.down = false;
	this.released = false;
	this.started = false;
};
$hxClasses["iron.system.VirtualButton"] = iron_system_VirtualButton;
iron_system_VirtualButton.__name__ = ["iron","system","VirtualButton"];
iron_system_VirtualButton.prototype = {
	__class__: iron_system_VirtualButton
};
var iron_system_VirutalInput = function() {
	this.virtualButtons = null;
};
$hxClasses["iron.system.VirutalInput"] = iron_system_VirutalInput;
iron_system_VirutalInput.__name__ = ["iron","system","VirutalInput"];
iron_system_VirutalInput.prototype = {
	setVirtual: function(virtual,button) {
		if(iron_system_Input.virtualButtons == null) {
			iron_system_Input.virtualButtons = new haxe_ds_StringMap();
		}
		var _this = iron_system_Input.virtualButtons;
		var vb = __map_reserved[virtual] != null ? _this.getReserved(virtual) : _this.h[virtual];
		if(vb == null) {
			vb = new iron_system_VirtualButton();
			var _this1 = iron_system_Input.virtualButtons;
			if(__map_reserved[virtual] != null) {
				_this1.setReserved(virtual,vb);
			} else {
				_this1.h[virtual] = vb;
			}
		}
		if(this.virtualButtons == null) {
			this.virtualButtons = new haxe_ds_StringMap();
		}
		var _this2 = this.virtualButtons;
		if(__map_reserved[button] != null) {
			_this2.setReserved(button,vb);
		} else {
			_this2.h[button] = vb;
		}
	}
	,downVirtual: function(button) {
		if(this.virtualButtons != null) {
			var _this = this.virtualButtons;
			var vb = __map_reserved[button] != null ? _this.getReserved(button) : _this.h[button];
			if(vb != null) {
				vb.down = true;
				vb.started = true;
			}
		}
	}
	,upVirtual: function(button) {
		if(this.virtualButtons != null) {
			var _this = this.virtualButtons;
			var vb = __map_reserved[button] != null ? _this.getReserved(button) : _this.h[button];
			if(vb != null) {
				vb.down = false;
				vb.released = true;
			}
		}
	}
	,__class__: iron_system_VirutalInput
};
var iron_system_Mouse = function() {
	this.wheelDelta = 0;
	this.movementY = 0.0;
	this.movementX = 0.0;
	this.moved = false;
	this.y = 0.0;
	this.x = 0.0;
	this.buttonsReleased = [false,false,false];
	this.buttonsStarted = [false,false,false];
	this.buttonsDown = [false,false,false];
	iron_system_VirutalInput.call(this);
	kha_input_Mouse.get().notify($bind(this,this.downListener),$bind(this,this.upListener),$bind(this,this.moveListener),$bind(this,this.wheelListener));
};
$hxClasses["iron.system.Mouse"] = iron_system_Mouse;
iron_system_Mouse.__name__ = ["iron","system","Mouse"];
iron_system_Mouse.__super__ = iron_system_VirutalInput;
iron_system_Mouse.prototype = $extend(iron_system_VirutalInput.prototype,{
	endFrame: function() {
		var tmp = this.buttonsStarted[1] = this.buttonsStarted[2] = false;
		this.buttonsStarted[0] = tmp;
		var tmp1 = this.buttonsReleased[1] = this.buttonsReleased[2] = false;
		this.buttonsReleased[0] = tmp1;
		this.moved = false;
		this.movementX = 0;
		this.movementY = 0;
		this.wheelDelta = 0;
	}
	,reset: function() {
		var tmp = this.buttonsDown[1] = this.buttonsDown[2] = false;
		this.buttonsDown[0] = tmp;
		this.endFrame();
	}
	,buttonIndex: function(button) {
		if(button == "left") {
			return 0;
		} else if(button == "right") {
			return 1;
		} else {
			return 2;
		}
	}
	,down: function(button) {
		if(button == null) {
			button = "left";
		}
		return this.buttonsDown[this.buttonIndex(button)];
	}
	,started: function(button) {
		if(button == null) {
			button = "left";
		}
		return this.buttonsStarted[this.buttonIndex(button)];
	}
	,released: function(button) {
		if(button == null) {
			button = "left";
		}
		return this.buttonsReleased[this.buttonIndex(button)];
	}
	,downListener: function(index,x,y) {
		this.buttonsDown[index] = true;
		this.buttonsStarted[index] = true;
		this.x = x;
		this.y = y;
		this.downVirtual(iron_system_Mouse.buttons[index]);
	}
	,upListener: function(index,x,y) {
		this.buttonsDown[index] = false;
		this.buttonsReleased[index] = true;
		this.x = x;
		this.y = y;
		this.upVirtual(iron_system_Mouse.buttons[index]);
	}
	,moveListener: function(x,y,movementX,movementY) {
		this.movementX = movementX;
		this.movementY = movementY;
		this.x = x;
		this.y = y;
		this.moved = true;
	}
	,wheelListener: function(delta) {
		this.wheelDelta = delta;
	}
	,__class__: iron_system_Mouse
});
var iron_system_Keyboard = function() {
	this.keysFrame = [];
	this.keysReleased = new haxe_ds_StringMap();
	this.keysStarted = new haxe_ds_StringMap();
	this.keysDown = new haxe_ds_StringMap();
	iron_system_VirutalInput.call(this);
	this.reset();
	kha_input_Keyboard.get().notify($bind(this,this.downListener),$bind(this,this.upListener));
};
$hxClasses["iron.system.Keyboard"] = iron_system_Keyboard;
iron_system_Keyboard.__name__ = ["iron","system","Keyboard"];
iron_system_Keyboard.__super__ = iron_system_VirutalInput;
iron_system_Keyboard.prototype = $extend(iron_system_VirutalInput.prototype,{
	endFrame: function() {
		if(this.keysFrame.length > 0) {
			var _g = 0;
			var _g1 = this.keysFrame;
			while(_g < _g1.length) {
				var s = _g1[_g];
				++_g;
				var _this = this.keysStarted;
				if(__map_reserved[s] != null) {
					_this.setReserved(s,false);
				} else {
					_this.h[s] = false;
				}
				var _this1 = this.keysReleased;
				if(__map_reserved[s] != null) {
					_this1.setReserved(s,false);
				} else {
					_this1.h[s] = false;
				}
			}
			this.keysFrame.splice(0,this.keysFrame.length);
		}
	}
	,reset: function() {
		var _g = 0;
		var _g1 = iron_system_Keyboard.keys;
		while(_g < _g1.length) {
			var s = _g1[_g];
			++_g;
			var _this = this.keysDown;
			if(__map_reserved[s] != null) {
				_this.setReserved(s,false);
			} else {
				_this.h[s] = false;
			}
			var _this1 = this.keysStarted;
			if(__map_reserved[s] != null) {
				_this1.setReserved(s,false);
			} else {
				_this1.h[s] = false;
			}
			var _this2 = this.keysReleased;
			if(__map_reserved[s] != null) {
				_this2.setReserved(s,false);
			} else {
				_this2.h[s] = false;
			}
		}
		this.endFrame();
	}
	,down: function(key) {
		var _this = this.keysDown;
		if(__map_reserved[key] != null) {
			return _this.getReserved(key);
		} else {
			return _this.h[key];
		}
	}
	,started: function(key) {
		var _this = this.keysStarted;
		if(__map_reserved[key] != null) {
			return _this.getReserved(key);
		} else {
			return _this.h[key];
		}
	}
	,released: function(key) {
		var _this = this.keysReleased;
		if(__map_reserved[key] != null) {
			return _this.getReserved(key);
		} else {
			return _this.h[key];
		}
	}
	,keyToString: function(key,$char) {
		if(key == kha_Key.CHAR) {
			if($char == " ") {
				return "space";
			} else {
				return $char.toLowerCase();
			}
		} else if(key == kha_Key.BACKSPACE) {
			return "backspace";
		} else if(key == kha_Key.TAB) {
			return "tab";
		} else if(key == kha_Key.ENTER) {
			return "enter";
		} else if(key == kha_Key.SHIFT) {
			return "shift";
		} else if(key == kha_Key.CTRL) {
			return "ctrl";
		} else if(key == kha_Key.ALT) {
			return "alt";
		} else if(key == kha_Key.ESC) {
			return "esc";
		} else if(key == kha_Key.DEL) {
			return "del";
		} else if(key == kha_Key.UP) {
			return "up";
		} else if(key == kha_Key.DOWN) {
			return "down";
		} else if(key == kha_Key.LEFT) {
			return "left";
		} else if(key == kha_Key.RIGHT) {
			return "right";
		} else if(key == kha_Key.BACK) {
			return "back";
		}
		return "";
	}
	,downListener: function(key,$char) {
		var s = this.keyToString(key,$char);
		this.keysFrame.push(s);
		var _this = this.keysStarted;
		if(__map_reserved[s] != null) {
			_this.setReserved(s,true);
		} else {
			_this.h[s] = true;
		}
		var _this1 = this.keysDown;
		if(__map_reserved[s] != null) {
			_this1.setReserved(s,true);
		} else {
			_this1.h[s] = true;
		}
		this.downVirtual(s);
	}
	,upListener: function(key,$char) {
		var s = this.keyToString(key,$char);
		this.keysFrame.push(s);
		var _this = this.keysReleased;
		if(__map_reserved[s] != null) {
			_this.setReserved(s,true);
		} else {
			_this.h[s] = true;
		}
		var _this1 = this.keysDown;
		if(__map_reserved[s] != null) {
			_this1.setReserved(s,false);
		} else {
			_this1.h[s] = false;
		}
		this.upVirtual(s);
	}
	,__class__: iron_system_Keyboard
});
var iron_system_GamepadStick = function() {
	this.movementY = 0.0;
	this.movementX = 0.0;
	this.moved = false;
	this.lastY = 0.0;
	this.lastX = 0.0;
	this.y = 0.0;
	this.x = 0.0;
};
$hxClasses["iron.system.GamepadStick"] = iron_system_GamepadStick;
iron_system_GamepadStick.__name__ = ["iron","system","GamepadStick"];
iron_system_GamepadStick.prototype = {
	__class__: iron_system_GamepadStick
};
var iron_system_Gamepad = function(i) {
	this.connects = 0;
	this.num = 0;
	this.connected = false;
	this.rightStick = new iron_system_GamepadStick();
	this.leftStick = new iron_system_GamepadStick();
	this.buttonsFrame = [];
	this.buttonsReleased = [];
	this.buttonsStarted = [];
	this.buttonsDown = [];
	iron_system_VirutalInput.call(this);
	var _g = 0;
	var _g1 = iron_system_Gamepad.buttonsPS;
	while(_g < _g1.length) {
		var s = _g1[_g];
		++_g;
		this.buttonsDown.push(0.0);
		this.buttonsStarted.push(false);
		this.buttonsReleased.push(false);
	}
	this.num = i;
	this.reset();
	this.connect();
};
$hxClasses["iron.system.Gamepad"] = iron_system_Gamepad;
iron_system_Gamepad.__name__ = ["iron","system","Gamepad"];
iron_system_Gamepad.__super__ = iron_system_VirutalInput;
iron_system_Gamepad.prototype = $extend(iron_system_VirutalInput.prototype,{
	connect: function() {
		var gamepad = kha_input_Gamepad.get(this.num);
		if(gamepad == null) {
			return;
		}
		this.connected = true;
		gamepad.notify($bind(this,this.axisListener),$bind(this,this.buttonListener));
	}
	,endFrame: function() {
		if(this.buttonsFrame.length > 0) {
			var _g = 0;
			var _g1 = this.buttonsFrame;
			while(_g < _g1.length) {
				var i = _g1[_g];
				++_g;
				this.buttonsStarted[i] = false;
				this.buttonsReleased[i] = false;
			}
			this.buttonsFrame.splice(0,this.buttonsFrame.length);
		}
		this.leftStick.moved = false;
		this.leftStick.movementX = 0;
		this.leftStick.movementY = 0;
		this.rightStick.moved = false;
		this.rightStick.movementX = 0;
		this.rightStick.movementY = 0;
	}
	,reset: function() {
		var _g1 = 0;
		var _g = this.buttonsDown.length;
		while(_g1 < _g) {
			var i = _g1++;
			this.buttonsDown[i] = 0.0;
			this.buttonsStarted[i] = false;
			this.buttonsReleased[i] = false;
		}
		this.endFrame();
	}
	,buttonIndex: function(button) {
		var _g1 = 0;
		var _g = iron_system_Gamepad.buttonsPS.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(iron_system_Gamepad.buttonsPS[i] == button) {
				return i;
			}
		}
		return 0;
	}
	,down: function(button) {
		return this.buttonsDown[this.buttonIndex(button)];
	}
	,started: function(button) {
		return this.buttonsStarted[this.buttonIndex(button)];
	}
	,released: function(button) {
		return this.buttonsReleased[this.buttonIndex(button)];
	}
	,axisListener: function(axis,value) {
		var stick = axis <= 1 ? this.leftStick : this.rightStick;
		if(axis == 0 || axis == 2) {
			stick.x = value;
			stick.movementX = stick.x - stick.lastX;
			stick.lastX = stick.x;
		} else if(axis == 1 || axis == 3) {
			stick.y = value;
			stick.movementY = stick.y - stick.lastY;
			stick.lastY = stick.y;
		}
		stick.moved = true;
	}
	,buttonListener: function(button,value) {
		this.buttonsFrame.push(button);
		this.buttonsDown[button] = value;
		if(value > 0) {
			this.buttonsStarted[button] = true;
		} else {
			this.buttonsReleased[button] = true;
		}
		if(value == 0.0) {
			this.upVirtual(iron_system_Gamepad.buttonsPS[button]);
		} else if(value == 1.0) {
			this.downVirtual(iron_system_Gamepad.buttonsPS[button]);
		}
	}
	,__class__: iron_system_Gamepad
});
var iron_system_Sensor = function() {
	this.z = 0.0;
	this.y = 0.0;
	this.x = 0.0;
	kha_input_Sensor.get(kha_input_SensorType.Accelerometer).notify($bind(this,this.listener));
};
$hxClasses["iron.system.Sensor"] = iron_system_Sensor;
iron_system_Sensor.__name__ = ["iron","system","Sensor"];
iron_system_Sensor.prototype = {
	listener: function(x,y,z) {
		this.x = x;
		this.y = y;
		this.z = z;
	}
	,__class__: iron_system_Sensor
};
var iron_system_Tween = function() { };
$hxClasses["iron.system.Tween"] = iron_system_Tween;
iron_system_Tween.__name__ = ["iron","system","Tween"];
iron_system_Tween.to = function(target,time,props,f,delay,type) {
	if(type == null) {
		type = 1;
	}
	if(delay == null) {
		delay = 0.0;
	}
	var anim = new iron_system_Anim(target,time,props,f,delay,type);
	anim._ease = iron_system_Tween.eases[type];
	if(anim.target != null && anim.props != null) {
		anim._startProps = [];
		var _g = 0;
		var _g1 = Reflect.fields(anim.props);
		while(_g < _g1.length) {
			var p = _g1[_g];
			++_g;
			var val = Reflect.getProperty(anim.target,p);
			anim._startProps.push(val);
		}
	}
	iron_system_Tween.anims.push(anim);
	if(target != null) {
		iron_system_Tween.map.set(target,anim);
	}
};
iron_system_Tween.timer = function(delay,f) {
	iron_system_Tween.to(null,0,null,f,delay);
};
iron_system_Tween.stop = function(target) {
	var anim = iron_system_Tween.map.h[target.__id__];
	if(anim != null) {
		HxOverrides.remove(iron_system_Tween.anims,anim);
	}
};
iron_system_Tween.reset = function() {
	iron_system_Tween.anims = [];
	iron_system_Tween.map = new haxe_ds_ObjectMap();
};
iron_system_Tween.update = function() {
	var d = 0.0166666666666666664;
	var i = iron_system_Tween.anims.length;
	while(i-- > 0 && iron_system_Tween.anims.length > 0) {
		var a = iron_system_Tween.anims[i];
		if(a.delay > 0) {
			a.delay -= d;
			if(a.delay > 0) {
				continue;
			}
		}
		a._currentTime += d;
		if(a.target != null) {
			var ps = Reflect.fields(a.props);
			var _g1 = 0;
			var _g = ps.length;
			while(_g1 < _g) {
				var i1 = _g1++;
				var p = ps[i1];
				var startVal = a._startProps[i1];
				var targetVal = Reflect.getProperty(a.props,p);
				var k = a._currentTime / a.time;
				if(k > 1) {
					k = 1;
				}
				var val = startVal + (targetVal - startVal) * a._ease(k);
				Reflect.setProperty(a.target,p,val);
			}
		}
		if(a._currentTime >= a.time) {
			iron_system_Tween.anims.splice(i,1);
			--i;
			if(a.f != null) {
				a.f();
			}
		}
	}
};
iron_system_Tween.easeLinear = function(k) {
	return k;
};
iron_system_Tween.easeExpoOut = function(k) {
	if(k == 1) {
		return 1;
	} else {
		return 1 - Math.pow(2,-10 * k);
	}
};
var iron_system_Anim = function(target,time,props,f,delay,type) {
	this._startProps = null;
	this._currentTime = 0;
	this._ease = null;
	this.target = target;
	this.time = time;
	this.props = props;
	this.delay = delay;
	this.f = f;
	this.type = type;
};
$hxClasses["iron.system.Anim"] = iron_system_Anim;
iron_system_Anim.__name__ = ["iron","system","Anim"];
iron_system_Anim.prototype = {
	__class__: iron_system_Anim
};
var iron_system_VR = function() {
};
$hxClasses["iron.system.VR"] = iron_system_VR;
iron_system_VR.__name__ = ["iron","system","VR"];
iron_system_VR.getUndistortionMatrix = function() {
	if(iron_system_VR.undistortionMatrix == null) {
		iron_system_VR.undistortionMatrix = iron_math_Mat4.identity();
	}
	return iron_system_VR.undistortionMatrix;
};
iron_system_VR.getMaxRadiusSq = function() {
	return 0.0;
};
iron_system_VR.prototype = {
	__class__: iron_system_VR
};
var iron_system_msgpack_DecodeOption = $hxClasses["iron.system.msgpack.DecodeOption"] = { __ename__ : true, __constructs__ : ["AsMap","AsObject"] };
iron_system_msgpack_DecodeOption.AsMap = ["AsMap",0];
iron_system_msgpack_DecodeOption.AsMap.toString = $estr;
iron_system_msgpack_DecodeOption.AsMap.__enum__ = iron_system_msgpack_DecodeOption;
iron_system_msgpack_DecodeOption.AsObject = ["AsObject",1];
iron_system_msgpack_DecodeOption.AsObject.toString = $estr;
iron_system_msgpack_DecodeOption.AsObject.__enum__ = iron_system_msgpack_DecodeOption;
var iron_system_msgpack__$Decoder_Pair = function(k,v) {
	this.k = k;
	this.v = v;
};
$hxClasses["iron.system.msgpack._Decoder.Pair"] = iron_system_msgpack__$Decoder_Pair;
iron_system_msgpack__$Decoder_Pair.__name__ = ["iron","system","msgpack","_Decoder","Pair"];
iron_system_msgpack__$Decoder_Pair.prototype = {
	__class__: iron_system_msgpack__$Decoder_Pair
};
var iron_system_msgpack_Decoder = function(b,option) {
	var i = new haxe_io_BytesInput(b);
	i.set_bigEndian(true);
	this.o = this.decode(i,option);
};
$hxClasses["iron.system.msgpack.Decoder"] = iron_system_msgpack_Decoder;
iron_system_msgpack_Decoder.__name__ = ["iron","system","msgpack","Decoder"];
iron_system_msgpack_Decoder.prototype = {
	decode: function(i,option) {
		try {
			var b = i.readByte();
			switch(b) {
			case 192:
				return null;
			case 194:
				return false;
			case 195:
				return true;
			case 196:
				return i.read(i.readByte());
			case 197:
				return i.read(i.readUInt16());
			case 198:
				return i.read(i.readInt32());
			case 202:
				return i.readFloat();
			case 203:
				return i.readDouble();
			case 204:
				return i.readByte();
			case 205:
				return i.readUInt16();
			case 206:
				return i.readInt32();
			case 207:
				throw new js__$Boot_HaxeError("UInt64 not supported");
				break;
			case 208:
				return i.readInt8();
			case 209:
				return i.readInt16();
			case 210:
				return i.readInt32();
			case 211:
				return this.readInt64(i);
			case 217:
				return i.readString(i.readByte());
			case 218:
				return i.readString(i.readUInt16());
			case 219:
				return i.readString(i.readInt32());
			case 220:
				return this.readArray(i,i.readUInt16(),option);
			case 221:
				return this.readArray(i,i.readInt32(),option);
			case 222:
				return this.readMap(i,i.readUInt16(),option);
			case 223:
				return this.readMap(i,i.readInt32(),option);
			default:
				if(b < 128) {
					return b;
				} else if(b < 144) {
					return this.readMap(i,15 & b,option);
				} else if(b < 160) {
					return this.readArray(i,15 & b,option);
				} else if(b < 192) {
					return i.readString(31 & b);
				} else if(b > 223) {
					return -256 | b;
				}
			}
		} catch( e ) {
			if (e instanceof js__$Boot_HaxeError) e = e.val;
			if( js_Boot.__instanceof(e,haxe_io_Eof) ) {
			} else throw(e);
		}
		return null;
	}
	,readInt64: function(i) {
		var high = i.readInt32();
		var low = i.readInt32();
		var this1 = new haxe__$Int64__$_$_$Int64(high,low);
		return this1;
	}
	,readArray: function(i,length,option) {
		var a = [];
		var _g1 = 0;
		var _g = length;
		while(_g1 < _g) {
			var x = _g1++;
			a.push(this.decode(i,option));
		}
		return a;
	}
	,readMap: function(i,length,option) {
		switch(option[1]) {
		case 0:
			var pairs = [];
			var _g1 = 0;
			var _g = length;
			while(_g1 < _g) {
				var n = _g1++;
				var k = this.decode(i,option);
				var v = this.decode(i,option);
				pairs.push(new iron_system_msgpack__$Decoder_Pair(k,v));
			}
			if(pairs.length == 0) {
				return new haxe_ds_StringMap();
			}
			var _g2 = Type["typeof"](pairs[0].k);
			switch(_g2[1]) {
			case 1:
				var out = new haxe_ds_IntMap();
				var _g3 = 0;
				while(_g3 < pairs.length) {
					var p = pairs[_g3];
					++_g3;
					var _g11 = Type["typeof"](p.k);
					if(_g11[1] != 1) {
						throw new js__$Boot_HaxeError("Error: Mixed key type when decoding IntMap");
					}
					if(out.h.hasOwnProperty(p.k)) {
						throw new js__$Boot_HaxeError("Error: Duplicate keys found => " + Std.string(p.k));
					}
					out.h[p.k] = p.v;
				}
				return out;
			case 6:
				var c = _g2[2];
				if(Type.getClassName(c) == "String") {
					var out1 = new haxe_ds_StringMap();
					var _g4 = 0;
					while(_g4 < pairs.length) {
						var p1 = pairs[_g4];
						++_g4;
						var _g12 = Type["typeof"](p1.k);
						if(_g12[1] == 6) {
							var c1 = _g12[2];
							if(Type.getClassName(c1) != "String") {
								throw new js__$Boot_HaxeError("Error: Mixed key type when decoding StringMap");
							}
						} else {
							throw new js__$Boot_HaxeError("Error: Mixed key type when decoding StringMap");
						}
						var key = p1.k;
						if(__map_reserved[key] != null ? out1.existsReserved(key) : out1.h.hasOwnProperty(key)) {
							throw new js__$Boot_HaxeError("Error: Duplicate keys found => " + Std.string(p1.k));
						}
						var key1 = p1.k;
						var value = p1.v;
						if(__map_reserved[key1] != null) {
							out1.setReserved(key1,value);
						} else {
							out1.h[key1] = value;
						}
					}
					return out1;
				} else {
					throw new js__$Boot_HaxeError("Error: Unsupported key Type");
				}
				break;
			default:
				throw new js__$Boot_HaxeError("Error: Unsupported key Type");
			}
			break;
		case 1:
			var out2 = { };
			var _g13 = 0;
			var _g5 = length;
			while(_g13 < _g5) {
				var n1 = _g13++;
				var k1 = this.decode(i,option);
				var v1 = this.decode(i,option);
				out2[Std.string(k1)] = v1;
			}
			return out2;
		}
	}
	,getResult: function() {
		return this.o;
	}
	,__class__: iron_system_msgpack_Decoder
};
var iron_system_msgpack_Encoder = function(d) {
	this.o = new haxe_io_BytesOutput();
	this.o.set_bigEndian(true);
	this.encode(d);
};
$hxClasses["iron.system.msgpack.Encoder"] = iron_system_msgpack_Encoder;
iron_system_msgpack_Encoder.__name__ = ["iron","system","msgpack","Encoder"];
iron_system_msgpack_Encoder.prototype = {
	encode: function(d) {
		var _g = Type["typeof"](d);
		switch(_g[1]) {
		case 0:
			this.o.writeByte(192);
			break;
		case 1:
			var d1 = d;
			if(d1 < -32) {
				if(d1 < -32768) {
					this.o.writeByte(210);
					this.o.writeInt32(d1);
				} else if(d1 < -128) {
					this.o.writeByte(209);
					this.o.writeInt16(d1);
				} else {
					this.o.writeByte(208);
					this.o.writeInt8(d1);
				}
			} else if(d1 < 128) {
				this.o.writeByte(d1 & 255);
			} else if(d1 < 256) {
				this.o.writeByte(204);
				this.o.writeByte(d1);
			} else if(d1 < 65536) {
				this.o.writeByte(205);
				this.o.writeUInt16(d1);
			} else {
				this.o.writeByte(206);
				this.o.writeInt32(d1);
			}
			break;
		case 2:
			var d2 = d;
			var a = Math.abs(d2);
			if(a > 1.40129846432481707e-45 && a < 3.40282346638528860e+38) {
				this.o.writeByte(202);
				this.o.writeFloat(d2);
			} else {
				this.o.writeByte(203);
				this.o.writeDouble(d2);
			}
			break;
		case 3:
			this.o.writeByte(d ? 195 : 194);
			break;
		case 4:
			var f = Reflect.fields(d);
			var length = Lambda.count(f);
			if(length < 16) {
				this.o.writeByte(128 | length);
			} else if(length < 65536) {
				this.o.writeByte(222);
				this.o.writeUInt16(length);
			} else {
				this.o.writeByte(223);
				this.o.writeInt32(length);
			}
			var _g1 = 0;
			while(_g1 < f.length) {
				var k = f[_g1];
				++_g1;
				this.encode(k);
				this.encode(Reflect.field(d,k));
			}
			break;
		case 5:
			throw new js__$Boot_HaxeError("Error: Function not supported");
			break;
		case 6:
			var c = _g[2];
			var _g2 = Type.getClassName(c);
			switch(_g2) {
			case "Array":
				var d3 = d;
				var length1 = d3.length;
				if(length1 < 16) {
					this.o.writeByte(144 | length1);
				} else if(length1 < 65536) {
					this.o.writeByte(220);
					this.o.writeUInt16(length1);
				} else {
					this.o.writeByte(221);
					this.o.writeInt32(length1);
				}
				var _g3 = 0;
				while(_g3 < d3.length) {
					var e = d3[_g3];
					++_g3;
					this.encode(e);
				}
				break;
			case "String":
				var b = d;
				var length2 = b.length;
				if(length2 < 32) {
					this.o.writeByte(160 | length2);
				} else if(length2 < 256) {
					this.o.writeByte(217);
					this.o.writeByte(length2);
				} else if(length2 < 65536) {
					this.o.writeByte(218);
					this.o.writeUInt16(length2);
				} else {
					this.o.writeByte(219);
					this.o.writeInt32(length2);
				}
				this.o.writeString(b);
				break;
			case "haxe._Int64.___Int64":
				var d4 = d;
				this.o.writeByte(211);
				this.o.writeInt32(d4.high);
				this.o.writeInt32(d4.low);
				break;
			case "haxe.ds.IntMap":case "haxe.ds.StringMap":case "haxe.ds.UnsafeStringMap":
				var d5 = d;
				var length3 = 0;
				var k1 = d5.keys();
				while(k1.hasNext()) {
					var k2 = k1.next();
					++length3;
				}
				if(length3 < 16) {
					this.o.writeByte(128 | length3);
				} else if(length3 < 65536) {
					this.o.writeByte(222);
					this.o.writeUInt16(length3);
				} else {
					this.o.writeByte(223);
					this.o.writeInt32(length3);
				}
				var k3 = d5.keys();
				while(k3.hasNext()) {
					var k4 = k3.next();
					this.encode(k4);
					this.encode(d5.get(k4));
				}
				break;
			case "haxe.io.Bytes":
				var b1 = d;
				var length4 = b1.length;
				if(length4 < 256) {
					this.o.writeByte(196);
					this.o.writeByte(length4);
				} else if(length4 < 65536) {
					this.o.writeByte(197);
					this.o.writeUInt16(length4);
				} else {
					this.o.writeByte(198);
					this.o.writeInt32(length4);
				}
				this.o.write(b1);
				break;
			default:
				throw new js__$Boot_HaxeError("Error: " + Type.getClassName(c) + " not supported");
			}
			break;
		case 7:
			var e1 = _g[2];
			throw new js__$Boot_HaxeError("Error: Enum not supported");
			break;
		case 8:
			throw new js__$Boot_HaxeError("Error: Unknown Data Type");
			break;
		}
	}
	,writeInt64: function(d) {
		this.o.writeByte(211);
		this.o.writeInt32(d.high);
		this.o.writeInt32(d.low);
	}
	,writeInt: function(d) {
		if(d < -32) {
			if(d < -32768) {
				this.o.writeByte(210);
				this.o.writeInt32(d);
			} else if(d < -128) {
				this.o.writeByte(209);
				this.o.writeInt16(d);
			} else {
				this.o.writeByte(208);
				this.o.writeInt8(d);
			}
		} else if(d < 128) {
			this.o.writeByte(d & 255);
		} else if(d < 256) {
			this.o.writeByte(204);
			this.o.writeByte(d);
		} else if(d < 65536) {
			this.o.writeByte(205);
			this.o.writeUInt16(d);
		} else {
			this.o.writeByte(206);
			this.o.writeInt32(d);
		}
	}
	,writeFloat: function(d) {
		var a = Math.abs(d);
		if(a > 1.40129846432481707e-45 && a < 3.40282346638528860e+38) {
			this.o.writeByte(202);
			this.o.writeFloat(d);
		} else {
			this.o.writeByte(203);
			this.o.writeDouble(d);
		}
	}
	,writeBinary: function(b) {
		var length = b.length;
		if(length < 256) {
			this.o.writeByte(196);
			this.o.writeByte(length);
		} else if(length < 65536) {
			this.o.writeByte(197);
			this.o.writeUInt16(length);
		} else {
			this.o.writeByte(198);
			this.o.writeInt32(length);
		}
		this.o.write(b);
	}
	,writeString: function(b) {
		var length = b.length;
		if(length < 32) {
			this.o.writeByte(160 | length);
		} else if(length < 256) {
			this.o.writeByte(217);
			this.o.writeByte(length);
		} else if(length < 65536) {
			this.o.writeByte(218);
			this.o.writeUInt16(length);
		} else {
			this.o.writeByte(219);
			this.o.writeInt32(length);
		}
		this.o.writeString(b);
	}
	,writeArray: function(d) {
		var length = d.length;
		if(length < 16) {
			this.o.writeByte(144 | length);
		} else if(length < 65536) {
			this.o.writeByte(220);
			this.o.writeUInt16(length);
		} else {
			this.o.writeByte(221);
			this.o.writeInt32(length);
		}
		var _g = 0;
		while(_g < d.length) {
			var e = d[_g];
			++_g;
			this.encode(e);
		}
	}
	,writeMapLength: function(length) {
		if(length < 16) {
			this.o.writeByte(128 | length);
		} else if(length < 65536) {
			this.o.writeByte(222);
			this.o.writeUInt16(length);
		} else {
			this.o.writeByte(223);
			this.o.writeInt32(length);
		}
	}
	,writeMap: function(d) {
		var length = 0;
		var k = d.keys();
		while(k.hasNext()) {
			var k1 = k.next();
			++length;
		}
		if(length < 16) {
			this.o.writeByte(128 | length);
		} else if(length < 65536) {
			this.o.writeByte(222);
			this.o.writeUInt16(length);
		} else {
			this.o.writeByte(223);
			this.o.writeInt32(length);
		}
		var k2 = d.keys();
		while(k2.hasNext()) {
			var k3 = k2.next();
			this.encode(k3);
			this.encode(d.get(k3));
		}
	}
	,writeObject: function(d) {
		var f = Reflect.fields(d);
		var length = Lambda.count(f);
		if(length < 16) {
			this.o.writeByte(128 | length);
		} else if(length < 65536) {
			this.o.writeByte(222);
			this.o.writeUInt16(length);
		} else {
			this.o.writeByte(223);
			this.o.writeInt32(length);
		}
		var _g = 0;
		while(_g < f.length) {
			var k = f[_g];
			++_g;
			this.encode(k);
			this.encode(Reflect.field(d,k));
		}
	}
	,getBytes: function() {
		return this.o.getBytes();
	}
	,__class__: iron_system_msgpack_Encoder
};
var iron_system_msgpack_MsgPack = function() { };
$hxClasses["iron.system.msgpack.MsgPack"] = iron_system_msgpack_MsgPack;
iron_system_msgpack_MsgPack.__name__ = ["iron","system","msgpack","MsgPack"];
iron_system_msgpack_MsgPack.encode = function(d) {
	return new iron_system_msgpack_Encoder(d).o.getBytes();
};
iron_system_msgpack_MsgPack.decode = function(b,option) {
	if(option == null) {
		option = iron_system_msgpack_DecodeOption.AsObject;
	}
	return new iron_system_msgpack_Decoder(b,option).o;
};
var js__$Boot_HaxeError = function(val) {
	Error.call(this);
	this.val = val;
	this.message = String(val);
	if(Error.captureStackTrace) {
		Error.captureStackTrace(this,js__$Boot_HaxeError);
	}
};
$hxClasses["js._Boot.HaxeError"] = js__$Boot_HaxeError;
js__$Boot_HaxeError.__name__ = ["js","_Boot","HaxeError"];
js__$Boot_HaxeError.wrap = function(val) {
	if((val instanceof Error)) {
		return val;
	} else {
		return new js__$Boot_HaxeError(val);
	}
};
js__$Boot_HaxeError.__super__ = Error;
js__$Boot_HaxeError.prototype = $extend(Error.prototype,{
	__class__: js__$Boot_HaxeError
});
var js_Boot = function() { };
$hxClasses["js.Boot"] = js_Boot;
js_Boot.__name__ = ["js","Boot"];
js_Boot.__unhtml = function(s) {
	return s.split("&").join("&amp;").split("<").join("&lt;").split(">").join("&gt;");
};
js_Boot.__trace = function(v,i) {
	var msg = i != null ? i.fileName + ":" + i.lineNumber + ": " : "";
	msg += js_Boot.__string_rec(v,"");
	if(i != null && i.customParams != null) {
		var _g = 0;
		var _g1 = i.customParams;
		while(_g < _g1.length) {
			var v1 = _g1[_g];
			++_g;
			msg += "," + js_Boot.__string_rec(v1,"");
		}
	}
	var d;
	var tmp;
	if(typeof(document) != "undefined") {
		d = document.getElementById("haxe:trace");
		tmp = d != null;
	} else {
		tmp = false;
	}
	if(tmp) {
		d.innerHTML += js_Boot.__unhtml(msg) + "<br/>";
	} else if(typeof console != "undefined" && console.log != null) {
		console.log(msg);
	}
};
js_Boot.getClass = function(o) {
	if((o instanceof Array) && o.__enum__ == null) {
		return Array;
	} else {
		var cl = o.__class__;
		if(cl != null) {
			return cl;
		}
		var name = js_Boot.__nativeClassName(o);
		if(name != null) {
			return js_Boot.__resolveNativeClass(name);
		}
		return null;
	}
};
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o instanceof Array) {
			if(o.__enum__) {
				if(o.length == 2) {
					return o[0];
				}
				var str = o[0] + "(";
				s += "\t";
				var _g1 = 2;
				var _g = o.length;
				while(_g1 < _g) {
					var i = _g1++;
					if(i != 2) {
						str += "," + js_Boot.__string_rec(o[i],s);
					} else {
						str += js_Boot.__string_rec(o[i],s);
					}
				}
				return str + ")";
			}
			var l = o.length;
			var i1;
			var str1 = "[";
			s += "\t";
			var _g11 = 0;
			var _g2 = l;
			while(_g11 < _g2) {
				var i2 = _g11++;
				str1 += (i2 > 0 ? "," : "") + js_Boot.__string_rec(o[i2],s);
			}
			str1 += "]";
			return str1;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( e ) {
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var k = null;
		var str2 = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		for( var k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str2.length != 2) {
			str2 += ", \n";
		}
		str2 += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str2 += "\n" + s + "}";
		return str2;
	case "string":
		return o;
	default:
		return String(o);
	}
};
js_Boot.__interfLoop = function(cc,cl) {
	if(cc == null) {
		return false;
	}
	if(cc == cl) {
		return true;
	}
	var intf = cc.__interfaces__;
	if(intf != null) {
		var _g1 = 0;
		var _g = intf.length;
		while(_g1 < _g) {
			var i = _g1++;
			var i1 = intf[i];
			if(i1 == cl || js_Boot.__interfLoop(i1,cl)) {
				return true;
			}
		}
	}
	return js_Boot.__interfLoop(cc.__super__,cl);
};
js_Boot.__instanceof = function(o,cl) {
	if(cl == null) {
		return false;
	}
	switch(cl) {
	case Array:
		if((o instanceof Array)) {
			return o.__enum__ == null;
		} else {
			return false;
		}
		break;
	case Bool:
		return typeof(o) == "boolean";
	case Dynamic:
		return true;
	case Float:
		return typeof(o) == "number";
	case Int:
		if(typeof(o) == "number") {
			return (o|0) === o;
		} else {
			return false;
		}
		break;
	case String:
		return typeof(o) == "string";
	default:
		if(o != null) {
			if(typeof(cl) == "function") {
				if(o instanceof cl) {
					return true;
				}
				if(js_Boot.__interfLoop(js_Boot.getClass(o),cl)) {
					return true;
				}
			} else if(typeof(cl) == "object" && js_Boot.__isNativeObj(cl)) {
				if(o instanceof cl) {
					return true;
				}
			}
		} else {
			return false;
		}
		if(cl == Class ? o.__name__ != null : false) {
			return true;
		}
		if(cl == Enum ? o.__ename__ != null : false) {
			return true;
		}
		return o.__enum__ == cl;
	}
};
js_Boot.__cast = function(o,t) {
	if(js_Boot.__instanceof(o,t)) {
		return o;
	} else {
		throw new js__$Boot_HaxeError("Cannot cast " + Std.string(o) + " to " + Std.string(t));
	}
};
js_Boot.__nativeClassName = function(o) {
	var name = js_Boot.__toStr.call(o).slice(8,-1);
	if(name == "Object" || name == "Function" || name == "Math" || name == "JSON") {
		return null;
	}
	return name;
};
js_Boot.__isNativeObj = function(o) {
	return js_Boot.__nativeClassName(o) != null;
};
js_Boot.__resolveNativeClass = function(name) {
	return $global[name];
};
var js_html_compat_ArrayBuffer = function(a) {
	if((a instanceof Array) && a.__enum__ == null) {
		this.a = a;
		this.byteLength = a.length;
	} else {
		var len = a;
		this.a = [];
		var _g1 = 0;
		var _g = len;
		while(_g1 < _g) {
			var i = _g1++;
			this.a[i] = 0;
		}
		this.byteLength = len;
	}
};
$hxClasses["js.html.compat.ArrayBuffer"] = js_html_compat_ArrayBuffer;
js_html_compat_ArrayBuffer.__name__ = ["js","html","compat","ArrayBuffer"];
js_html_compat_ArrayBuffer.sliceImpl = function(begin,end) {
	var u = new Uint8Array(this,begin,end == null ? null : end - begin);
	var result = new ArrayBuffer(u.byteLength);
	var resultArray = new Uint8Array(result);
	resultArray.set(u);
	return result;
};
js_html_compat_ArrayBuffer.prototype = {
	slice: function(begin,end) {
		return new js_html_compat_ArrayBuffer(this.a.slice(begin,end));
	}
	,__class__: js_html_compat_ArrayBuffer
};
var js_html_compat_DataView = function(buffer,byteOffset,byteLength) {
	this.buf = buffer;
	this.offset = byteOffset == null ? 0 : byteOffset;
	this.length = byteLength == null ? buffer.byteLength - this.offset : byteLength;
	if(this.offset < 0 || this.length < 0 || this.offset + this.length > buffer.byteLength) {
		throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
	}
	this.byteLength = this.length;
	this.byteOffset = this.offset;
	this.buffer = this.buf;
};
$hxClasses["js.html.compat.DataView"] = js_html_compat_DataView;
js_html_compat_DataView.__name__ = ["js","html","compat","DataView"];
js_html_compat_DataView.prototype = {
	getInt8: function(byteOffset) {
		var v = this.buf.a[this.offset + byteOffset];
		if(v >= 128) {
			return v - 256;
		} else {
			return v;
		}
	}
	,getUint8: function(byteOffset) {
		return this.buf.a[this.offset + byteOffset];
	}
	,getInt16: function(byteOffset,littleEndian) {
		var v = this.getUint16(byteOffset,littleEndian);
		if(v >= 32768) {
			return v - 65536;
		} else {
			return v;
		}
	}
	,getUint16: function(byteOffset,littleEndian) {
		if(littleEndian) {
			return this.buf.a[this.offset + byteOffset] | this.buf.a[this.offset + byteOffset + 1] << 8;
		} else {
			return this.buf.a[this.offset + byteOffset] << 8 | this.buf.a[this.offset + byteOffset + 1];
		}
	}
	,getInt32: function(byteOffset,littleEndian) {
		var p = this.offset + byteOffset;
		var a = this.buf.a[p++];
		var b = this.buf.a[p++];
		var c = this.buf.a[p++];
		var d = this.buf.a[p++];
		if(littleEndian) {
			return a | b << 8 | c << 16 | d << 24;
		} else {
			return d | c << 8 | b << 16 | a << 24;
		}
	}
	,getUint32: function(byteOffset,littleEndian) {
		var v = this.getInt32(byteOffset,littleEndian);
		if(v < 0) {
			return v + 4294967296.;
		} else {
			return v;
		}
	}
	,getFloat32: function(byteOffset,littleEndian) {
		return haxe_io_FPHelper.i32ToFloat(this.getInt32(byteOffset,littleEndian));
	}
	,getFloat64: function(byteOffset,littleEndian) {
		var a = this.getInt32(byteOffset,littleEndian);
		var b = this.getInt32(byteOffset + 4,littleEndian);
		return haxe_io_FPHelper.i64ToDouble(littleEndian ? a : b,littleEndian ? b : a);
	}
	,setInt8: function(byteOffset,value) {
		this.buf.a[byteOffset + this.offset] = value < 0 ? value + 128 & 255 : value & 255;
	}
	,setUint8: function(byteOffset,value) {
		this.buf.a[byteOffset + this.offset] = value & 255;
	}
	,setInt16: function(byteOffset,value,littleEndian) {
		this.setUint16(byteOffset,value < 0 ? value + 65536 : value,littleEndian);
	}
	,setUint16: function(byteOffset,value,littleEndian) {
		var p = byteOffset + this.offset;
		if(littleEndian) {
			this.buf.a[p] = value & 255;
			this.buf.a[p++] = value >> 8 & 255;
		} else {
			this.buf.a[p++] = value >> 8 & 255;
			this.buf.a[p] = value & 255;
		}
	}
	,setInt32: function(byteOffset,value,littleEndian) {
		this.setUint32(byteOffset,value,littleEndian);
	}
	,setUint32: function(byteOffset,value,littleEndian) {
		var p = byteOffset + this.offset;
		if(littleEndian) {
			this.buf.a[p++] = value & 255;
			this.buf.a[p++] = value >> 8 & 255;
			this.buf.a[p++] = value >> 16 & 255;
			this.buf.a[p++] = value >>> 24;
		} else {
			this.buf.a[p++] = value >>> 24;
			this.buf.a[p++] = value >> 16 & 255;
			this.buf.a[p++] = value >> 8 & 255;
			this.buf.a[p++] = value & 255;
		}
	}
	,setFloat32: function(byteOffset,value,littleEndian) {
		this.setUint32(byteOffset,haxe_io_FPHelper.floatToI32(value),littleEndian);
	}
	,setFloat64: function(byteOffset,value,littleEndian) {
		var i64 = haxe_io_FPHelper.doubleToI64(value);
		if(littleEndian) {
			this.setUint32(byteOffset,i64.low);
			this.setUint32(byteOffset,i64.high);
		} else {
			this.setUint32(byteOffset,i64.high);
			this.setUint32(byteOffset,i64.low);
		}
	}
	,__class__: js_html_compat_DataView
};
var js_html_compat_Float32Array = function() { };
$hxClasses["js.html.compat.Float32Array"] = js_html_compat_Float32Array;
js_html_compat_Float32Array.__name__ = ["js","html","compat","Float32Array"];
js_html_compat_Float32Array._new = function(arg1,offset,length) {
	var arr;
	if(typeof(arg1) == "number") {
		arr = [];
		var _g1 = 0;
		var _g = arg1;
		while(_g1 < _g) {
			var i = _g1++;
			arr[i] = 0;
		}
		arr.byteLength = arr.length << 2;
		arr.byteOffset = 0;
		var _g2 = [];
		var _g21 = 0;
		var _g11 = arr.length << 2;
		while(_g21 < _g11) {
			var i1 = _g21++;
			_g2.push(0);
		}
		arr.buffer = new js_html_compat_ArrayBuffer(_g2);
	} else if(js_Boot.__instanceof(arg1,js_html_compat_ArrayBuffer)) {
		var buffer = arg1;
		if(offset == null) {
			offset = 0;
		}
		if(length == null) {
			length = buffer.byteLength - offset >> 2;
		}
		arr = [];
		var _g12 = 0;
		var _g3 = length;
		while(_g12 < _g3) {
			var i2 = _g12++;
			var val = buffer.a[offset++] | buffer.a[offset++] << 8 | buffer.a[offset++] << 16 | buffer.a[offset++] << 24;
			arr.push(haxe_io_FPHelper.i32ToFloat(val));
		}
		arr.byteLength = arr.length << 2;
		arr.byteOffset = offset;
		arr.buffer = buffer;
	} else if((arg1 instanceof Array) && arg1.__enum__ == null) {
		arr = arg1.slice();
		var buffer1 = [];
		var _g4 = 0;
		while(_g4 < arr.length) {
			var f = arr[_g4];
			++_g4;
			var i3 = haxe_io_FPHelper.floatToI32(f);
			buffer1.push(i3 & 255);
			buffer1.push(i3 >> 8 & 255);
			buffer1.push(i3 >> 16 & 255);
			buffer1.push(i3 >>> 24);
		}
		arr.byteLength = arr.length << 2;
		arr.byteOffset = 0;
		arr.buffer = new js_html_compat_ArrayBuffer(buffer1);
	} else {
		throw new js__$Boot_HaxeError("TODO " + Std.string(arg1));
	}
	arr.subarray = js_html_compat_Float32Array._subarray;
	arr.set = js_html_compat_Float32Array._set;
	return arr;
};
js_html_compat_Float32Array._set = function(arg,offset) {
	if(js_Boot.__instanceof(arg.buffer,js_html_compat_ArrayBuffer)) {
		var a = arg;
		if(arg.byteLength + offset > this.byteLength) {
			throw new js__$Boot_HaxeError("set() outside of range");
		}
		var _g1 = 0;
		var _g = arg.byteLength;
		while(_g1 < _g) {
			var i = _g1++;
			this[i + offset] = a[i];
		}
	} else if((arg instanceof Array) && arg.__enum__ == null) {
		var a1 = arg;
		if(a1.length + offset > this.byteLength) {
			throw new js__$Boot_HaxeError("set() outside of range");
		}
		var _g11 = 0;
		var _g2 = a1.length;
		while(_g11 < _g2) {
			var i1 = _g11++;
			this[i1 + offset] = a1[i1];
		}
	} else {
		throw new js__$Boot_HaxeError("TODO");
	}
};
js_html_compat_Float32Array._subarray = function(start,end) {
	var a = js_html_compat_Float32Array._new(this.slice(start,end));
	a.byteOffset = start * 4;
	return a;
};
var js_html_compat_Uint8Array = function() { };
$hxClasses["js.html.compat.Uint8Array"] = js_html_compat_Uint8Array;
js_html_compat_Uint8Array.__name__ = ["js","html","compat","Uint8Array"];
js_html_compat_Uint8Array._new = function(arg1,offset,length) {
	var arr;
	if(typeof(arg1) == "number") {
		arr = [];
		var _g1 = 0;
		var _g = arg1;
		while(_g1 < _g) {
			var i = _g1++;
			arr[i] = 0;
		}
		arr.byteLength = arr.length;
		arr.byteOffset = 0;
		arr.buffer = new js_html_compat_ArrayBuffer(arr);
	} else if(js_Boot.__instanceof(arg1,js_html_compat_ArrayBuffer)) {
		var buffer = arg1;
		if(offset == null) {
			offset = 0;
		}
		if(length == null) {
			length = buffer.byteLength - offset;
		}
		if(offset == 0) {
			arr = buffer.a;
		} else {
			arr = buffer.a.slice(offset,offset + length);
		}
		arr.byteLength = arr.length;
		arr.byteOffset = offset;
		arr.buffer = buffer;
	} else if((arg1 instanceof Array) && arg1.__enum__ == null) {
		arr = arg1.slice();
		arr.byteLength = arr.length;
		arr.byteOffset = 0;
		arr.buffer = new js_html_compat_ArrayBuffer(arr);
	} else {
		throw new js__$Boot_HaxeError("TODO " + Std.string(arg1));
	}
	arr.subarray = js_html_compat_Uint8Array._subarray;
	arr.set = js_html_compat_Uint8Array._set;
	return arr;
};
js_html_compat_Uint8Array._set = function(arg,offset) {
	if(js_Boot.__instanceof(arg.buffer,js_html_compat_ArrayBuffer)) {
		var a = arg;
		if(arg.byteLength + offset > this.byteLength) {
			throw new js__$Boot_HaxeError("set() outside of range");
		}
		var _g1 = 0;
		var _g = arg.byteLength;
		while(_g1 < _g) {
			var i = _g1++;
			this[i + offset] = a[i];
		}
	} else if((arg instanceof Array) && arg.__enum__ == null) {
		var a1 = arg;
		if(a1.length + offset > this.byteLength) {
			throw new js__$Boot_HaxeError("set() outside of range");
		}
		var _g11 = 0;
		var _g2 = a1.length;
		while(_g11 < _g2) {
			var i1 = _g11++;
			this[i1 + offset] = a1[i1];
		}
	} else {
		throw new js__$Boot_HaxeError("TODO");
	}
};
js_html_compat_Uint8Array._subarray = function(start,end) {
	var a = js_html_compat_Uint8Array._new(this.slice(start,end));
	a.byteOffset = start;
	return a;
};
var kha_Canvas = function() { };
$hxClasses["kha.Canvas"] = kha_Canvas;
kha_Canvas.__name__ = ["kha","Canvas"];
kha_Canvas.prototype = {
	__class__: kha_Canvas
	,__properties__: {get_g4:"get_g4",get_g2:"get_g2",get_g1:"get_g1",get_height:"get_height",get_width:"get_width"}
};
var kha_Resource = function() { };
$hxClasses["kha.Resource"] = kha_Resource;
kha_Resource.__name__ = ["kha","Resource"];
kha_Resource.prototype = {
	__class__: kha_Resource
};
var kha_Image = function() { };
$hxClasses["kha.Image"] = kha_Image;
kha_Image.__name__ = ["kha","Image"];
kha_Image.__interfaces__ = [kha_Resource,kha_Canvas];
kha_Image.__properties__ = {get_nonPow2Supported:"get_nonPow2Supported",get_maxSize:"get_maxSize"};
kha_Image.create = function(width,height,format,usage) {
	if(format == null) {
		format = kha_graphics4_TextureFormat.RGBA32;
	}
	if(usage == null) {
		usage = kha_graphics4_Usage.StaticUsage;
	}
	if(kha_SystemImpl.gl == null) {
		return new kha_CanvasImage(width,height,format,false);
	} else {
		return new kha_WebGLImage(width,height,format,false,0);
	}
};
kha_Image.create3D = function(width,height,depth,format,usage) {
	return null;
};
kha_Image.createRenderTarget = function(width,height,format,depthStencil,antiAliasingSamples,contextId) {
	if(contextId == null) {
		contextId = 0;
	}
	if(antiAliasingSamples == null) {
		antiAliasingSamples = 1;
	}
	if(depthStencil == null) {
		depthStencil = 0;
	}
	if(format == null) {
		format = kha_graphics4_TextureFormat.RGBA32;
	}
	if(kha_SystemImpl.gl == null) {
		return new kha_CanvasImage(width,height,format,true);
	} else {
		return new kha_WebGLImage(width,height,format,true,depthStencil);
	}
};
kha_Image.fromImage = function(image,readable) {
	if(kha_SystemImpl.gl == null) {
		var img = new kha_CanvasImage(image.width,image.height,kha_graphics4_TextureFormat.RGBA32,false);
		img.image = image;
		img.createTexture();
		return img;
	} else {
		var img1 = new kha_WebGLImage(image.width,image.height,kha_graphics4_TextureFormat.RGBA32,false,0);
		img1.image = image;
		img1.createTexture();
		return img1;
	}
};
kha_Image.fromBytes = function(bytes,width,height,format,usage) {
	if(format == null) {
		format = kha_graphics4_TextureFormat.RGBA32;
	}
	if(usage == null) {
		usage = kha_graphics4_Usage.StaticUsage;
	}
	if(kha_SystemImpl.gl != null) {
		var img = new kha_WebGLImage(width,height,format,false,0);
		img.image = img.bytesToArray(bytes);
		img.createTexture();
		return img;
	}
	return null;
};
kha_Image.fromEncodedBytes = function(bytes,fileExtention,doneCallback,errorCallback,readable) {
	if(readable == null) {
		readable = false;
	}
	var dataUrl = "data:image;base64," + haxe_crypto_Base64.encode(bytes);
	var imageElement = js_Boot.__cast(window.document.createElement("img") , HTMLImageElement);
	imageElement.onload = function() {
		var tmp = kha_Image.fromImage(imageElement,readable);
		doneCallback(tmp);
	};
	imageElement.onerror = function() {
		errorCallback("Image was not created");
	};
	imageElement.src = dataUrl;
};
kha_Image.fromVideo = function(video) {
	if(kha_SystemImpl.gl == null) {
		var img = new kha_CanvasImage(video.element.videoWidth,video.element.videoHeight,kha_graphics4_TextureFormat.RGBA32,false);
		img.video = video.element;
		img.createTexture();
		return img;
	} else {
		var img1 = new kha_WebGLImage(video.element.videoWidth,video.element.videoHeight,kha_graphics4_TextureFormat.RGBA32,false,0);
		img1.video = video.element;
		img1.createTexture();
		return img1;
	}
};
kha_Image.get_maxSize = function() {
	if(kha_SystemImpl.gl == null) {
		return 8192;
	} else {
		return kha_SystemImpl.gl.getParameter(3379);
	}
};
kha_Image.get_nonPow2Supported = function() {
	return kha_SystemImpl.gl != null;
};
kha_Image.prototype = {
	isOpaque: function(x,y) {
		return false;
	}
	,at: function(x,y) {
		return -16777216;
	}
	,unload: function() {
	}
	,lock: function(level) {
		if(level == null) {
			level = 0;
		}
		return null;
	}
	,unlock: function() {
	}
	,generateMipmaps: function(levels) {
	}
	,setMipmaps: function(mipmaps) {
	}
	,setDepthStencilFrom: function(image) {
	}
	,clear: function(x,y,z,width,height,depth,color) {
	}
	,get_width: function() {
		return 0;
	}
	,get_height: function() {
		return 0;
	}
	,get_depth: function() {
		return 1;
	}
	,get_realWidth: function() {
		return 0;
	}
	,get_realHeight: function() {
		return 0;
	}
	,get_g1: function() {
		return null;
	}
	,get_g2: function() {
		return null;
	}
	,get_g4: function() {
		return null;
	}
	,__class__: kha_Image
	,__properties__: {get_g4:"get_g4",get_g2:"get_g2",get_g1:"get_g1",get_realHeight:"get_realHeight",get_realWidth:"get_realWidth",get_depth:"get_depth",get_height:"get_height",get_width:"get_width"}
};
var kha_CanvasImage = function(width,height,format,renderTarget) {
	this.g2canvas = null;
	this.myWidth = width;
	this.myHeight = height;
	this.format = format;
	this.renderTarget = renderTarget;
	this.image = null;
	this.video = null;
	if(renderTarget) {
		this.createTexture();
	}
};
$hxClasses["kha.CanvasImage"] = kha_CanvasImage;
kha_CanvasImage.__name__ = ["kha","CanvasImage"];
kha_CanvasImage.init = function() {
	var canvas = window.document.createElement("canvas");
	if(canvas != null) {
		kha_CanvasImage.context = canvas.getContext("2d");
		canvas.width = 2048;
		canvas.height = 2048;
		kha_CanvasImage.context.globalCompositeOperation = "copy";
	}
};
kha_CanvasImage.upperPowerOfTwo = function(v) {
	--v;
	v |= v >>> 1;
	v |= v >>> 2;
	v |= v >>> 4;
	v |= v >>> 8;
	v |= v >>> 16;
	return ++v;
};
kha_CanvasImage.__super__ = kha_Image;
kha_CanvasImage.prototype = $extend(kha_Image.prototype,{
	get_g1: function() {
		if(this.graphics1 == null) {
			this.graphics1 = new kha_graphics2_Graphics1(this);
		}
		return this.graphics1;
	}
	,get_g2: function() {
		if(this.g2canvas == null) {
			var canvas = window.document.createElement("canvas");
			this.image = canvas;
			var context = canvas.getContext("2d");
			canvas.width = this.get_width();
			canvas.height = this.get_height();
			this.g2canvas = new kha_js_CanvasGraphics(context);
		}
		return this.g2canvas;
	}
	,get_g4: function() {
		return null;
	}
	,get_width: function() {
		return this.myWidth;
	}
	,get_height: function() {
		return this.myHeight;
	}
	,get_realWidth: function() {
		return this.myWidth;
	}
	,get_realHeight: function() {
		return this.myHeight;
	}
	,isOpaque: function(x,y) {
		if(this.data == null) {
			if(kha_CanvasImage.context == null) {
				return true;
			} else {
				this.createImageData();
			}
		}
		return this.data.data[y * (this.image.width | 0) * 4 + x * 4 + 3] != 0;
	}
	,at: function(x,y) {
		if(this.data == null) {
			if(kha_CanvasImage.context == null) {
				return -16777216;
			} else {
				this.createImageData();
			}
		}
		return kha__$Color_Color_$Impl_$._new(this.data.data[y * (this.image.width | 0) * 4 + x * 4]);
	}
	,createImageData: function() {
		kha_CanvasImage.context.strokeStyle = "rgba(0,0,0,0)";
		kha_CanvasImage.context.fillStyle = "rgba(0,0,0,0)";
		kha_CanvasImage.context.fillRect(0,0,this.image.width,this.image.height);
		kha_CanvasImage.context.drawImage(this.image,0,0,this.image.width,this.image.height,0,0,this.image.width,this.image.height);
		this.data = kha_CanvasImage.context.getImageData(0,0,this.image.width,this.image.height);
	}
	,createTexture: function() {
		if(kha_SystemImpl.gl == null) {
			return;
		}
		this.texture = kha_SystemImpl.gl.createTexture();
		kha_SystemImpl.gl.bindTexture(3553,this.texture);
		kha_SystemImpl.gl.texParameteri(3553,10240,9729);
		kha_SystemImpl.gl.texParameteri(3553,10241,9729);
		kha_SystemImpl.gl.texParameteri(3553,10242,33071);
		kha_SystemImpl.gl.texParameteri(3553,10243,33071);
		if(this.renderTarget) {
			this.frameBuffer = kha_SystemImpl.gl.createFramebuffer();
			kha_SystemImpl.gl.bindFramebuffer(36160,this.frameBuffer);
			kha_SystemImpl.gl.texImage2D(3553,0,6408,this.get_realWidth(),this.get_realHeight(),0,6408,5121,null);
			kha_SystemImpl.gl.framebufferTexture2D(36160,36064,3553,this.texture,0);
			kha_SystemImpl.gl.bindFramebuffer(36160,null);
		} else if(this.video != null) {
			kha_SystemImpl.gl.texImage2D(3553,0,6408,6408,5121,this.video);
		} else {
			kha_SystemImpl.gl.texImage2D(3553,0,6408,6408,5121,this.image);
		}
		kha_SystemImpl.gl.bindTexture(3553,null);
	}
	,set: function(stage) {
		kha_SystemImpl.gl.activeTexture(33984 + stage);
		kha_SystemImpl.gl.bindTexture(3553,this.texture);
		if(this.video != null) {
			kha_SystemImpl.gl.texImage2D(3553,0,6408,6408,5121,this.video);
		}
	}
	,lock: function(level) {
		if(level == null) {
			level = 0;
		}
		this.bytes = new haxe_io_Bytes(new ArrayBuffer(this.format == kha_graphics4_TextureFormat.RGBA32 ? 4 * this.get_width() * this.get_height() : this.get_width() * this.get_height()));
		return this.bytes;
	}
	,unlock: function() {
		if(kha_SystemImpl.gl != null) {
			this.texture = kha_SystemImpl.gl.createTexture();
			kha_SystemImpl.gl.bindTexture(3553,this.texture);
			kha_SystemImpl.gl.texParameteri(3553,10240,9729);
			kha_SystemImpl.gl.texParameteri(3553,10241,9729);
			kha_SystemImpl.gl.texParameteri(3553,10242,33071);
			kha_SystemImpl.gl.texParameteri(3553,10243,33071);
			kha_SystemImpl.gl.texImage2D(3553,0,6409,this.get_width(),this.get_height(),0,6409,5121,new Uint8Array(this.bytes.b.bufferValue));
			if(kha_SystemImpl.gl.getError() == 1282) {
				var rgbaBytes = new haxe_io_Bytes(new ArrayBuffer(this.get_width() * this.get_height() * 4));
				var _g1 = 0;
				var _g = this.get_height();
				while(_g1 < _g) {
					var y = _g1++;
					var _g3 = 0;
					var _g2 = this.get_width();
					while(_g3 < _g2) {
						var x = _g3++;
						var _this = this.bytes;
						var pos = y * this.get_width() + x;
						var value = _this.b[pos];
						var pos1 = y * this.get_width() * 4 + x * 4;
						rgbaBytes.b[pos1] = value & 255;
						var pos2 = y * this.get_width() * 4 + x * 4 + 1;
						rgbaBytes.b[pos2] = value & 255;
						var pos3 = y * this.get_width() * 4 + x * 4 + 2;
						rgbaBytes.b[pos3] = value & 255;
						var pos4 = y * this.get_width() * 4 + x * 4 + 3;
						rgbaBytes.b[pos4] = 255;
					}
				}
				kha_SystemImpl.gl.texImage2D(3553,0,6408,this.get_width(),this.get_height(),0,6408,5121,new Uint8Array(rgbaBytes.b.bufferValue));
			}
			kha_SystemImpl.gl.bindTexture(3553,null);
			this.bytes = null;
		}
	}
	,unload: function() {
		this.image = null;
		this.video = null;
		this.data = null;
	}
	,__class__: kha_CanvasImage
});
var kha__$Color_Color_$Impl_$ = $hx_exports["kha"]["_Color"]["Color_Impl_"] = {};
$hxClasses["kha._Color.Color_Impl_"] = kha__$Color_Color_$Impl_$;
kha__$Color_Color_$Impl_$.__name__ = ["kha","_Color","Color_Impl_"];
kha__$Color_Color_$Impl_$.__properties__ = {set_value:"set_value",get_value:"get_value",set_A:"set_A",get_A:"get_A",set_B:"set_B",get_B:"get_B",set_G:"set_G",get_G:"get_G",set_R:"set_R",get_R:"get_R",set_Ab:"set_Ab",get_Ab:"get_Ab",set_Bb:"set_Bb",get_Bb:"get_Bb",set_Gb:"set_Gb",get_Gb:"get_Gb",set_Rb:"set_Rb",get_Rb:"get_Rb"};
kha__$Color_Color_$Impl_$.fromValue = function(value) {
	return kha__$Color_Color_$Impl_$._new(value);
};
kha__$Color_Color_$Impl_$.fromBytes = function(r,g,b,a) {
	if(a == null) {
		a = 255;
	}
	return kha__$Color_Color_$Impl_$._new(a << 24 | r << 16 | g << 8 | b);
};
kha__$Color_Color_$Impl_$.fromFloats = function(r,g,b,a) {
	if(a == null) {
		a = 1;
	}
	return kha__$Color_Color_$Impl_$._new((a * 255 | 0) << 24 | (r * 255 | 0) << 16 | (g * 255 | 0) << 8 | (b * 255 | 0));
};
kha__$Color_Color_$Impl_$.fromString = function(value) {
	if((value.length == 7 || value.length == 9) && value.charCodeAt(0) == 35) {
		var colorValue = Std.parseInt("0x" + HxOverrides.substr(value,1,null));
		if(value.length == 7) {
			colorValue += -16777216;
		}
		return kha__$Color_Color_$Impl_$._new(colorValue);
	} else {
		throw new js__$Boot_HaxeError("Invalid Color string: '" + value + "'");
	}
};
kha__$Color_Color_$Impl_$._new = function(value) {
	var this1 = value;
	return this1;
};
kha__$Color_Color_$Impl_$.get_value = function(this1) {
	return this1;
};
kha__$Color_Color_$Impl_$.set_value = function(this1,value) {
	this1 = value;
	return this1;
};
kha__$Color_Color_$Impl_$.get_Rb = function(this1) {
	return (this1 & 16711680) >>> 16;
};
kha__$Color_Color_$Impl_$.get_Gb = function(this1) {
	return (this1 & 65280) >>> 8;
};
kha__$Color_Color_$Impl_$.get_Bb = function(this1) {
	return this1 & 255;
};
kha__$Color_Color_$Impl_$.get_Ab = function(this1) {
	return this1 >>> 24;
};
kha__$Color_Color_$Impl_$.set_Rb = function(this1,i) {
	this1 = this1 >>> 24 << 24 | i << 16 | (this1 & 65280) >>> 8 << 8 | this1 & 255;
	return i;
};
kha__$Color_Color_$Impl_$.set_Gb = function(this1,i) {
	this1 = this1 >>> 24 << 24 | (this1 & 16711680) >>> 16 << 16 | i << 8 | this1 & 255;
	return i;
};
kha__$Color_Color_$Impl_$.set_Bb = function(this1,i) {
	this1 = this1 >>> 24 << 24 | (this1 & 16711680) >>> 16 << 16 | (this1 & 65280) >>> 8 << 8 | i;
	return i;
};
kha__$Color_Color_$Impl_$.set_Ab = function(this1,i) {
	this1 = i << 24 | (this1 & 16711680) >>> 16 << 16 | (this1 & 65280) >>> 8 << 8 | this1 & 255;
	return i;
};
kha__$Color_Color_$Impl_$.get_R = function(this1) {
	return ((this1 & 16711680) >>> 16) * 0.00392156862745098;
};
kha__$Color_Color_$Impl_$.get_G = function(this1) {
	return ((this1 & 65280) >>> 8) * 0.00392156862745098;
};
kha__$Color_Color_$Impl_$.get_B = function(this1) {
	return (this1 & 255) * 0.00392156862745098;
};
kha__$Color_Color_$Impl_$.get_A = function(this1) {
	return (this1 >>> 24) * 0.00392156862745098;
};
kha__$Color_Color_$Impl_$.set_R = function(this1,f) {
	this1 = ((this1 >>> 24) * 0.00392156862745098 * 255 | 0) << 24 | (f * 255 | 0) << 16 | (((this1 & 65280) >>> 8) * 0.00392156862745098 * 255 | 0) << 8 | ((this1 & 255) * 0.00392156862745098 * 255 | 0);
	return f;
};
kha__$Color_Color_$Impl_$.set_G = function(this1,f) {
	this1 = ((this1 >>> 24) * 0.00392156862745098 * 255 | 0) << 24 | (((this1 & 16711680) >>> 16) * 0.00392156862745098 * 255 | 0) << 16 | (f * 255 | 0) << 8 | ((this1 & 255) * 0.00392156862745098 * 255 | 0);
	return f;
};
kha__$Color_Color_$Impl_$.set_B = function(this1,f) {
	this1 = ((this1 >>> 24) * 0.00392156862745098 * 255 | 0) << 24 | (((this1 & 16711680) >>> 16) * 0.00392156862745098 * 255 | 0) << 16 | (((this1 & 65280) >>> 8) * 0.00392156862745098 * 255 | 0) << 8 | (f * 255 | 0);
	return f;
};
kha__$Color_Color_$Impl_$.set_A = function(this1,f) {
	this1 = (f * 255 | 0) << 24 | (((this1 & 16711680) >>> 16) * 0.00392156862745098 * 255 | 0) << 16 | (((this1 & 65280) >>> 8) * 0.00392156862745098 * 255 | 0) << 8 | ((this1 & 255) * 0.00392156862745098 * 255 | 0);
	return f;
};
var kha_CompilerDefines = function() { };
$hxClasses["kha.CompilerDefines"] = kha_CompilerDefines;
kha_CompilerDefines.__name__ = ["kha","CompilerDefines"];
var kha_EnvironmentVariables = function() {
};
$hxClasses["kha.EnvironmentVariables"] = kha_EnvironmentVariables;
kha_EnvironmentVariables.__name__ = ["kha","EnvironmentVariables"];
kha_EnvironmentVariables.prototype = {
	getVariable: function(name) {
		return "";
	}
	,__class__: kha_EnvironmentVariables
};
var kha_Font = function() { };
$hxClasses["kha.Font"] = kha_Font;
kha_Font.__name__ = ["kha","Font"];
kha_Font.__interfaces__ = [kha_Resource];
kha_Font.prototype = {
	__class__: kha_Font
};
var kha_FontStyle = function(bold,italic,underlined) {
	this.bold = bold;
	this.italic = italic;
	this.underlined = underlined;
};
$hxClasses["kha.FontStyle"] = kha_FontStyle;
kha_FontStyle.__name__ = ["kha","FontStyle"];
kha_FontStyle.prototype = {
	getBold: function() {
		return this.bold;
	}
	,getItalic: function() {
		return this.italic;
	}
	,getUnderlined: function() {
		return this.underlined;
	}
	,__class__: kha_FontStyle
};
var kha_Framebuffer = function(windowId,g1,g2,g4) {
	this.windowId = windowId;
	this.graphics1 = g1;
	this.graphics2 = g2;
	this.graphics4 = g4;
};
$hxClasses["kha.Framebuffer"] = kha_Framebuffer;
kha_Framebuffer.__name__ = ["kha","Framebuffer"];
kha_Framebuffer.__interfaces__ = [kha_Canvas];
kha_Framebuffer.prototype = {
	init: function(g1,g2,g4) {
		this.graphics1 = g1;
		this.graphics2 = g2;
		this.graphics4 = g4;
	}
	,get_g1: function() {
		return this.graphics1;
	}
	,get_g2: function() {
		return this.graphics2;
	}
	,get_g4: function() {
		return this.graphics4;
	}
	,get_width: function() {
		return kha_System.windowWidth(this.windowId);
	}
	,get_height: function() {
		return kha_System.windowHeight(this.windowId);
	}
	,__class__: kha_Framebuffer
	,__properties__: {get_height:"get_height",get_width:"get_width",get_g4:"get_g4",get_g2:"get_g2",get_g1:"get_g1"}
};
var kha_Key = $hxClasses["kha.Key"] = { __ename__ : true, __constructs__ : ["BACKSPACE","TAB","ENTER","SHIFT","CTRL","ALT","CHAR","ESC","DEL","UP","DOWN","LEFT","RIGHT","BACK"] };
kha_Key.BACKSPACE = ["BACKSPACE",0];
kha_Key.BACKSPACE.toString = $estr;
kha_Key.BACKSPACE.__enum__ = kha_Key;
kha_Key.TAB = ["TAB",1];
kha_Key.TAB.toString = $estr;
kha_Key.TAB.__enum__ = kha_Key;
kha_Key.ENTER = ["ENTER",2];
kha_Key.ENTER.toString = $estr;
kha_Key.ENTER.__enum__ = kha_Key;
kha_Key.SHIFT = ["SHIFT",3];
kha_Key.SHIFT.toString = $estr;
kha_Key.SHIFT.__enum__ = kha_Key;
kha_Key.CTRL = ["CTRL",4];
kha_Key.CTRL.toString = $estr;
kha_Key.CTRL.__enum__ = kha_Key;
kha_Key.ALT = ["ALT",5];
kha_Key.ALT.toString = $estr;
kha_Key.ALT.__enum__ = kha_Key;
kha_Key.CHAR = ["CHAR",6];
kha_Key.CHAR.toString = $estr;
kha_Key.CHAR.__enum__ = kha_Key;
kha_Key.ESC = ["ESC",7];
kha_Key.ESC.toString = $estr;
kha_Key.ESC.__enum__ = kha_Key;
kha_Key.DEL = ["DEL",8];
kha_Key.DEL.toString = $estr;
kha_Key.DEL.__enum__ = kha_Key;
kha_Key.UP = ["UP",9];
kha_Key.UP.toString = $estr;
kha_Key.UP.__enum__ = kha_Key;
kha_Key.DOWN = ["DOWN",10];
kha_Key.DOWN.toString = $estr;
kha_Key.DOWN.__enum__ = kha_Key;
kha_Key.LEFT = ["LEFT",11];
kha_Key.LEFT.toString = $estr;
kha_Key.LEFT.__enum__ = kha_Key;
kha_Key.RIGHT = ["RIGHT",12];
kha_Key.RIGHT.toString = $estr;
kha_Key.RIGHT.__enum__ = kha_Key;
kha_Key.BACK = ["BACK",13];
kha_Key.BACK.toString = $estr;
kha_Key.BACK.__enum__ = kha_Key;
var kha_AlignedQuad = function() {
};
$hxClasses["kha.AlignedQuad"] = kha_AlignedQuad;
kha_AlignedQuad.__name__ = ["kha","AlignedQuad"];
kha_AlignedQuad.prototype = {
	__class__: kha_AlignedQuad
};
var kha_KravurImage = function(size,ascent,descent,lineGap,width,height,chars,pixels) {
	this.mySize = size;
	this.width = width;
	this.height = height;
	this.chars = chars;
	this.baseline = ascent;
	var _g = 0;
	while(_g < chars.length) {
		var $char = chars[_g];
		++_g;
		$char.yoff += this.baseline;
	}
	this.texture = kha_Image.create(width,height,kha_graphics4_TextureFormat.L8);
	var bytes = this.texture.lock();
	var pos = 0;
	var _g1 = 0;
	var _g2 = height;
	while(_g1 < _g2) {
		var y = _g1++;
		var _g3 = 0;
		var _g21 = width;
		while(_g3 < _g21) {
			var x = _g3++;
			var v = pixels.readU8(pos);
			bytes.b[pos] = v & 255;
			++pos;
		}
	}
	this.texture.unlock();
};
$hxClasses["kha.KravurImage"] = kha_KravurImage;
kha_KravurImage.__name__ = ["kha","KravurImage"];
kha_KravurImage.prototype = {
	getTexture: function() {
		return this.texture;
	}
	,getBakedQuad: function(char_index,xpos,ypos) {
		if(char_index >= this.chars.length) {
			return null;
		}
		var ipw = 1.0 / this.width;
		var iph = 1.0 / this.height;
		var b = this.chars[char_index];
		if(b == null) {
			return null;
		}
		var round_x = Math.round(xpos + b.xoff);
		var round_y = Math.round(ypos + b.yoff);
		var q = new kha_AlignedQuad();
		q.x0 = round_x;
		q.y0 = round_y;
		q.x1 = round_x + b.x1 - b.x0;
		q.y1 = round_y + b.y1 - b.y0;
		q.s0 = b.x0 * ipw;
		q.t0 = b.y0 * iph;
		q.s1 = b.x1 * ipw;
		q.t1 = b.y1 * iph;
		q.xadvance = b.xadvance;
		return q;
	}
	,getCharWidth: function(charIndex) {
		if(charIndex < 32) {
			return 0;
		}
		if(charIndex - 32 >= this.chars.length) {
			return 0;
		}
		return this.chars[charIndex - 32].xadvance;
	}
	,getHeight: function() {
		return this.mySize;
	}
	,stringWidth: function(string) {
		var str = new String(string);
		var width = 0;
		var _g1 = 0;
		var _g = str.length;
		while(_g1 < _g) {
			var c = _g1++;
			width += this.getCharWidth(HxOverrides.cca(str,c));
		}
		return width;
	}
	,getBaselinePosition: function() {
		return this.baseline;
	}
	,__class__: kha_KravurImage
};
var kha_Kravur = function(blob) {
	this.images = new haxe_ds_IntMap();
	this.blob = blob;
};
$hxClasses["kha.Kravur"] = kha_Kravur;
kha_Kravur.__name__ = ["kha","Kravur"];
kha_Kravur.__interfaces__ = [kha_Font];
kha_Kravur.prototype = {
	_get: function(fontSize,glyphs) {
		if(!this.images.h.hasOwnProperty(fontSize)) {
			if(glyphs == null) {
				glyphs = [];
				var _g = 32;
				while(_g < 256) {
					var i = _g++;
					glyphs.push(i);
				}
			}
			var width = 64;
			var height = 32;
			var length = glyphs.length;
			var this1 = new Array(length);
			var baked = this1;
			var _g1 = 0;
			var _g2 = baked.length;
			while(_g1 < _g2) {
				var i1 = _g1++;
				baked[i1] = new kha_graphics2_truetype_Stbtt_$bakedchar();
			}
			var pixels = null;
			var status = -1;
			while(status < 0) {
				if(height < width) {
					height *= 2;
				} else {
					width *= 2;
				}
				pixels = kha_internal_BytesBlob.alloc(width * height);
				status = kha_graphics2_truetype_StbTruetype.stbtt_BakeFontBitmap(this.blob,0,fontSize,pixels,width,height,glyphs,baked);
			}
			var info = new kha_graphics2_truetype_Stbtt_$fontinfo();
			kha_graphics2_truetype_StbTruetype.stbtt_InitFont(info,this.blob,0);
			var metrics = kha_graphics2_truetype_StbTruetype.stbtt_GetFontVMetrics(info);
			var scale = kha_graphics2_truetype_StbTruetype.stbtt_ScaleForPixelHeight(info,fontSize);
			var ascent = Math.round(metrics.ascent * scale);
			var descent = Math.round(metrics.descent * scale);
			var lineGap = Math.round(metrics.lineGap * scale);
			var image = new kha_KravurImage(fontSize | 0,ascent,descent,lineGap,width,height,baked,pixels);
			this.images.h[fontSize] = image;
			return image;
		}
		return this.images.h[fontSize];
	}
	,height: function(fontSize) {
		return this._get(fontSize).getHeight();
	}
	,width: function(fontSize,str) {
		return this._get(fontSize).stringWidth(str);
	}
	,baseline: function(fontSize) {
		return this._get(fontSize).getBaselinePosition();
	}
	,unload: function() {
		this.blob = null;
		this.images = null;
	}
	,__class__: kha_Kravur
};
var kha_LoaderImpl = function() { };
$hxClasses["kha.LoaderImpl"] = kha_LoaderImpl;
kha_LoaderImpl.__name__ = ["kha","LoaderImpl"];
kha_LoaderImpl.getImageFormats = function() {
	return ["png","jpg","hdr"];
};
kha_LoaderImpl.loadImageFromDescription = function(desc,done) {
	var readable = Object.prototype.hasOwnProperty.call(desc,"readable") && desc.readable;
	if(StringTools.endsWith(desc.files[0],".hdr")) {
		kha_LoaderImpl.loadBlobFromDescription(desc,function(blob) {
			var hdrImage = kha_internal_HdrFormat.parse(blob.toBytes());
			var tmp = kha_Image.fromBytes(haxe_io_Bytes.ofData(hdrImage.data.buffer),hdrImage.width,hdrImage.height,kha_graphics4_TextureFormat.RGBA128,readable ? kha_graphics4_Usage.DynamicUsage : kha_graphics4_Usage.StaticUsage);
			done(tmp);
		});
	} else {
		var img = window.document.createElement("img");
		img.onload = function(event) {
			var tmp1 = kha_Image.fromImage(img,readable);
			done(tmp1);
		};
		img.src = desc.files[0];
		img.crossOrigin = "";
	}
};
kha_LoaderImpl.getSoundFormats = function() {
	var element = window.document.createElement("audio");
	var formats = [];
	if(element.canPlayType("audio/mp4") != "") {
		formats.push("mp4");
	}
	if(kha_SystemImpl._hasWebAudio || element.canPlayType("audio/ogg") != "") {
		formats.push("ogg");
	}
	return formats;
};
kha_LoaderImpl.loadSoundFromDescription = function(desc,done) {
	if(kha_SystemImpl._hasWebAudio) {
		var element = window.document.createElement("audio");
		if(element.canPlayType("audio/mp4") != "") {
			var _g1 = 0;
			var _g = desc.files.length;
			while(_g1 < _g) {
				var i = _g1++;
				var file = desc.files[i];
				if(StringTools.endsWith(file,".mp4")) {
					new kha_js_WebAudioSound(file,done);
					return;
				}
			}
		}
		var _g11 = 0;
		var _g2 = desc.files.length;
		while(_g11 < _g2) {
			var i1 = _g11++;
			var file1 = desc.files[i1];
			if(StringTools.endsWith(file1,".ogg")) {
				new kha_js_WebAudioSound(file1,done);
				return;
			}
		}
	} else if(kha_SystemImpl.mobile) {
		var element1 = window.document.createElement("audio");
		if(element1.canPlayType("audio/mp4") != "") {
			var _g12 = 0;
			var _g3 = desc.files.length;
			while(_g12 < _g3) {
				var i2 = _g12++;
				var file2 = desc.files[i2];
				if(StringTools.endsWith(file2,".mp4")) {
					new kha_js_MobileWebAudioSound(file2,done);
					return;
				}
			}
		}
		var _g13 = 0;
		var _g4 = desc.files.length;
		while(_g13 < _g4) {
			var i3 = _g13++;
			var file3 = desc.files[i3];
			if(StringTools.endsWith(file3,".ogg")) {
				new kha_js_MobileWebAudioSound(file3,done);
				return;
			}
		}
	} else {
		new kha_js_Sound(desc.files,done);
	}
};
kha_LoaderImpl.getVideoFormats = function() {
	return ["mp4","webm"];
};
kha_LoaderImpl.loadVideoFromDescription = function(desc,done) {
	var video = new kha_js_Video(desc.files,done);
};
kha_LoaderImpl.loadBlobFromDescription = function(desc,done) {
	var request = new XMLHttpRequest();
	request.open("GET",desc.files[0],true);
	request.responseType = "arraybuffer";
	request.onreadystatechange = function() {
		if(request.readyState != 4) {
			return;
		}
		if(request.status >= 200 && request.status < 400 || request.status == 0 && request.statusText == "") {
			var bytes = null;
			var arrayBuffer = request.response;
			if(arrayBuffer != null) {
				var byteArray = new Uint8Array(arrayBuffer);
				bytes = new haxe_io_Bytes(new ArrayBuffer(byteArray.byteLength));
				var _g1 = 0;
				var _g = byteArray.byteLength;
				while(_g1 < _g) {
					var i = _g1++;
					bytes.b[i] = byteArray[i] & 255;
				}
			} else if(request.responseBody != null) {
				var data = VBArray(request.responseBody).toArray();
				bytes = new haxe_io_Bytes(new ArrayBuffer(data.length));
				var _g11 = 0;
				var _g2 = data.length;
				while(_g11 < _g2) {
					var i1 = _g11++;
					bytes.b[i1] = data[i1] & 255;
				}
			} else {
				haxe_Log.trace("Error loading " + desc.files[0],{ fileName : "LoaderImpl.hx", lineNumber : 145, className : "kha.LoaderImpl", methodName : "loadBlobFromDescription"});
				window.console.log("loadBlob failed");
			}
			done(new kha_internal_BytesBlob(bytes));
		} else {
			haxe_Log.trace("Error loading " + desc.files[0],{ fileName : "LoaderImpl.hx", lineNumber : 151, className : "kha.LoaderImpl", methodName : "loadBlobFromDescription"});
			window.console.log("loadBlob failed");
		}
	};
	request.send(null);
};
kha_LoaderImpl.loadFontFromDescription = function(desc,done) {
	kha_LoaderImpl.loadBlobFromDescription(desc,function(blob) {
		if(kha_SystemImpl.gl == null) {
			done(new kha_js_Font(new kha_Kravur(blob)));
		} else {
			done(new kha_Kravur(blob));
		}
	});
};
var kha_Rotation = function(center,angle) {
	this.center = center;
	this.angle = angle;
};
$hxClasses["kha.Rotation"] = kha_Rotation;
kha_Rotation.__name__ = ["kha","Rotation"];
kha_Rotation.prototype = {
	__class__: kha_Rotation
};
var kha_TimeTask = function() {
};
$hxClasses["kha.TimeTask"] = kha_TimeTask;
kha_TimeTask.__name__ = ["kha","TimeTask"];
kha_TimeTask.prototype = {
	__class__: kha_TimeTask
};
var kha_FrameTask = function(task,priority,id) {
	this.task = task;
	this.priority = priority;
	this.id = id;
	this.active = true;
	this.paused = false;
};
$hxClasses["kha.FrameTask"] = kha_FrameTask;
kha_FrameTask.__name__ = ["kha","FrameTask"];
kha_FrameTask.prototype = {
	__class__: kha_FrameTask
};
var kha_Scheduler = function() { };
$hxClasses["kha.Scheduler"] = kha_Scheduler;
kha_Scheduler.__name__ = ["kha","Scheduler"];
kha_Scheduler.init = function() {
	kha_Scheduler.deltas = [];
	var _g1 = 0;
	var _g = kha_Scheduler.DIF_COUNT;
	while(_g1 < _g) {
		var i = _g1++;
		kha_Scheduler.deltas[i] = 0;
	}
	kha_Scheduler.stopped = true;
	kha_Scheduler.frame_tasks_sorted = true;
	kha_Scheduler.current = kha_Scheduler.realTime();
	kha_Scheduler.lastTime = kha_Scheduler.realTime();
	kha_Scheduler.currentFrameTaskId = 0;
	kha_Scheduler.currentTimeTaskId = 0;
	kha_Scheduler.currentGroupId = 0;
	kha_Scheduler.timeTasks = [];
	kha_Scheduler.pausedTimeTasks = [];
	kha_Scheduler.outdatedTimeTasks = [];
	kha_Scheduler.timeTasksScratchpad = [];
	kha_Scheduler.frameTasks = [];
	kha_Scheduler.toDeleteFrame = [];
};
kha_Scheduler.start = function(restartTimers) {
	if(restartTimers == null) {
		restartTimers = false;
	}
	kha_Scheduler.vsync = kha_System.get_vsync();
	var hz = kha_System.get_refreshRate();
	if(hz >= 57 && hz <= 63) {
		hz = 60;
	}
	kha_Scheduler.onedifhz = 1.0 / hz;
	kha_Scheduler.stopped = false;
	kha_Scheduler.resetTime();
	kha_Scheduler.lastTime = kha_Scheduler.realTime() - kha_Scheduler.startTime;
	var _g1 = 0;
	var _g = kha_Scheduler.DIF_COUNT;
	while(_g1 < _g) {
		var i = _g1++;
		kha_Scheduler.deltas[i] = 0;
	}
	if(restartTimers) {
		var _g2 = 0;
		var _g11 = kha_Scheduler.timeTasks;
		while(_g2 < _g11.length) {
			var timeTask = _g11[_g2];
			++_g2;
			timeTask.paused = false;
		}
		var _g3 = 0;
		var _g12 = kha_Scheduler.frameTasks;
		while(_g3 < _g12.length) {
			var frameTask = _g12[_g3];
			++_g3;
			frameTask.paused = false;
		}
	}
};
kha_Scheduler.stop = function() {
	kha_Scheduler.stopped = true;
};
kha_Scheduler.isStopped = function() {
	return kha_Scheduler.stopped;
};
kha_Scheduler.warpTimeTasks = function(time,tasks) {
	var _g = 0;
	while(_g < tasks.length) {
		var timeTask = tasks[_g];
		++_g;
		if(timeTask.start >= time) {
			timeTask.next = timeTask.start;
		} else if(timeTask.period > 0) {
			var sinceStart = time - timeTask.start;
			var times = Math.ceil(sinceStart / timeTask.period);
			timeTask.next = timeTask.start + times * timeTask.period;
		}
	}
};
kha_Scheduler.back = function(time) {
	if(time >= kha_Scheduler.lastTime) {
		return;
	}
	kha_Scheduler.current = time;
	kha_Scheduler.lastTime = time;
	kha_Scheduler.warpTimeTasks(time,kha_Scheduler.outdatedTimeTasks);
	kha_Scheduler.warpTimeTasks(time,kha_Scheduler.timeTasks);
	var _g = 0;
	var _g1 = kha_Scheduler.outdatedTimeTasks;
	while(_g < _g1.length) {
		var task = _g1[_g];
		++_g;
		if(task.next >= time) {
			kha_Scheduler.timeTasksScratchpad.push(task);
		}
	}
	var _g2 = 0;
	var _g11 = kha_Scheduler.timeTasksScratchpad;
	while(_g2 < _g11.length) {
		var task1 = _g11[_g2];
		++_g2;
		HxOverrides.remove(kha_Scheduler.outdatedTimeTasks,task1);
	}
	var _g3 = 0;
	var _g12 = kha_Scheduler.timeTasksScratchpad;
	while(_g3 < _g12.length) {
		var task2 = _g12[_g3];
		++_g3;
		kha_Scheduler.insertSorted(kha_Scheduler.timeTasks,task2);
	}
	while(kha_Scheduler.timeTasksScratchpad.length > 0) HxOverrides.remove(kha_Scheduler.timeTasksScratchpad,kha_Scheduler.timeTasksScratchpad[0]);
	var _g4 = 0;
	var _g13 = kha_Scheduler.outdatedTimeTasks;
	while(_g4 < _g13.length) {
		var task3 = _g13[_g4];
		++_g4;
		if(task3.next < time - 1.0) {
			kha_Scheduler.timeTasksScratchpad.push(task3);
		}
	}
	var _g5 = 0;
	var _g14 = kha_Scheduler.timeTasksScratchpad;
	while(_g5 < _g14.length) {
		var task4 = _g14[_g5];
		++_g5;
		HxOverrides.remove(kha_Scheduler.outdatedTimeTasks,task4);
	}
	while(kha_Scheduler.timeTasksScratchpad.length > 0) HxOverrides.remove(kha_Scheduler.timeTasksScratchpad,kha_Scheduler.timeTasksScratchpad[0]);
};
kha_Scheduler.executeFrame = function() {
	var now = kha_Scheduler.realTime() - kha_Scheduler.startTime;
	var delta = now - kha_Scheduler.lastTime;
	var frameEnd = kha_Scheduler.current;
	if(delta < 0) {
		return;
	}
	if(delta > kha_Scheduler.maxframetime) {
		kha_Scheduler.startTime += delta - kha_Scheduler.maxframetime;
		delta = kha_Scheduler.maxframetime;
		frameEnd += delta;
	} else if(kha_Scheduler.vsync) {
		var realdif = kha_Scheduler.onedifhz;
		while(realdif < delta - kha_Scheduler.onedifhz) realdif += kha_Scheduler.onedifhz;
		delta = realdif;
		var _g1 = 0;
		var _g = kha_Scheduler.DIF_COUNT - 2;
		while(_g1 < _g) {
			var i = _g1++;
			delta += kha_Scheduler.deltas[i];
			kha_Scheduler.deltas[i] = kha_Scheduler.deltas[i + 1];
		}
		delta += kha_Scheduler.deltas[kha_Scheduler.DIF_COUNT - 2];
		delta /= kha_Scheduler.DIF_COUNT;
		kha_Scheduler.deltas[kha_Scheduler.DIF_COUNT - 2] = realdif;
		frameEnd += delta;
	} else {
		var _g11 = 0;
		var _g2 = kha_Scheduler.DIF_COUNT - 1;
		while(_g11 < _g2) {
			var i1 = _g11++;
			kha_Scheduler.deltas[i1] = kha_Scheduler.deltas[i1 + 1];
		}
		kha_Scheduler.deltas[kha_Scheduler.DIF_COUNT - 1] = delta;
		var next = 0;
		var _g12 = 0;
		var _g3 = kha_Scheduler.DIF_COUNT;
		while(_g12 < _g3) {
			var i2 = _g12++;
			next += kha_Scheduler.deltas[i2];
		}
		next /= kha_Scheduler.DIF_COUNT;
		frameEnd += next;
	}
	kha_Scheduler.lastTime = frameEnd;
	if(!kha_Scheduler.stopped) {
		kha_Scheduler.current = frameEnd;
	}
	var _g4 = 0;
	var _g13 = kha_Scheduler.pausedTimeTasks;
	while(_g4 < _g13.length) {
		var pausedTask = _g13[_g4];
		++_g4;
		pausedTask.next += delta;
	}
	if(kha_Scheduler.stopped) {
		var _g5 = 0;
		var _g14 = kha_Scheduler.timeTasks;
		while(_g5 < _g14.length) {
			var timeTask = _g14[_g5];
			++_g5;
			timeTask.next += delta;
		}
	}
	while(kha_Scheduler.timeTasks.length > 0) {
		kha_Scheduler.activeTimeTask = kha_Scheduler.timeTasks[0];
		if(kha_Scheduler.activeTimeTask.next <= frameEnd) {
			kha_Scheduler.activeTimeTask.next += kha_Scheduler.activeTimeTask.period;
			HxOverrides.remove(kha_Scheduler.timeTasks,kha_Scheduler.activeTimeTask);
			if(kha_Scheduler.activeTimeTask.active && kha_Scheduler.activeTimeTask.task()) {
				if(kha_Scheduler.activeTimeTask.period > 0 && (kha_Scheduler.activeTimeTask.duration == 0 || kha_Scheduler.activeTimeTask.duration >= kha_Scheduler.activeTimeTask.start + kha_Scheduler.activeTimeTask.next)) {
					kha_Scheduler.insertSorted(kha_Scheduler.timeTasks,kha_Scheduler.activeTimeTask);
				} else {
					kha_Scheduler.archiveTimeTask(kha_Scheduler.activeTimeTask,frameEnd);
				}
			} else {
				kha_Scheduler.activeTimeTask.active = false;
				kha_Scheduler.archiveTimeTask(kha_Scheduler.activeTimeTask,frameEnd);
			}
		} else {
			break;
		}
	}
	kha_Scheduler.activeTimeTask = null;
	kha_Scheduler.sortFrameTasks();
	var _g6 = 0;
	var _g15 = kha_Scheduler.frameTasks;
	while(_g6 < _g15.length) {
		var frameTask = _g15[_g6];
		++_g6;
		if(!kha_Scheduler.stopped && !frameTask.paused && frameTask.active) {
			if(!frameTask.task()) {
				frameTask.active = false;
			}
		}
	}
	var _g7 = 0;
	var _g16 = kha_Scheduler.frameTasks;
	while(_g7 < _g16.length) {
		var frameTask1 = _g16[_g7];
		++_g7;
		if(!frameTask1.active) {
			kha_Scheduler.toDeleteFrame.push(frameTask1);
		}
	}
	while(kha_Scheduler.toDeleteFrame.length > 0) HxOverrides.remove(kha_Scheduler.frameTasks,kha_Scheduler.toDeleteFrame.pop());
};
kha_Scheduler.archiveTimeTask = function(timeTask,frameEnd) {
};
kha_Scheduler.time = function() {
	return kha_Scheduler.current;
};
kha_Scheduler.realTime = function() {
	return kha_System.get_time();
};
kha_Scheduler.resetTime = function() {
	var now = kha_System.get_time();
	var dif = now - kha_Scheduler.startTime;
	kha_Scheduler.startTime = now;
	var _g = 0;
	var _g1 = kha_Scheduler.timeTasks;
	while(_g < _g1.length) {
		var timeTask = _g1[_g];
		++_g;
		timeTask.start -= dif;
		timeTask.next -= dif;
	}
	var _g11 = 0;
	var _g2 = kha_Scheduler.DIF_COUNT;
	while(_g11 < _g2) {
		var i = _g11++;
		kha_Scheduler.deltas[i] = 0;
	}
	kha_Scheduler.current = 0;
	kha_Scheduler.lastTime = 0;
};
kha_Scheduler.addBreakableFrameTask = function(task,priority) {
	kha_Scheduler.frameTasks.push(new kha_FrameTask(task,priority,++kha_Scheduler.currentFrameTaskId));
	kha_Scheduler.frame_tasks_sorted = false;
	return kha_Scheduler.currentFrameTaskId;
};
kha_Scheduler.addFrameTask = function(task,priority) {
	return kha_Scheduler.addBreakableFrameTask(function() {
		task();
		return true;
	},priority);
};
kha_Scheduler.pauseFrameTask = function(id,paused) {
	var _g = 0;
	var _g1 = kha_Scheduler.frameTasks;
	while(_g < _g1.length) {
		var frameTask = _g1[_g];
		++_g;
		if(frameTask.id == id) {
			frameTask.paused = paused;
			break;
		}
	}
};
kha_Scheduler.removeFrameTask = function(id) {
	var _g = 0;
	var _g1 = kha_Scheduler.frameTasks;
	while(_g < _g1.length) {
		var frameTask = _g1[_g];
		++_g;
		if(frameTask.id == id) {
			frameTask.active = false;
			break;
		}
	}
};
kha_Scheduler.generateGroupId = function() {
	return ++kha_Scheduler.currentGroupId;
};
kha_Scheduler.addBreakableTimeTaskToGroup = function(groupId,task,start,period,duration) {
	if(duration == null) {
		duration = 0;
	}
	if(period == null) {
		period = 0;
	}
	var t = new kha_TimeTask();
	t.active = true;
	t.task = task;
	t.id = ++kha_Scheduler.currentTimeTaskId;
	t.groupId = groupId;
	t.start = kha_Scheduler.current + start;
	t.period = 0;
	if(period != 0) {
		t.period = period;
	}
	t.duration = 0;
	if(duration != 0) {
		t.duration = t.start + duration;
	}
	t.next = t.start;
	kha_Scheduler.insertSorted(kha_Scheduler.timeTasks,t);
	return t.id;
};
kha_Scheduler.addTimeTaskToGroup = function(groupId,task,start,period,duration) {
	if(duration == null) {
		duration = 0;
	}
	if(period == null) {
		period = 0;
	}
	return kha_Scheduler.addBreakableTimeTaskToGroup(groupId,function() {
		task();
		return true;
	},start,period,duration);
};
kha_Scheduler.addBreakableTimeTask = function(task,start,period,duration) {
	if(duration == null) {
		duration = 0;
	}
	if(period == null) {
		period = 0;
	}
	return kha_Scheduler.addBreakableTimeTaskToGroup(0,task,start,period,duration);
};
kha_Scheduler.addTimeTask = function(task,start,period,duration) {
	if(duration == null) {
		duration = 0;
	}
	if(period == null) {
		period = 0;
	}
	return kha_Scheduler.addTimeTaskToGroup(0,task,start,period,duration);
};
kha_Scheduler.getTimeTask = function(id) {
	if(kha_Scheduler.activeTimeTask != null && kha_Scheduler.activeTimeTask.id == id) {
		return kha_Scheduler.activeTimeTask;
	}
	var _g = 0;
	var _g1 = kha_Scheduler.timeTasks;
	while(_g < _g1.length) {
		var timeTask = _g1[_g];
		++_g;
		if(timeTask.id == id) {
			return timeTask;
		}
	}
	var _g2 = 0;
	var _g11 = kha_Scheduler.pausedTimeTasks;
	while(_g2 < _g11.length) {
		var timeTask1 = _g11[_g2];
		++_g2;
		if(timeTask1.id == id) {
			return timeTask1;
		}
	}
	return null;
};
kha_Scheduler.pauseTimeTask = function(id,paused) {
	var timeTask = kha_Scheduler.getTimeTask(id);
	if(timeTask != null) {
		kha_Scheduler.pauseRunningTimeTask(timeTask,paused);
	}
	if(kha_Scheduler.activeTimeTask != null && kha_Scheduler.activeTimeTask.id == id) {
		kha_Scheduler.activeTimeTask.paused = paused;
	}
};
kha_Scheduler.pauseRunningTimeTask = function(timeTask,paused) {
	timeTask.paused = paused;
	if(paused) {
		HxOverrides.remove(kha_Scheduler.timeTasks,timeTask);
		kha_Scheduler.pausedTimeTasks.push(timeTask);
	} else {
		kha_Scheduler.insertSorted(kha_Scheduler.timeTasks,timeTask);
		HxOverrides.remove(kha_Scheduler.pausedTimeTasks,timeTask);
	}
};
kha_Scheduler.pauseTimeTasks = function(groupId,paused) {
	var _g = 0;
	var _g1 = kha_Scheduler.timeTasks;
	while(_g < _g1.length) {
		var timeTask = _g1[_g];
		++_g;
		if(timeTask.groupId == groupId) {
			kha_Scheduler.pauseRunningTimeTask(timeTask,paused);
		}
	}
	if(kha_Scheduler.activeTimeTask != null && kha_Scheduler.activeTimeTask.groupId == groupId) {
		kha_Scheduler.activeTimeTask.paused = paused;
	}
};
kha_Scheduler.removeTimeTask = function(id) {
	var timeTask = kha_Scheduler.getTimeTask(id);
	if(timeTask != null) {
		timeTask.active = false;
		HxOverrides.remove(kha_Scheduler.timeTasks,timeTask);
	}
};
kha_Scheduler.removeTimeTasks = function(groupId) {
	var _g = 0;
	var _g1 = kha_Scheduler.timeTasks;
	while(_g < _g1.length) {
		var timeTask = _g1[_g];
		++_g;
		if(timeTask.groupId == groupId) {
			timeTask.active = false;
			kha_Scheduler.timeTasksScratchpad.push(timeTask);
		}
	}
	var _g2 = 0;
	var _g11 = kha_Scheduler.timeTasksScratchpad;
	while(_g2 < _g11.length) {
		var timeTask1 = _g11[_g2];
		++_g2;
		HxOverrides.remove(kha_Scheduler.timeTasks,timeTask1);
	}
	while(kha_Scheduler.timeTasksScratchpad.length > 0) HxOverrides.remove(kha_Scheduler.timeTasksScratchpad,kha_Scheduler.timeTasksScratchpad[0]);
	if(kha_Scheduler.activeTimeTask != null && kha_Scheduler.activeTimeTask.groupId == groupId) {
		kha_Scheduler.activeTimeTask.active = false;
	}
};
kha_Scheduler.numTasksInSchedule = function() {
	return kha_Scheduler.timeTasks.length + kha_Scheduler.frameTasks.length;
};
kha_Scheduler.insertSorted = function(list,task) {
	var _g1 = 0;
	var _g = list.length;
	while(_g1 < _g) {
		var i = _g1++;
		if(list[i].next > task.next) {
			list.splice(i,0,task);
			return;
		}
	}
	list.push(task);
};
kha_Scheduler.sortFrameTasks = function() {
	if(kha_Scheduler.frame_tasks_sorted) {
		return;
	}
	kha_Scheduler.frameTasks.sort(function(a,b) {
		if(a.priority > b.priority) {
			return 1;
		} else if(a.priority < b.priority) {
			return -1;
		} else {
			return 0;
		}
	});
	kha_Scheduler.frame_tasks_sorted = true;
};
var kha_ScreenRotation = $hxClasses["kha.ScreenRotation"] = { __ename__ : true, __constructs__ : ["RotationNone","Rotation90","Rotation180","Rotation270"] };
kha_ScreenRotation.RotationNone = ["RotationNone",0];
kha_ScreenRotation.RotationNone.toString = $estr;
kha_ScreenRotation.RotationNone.__enum__ = kha_ScreenRotation;
kha_ScreenRotation.Rotation90 = ["Rotation90",1];
kha_ScreenRotation.Rotation90.toString = $estr;
kha_ScreenRotation.Rotation90.__enum__ = kha_ScreenRotation;
kha_ScreenRotation.Rotation180 = ["Rotation180",2];
kha_ScreenRotation.Rotation180.toString = $estr;
kha_ScreenRotation.Rotation180.__enum__ = kha_ScreenRotation;
kha_ScreenRotation.Rotation270 = ["Rotation270",3];
kha_ScreenRotation.Rotation270.toString = $estr;
kha_ScreenRotation.Rotation270.__enum__ = kha_ScreenRotation;
var kha_Shaders = function() { };
$hxClasses["kha.Shaders"] = kha_Shaders;
kha_Shaders.__name__ = ["kha","Shaders"];
kha_Shaders.init = function() {
	var blobs = [];
	var _g = 0;
	while(_g < 1) {
		var i = _g++;
		var data = Reflect.field(kha_Shaders,"Leaves_004_mesh_fragData" + i);
		var bytes = haxe_Unserializer.run(data);
		blobs.push(kha_internal_BytesBlob.fromBytes(bytes));
	}
	kha_Shaders.Leaves_004_mesh_frag = new kha_graphics4_FragmentShader(blobs,["Leaves_004_mesh.frag.essl"]);
	var blobs1 = [];
	var _g1 = 0;
	while(_g1 < 1) {
		var i1 = _g1++;
		var data1 = Reflect.field(kha_Shaders,"Leaves_004_mesh_vertData" + i1);
		var bytes1 = haxe_Unserializer.run(data1);
		blobs1.push(kha_internal_BytesBlob.fromBytes(bytes1));
	}
	kha_Shaders.Leaves_004_mesh_vert = new kha_graphics4_VertexShader(blobs1,["Leaves_004_mesh.vert.essl"]);
	var blobs2 = [];
	var _g2 = 0;
	while(_g2 < 1) {
		var i2 = _g2++;
		var data2 = Reflect.field(kha_Shaders,"Leaves_004_shadowmap_fragData" + i2);
		var bytes2 = haxe_Unserializer.run(data2);
		blobs2.push(kha_internal_BytesBlob.fromBytes(bytes2));
	}
	kha_Shaders.Leaves_004_shadowmap_frag = new kha_graphics4_FragmentShader(blobs2,["Leaves_004_shadowmap.frag.essl"]);
	var blobs3 = [];
	var _g3 = 0;
	while(_g3 < 1) {
		var i3 = _g3++;
		var data3 = Reflect.field(kha_Shaders,"Leaves_004_shadowmap_vertData" + i3);
		var bytes3 = haxe_Unserializer.run(data3);
		blobs3.push(kha_internal_BytesBlob.fromBytes(bytes3));
	}
	kha_Shaders.Leaves_004_shadowmap_vert = new kha_graphics4_VertexShader(blobs3,["Leaves_004_shadowmap.vert.essl"]);
	var blobs4 = [];
	var _g4 = 0;
	while(_g4 < 1) {
		var i4 = _g4++;
		var data4 = Reflect.field(kha_Shaders,"Material_004_mesh_fragData" + i4);
		var bytes4 = haxe_Unserializer.run(data4);
		blobs4.push(kha_internal_BytesBlob.fromBytes(bytes4));
	}
	kha_Shaders.Material_004_mesh_frag = new kha_graphics4_FragmentShader(blobs4,["Material_004_mesh.frag.essl"]);
	var blobs5 = [];
	var _g5 = 0;
	while(_g5 < 1) {
		var i5 = _g5++;
		var data5 = Reflect.field(kha_Shaders,"Material_004_mesh_vertData" + i5);
		var bytes5 = haxe_Unserializer.run(data5);
		blobs5.push(kha_internal_BytesBlob.fromBytes(bytes5));
	}
	kha_Shaders.Material_004_mesh_vert = new kha_graphics4_VertexShader(blobs5,["Material_004_mesh.vert.essl"]);
	var blobs6 = [];
	var _g6 = 0;
	while(_g6 < 1) {
		var i6 = _g6++;
		var data6 = Reflect.field(kha_Shaders,"Material_004_shadowmap_fragData" + i6);
		var bytes6 = haxe_Unserializer.run(data6);
		blobs6.push(kha_internal_BytesBlob.fromBytes(bytes6));
	}
	kha_Shaders.Material_004_shadowmap_frag = new kha_graphics4_FragmentShader(blobs6,["Material_004_shadowmap.frag.essl"]);
	var blobs7 = [];
	var _g7 = 0;
	while(_g7 < 1) {
		var i7 = _g7++;
		var data7 = Reflect.field(kha_Shaders,"Material_004_shadowmap_vertData" + i7);
		var bytes7 = haxe_Unserializer.run(data7);
		blobs7.push(kha_internal_BytesBlob.fromBytes(bytes7));
	}
	kha_Shaders.Material_004_shadowmap_vert = new kha_graphics4_VertexShader(blobs7,["Material_004_shadowmap.vert.essl"]);
	var blobs8 = [];
	var _g8 = 0;
	while(_g8 < 1) {
		var i8 = _g8++;
		var data8 = Reflect.field(kha_Shaders,"Material_007_mesh_fragData" + i8);
		var bytes8 = haxe_Unserializer.run(data8);
		blobs8.push(kha_internal_BytesBlob.fromBytes(bytes8));
	}
	kha_Shaders.Material_007_mesh_frag = new kha_graphics4_FragmentShader(blobs8,["Material_007_mesh.frag.essl"]);
	var blobs9 = [];
	var _g9 = 0;
	while(_g9 < 1) {
		var i9 = _g9++;
		var data9 = Reflect.field(kha_Shaders,"Material_007_mesh_vertData" + i9);
		var bytes9 = haxe_Unserializer.run(data9);
		blobs9.push(kha_internal_BytesBlob.fromBytes(bytes9));
	}
	kha_Shaders.Material_007_mesh_vert = new kha_graphics4_VertexShader(blobs9,["Material_007_mesh.vert.essl"]);
	var blobs10 = [];
	var _g10 = 0;
	while(_g10 < 1) {
		var i10 = _g10++;
		var data10 = Reflect.field(kha_Shaders,"Material_007_shadowmap_fragData" + i10);
		var bytes10 = haxe_Unserializer.run(data10);
		blobs10.push(kha_internal_BytesBlob.fromBytes(bytes10));
	}
	kha_Shaders.Material_007_shadowmap_frag = new kha_graphics4_FragmentShader(blobs10,["Material_007_shadowmap.frag.essl"]);
	var blobs11 = [];
	var _g11 = 0;
	while(_g11 < 1) {
		var i11 = _g11++;
		var data11 = Reflect.field(kha_Shaders,"Material_007_shadowmap_vertData" + i11);
		var bytes11 = haxe_Unserializer.run(data11);
		blobs11.push(kha_internal_BytesBlob.fromBytes(bytes11));
	}
	kha_Shaders.Material_007_shadowmap_vert = new kha_graphics4_VertexShader(blobs11,["Material_007_shadowmap.vert.essl"]);
	var blobs12 = [];
	var _g12 = 0;
	while(_g12 < 1) {
		var i12 = _g12++;
		var data12 = Reflect.field(kha_Shaders,"Material_008_mesh_fragData" + i12);
		var bytes12 = haxe_Unserializer.run(data12);
		blobs12.push(kha_internal_BytesBlob.fromBytes(bytes12));
	}
	kha_Shaders.Material_008_mesh_frag = new kha_graphics4_FragmentShader(blobs12,["Material_008_mesh.frag.essl"]);
	var blobs13 = [];
	var _g13 = 0;
	while(_g13 < 1) {
		var i13 = _g13++;
		var data13 = Reflect.field(kha_Shaders,"Material_008_mesh_vertData" + i13);
		var bytes13 = haxe_Unserializer.run(data13);
		blobs13.push(kha_internal_BytesBlob.fromBytes(bytes13));
	}
	kha_Shaders.Material_008_mesh_vert = new kha_graphics4_VertexShader(blobs13,["Material_008_mesh.vert.essl"]);
	var blobs14 = [];
	var _g14 = 0;
	while(_g14 < 1) {
		var i14 = _g14++;
		var data14 = Reflect.field(kha_Shaders,"Material_008_shadowmap_fragData" + i14);
		var bytes14 = haxe_Unserializer.run(data14);
		blobs14.push(kha_internal_BytesBlob.fromBytes(bytes14));
	}
	kha_Shaders.Material_008_shadowmap_frag = new kha_graphics4_FragmentShader(blobs14,["Material_008_shadowmap.frag.essl"]);
	var blobs15 = [];
	var _g15 = 0;
	while(_g15 < 1) {
		var i15 = _g15++;
		var data15 = Reflect.field(kha_Shaders,"Material_008_shadowmap_vertData" + i15);
		var bytes15 = haxe_Unserializer.run(data15);
		blobs15.push(kha_internal_BytesBlob.fromBytes(bytes15));
	}
	kha_Shaders.Material_008_shadowmap_vert = new kha_graphics4_VertexShader(blobs15,["Material_008_shadowmap.vert.essl"]);
	var blobs16 = [];
	var _g16 = 0;
	while(_g16 < 1) {
		var i16 = _g16++;
		var data16 = Reflect.field(kha_Shaders,"Wood_mesh_fragData" + i16);
		var bytes16 = haxe_Unserializer.run(data16);
		blobs16.push(kha_internal_BytesBlob.fromBytes(bytes16));
	}
	kha_Shaders.Wood_mesh_frag = new kha_graphics4_FragmentShader(blobs16,["Wood_mesh.frag.essl"]);
	var blobs17 = [];
	var _g17 = 0;
	while(_g17 < 1) {
		var i17 = _g17++;
		var data17 = Reflect.field(kha_Shaders,"Wood_mesh_vertData" + i17);
		var bytes17 = haxe_Unserializer.run(data17);
		blobs17.push(kha_internal_BytesBlob.fromBytes(bytes17));
	}
	kha_Shaders.Wood_mesh_vert = new kha_graphics4_VertexShader(blobs17,["Wood_mesh.vert.essl"]);
	var blobs18 = [];
	var _g18 = 0;
	while(_g18 < 1) {
		var i18 = _g18++;
		var data18 = Reflect.field(kha_Shaders,"Wood_shadowmap_fragData" + i18);
		var bytes18 = haxe_Unserializer.run(data18);
		blobs18.push(kha_internal_BytesBlob.fromBytes(bytes18));
	}
	kha_Shaders.Wood_shadowmap_frag = new kha_graphics4_FragmentShader(blobs18,["Wood_shadowmap.frag.essl"]);
	var blobs19 = [];
	var _g19 = 0;
	while(_g19 < 1) {
		var i19 = _g19++;
		var data19 = Reflect.field(kha_Shaders,"Wood_shadowmap_vertData" + i19);
		var bytes19 = haxe_Unserializer.run(data19);
		blobs19.push(kha_internal_BytesBlob.fromBytes(bytes19));
	}
	kha_Shaders.Wood_shadowmap_vert = new kha_graphics4_VertexShader(blobs19,["Wood_shadowmap.vert.essl"]);
	var blobs20 = [];
	var _g20 = 0;
	while(_g20 < 1) {
		var i20 = _g20++;
		var data20 = Reflect.field(kha_Shaders,"grass_mesh_fragData" + i20);
		var bytes20 = haxe_Unserializer.run(data20);
		blobs20.push(kha_internal_BytesBlob.fromBytes(bytes20));
	}
	kha_Shaders.grass_mesh_frag = new kha_graphics4_FragmentShader(blobs20,["grass_mesh.frag.essl"]);
	var blobs21 = [];
	var _g21 = 0;
	while(_g21 < 1) {
		var i21 = _g21++;
		var data21 = Reflect.field(kha_Shaders,"grass_mesh_vertData" + i21);
		var bytes21 = haxe_Unserializer.run(data21);
		blobs21.push(kha_internal_BytesBlob.fromBytes(bytes21));
	}
	kha_Shaders.grass_mesh_vert = new kha_graphics4_VertexShader(blobs21,["grass_mesh.vert.essl"]);
	var blobs22 = [];
	var _g22 = 0;
	while(_g22 < 1) {
		var i22 = _g22++;
		var data22 = Reflect.field(kha_Shaders,"grass_shadowmap_fragData" + i22);
		var bytes22 = haxe_Unserializer.run(data22);
		blobs22.push(kha_internal_BytesBlob.fromBytes(bytes22));
	}
	kha_Shaders.grass_shadowmap_frag = new kha_graphics4_FragmentShader(blobs22,["grass_shadowmap.frag.essl"]);
	var blobs23 = [];
	var _g23 = 0;
	while(_g23 < 1) {
		var i23 = _g23++;
		var data23 = Reflect.field(kha_Shaders,"grass_shadowmap_vertData" + i23);
		var bytes23 = haxe_Unserializer.run(data23);
		blobs23.push(kha_internal_BytesBlob.fromBytes(bytes23));
	}
	kha_Shaders.grass_shadowmap_vert = new kha_graphics4_VertexShader(blobs23,["grass_shadowmap.vert.essl"]);
	var blobs24 = [];
	var _g24 = 0;
	while(_g24 < 1) {
		var i24 = _g24++;
		var data24 = Reflect.field(kha_Shaders,"stone_mesh_fragData" + i24);
		var bytes24 = haxe_Unserializer.run(data24);
		blobs24.push(kha_internal_BytesBlob.fromBytes(bytes24));
	}
	kha_Shaders.stone_mesh_frag = new kha_graphics4_FragmentShader(blobs24,["stone_mesh.frag.essl"]);
	var blobs25 = [];
	var _g25 = 0;
	while(_g25 < 1) {
		var i25 = _g25++;
		var data25 = Reflect.field(kha_Shaders,"stone_mesh_vertData" + i25);
		var bytes25 = haxe_Unserializer.run(data25);
		blobs25.push(kha_internal_BytesBlob.fromBytes(bytes25));
	}
	kha_Shaders.stone_mesh_vert = new kha_graphics4_VertexShader(blobs25,["stone_mesh.vert.essl"]);
	var blobs26 = [];
	var _g26 = 0;
	while(_g26 < 1) {
		var i26 = _g26++;
		var data26 = Reflect.field(kha_Shaders,"stone_shadowmap_fragData" + i26);
		var bytes26 = haxe_Unserializer.run(data26);
		blobs26.push(kha_internal_BytesBlob.fromBytes(bytes26));
	}
	kha_Shaders.stone_shadowmap_frag = new kha_graphics4_FragmentShader(blobs26,["stone_shadowmap.frag.essl"]);
	var blobs27 = [];
	var _g27 = 0;
	while(_g27 < 1) {
		var i27 = _g27++;
		var data27 = Reflect.field(kha_Shaders,"stone_shadowmap_vertData" + i27);
		var bytes27 = haxe_Unserializer.run(data27);
		blobs27.push(kha_internal_BytesBlob.fromBytes(bytes27));
	}
	kha_Shaders.stone_shadowmap_vert = new kha_graphics4_VertexShader(blobs27,["stone_shadowmap.vert.essl"]);
	var blobs28 = [];
	var _g28 = 0;
	while(_g28 < 1) {
		var i28 = _g28++;
		var data28 = Reflect.field(kha_Shaders,"world_Irr_EnvCol_LDR_VR_fragData" + i28);
		var bytes28 = haxe_Unserializer.run(data28);
		blobs28.push(kha_internal_BytesBlob.fromBytes(bytes28));
	}
	kha_Shaders.world_Irr_EnvCol_LDR_VR_frag = new kha_graphics4_FragmentShader(blobs28,["world_Irr_EnvCol_LDR_VR.frag.essl"]);
	var blobs29 = [];
	var _g29 = 0;
	while(_g29 < 1) {
		var i29 = _g29++;
		var data29 = Reflect.field(kha_Shaders,"world_Irr_EnvCol_LDR_VR_vertData" + i29);
		var bytes29 = haxe_Unserializer.run(data29);
		blobs29.push(kha_internal_BytesBlob.fromBytes(bytes29));
	}
	kha_Shaders.world_Irr_EnvCol_LDR_VR_vert = new kha_graphics4_VertexShader(blobs29,["world_Irr_EnvCol_LDR_VR.vert.essl"]);
	var blobs30 = [];
	var _g30 = 0;
	while(_g30 < 1) {
		var i30 = _g30++;
		var data30 = Reflect.field(kha_Shaders,"painter_colored_fragData" + i30);
		var bytes30 = haxe_Unserializer.run(data30);
		blobs30.push(kha_internal_BytesBlob.fromBytes(bytes30));
	}
	kha_Shaders.painter_colored_frag = new kha_graphics4_FragmentShader(blobs30,["painter-colored.frag.essl"]);
	var blobs31 = [];
	var _g31 = 0;
	while(_g31 < 1) {
		var i31 = _g31++;
		var data31 = Reflect.field(kha_Shaders,"painter_colored_vertData" + i31);
		var bytes31 = haxe_Unserializer.run(data31);
		blobs31.push(kha_internal_BytesBlob.fromBytes(bytes31));
	}
	kha_Shaders.painter_colored_vert = new kha_graphics4_VertexShader(blobs31,["painter-colored.vert.essl"]);
	var blobs32 = [];
	var _g32 = 0;
	while(_g32 < 1) {
		var i32 = _g32++;
		var data32 = Reflect.field(kha_Shaders,"painter_image_fragData" + i32);
		var bytes32 = haxe_Unserializer.run(data32);
		blobs32.push(kha_internal_BytesBlob.fromBytes(bytes32));
	}
	kha_Shaders.painter_image_frag = new kha_graphics4_FragmentShader(blobs32,["painter-image.frag.essl"]);
	var blobs33 = [];
	var _g33 = 0;
	while(_g33 < 1) {
		var i33 = _g33++;
		var data33 = Reflect.field(kha_Shaders,"painter_image_vertData" + i33);
		var bytes33 = haxe_Unserializer.run(data33);
		blobs33.push(kha_internal_BytesBlob.fromBytes(bytes33));
	}
	kha_Shaders.painter_image_vert = new kha_graphics4_VertexShader(blobs33,["painter-image.vert.essl"]);
	var blobs34 = [];
	var _g34 = 0;
	while(_g34 < 1) {
		var i34 = _g34++;
		var data34 = Reflect.field(kha_Shaders,"painter_text_fragData" + i34);
		var bytes34 = haxe_Unserializer.run(data34);
		blobs34.push(kha_internal_BytesBlob.fromBytes(bytes34));
	}
	kha_Shaders.painter_text_frag = new kha_graphics4_FragmentShader(blobs34,["painter-text.frag.essl"]);
	var blobs35 = [];
	var _g35 = 0;
	while(_g35 < 1) {
		var i35 = _g35++;
		var data35 = Reflect.field(kha_Shaders,"painter_text_vertData" + i35);
		var bytes35 = haxe_Unserializer.run(data35);
		blobs35.push(kha_internal_BytesBlob.fromBytes(bytes35));
	}
	kha_Shaders.painter_text_vert = new kha_graphics4_VertexShader(blobs35,["painter-text.vert.essl"]);
	var blobs36 = [];
	var _g36 = 0;
	while(_g36 < 1) {
		var i36 = _g36++;
		var data36 = Reflect.field(kha_Shaders,"painter_video_fragData" + i36);
		var bytes36 = haxe_Unserializer.run(data36);
		blobs36.push(kha_internal_BytesBlob.fromBytes(bytes36));
	}
	kha_Shaders.painter_video_frag = new kha_graphics4_FragmentShader(blobs36,["painter-video.frag.essl"]);
	var blobs37 = [];
	var _g37 = 0;
	while(_g37 < 1) {
		var i37 = _g37++;
		var data37 = Reflect.field(kha_Shaders,"painter_video_vertData" + i37);
		var bytes37 = haxe_Unserializer.run(data37);
		blobs37.push(kha_internal_BytesBlob.fromBytes(bytes37));
	}
	kha_Shaders.painter_video_vert = new kha_graphics4_VertexShader(blobs37,["painter-video.vert.essl"]);
};
var kha_Sound = function() {
};
$hxClasses["kha.Sound"] = kha_Sound;
kha_Sound.__name__ = ["kha","Sound"];
kha_Sound.__interfaces__ = [kha_Resource];
kha_Sound.prototype = {
	uncompress: function(done) {
		var output = new haxe_io_BytesOutput();
		var header = kha_audio2_ogg_vorbis_Reader.readAll(this.compressedData,output,true);
		var soundBytes = output.getBytes();
		var count = soundBytes.length / 4 | 0;
		if(header.channel == 1) {
			var this1 = new Array(count * 2);
			this.uncompressedData = this1;
			var _g1 = 0;
			var _g = count;
			while(_g1 < _g) {
				var i = _g1++;
				this.uncompressedData[i * 2] = soundBytes.getFloat(i * 4);
				this.uncompressedData[i * 2 + 1] = soundBytes.getFloat(i * 4);
			}
		} else {
			var this2 = new Array(count);
			this.uncompressedData = this2;
			var _g11 = 0;
			var _g2 = count;
			while(_g11 < _g2) {
				var i1 = _g11++;
				this.uncompressedData[i1] = soundBytes.getFloat(i1 * 4);
			}
		}
		this.compressedData = null;
		done();
	}
	,unload: function() {
		this.compressedData = null;
		this.uncompressedData = null;
	}
	,__class__: kha_Sound
};
var kha_System = function() { };
$hxClasses["kha.System"] = kha_System;
kha_System.__name__ = ["kha","System"];
kha_System.__properties__ = {get_systemId:"get_systemId",get_refreshRate:"get_refreshRate",get_vsync:"get_vsync",get_screenRotation:"get_screenRotation",get_time:"get_time",get_title:"get_title"};
kha_System.init = function(options,callback) {
	if(options.title == null) {
		options.title = "Kha";
	}
	if(options.width == null) {
		options.width = 800;
	}
	if(options.height == null) {
		options.height = 600;
	}
	if(options.samplesPerPixel == null) {
		options.samplesPerPixel = 1;
	}
	if(options.vSync == null) {
		options.vSync = true;
	}
	if(options.windowMode == null) {
		options.windowMode = kha_WindowMode.Window;
	}
	kha_System.theTitle = options.title;
	kha_SystemImpl.init(options,callback);
};
kha_System.initEx = function(title,options,windowCallback,callback) {
	kha_System.theTitle = title;
	kha_SystemImpl.initEx(title,options,windowCallback,callback);
};
kha_System.get_title = function() {
	return kha_System.theTitle;
};
kha_System.notifyOnRender = function(listener,id) {
	if(id == null) {
		id = 0;
	}
	while(id >= kha_System.renderListeners.length) kha_System.renderListeners.push([]);
	kha_System.renderListeners[id].push(listener);
};
kha_System.removeRenderListener = function(listener,id) {
	if(id == null) {
		id = 0;
	}
	HxOverrides.remove(kha_System.renderListeners[id],listener);
};
kha_System.notifyOnApplicationState = function(foregroundListener,resumeListener,pauseListener,backgroundListener,shutdownListener) {
	if(foregroundListener != null) {
		kha_System.foregroundListeners.push(foregroundListener);
	}
	if(resumeListener != null) {
		kha_System.resumeListeners.push(resumeListener);
	}
	if(pauseListener != null) {
		kha_System.pauseListeners.push(pauseListener);
	}
	if(backgroundListener != null) {
		kha_System.backgroundListeners.push(backgroundListener);
	}
	if(shutdownListener != null) {
		kha_System.shutdownListeners.push(shutdownListener);
	}
};
kha_System.render = function(id,framebuffer) {
	if(kha_System.renderListeners.length == 0) {
		return;
	}
	var _g = 0;
	var _g1 = kha_System.renderListeners[id];
	while(_g < _g1.length) {
		var listener = _g1[_g];
		++_g;
		listener(framebuffer);
	}
};
kha_System.foreground = function() {
	var _g = 0;
	var _g1 = kha_System.foregroundListeners;
	while(_g < _g1.length) {
		var listener = _g1[_g];
		++_g;
		listener();
	}
};
kha_System.resume = function() {
	var _g = 0;
	var _g1 = kha_System.resumeListeners;
	while(_g < _g1.length) {
		var listener = _g1[_g];
		++_g;
		listener();
	}
};
kha_System.pause = function() {
	var _g = 0;
	var _g1 = kha_System.pauseListeners;
	while(_g < _g1.length) {
		var listener = _g1[_g];
		++_g;
		listener();
	}
};
kha_System.background = function() {
	var _g = 0;
	var _g1 = kha_System.backgroundListeners;
	while(_g < _g1.length) {
		var listener = _g1[_g];
		++_g;
		listener();
	}
};
kha_System.shutdown = function() {
	var _g = 0;
	var _g1 = kha_System.shutdownListeners;
	while(_g < _g1.length) {
		var listener = _g1[_g];
		++_g;
		listener();
	}
};
kha_System.get_time = function() {
	return kha_SystemImpl.getTime();
};
kha_System.windowWidth = function(windowId) {
	if(windowId == null) {
		windowId = 0;
	}
	return kha_SystemImpl.windowWidth(windowId);
};
kha_System.windowHeight = function(windowId) {
	if(windowId == null) {
		windowId = 0;
	}
	return kha_SystemImpl.windowHeight(windowId);
};
kha_System.screenDpi = function() {
	return kha_SystemImpl.screenDpi();
};
kha_System.get_screenRotation = function() {
	return kha_SystemImpl.getScreenRotation();
};
kha_System.get_vsync = function() {
	return kha_SystemImpl.getVsync();
};
kha_System.get_refreshRate = function() {
	return kha_SystemImpl.getRefreshRate();
};
kha_System.get_systemId = function() {
	return kha_SystemImpl.getSystemId();
};
kha_System.requestShutdown = function() {
	kha_SystemImpl.requestShutdown();
};
kha_System.changeResolution = function(width,height) {
	kha_SystemImpl.changeResolution(width,height);
};
kha_System.loadUrl = function(url) {
	kha_SystemImpl.loadUrl(url);
};
var kha_GamepadStates = function() {
	this.axes = [];
	this.buttons = [];
};
$hxClasses["kha.GamepadStates"] = kha_GamepadStates;
kha_GamepadStates.__name__ = ["kha","GamepadStates"];
kha_GamepadStates.prototype = {
	__class__: kha_GamepadStates
};
var kha_SystemImpl = function() { };
$hxClasses["kha.SystemImpl"] = kha_SystemImpl;
kha_SystemImpl.__name__ = ["kha","SystemImpl"];
kha_SystemImpl.initPerformanceTimer = function() {
	if(window.performance != null && ($_=window.performance,$bind($_,$_.now)) != null) {
		kha_SystemImpl.performance = window.performance;
	} else {
		kha_SystemImpl.performance = window.Date;
	}
};
kha_SystemImpl.errorHandler = function(message,source,lineno,colno,error) {
	window.console.error(error.stack);
	return true;
};
kha_SystemImpl.init = function(options,callback) {
	kha_SystemImpl.options = options;
	kha_SystemImpl.mobile = kha_SystemImpl.isMobile();
	kha_SystemImpl.chrome = kha_SystemImpl.isChrome();
	kha_SystemImpl.init2();
	callback();
};
kha_SystemImpl.initEx = function(title,options,windowCallback,callback) {
	haxe_Log.trace("initEx is not supported on the html5 target, running init() with first window options",{ fileName : "SystemImpl.hx", lineNumber : 85, className : "kha.SystemImpl", methodName : "initEx"});
	kha_SystemImpl.init({ title : title, width : options[0].width, height : options[0].height},callback);
	if(windowCallback != null) {
		windowCallback(0);
	}
};
kha_SystemImpl.isMobile = function() {
	var agent = window.navigator.userAgent;
	if(agent.indexOf("Android") >= 0 || agent.indexOf("webOS") >= 0 || agent.indexOf("iPhone") >= 0 || agent.indexOf("iPad") >= 0 || agent.indexOf("iPod") >= 0 || agent.indexOf("BlackBerry") >= 0 || agent.indexOf("Windows Phone") >= 0) {
		return true;
	} else {
		return false;
	}
};
kha_SystemImpl.isChrome = function() {
	var agent = window.navigator.userAgent;
	if(agent.indexOf("Chrome") >= 0) {
		return true;
	} else {
		return false;
	}
};
kha_SystemImpl.windowWidth = function(windowId) {
	if(windowId == null) {
		windowId = 0;
	}
	if(kha_SystemImpl.khanvas.width == 0 && kha_SystemImpl.options.width != null) {
		return kha_SystemImpl.options.width;
	} else {
		return kha_SystemImpl.khanvas.width;
	}
};
kha_SystemImpl.windowHeight = function(windowId) {
	if(windowId == null) {
		windowId = 0;
	}
	if(kha_SystemImpl.khanvas.height == 0 && kha_SystemImpl.options.height != null) {
		return kha_SystemImpl.options.height;
	} else {
		return kha_SystemImpl.khanvas.height;
	}
};
kha_SystemImpl.screenDpi = function() {
	var dpiElement = window.document.createElement("div");
	dpiElement.style.position = "absolute";
	dpiElement.style.width = "1in";
	dpiElement.style.height = "1in";
	dpiElement.style.left = "-100%";
	dpiElement.style.top = "-100%";
	window.document.body.appendChild(dpiElement);
	var dpi = dpiElement.offsetHeight;
	dpiElement.remove();
	return dpi;
};
kha_SystemImpl.setCanvas = function(canvas) {
	kha_SystemImpl.khanvas = canvas;
};
kha_SystemImpl.getScreenRotation = function() {
	return kha_ScreenRotation.RotationNone;
};
kha_SystemImpl.getTime = function() {
	return kha_SystemImpl.performance.now() / 1000;
};
kha_SystemImpl.getVsync = function() {
	return true;
};
kha_SystemImpl.getRefreshRate = function() {
	return 60;
};
kha_SystemImpl.getSystemId = function() {
	return "HTML5";
};
kha_SystemImpl.requestShutdown = function() {
	window.close();
};
kha_SystemImpl.init2 = function(backbufferFormat) {
	haxe_Log.trace = js_Boot.__trace;
	kha_SystemImpl.keyboard = new kha_input_Keyboard();
	kha_SystemImpl.mouse = new kha_input_MouseImpl();
	kha_SystemImpl.surface = new kha_input_Surface();
	kha_SystemImpl.gamepads = [];
	kha_SystemImpl.gamepadStates = [];
	var _g1 = 0;
	var _g = kha_SystemImpl.maxGamepads;
	while(_g1 < _g) {
		var i = _g1++;
		kha_SystemImpl.gamepads[i] = new kha_input_Gamepad(i);
		kha_SystemImpl.gamepadStates[i] = new kha_GamepadStates();
	}
	kha_SystemImpl.pressedKeys = [];
	var _g2 = 0;
	while(_g2 < 256) {
		var i1 = _g2++;
		kha_SystemImpl.pressedKeys.push(false);
	}
	var _g3 = 0;
	while(_g3 < 256) {
		var i2 = _g3++;
		kha_SystemImpl.pressedKeys.push(null);
	}
	kha_SystemImpl.buttonspressed = [];
	var _g4 = 0;
	while(_g4 < 10) {
		var i3 = _g4++;
		kha_SystemImpl.buttonspressed.push(false);
	}
	kha_CanvasImage.init();
	kha_SystemImpl.initPerformanceTimer();
	kha_Scheduler.init();
	kha_SystemImpl.loadFinished();
	kha_EnvironmentVariables.instance = new kha_js_EnvironmentVariables();
};
kha_SystemImpl.getMouse = function(num) {
	if(num != 0) {
		return null;
	}
	return kha_SystemImpl.mouse;
};
kha_SystemImpl.getKeyboard = function(num) {
	if(num != 0) {
		return null;
	}
	return kha_SystemImpl.keyboard;
};
kha_SystemImpl.checkGamepadButton = function(pad,num) {
	if(kha_SystemImpl.buttonspressed[num]) {
		if(pad.buttons[num] < 0.5) {
			kha_SystemImpl.buttonspressed[num] = false;
		}
	} else if(pad.buttons[num] > 0.5) {
		kha_SystemImpl.buttonspressed[num] = true;
	}
};
kha_SystemImpl.checkGamepad = function(pad) {
	var _g1 = 0;
	var _g = pad.axes.length;
	while(_g1 < _g) {
		var i = _g1++;
		if(pad.axes[i] != null) {
			if(kha_SystemImpl.gamepadStates[pad.index].axes[i] != pad.axes[i]) {
				var axis = pad.axes[i];
				if(i % 2 == 1) {
					axis = -axis;
				}
				kha_SystemImpl.gamepadStates[pad.index].axes[i] = axis;
				kha_SystemImpl.gamepads[pad.index].sendAxisEvent(i,axis);
			}
		}
	}
	var _g11 = 0;
	var _g2 = pad.buttons.length;
	while(_g11 < _g2) {
		var i1 = _g11++;
		if(pad.buttons[i1] != null) {
			if(kha_SystemImpl.gamepadStates[pad.index].buttons[i1] != pad.buttons[i1].value) {
				kha_SystemImpl.gamepadStates[pad.index].buttons[i1] = pad.buttons[i1].value;
				kha_SystemImpl.gamepads[pad.index].sendButtonEvent(i1,pad.buttons[i1].value);
			}
		}
	}
	if(pad.axes.length <= 4 && pad.buttons.length > 7) {
		kha_SystemImpl.gamepadStates[pad.index].axes[4] = pad.buttons[6].value;
		kha_SystemImpl.gamepads[pad.index].sendAxisEvent(4,pad.buttons[6].value);
		kha_SystemImpl.gamepadStates[pad.index].axes[5] = pad.buttons[7].value;
		kha_SystemImpl.gamepads[pad.index].sendAxisEvent(5,pad.buttons[7].value);
	}
};
kha_SystemImpl.loadFinished = function() {
	var canvas = kha_SystemImpl.khanvas;
	if(canvas == null) {
		canvas = window.document.getElementById(kha_CompilerDefines.canvas_id);
	}
	canvas.style.cursor = "default";
	var gl = false;
	try {
		kha_SystemImpl.gl = canvas.getContext("experimental-webgl",{ alpha : false, antialias : kha_SystemImpl.options.samplesPerPixel > 1, stencil : true, preserveDrawingBuffer : true});
		if(kha_SystemImpl.gl != null) {
			kha_SystemImpl.gl.pixelStorei(37441,1);
			kha_SystemImpl.gl.getExtension("OES_texture_float");
			kha_SystemImpl.gl.getExtension("OES_texture_float_linear");
			kha_SystemImpl.halfFloat = kha_SystemImpl.gl.getExtension("OES_texture_half_float");
			kha_SystemImpl.gl.getExtension("OES_texture_half_float_linear");
			kha_SystemImpl.depthTexture = kha_SystemImpl.gl.getExtension("WEBGL_depth_texture");
			kha_SystemImpl.gl.getExtension("EXT_shader_texture_lod");
			kha_SystemImpl.gl.getExtension("OES_standard_derivatives");
			kha_SystemImpl.anisotropicFilter = kha_SystemImpl.gl.getExtension("EXT_texture_filter_anisotropic");
			if(kha_SystemImpl.anisotropicFilter == null) {
				kha_SystemImpl.anisotropicFilter = kha_SystemImpl.gl.getExtension("WEBKIT_EXT_texture_filter_anisotropic");
			}
			kha_SystemImpl.drawBuffers = kha_SystemImpl.gl.getExtension("WEBGL_draw_buffers");
			kha_SystemImpl.elementIndexUint = kha_SystemImpl.gl.getExtension("OES_element_index_uint");
			gl = true;
			kha_Shaders.init();
		}
	} catch( e ) {
		if (e instanceof js__$Boot_HaxeError) e = e.val;
		haxe_Log.trace(e,{ fileName : "SystemImpl.hx", lineNumber : 317, className : "kha.SystemImpl", methodName : "loadFinished"});
	}
	kha_SystemImpl.setCanvas(canvas);
	if(gl) {
		var g4 = gl ? new kha_js_graphics4_Graphics() : null;
		kha_SystemImpl.frame = new kha_Framebuffer(0,null,null,g4);
		kha_SystemImpl.frame.init(new kha_graphics2_Graphics1(kha_SystemImpl.frame),new kha_js_graphics4_Graphics2(kha_SystemImpl.frame),g4);
	} else {
		var g2 = new kha_js_CanvasGraphics(canvas.getContext("2d"));
		kha_SystemImpl.frame = new kha_Framebuffer(0,null,g2,null);
		kha_SystemImpl.frame.init(new kha_graphics2_Graphics1(kha_SystemImpl.frame),g2,null);
	}
	if(!kha_SystemImpl.mobile && kha_audio2_Audio._init()) {
		kha_SystemImpl._hasWebAudio = true;
		kha_audio2_Audio1._init();
	} else if(kha_SystemImpl.mobile) {
		kha_SystemImpl._hasWebAudio = false;
		kha_js_MobileWebAudio._init();
		kha_audio2_Audio1 = kha_js_MobileWebAudio;
	} else {
		kha_SystemImpl._hasWebAudio = false;
		kha_js_AudioElementAudio._compile();
		kha_audio2_Audio1 = kha_js_AudioElementAudio;
	}
	kha_vr_VrInterface.instance = new kha_js_vr_VrInterface();
	kha_Scheduler.start();
	var $window = window;
	var requestAnimationFrame = $window.requestAnimationFrame;
	if(requestAnimationFrame == null) {
		requestAnimationFrame = $window.mozRequestAnimationFrame;
	}
	if(requestAnimationFrame == null) {
		requestAnimationFrame = $window.webkitRequestAnimationFrame;
	}
	if(requestAnimationFrame == null) {
		requestAnimationFrame = $window.msRequestAnimationFrame;
	}
	var animate = null;
	animate = function(timestamp) {
		var window1 = window;
		if(requestAnimationFrame == null) {
			window1.setTimeout(animate,16.6666666666666679);
		} else {
			requestAnimationFrame(animate);
		}
		if(!kha_vr_VrInterface.instance.IsVrEnabled() && kha_SystemImpl.chrome || !kha_SystemImpl.chrome) {
			var sysGamepads = (navigator.getGamepads && navigator.getGamepads()) || (navigator.webkitGetGamepads && navigator.webkitGetGamepads());
			if(sysGamepads != null) {
				var _g1 = 0;
				var _g = sysGamepads.length;
				while(_g1 < _g) {
					var i = _g1++;
					var pad = sysGamepads[i];
					if(pad != null) {
						kha_SystemImpl.checkGamepadButton(pad,0);
						kha_SystemImpl.checkGamepadButton(pad,1);
						kha_SystemImpl.checkGamepadButton(pad,12);
						kha_SystemImpl.checkGamepadButton(pad,13);
						kha_SystemImpl.checkGamepadButton(pad,14);
						kha_SystemImpl.checkGamepadButton(pad,15);
						kha_SystemImpl.checkGamepad(pad);
					}
				}
			}
		}
		kha_Scheduler.executeFrame();
		if(canvas.getContext) {
			var displayWidth = canvas.clientWidth;
			var displayHeight = canvas.clientHeight;
			if(canvas.width != displayWidth || canvas.height != displayHeight) {
				canvas.width = displayWidth;
				canvas.height = displayHeight;
			}
			kha_System.render(0,kha_SystemImpl.frame);
			if(kha_SystemImpl.gl != null) {
				kha_SystemImpl.gl.clearColor(1,1,1,1);
				kha_SystemImpl.gl.colorMask(false,false,false,true);
				kha_SystemImpl.gl.clear(16384);
				kha_SystemImpl.gl.colorMask(true,true,true,true);
			}
		}
	};
	var animate1 = animate;
	if(requestAnimationFrame == null) {
		$window.setTimeout(animate1,16.6666666666666679);
	} else {
		requestAnimationFrame(animate1);
	}
	if(canvas.getAttribute("tabindex") == null) {
		canvas.setAttribute("tabindex","0");
	}
	canvas.focus();
	canvas.oncontextmenu = function(event) {
		event.stopPropagation();
		event.preventDefault();
	};
	canvas.onmousedown = kha_SystemImpl.mouseDown;
	canvas.onmousemove = kha_SystemImpl.mouseMove;
	if(kha_SystemImpl.keyboard != null) {
		canvas.onkeydown = kha_SystemImpl.keyDown;
		canvas.onkeyup = kha_SystemImpl.keyUp;
	}
	canvas.onblur = kha_SystemImpl.onBlur;
	canvas.onfocus = kha_SystemImpl.onFocus;
	canvas.onmousewheel = canvas.onwheel = kha_SystemImpl.mouseWheel;
	canvas.onmouseleave = kha_SystemImpl.mouseLeave;
	canvas.addEventListener("wheel mousewheel",kha_SystemImpl.mouseWheel,false);
	canvas.addEventListener("touchstart",kha_SystemImpl.touchDown,false);
	canvas.addEventListener("touchend",kha_SystemImpl.touchUp,false);
	canvas.addEventListener("touchmove",kha_SystemImpl.touchMove,false);
	window.addEventListener("unload",kha_SystemImpl.unload);
};
kha_SystemImpl.lockMouse = function() {
	if(($_=kha_SystemImpl.khanvas,$bind($_,$_.requestPointerLock))) {
		kha_SystemImpl.khanvas.requestPointerLock();
	} else if(kha_SystemImpl.khanvas.mozRequestPointerLock) {
		kha_SystemImpl.khanvas.mozRequestPointerLock();
	} else if(kha_SystemImpl.khanvas.webkitRequestPointerLock) {
		kha_SystemImpl.khanvas.webkitRequestPointerLock();
	}
};
kha_SystemImpl.unlockMouse = function() {
	if(document.exitPointerLock) {
		document.exitPointerLock();
	} else if(document.mozExitPointerLock) {
		document.mozExitPointerLock();
	} else if(document.webkitExitPointerLock) {
		document.webkitExitPointerLock();
	}
};
kha_SystemImpl.canLockMouse = function() {
	return 'pointerLockElement' in document ||
		'mozPointerLockElement' in document ||
		'webkitPointerLockElement' in document;
};
kha_SystemImpl.isMouseLocked = function() {
	return document.pointerLockElement === kha_Sys.khanvas ||
			document.mozPointerLockElement === kha_Sys.khanvas ||
			document.webkitPointerLockElement === kha_Sys.khanvas;
};
kha_SystemImpl.notifyOfMouseLockChange = function(func,error) {
	window.document.addEventListener("pointerlockchange",func,false);
	window.document.addEventListener("mozpointerlockchange",func,false);
	window.document.addEventListener("webkitpointerlockchange",func,false);
	window.document.addEventListener("pointerlockerror",error,false);
	window.document.addEventListener("mozpointerlockerror",error,false);
	window.document.addEventListener("webkitpointerlockerror",error,false);
};
kha_SystemImpl.removeFromMouseLockChange = function(func,error) {
	window.document.removeEventListener("pointerlockchange",func,false);
	window.document.removeEventListener("mozpointerlockchange",func,false);
	window.document.removeEventListener("webkitpointerlockchange",func,false);
	window.document.removeEventListener("pointerlockerror",error,false);
	window.document.removeEventListener("mozpointerlockerror",error,false);
	window.document.removeEventListener("webkitpointerlockerror",error,false);
};
kha_SystemImpl.unload = function(_) {
};
kha_SystemImpl.setMouseXY = function(event) {
	var rect = kha_SystemImpl.khanvas.getBoundingClientRect();
	var borderWidth = kha_SystemImpl.khanvas.clientLeft;
	var borderHeight = kha_SystemImpl.khanvas.clientTop;
	kha_SystemImpl.mouseX = (event.clientX - rect.left - borderWidth) * kha_SystemImpl.khanvas.width / (rect.width - 2 * borderWidth) | 0;
	kha_SystemImpl.mouseY = (event.clientY - rect.top - borderHeight) * kha_SystemImpl.khanvas.height / (rect.height - 2 * borderHeight) | 0;
};
kha_SystemImpl.unlockSoundOnIOS = function() {
	if(!kha_SystemImpl.mobile || kha_SystemImpl.iosSoundEnabled) {
		return;
	}
	var buffer = kha_js_MobileWebAudio._context.createBuffer(1,1,22050);
	var source = kha_js_MobileWebAudio._context.createBufferSource();
	source.buffer = buffer;
	source.connect(kha_js_MobileWebAudio._context.destination);
	if(source.noteOn) {
		source.noteOn(0);
	}
	kha_SystemImpl.iosSoundEnabled = true;
};
kha_SystemImpl.mouseLeave = function() {
	kha_SystemImpl.mouse.sendLeaveEvent(0);
};
kha_SystemImpl.mouseWheel = function(event) {
	kha_SystemImpl.insideInputEvent = true;
	kha_SystemImpl.unlockSoundOnIOS();
	event.preventDefault();
	if(event.deltaMode == 0) {
		if(event.deltaY < 0) {
			kha_SystemImpl.mouse.sendWheelEvent(0,-1);
		} else if(event.deltaY > 0) {
			kha_SystemImpl.mouse.sendWheelEvent(0,1);
		}
		kha_SystemImpl.insideInputEvent = false;
		return false;
	}
	if(event.deltaMode == 1) {
		kha_SystemImpl.minimumScroll = Math.min(kha_SystemImpl.minimumScroll,Math.abs(event.deltaY)) | 0;
		kha_SystemImpl.mouse.sendWheelEvent(0,event.deltaY / kha_SystemImpl.minimumScroll | 0);
		kha_SystemImpl.insideInputEvent = false;
		return false;
	}
	kha_SystemImpl.insideInputEvent = false;
	return false;
};
kha_SystemImpl.mouseDown = function(event) {
	kha_SystemImpl.insideInputEvent = true;
	kha_SystemImpl.unlockSoundOnIOS();
	kha_SystemImpl.setMouseXY(event);
	if(event.which == 1) {
		if(event.ctrlKey) {
			kha_SystemImpl.leftMouseCtrlDown = true;
			kha_SystemImpl.mouse.sendDownEvent(0,1,kha_SystemImpl.mouseX,kha_SystemImpl.mouseY);
		} else {
			kha_SystemImpl.leftMouseCtrlDown = false;
			kha_SystemImpl.mouse.sendDownEvent(0,0,kha_SystemImpl.mouseX,kha_SystemImpl.mouseY);
		}
		if(($_=kha_SystemImpl.khanvas,$bind($_,$_.setCapture)) != null) {
			kha_SystemImpl.khanvas.setCapture();
		}
		kha_SystemImpl.khanvas.ownerDocument.addEventListener("mouseup",kha_SystemImpl.mouseLeftUp);
	} else if(event.which == 2) {
		kha_SystemImpl.mouse.sendDownEvent(0,2,kha_SystemImpl.mouseX,kha_SystemImpl.mouseY);
		kha_SystemImpl.khanvas.ownerDocument.addEventListener("mouseup",kha_SystemImpl.mouseMiddleUp);
	} else if(event.which == 3) {
		kha_SystemImpl.mouse.sendDownEvent(0,1,kha_SystemImpl.mouseX,kha_SystemImpl.mouseY);
		kha_SystemImpl.khanvas.ownerDocument.addEventListener("mouseup",kha_SystemImpl.mouseRightUp);
	}
	kha_SystemImpl.insideInputEvent = false;
};
kha_SystemImpl.mouseLeftUp = function(event) {
	kha_SystemImpl.unlockSoundOnIOS();
	if(event.which != 1) {
		return;
	}
	kha_SystemImpl.insideInputEvent = true;
	kha_SystemImpl.khanvas.ownerDocument.removeEventListener("mouseup",kha_SystemImpl.mouseLeftUp);
	if(($_=kha_SystemImpl.khanvas,$bind($_,$_.releaseCapture)) != null) {
		kha_SystemImpl.khanvas.ownerDocument.releaseCapture();
	}
	if(kha_SystemImpl.leftMouseCtrlDown) {
		kha_SystemImpl.mouse.sendUpEvent(0,1,kha_SystemImpl.mouseX,kha_SystemImpl.mouseY);
	} else {
		kha_SystemImpl.mouse.sendUpEvent(0,0,kha_SystemImpl.mouseX,kha_SystemImpl.mouseY);
	}
	kha_SystemImpl.leftMouseCtrlDown = false;
	kha_SystemImpl.insideInputEvent = false;
};
kha_SystemImpl.mouseMiddleUp = function(event) {
	kha_SystemImpl.unlockSoundOnIOS();
	if(event.which != 2) {
		return;
	}
	kha_SystemImpl.insideInputEvent = true;
	kha_SystemImpl.khanvas.ownerDocument.removeEventListener("mouseup",kha_SystemImpl.mouseMiddleUp);
	kha_SystemImpl.mouse.sendUpEvent(0,2,kha_SystemImpl.mouseX,kha_SystemImpl.mouseY);
	kha_SystemImpl.insideInputEvent = false;
};
kha_SystemImpl.mouseRightUp = function(event) {
	kha_SystemImpl.unlockSoundOnIOS();
	if(event.which != 3) {
		return;
	}
	kha_SystemImpl.insideInputEvent = true;
	kha_SystemImpl.khanvas.ownerDocument.removeEventListener("mouseup",kha_SystemImpl.mouseRightUp);
	kha_SystemImpl.mouse.sendUpEvent(0,1,kha_SystemImpl.mouseX,kha_SystemImpl.mouseY);
	kha_SystemImpl.insideInputEvent = false;
};
kha_SystemImpl.mouseMove = function(event) {
	kha_SystemImpl.insideInputEvent = true;
	kha_SystemImpl.unlockSoundOnIOS();
	var lastMouseX = kha_SystemImpl.mouseX;
	var lastMouseY = kha_SystemImpl.mouseY;
	kha_SystemImpl.setMouseXY(event);
	var movementX = event.movementX;
	var movementY = event.movementY;
	if(event.movementX == null) {
		if(event.mozMovementX != null) {
			movementX = event.mozMovementX;
		} else if(event.webkitMovementX != null) {
			movementX = event.webkitMovementX;
		} else {
			movementX = kha_SystemImpl.mouseX - lastMouseX;
		}
		if(event.mozMovementY != null) {
			movementY = event.mozMovementY;
		} else if(event.webkitMovementY != null) {
			movementY = event.webkitMovementY;
		} else {
			movementY = kha_SystemImpl.mouseY - lastMouseY;
		}
	}
	kha_SystemImpl.mouse.sendMoveEvent(0,kha_SystemImpl.mouseX,kha_SystemImpl.mouseY,movementX,movementY);
	kha_SystemImpl.insideInputEvent = false;
};
kha_SystemImpl.setTouchXY = function(touch) {
	var rect = kha_SystemImpl.khanvas.getBoundingClientRect();
	var borderWidth = kha_SystemImpl.khanvas.clientLeft;
	var borderHeight = kha_SystemImpl.khanvas.clientTop;
	kha_SystemImpl.touchX = (touch.clientX - rect.left - borderWidth) * kha_SystemImpl.khanvas.width / (rect.width - 2 * borderWidth) | 0;
	kha_SystemImpl.touchY = (touch.clientY - rect.top - borderHeight) * kha_SystemImpl.khanvas.height / (rect.height - 2 * borderHeight) | 0;
};
kha_SystemImpl.touchDown = function(event) {
	kha_SystemImpl.insideInputEvent = true;
	kha_SystemImpl.unlockSoundOnIOS();
	event.stopPropagation();
	event.preventDefault();
	var _g = 0;
	var _g1 = event.changedTouches;
	while(_g < _g1.length) {
		var touch = _g1[_g];
		++_g;
		kha_SystemImpl.setTouchXY(touch);
		kha_SystemImpl.mouse.sendDownEvent(0,0,kha_SystemImpl.touchX,kha_SystemImpl.touchY);
		kha_SystemImpl.surface.sendTouchStartEvent(touch.identifier,kha_SystemImpl.touchX,kha_SystemImpl.touchY);
	}
	kha_SystemImpl.insideInputEvent = false;
};
kha_SystemImpl.touchUp = function(event) {
	kha_SystemImpl.insideInputEvent = true;
	kha_SystemImpl.unlockSoundOnIOS();
	var _g = 0;
	var _g1 = event.changedTouches;
	while(_g < _g1.length) {
		var touch = _g1[_g];
		++_g;
		kha_SystemImpl.setTouchXY(touch);
		kha_SystemImpl.mouse.sendUpEvent(0,0,kha_SystemImpl.touchX,kha_SystemImpl.touchY);
		kha_SystemImpl.surface.sendTouchEndEvent(touch.identifier,kha_SystemImpl.touchX,kha_SystemImpl.touchY);
	}
	kha_SystemImpl.insideInputEvent = false;
};
kha_SystemImpl.touchMove = function(event) {
	kha_SystemImpl.insideInputEvent = true;
	kha_SystemImpl.unlockSoundOnIOS();
	var index = 0;
	var _g = 0;
	var _g1 = event.changedTouches;
	while(_g < _g1.length) {
		var touch = _g1[_g];
		++_g;
		kha_SystemImpl.setTouchXY(touch);
		if(index == 0) {
			var movementX = kha_SystemImpl.touchX - kha_SystemImpl.lastFirstTouchX;
			var movementY = kha_SystemImpl.touchY - kha_SystemImpl.lastFirstTouchY;
			kha_SystemImpl.lastFirstTouchX = kha_SystemImpl.touchX;
			kha_SystemImpl.lastFirstTouchY = kha_SystemImpl.touchY;
			kha_SystemImpl.mouse.sendMoveEvent(0,kha_SystemImpl.touchX,kha_SystemImpl.touchY,movementX,movementY);
		}
		kha_SystemImpl.surface.sendMoveEvent(touch.identifier,kha_SystemImpl.touchX,kha_SystemImpl.touchY);
		++index;
	}
	kha_SystemImpl.insideInputEvent = false;
};
kha_SystemImpl.onBlur = function() {
	kha_System.background();
};
kha_SystemImpl.onFocus = function() {
	kha_System.foreground();
};
kha_SystemImpl.keycodeToChar = function(key,keycode,shift) {
	if(key != null) {
		if(key.length == 1) {
			return key;
		}
		switch(key) {
		case "Add":
			return "+";
		case "Divide":
			return "/";
		case "Multiply":
			return "*";
		case "Subtract":
			return "-";
		}
	}
	switch(keycode) {
	case 48:
		if(shift) {
			return "=";
		} else {
			return "0";
		}
		break;
	case 49:
		if(shift) {
			return "!";
		} else {
			return "1";
		}
		break;
	case 50:
		if(shift) {
			return "\"";
		} else {
			return "2";
		}
		break;
	case 51:
		if(shift) {
			return "§";
		} else {
			return "3";
		}
		break;
	case 52:
		if(shift) {
			return "$";
		} else {
			return "4";
		}
		break;
	case 53:
		if(shift) {
			return "%";
		} else {
			return "5";
		}
		break;
	case 54:
		if(shift) {
			return "&";
		} else {
			return "6";
		}
		break;
	case 55:
		if(shift) {
			return "/";
		} else {
			return "7";
		}
		break;
	case 56:
		if(shift) {
			return "(";
		} else {
			return "8";
		}
		break;
	case 57:
		if(shift) {
			return ")";
		} else {
			return "9";
		}
		break;
	case 106:
		return "*";
	case 107:
		return "+";
	case 109:
		return "-";
	case 111:
		return "/";
	case 187:
		if(shift) {
			return "*";
		} else {
			return "+";
		}
		break;
	case 188:
		if(shift) {
			return ";";
		} else {
			return ",";
		}
		break;
	case 189:
		if(shift) {
			return "_";
		} else {
			return "-";
		}
		break;
	case 190:
		if(shift) {
			return ":";
		} else {
			return ".";
		}
		break;
	case 191:
		if(shift) {
			return "'";
		} else {
			return "#";
		}
		break;
	case 212:
		if(shift) {
			return "`";
		} else {
			return "´";
		}
		break;
	case 219:
		if(shift) {
			return "?";
		} else {
			return "ß";
		}
		break;
	case 226:
		if(shift) {
			return ">";
		} else {
			return "<";
		}
		break;
	}
	if(keycode >= 96 && keycode <= 105) {
		return String.fromCharCode(-48 + keycode);
	}
	if(keycode >= 65 && keycode <= 90) {
		if(shift) {
			return String.fromCharCode(keycode);
		} else {
			return String.fromCharCode(keycode - 65 + 97);
		}
	}
	return String.fromCharCode(keycode);
};
kha_SystemImpl.keyDown = function(event) {
	event.stopPropagation();
	if(kha_SystemImpl.pressedKeys[event.keyCode]) {
		event.preventDefault();
		return;
	}
	kha_SystemImpl.pressedKeys[event.keyCode] = true;
	var _g = event.keyCode;
	switch(_g) {
	case 8:
		kha_SystemImpl.keyboard.sendDownEvent(kha_Key.BACKSPACE,"");
		event.preventDefault();
		break;
	case 9:
		kha_SystemImpl.keyboard.sendDownEvent(kha_Key.TAB,"");
		event.preventDefault();
		break;
	case 13:
		kha_SystemImpl.keyboard.sendDownEvent(kha_Key.ENTER,"");
		event.preventDefault();
		break;
	case 16:
		kha_SystemImpl.keyboard.sendDownEvent(kha_Key.SHIFT,"");
		event.preventDefault();
		break;
	case 17:
		kha_SystemImpl.keyboard.sendDownEvent(kha_Key.CTRL,"");
		event.preventDefault();
		break;
	case 18:
		kha_SystemImpl.keyboard.sendDownEvent(kha_Key.ALT,"");
		event.preventDefault();
		break;
	case 27:
		kha_SystemImpl.keyboard.sendDownEvent(kha_Key.ESC,"");
		event.preventDefault();
		break;
	case 32:
		kha_SystemImpl.keyboard.sendDownEvent(kha_Key.CHAR," ");
		event.preventDefault();
		break;
	case 37:
		kha_SystemImpl.keyboard.sendDownEvent(kha_Key.LEFT,"");
		event.preventDefault();
		break;
	case 38:
		kha_SystemImpl.keyboard.sendDownEvent(kha_Key.UP,"");
		event.preventDefault();
		break;
	case 39:
		kha_SystemImpl.keyboard.sendDownEvent(kha_Key.RIGHT,"");
		event.preventDefault();
		break;
	case 40:
		kha_SystemImpl.keyboard.sendDownEvent(kha_Key.DOWN,"");
		event.preventDefault();
		break;
	case 46:
		kha_SystemImpl.keyboard.sendDownEvent(kha_Key.DEL,"");
		event.preventDefault();
		break;
	default:
		if(!event.altKey) {
			var $char = kha_SystemImpl.keycodeToChar(event.key,event.keyCode,event.shiftKey);
			kha_SystemImpl.keyboard.sendDownEvent(kha_Key.CHAR,$char);
		}
	}
};
kha_SystemImpl.keyUp = function(event) {
	event.preventDefault();
	event.stopPropagation();
	kha_SystemImpl.pressedKeys[event.keyCode] = false;
	var _g = event.keyCode;
	switch(_g) {
	case 8:
		kha_SystemImpl.keyboard.sendUpEvent(kha_Key.BACKSPACE,"");
		break;
	case 9:
		kha_SystemImpl.keyboard.sendUpEvent(kha_Key.TAB,"");
		break;
	case 13:
		kha_SystemImpl.keyboard.sendUpEvent(kha_Key.ENTER,"");
		break;
	case 16:
		kha_SystemImpl.keyboard.sendUpEvent(kha_Key.SHIFT,"");
		break;
	case 17:
		kha_SystemImpl.keyboard.sendUpEvent(kha_Key.CTRL,"");
		break;
	case 18:
		kha_SystemImpl.keyboard.sendUpEvent(kha_Key.ALT,"");
		break;
	case 27:
		kha_SystemImpl.keyboard.sendUpEvent(kha_Key.ESC,"");
		break;
	case 32:
		kha_SystemImpl.keyboard.sendUpEvent(kha_Key.CHAR," ");
		break;
	case 37:
		kha_SystemImpl.keyboard.sendUpEvent(kha_Key.LEFT,"");
		break;
	case 38:
		kha_SystemImpl.keyboard.sendUpEvent(kha_Key.UP,"");
		break;
	case 39:
		kha_SystemImpl.keyboard.sendUpEvent(kha_Key.RIGHT,"");
		break;
	case 40:
		kha_SystemImpl.keyboard.sendUpEvent(kha_Key.DOWN,"");
		break;
	case 46:
		kha_SystemImpl.keyboard.sendUpEvent(kha_Key.DEL,"");
		break;
	default:
		if(!event.altKey) {
			var $char = kha_SystemImpl.keycodeToChar(event.key,event.keyCode,event.shiftKey);
			kha_SystemImpl.keyboard.sendUpEvent(kha_Key.CHAR,$char);
		}
	}
};
kha_SystemImpl.canSwitchFullscreen = function() {
	return 'fullscreenElement ' in document ||
		'mozFullScreenElement' in document ||
		'webkitFullscreenElement' in document ||
		'msFullscreenElement' in document
		;
};
kha_SystemImpl.isFullscreen = function() {
	return document.fullscreenElement === this.khanvas ||
			document.mozFullScreenElement === this.khanvas ||
			document.webkitFullscreenElement === this.khanvas ||
			document.msFullscreenElement === this.khanvas ;
};
kha_SystemImpl.requestFullscreen = function() {
	if(($_=kha_SystemImpl.khanvas,$bind($_,$_.requestFullscreen))) {
		kha_SystemImpl.khanvas.requestFullscreen();
	} else if(kha_SystemImpl.khanvas.msRequestFullscreen) {
		kha_SystemImpl.khanvas.msRequestFullscreen();
	} else if(kha_SystemImpl.khanvas.mozRequestFullScreen) {
		kha_SystemImpl.khanvas.mozRequestFullScreen();
	} else if(kha_SystemImpl.khanvas.webkitRequestFullscreen) {
		kha_SystemImpl.khanvas.webkitRequestFullscreen();
	}
};
kha_SystemImpl.exitFullscreen = function() {
	if(document.exitFullscreen) {
		document.exitFullscreen();
	} else if(document.msExitFullscreen) {
		document.msExitFullscreen();
	} else if(document.mozCancelFullScreen) {
		document.mozCancelFullScreen();
	} else if(document.webkitExitFullscreen) {
		document.webkitExitFullscreen();
	}
};
kha_SystemImpl.notifyOfFullscreenChange = function(func,error) {
	window.document.addEventListener("fullscreenchange",func,false);
	window.document.addEventListener("mozfullscreenchange",func,false);
	window.document.addEventListener("webkitfullscreenchange",func,false);
	window.document.addEventListener("MSFullscreenChange",func,false);
	window.document.addEventListener("fullscreenerror",error,false);
	window.document.addEventListener("mozfullscreenerror",error,false);
	window.document.addEventListener("webkitfullscreenerror",error,false);
	window.document.addEventListener("MSFullscreenError",error,false);
};
kha_SystemImpl.removeFromFullscreenChange = function(func,error) {
	window.document.removeEventListener("fullscreenchange",func,false);
	window.document.removeEventListener("mozfullscreenchange",func,false);
	window.document.removeEventListener("webkitfullscreenchange",func,false);
	window.document.removeEventListener("MSFullscreenChange",func,false);
	window.document.removeEventListener("fullscreenerror",error,false);
	window.document.removeEventListener("mozfullscreenerror",error,false);
	window.document.removeEventListener("webkitfullscreenerror",error,false);
	window.document.removeEventListener("MSFullscreenError",error,false);
};
kha_SystemImpl.changeResolution = function(width,height) {
};
kha_SystemImpl.setKeepScreenOn = function(on) {
};
kha_SystemImpl.loadUrl = function(url) {
	window.open(url,"_blank");
};
var kha_Video = function() {
};
$hxClasses["kha.Video"] = kha_Video;
kha_Video.__name__ = ["kha","Video"];
kha_Video.__interfaces__ = [kha_Resource];
kha_Video.prototype = {
	width: function() {
		return 100;
	}
	,height: function() {
		return 100;
	}
	,play: function(loop) {
		if(loop == null) {
			loop = false;
		}
	}
	,pause: function() {
	}
	,stop: function() {
	}
	,getLength: function() {
		return 0;
	}
	,getCurrentPos: function() {
		return 0;
	}
	,getVolume: function() {
		return 1;
	}
	,setVolume: function(volume) {
	}
	,isFinished: function() {
		return this.getCurrentPos() >= this.getLength();
	}
	,unload: function() {
	}
	,__class__: kha_Video
};
var kha_WebGLImage = function(width,height,format,renderTarget,depthStencilFormat) {
	this.depthTexture = null;
	this.texture = null;
	this.renderBuffer = null;
	this.frameBuffer = null;
	this.myWidth = width;
	this.myHeight = height;
	this.format = format;
	this.renderTarget = renderTarget;
	this.image = null;
	this.video = null;
	this.depthStencilFormat = depthStencilFormat;
	kha_WebGLImage.init();
	if(renderTarget) {
		this.createTexture();
	}
};
$hxClasses["kha.WebGLImage"] = kha_WebGLImage;
kha_WebGLImage.__name__ = ["kha","WebGLImage"];
kha_WebGLImage.init = function() {
	if(kha_WebGLImage.context == null) {
		var canvas = window.document.createElement("canvas");
		if(canvas != null) {
			kha_WebGLImage.context = canvas.getContext("2d");
			canvas.width = 2048;
			canvas.height = 2048;
			kha_WebGLImage.context.globalCompositeOperation = "copy";
		}
	}
};
kha_WebGLImage.upperPowerOfTwo = function(v) {
	--v;
	v |= v >>> 1;
	v |= v >>> 2;
	v |= v >>> 4;
	v |= v >>> 8;
	v |= v >>> 16;
	return ++v;
};
kha_WebGLImage.formatByteSize = function(format) {
	switch(format[1]) {
	case 0:
		return 4;
	case 1:
		return 1;
	case 2:
		return 16;
	case 3:
		return 2;
	case 4:
		return 8;
	case 5:
		return 4;
	case 6:
		return 2;
	}
};
kha_WebGLImage.__super__ = kha_Image;
kha_WebGLImage.prototype = $extend(kha_Image.prototype,{
	get_g1: function() {
		if(this.graphics1 == null) {
			this.graphics1 = new kha_graphics2_Graphics1(this);
		}
		return this.graphics1;
	}
	,get_g2: function() {
		if(this.graphics2 == null) {
			this.graphics2 = new kha_js_graphics4_Graphics2(this);
		}
		return this.graphics2;
	}
	,get_g4: function() {
		if(this.graphics4 == null) {
			this.graphics4 = new kha_js_graphics4_Graphics(this);
		}
		return this.graphics4;
	}
	,get_width: function() {
		return this.myWidth;
	}
	,get_height: function() {
		return this.myHeight;
	}
	,get_realWidth: function() {
		return this.myWidth;
	}
	,get_realHeight: function() {
		return this.myHeight;
	}
	,isOpaque: function(x,y) {
		if(this.data == null) {
			if(kha_WebGLImage.context == null) {
				return true;
			} else {
				this.createImageData();
			}
		}
		return this.data.data[y * (this.image.width | 0) * 4 + x * 4 + 3] != 0;
	}
	,at: function(x,y) {
		if(this.data == null) {
			if(kha_WebGLImage.context == null) {
				return -16777216;
			} else {
				this.createImageData();
			}
		}
		var r = this.data.data[y * (this.image.width | 0) * 4 + x * 4];
		var g = this.data.data[y * (this.image.width | 0) * 4 + x * 4 + 1];
		var b = this.data.data[y * (this.image.width | 0) * 4 + x * 4 + 2];
		var a = this.data.data[y * (this.image.width | 0) * 4 + x * 4 + 3];
		return kha__$Color_Color_$Impl_$._new(a << 24 | r << 16 | g << 8 | b);
	}
	,createImageData: function() {
		if(js_Boot.__instanceof(this.image,Uint8Array)) {
			this.data = new ImageData(new Uint8ClampedArray(this.image.buffer),this.get_width(),this.get_height());
		} else {
			kha_WebGLImage.context.strokeStyle = "rgba(0,0,0,0)";
			kha_WebGLImage.context.fillStyle = "rgba(0,0,0,0)";
			kha_WebGLImage.context.fillRect(0,0,this.image.width,this.image.height);
			kha_WebGLImage.context.drawImage(this.image,0,0,this.image.width,this.image.height,0,0,this.image.width,this.image.height);
			this.data = kha_WebGLImage.context.getImageData(0,0,this.image.width,this.image.height);
		}
	}
	,createTexture: function() {
		if(kha_SystemImpl.gl == null) {
			return;
		}
		this.texture = kha_SystemImpl.gl.createTexture();
		kha_SystemImpl.gl.bindTexture(3553,this.texture);
		kha_SystemImpl.gl.texParameteri(3553,10240,9729);
		kha_SystemImpl.gl.texParameteri(3553,10241,9729);
		kha_SystemImpl.gl.texParameteri(3553,10242,33071);
		kha_SystemImpl.gl.texParameteri(3553,10243,33071);
		if(this.renderTarget) {
			this.frameBuffer = kha_SystemImpl.gl.createFramebuffer();
			kha_SystemImpl.gl.bindFramebuffer(36160,this.frameBuffer);
			var _g = this.format;
			switch(_g[1]) {
			case 0:
				kha_SystemImpl.gl.texImage2D(3553,0,6408,this.get_realWidth(),this.get_realHeight(),0,6408,5121,null);
				break;
			case 2:
				kha_SystemImpl.gl.texImage2D(3553,0,6408,this.get_realWidth(),this.get_realHeight(),0,6408,5126,null);
				break;
			case 3:
				kha_SystemImpl.gl.texImage2D(3553,0,6402,this.get_realWidth(),this.get_realHeight(),0,6402,5123,null);
				break;
			case 4:
				kha_SystemImpl.gl.texImage2D(3553,0,6408,this.get_realWidth(),this.get_realHeight(),0,6408,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,null);
				break;
			case 5:
				kha_SystemImpl.gl.texImage2D(3553,0,6406,this.get_realWidth(),this.get_realHeight(),0,6406,5126,null);
				break;
			case 6:
				kha_SystemImpl.gl.texImage2D(3553,0,6406,this.get_realWidth(),this.get_realHeight(),0,6406,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,null);
				break;
			default:
				kha_SystemImpl.gl.texImage2D(3553,0,6408,this.get_realWidth(),this.get_realHeight(),0,6408,5121,null);
			}
			if(this.format == kha_graphics4_TextureFormat.DEPTH16) {
				kha_SystemImpl.gl.framebufferTexture2D(36160,36096,3553,this.texture,0);
				if(navigator.appVersion.indexOf("Win") == -1) {
					var colortex = kha_SystemImpl.gl.createTexture();
					kha_SystemImpl.gl.bindTexture(3553,colortex);
					kha_SystemImpl.gl.texImage2D(3553,0,6408,this.get_realWidth(),this.get_realHeight(),0,6408,5121,null);
					kha_SystemImpl.gl.framebufferTexture2D(36160,36064,3553,colortex,0);
					kha_SystemImpl.gl.bindTexture(3553,this.texture);
				}
			} else {
				kha_SystemImpl.gl.framebufferTexture2D(36160,36064,3553,this.texture,0);
			}
			this.initDepthStencilBuffer(this.depthStencilFormat);
			kha_SystemImpl.gl.bindRenderbuffer(36161,null);
			kha_SystemImpl.gl.bindFramebuffer(36160,null);
		} else if(this.video != null) {
			kha_SystemImpl.gl.texImage2D(3553,0,6408,6408,5121,this.video);
		} else {
			var _g1 = this.format;
			switch(_g1[1]) {
			case 0:
				if(js_Boot.__instanceof(this.image,Uint8Array)) {
					kha_SystemImpl.gl.texImage2D(3553,0,6408,this.myWidth,this.myHeight,0,6408,5121,this.image);
				} else {
					kha_SystemImpl.gl.texImage2D(3553,0,6408,6408,5121,this.image);
				}
				break;
			case 2:
				kha_SystemImpl.gl.texImage2D(3553,0,6408,this.myWidth,this.myHeight,0,6408,5126,this.image);
				break;
			case 4:
				kha_SystemImpl.gl.texImage2D(3553,0,6408,this.myWidth,this.myHeight,0,6408,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,this.image);
				break;
			case 5:
				kha_SystemImpl.gl.texImage2D(3553,0,6406,this.myWidth,this.myHeight,0,6406,5126,this.image);
				break;
			case 6:
				kha_SystemImpl.gl.texImage2D(3553,0,6406,this.myWidth,this.myHeight,0,6406,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,this.image);
				break;
			default:
				kha_SystemImpl.gl.texImage2D(3553,0,6408,6408,5121,this.image);
			}
		}
		kha_SystemImpl.gl.bindTexture(3553,null);
	}
	,initDepthStencilBuffer: function(depthStencilFormat) {
		switch(depthStencilFormat) {
		case 0:
			break;
		case 1:case 5:
			if(kha_SystemImpl.depthTexture == null) {
				this.renderBuffer = kha_SystemImpl.gl.createRenderbuffer();
				kha_SystemImpl.gl.bindRenderbuffer(36161,this.renderBuffer);
				kha_SystemImpl.gl.renderbufferStorage(36161,33189,this.get_realWidth(),this.get_realHeight());
				kha_SystemImpl.gl.framebufferRenderbuffer(36160,36096,36161,this.renderBuffer);
			} else {
				this.depthTexture = kha_SystemImpl.gl.createTexture();
				kha_SystemImpl.gl.bindTexture(3553,this.depthTexture);
				var format = depthStencilFormat == 5 ? 33189 : 6402;
				kha_SystemImpl.gl.texImage2D(3553,0,format,this.get_realWidth(),this.get_realHeight(),0,6402,5125,null);
				kha_SystemImpl.gl.texParameteri(3553,10240,9728);
				kha_SystemImpl.gl.texParameteri(3553,10241,9728);
				kha_SystemImpl.gl.texParameteri(3553,10242,33071);
				kha_SystemImpl.gl.texParameteri(3553,10243,33071);
				kha_SystemImpl.gl.bindFramebuffer(36160,this.frameBuffer);
				kha_SystemImpl.gl.framebufferTexture2D(36160,36096,3553,this.depthTexture,0);
			}
			break;
		case 2:case 3:case 4:
			if(kha_SystemImpl.depthTexture == null) {
				this.renderBuffer = kha_SystemImpl.gl.createRenderbuffer();
				kha_SystemImpl.gl.bindRenderbuffer(36161,this.renderBuffer);
				kha_SystemImpl.gl.renderbufferStorage(36161,34041,this.get_realWidth(),this.get_realHeight());
				kha_SystemImpl.gl.framebufferRenderbuffer(36160,33306,36161,this.renderBuffer);
			} else {
				this.depthTexture = kha_SystemImpl.gl.createTexture();
				kha_SystemImpl.gl.bindTexture(3553,this.depthTexture);
				kha_SystemImpl.gl.texImage2D(3553,0,34041,this.get_realWidth(),this.get_realHeight(),0,34041,kha_SystemImpl.depthTexture.UNSIGNED_INT_24_8_WEBGL,null);
				kha_SystemImpl.gl.texParameteri(3553,10240,9728);
				kha_SystemImpl.gl.texParameteri(3553,10241,9728);
				kha_SystemImpl.gl.texParameteri(3553,10242,33071);
				kha_SystemImpl.gl.texParameteri(3553,10243,33071);
				kha_SystemImpl.gl.bindFramebuffer(36160,this.frameBuffer);
				kha_SystemImpl.gl.framebufferTexture2D(36160,33306,3553,this.depthTexture,0);
			}
			break;
		}
	}
	,set: function(stage) {
		kha_SystemImpl.gl.activeTexture(33984 + stage);
		kha_SystemImpl.gl.bindTexture(3553,this.texture);
		if(this.video != null) {
			kha_SystemImpl.gl.texImage2D(3553,0,6408,6408,5121,this.video);
		}
	}
	,setDepth: function(stage) {
		kha_SystemImpl.gl.activeTexture(33984 + stage);
		kha_SystemImpl.gl.bindTexture(3553,this.depthTexture);
	}
	,setDepthStencilFrom: function(image) {
		kha_SystemImpl.gl.bindFramebuffer(36160,this.frameBuffer);
		kha_SystemImpl.gl.framebufferTexture2D(36160,36096,3553,(js_Boot.__cast(image , kha_WebGLImage)).depthTexture,0);
	}
	,bytesToArray: function(bytes) {
		var _g = this.format;
		switch(_g[1]) {
		case 0:case 1:
			return new Uint8Array(bytes.b.bufferValue);
		case 2:case 4:case 5:case 6:
			return new Float32Array(bytes.b.bufferValue);
		default:
			return new Uint8Array(bytes.b.bufferValue);
		}
	}
	,lock: function(level) {
		if(level == null) {
			level = 0;
		}
		this.bytes = new haxe_io_Bytes(new ArrayBuffer(kha_WebGLImage.formatByteSize(this.format) * this.get_width() * this.get_height()));
		return this.bytes;
	}
	,unlock: function() {
		if(kha_SystemImpl.gl != null) {
			this.texture = kha_SystemImpl.gl.createTexture();
			kha_SystemImpl.gl.bindTexture(3553,this.texture);
			kha_SystemImpl.gl.texParameteri(3553,10240,9729);
			kha_SystemImpl.gl.texParameteri(3553,10241,9729);
			kha_SystemImpl.gl.texParameteri(3553,10242,33071);
			kha_SystemImpl.gl.texParameteri(3553,10243,33071);
			var _g = this.format;
			switch(_g[1]) {
			case 0:
				kha_SystemImpl.gl.texImage2D(3553,0,6408,this.get_width(),this.get_height(),0,6408,5121,this.bytesToArray(this.bytes));
				break;
			case 1:
				kha_SystemImpl.gl.texImage2D(3553,0,6409,this.get_width(),this.get_height(),0,6409,5121,this.bytesToArray(this.bytes));
				if(kha_SystemImpl.gl.getError() == 1282) {
					var rgbaBytes = new haxe_io_Bytes(new ArrayBuffer(this.get_width() * this.get_height() * 4));
					var _g1 = 0;
					var _g2 = this.get_height();
					while(_g1 < _g2) {
						var y = _g1++;
						var _g3 = 0;
						var _g21 = this.get_width();
						while(_g3 < _g21) {
							var x = _g3++;
							var _this = this.bytes;
							var pos = y * this.get_width() + x;
							var value = _this.b[pos];
							var pos1 = y * this.get_width() * 4 + x * 4;
							rgbaBytes.b[pos1] = value & 255;
							var pos2 = y * this.get_width() * 4 + x * 4 + 1;
							rgbaBytes.b[pos2] = value & 255;
							var pos3 = y * this.get_width() * 4 + x * 4 + 2;
							rgbaBytes.b[pos3] = value & 255;
							var pos4 = y * this.get_width() * 4 + x * 4 + 3;
							rgbaBytes.b[pos4] = 255;
						}
					}
					kha_SystemImpl.gl.texImage2D(3553,0,6408,this.get_width(),this.get_height(),0,6408,5121,this.bytesToArray(rgbaBytes));
				}
				break;
			case 2:
				kha_SystemImpl.gl.texImage2D(3553,0,6408,this.get_width(),this.get_height(),0,6408,5126,this.bytesToArray(this.bytes));
				break;
			case 4:
				kha_SystemImpl.gl.texImage2D(3553,0,6408,this.get_width(),this.get_height(),0,6408,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,this.bytesToArray(this.bytes));
				break;
			case 5:
				kha_SystemImpl.gl.texImage2D(3553,0,6406,this.get_width(),this.get_height(),0,6406,5126,this.bytesToArray(this.bytes));
				break;
			case 6:
				kha_SystemImpl.gl.texImage2D(3553,0,6406,this.get_width(),this.get_height(),0,6406,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,this.bytesToArray(this.bytes));
				break;
			default:
				kha_SystemImpl.gl.texImage2D(3553,0,6408,this.get_width(),this.get_height(),0,6408,5121,this.bytesToArray(this.bytes));
			}
			kha_SystemImpl.gl.bindTexture(3553,null);
			this.bytes = null;
		}
	}
	,unload: function() {
		if(this.texture != null) {
			kha_SystemImpl.gl.deleteTexture(this.texture);
		}
		if(this.depthTexture != null) {
			kha_SystemImpl.gl.deleteTexture(this.depthTexture);
		}
		if(this.frameBuffer != null) {
			kha_SystemImpl.gl.deleteFramebuffer(this.frameBuffer);
		}
		if(this.renderBuffer != null) {
			kha_SystemImpl.gl.deleteRenderbuffer(this.renderBuffer);
		}
	}
	,generateMipmaps: function(levels) {
		kha_SystemImpl.gl.bindTexture(3553,this.texture);
		kha_SystemImpl.gl.generateMipmap(3553);
	}
	,setMipmaps: function(mipmaps) {
		kha_SystemImpl.gl.bindTexture(3553,this.texture);
		if(this.format != kha_graphics4_TextureFormat.RGBA32) {
			var _g1 = 0;
			var _g = mipmaps.length;
			while(_g1 < _g) {
				var i = _g1++;
				kha_SystemImpl.gl.texImage2D(3553,i + 1,6408,mipmaps[i].get_width(),mipmaps[i].get_height(),0,6408,this.format == kha_graphics4_TextureFormat.RGBA128 ? 5126 : kha_SystemImpl.halfFloat.HALF_FLOAT_OES,(js_Boot.__cast(mipmaps[i] , kha_WebGLImage)).image);
			}
		} else {
			var _g11 = 0;
			var _g2 = mipmaps.length;
			while(_g11 < _g2) {
				var i1 = _g11++;
				kha_SystemImpl.gl.texImage2D(3553,i1 + 1,6408,6408,5121,(js_Boot.__cast(mipmaps[i1] , kha_WebGLImage)).image);
			}
		}
	}
	,__class__: kha_WebGLImage
});
var kha_WindowMode = $hxClasses["kha.WindowMode"] = { __ename__ : true, __constructs__ : ["Window","BorderlessWindow","Fullscreen"] };
kha_WindowMode.Window = ["Window",0];
kha_WindowMode.Window.toString = $estr;
kha_WindowMode.Window.__enum__ = kha_WindowMode;
kha_WindowMode.BorderlessWindow = ["BorderlessWindow",1];
kha_WindowMode.BorderlessWindow.toString = $estr;
kha_WindowMode.BorderlessWindow.__enum__ = kha_WindowMode;
kha_WindowMode.Fullscreen = ["Fullscreen",2];
kha_WindowMode.Fullscreen.toString = $estr;
kha_WindowMode.Fullscreen.__enum__ = kha_WindowMode;
var kha_Position = $hxClasses["kha.Position"] = { __ename__ : true, __constructs__ : ["Center","Fixed"] };
kha_Position.Center = ["Center",0];
kha_Position.Center.toString = $estr;
kha_Position.Center.__enum__ = kha_Position;
kha_Position.Fixed = function(v) { var $x = ["Fixed",1,v]; $x.__enum__ = kha_Position; $x.toString = $estr; return $x; };
var kha_TargetDisplay = $hxClasses["kha.TargetDisplay"] = { __ename__ : true, __constructs__ : ["Primary","ById"] };
kha_TargetDisplay.Primary = ["Primary",0];
kha_TargetDisplay.Primary.toString = $estr;
kha_TargetDisplay.Primary.__enum__ = kha_TargetDisplay;
kha_TargetDisplay.ById = function(id) { var $x = ["ById",1,id]; $x.__enum__ = kha_TargetDisplay; $x.toString = $estr; return $x; };
var kha_RendererOptions = function(textureFormat,depthStencilFormat,samplesPerPixel) {
	this.textureFormat = textureFormat;
	this.depthStencilFormat = depthStencilFormat;
	this.samplesPerPixel = samplesPerPixel;
};
$hxClasses["kha.RendererOptions"] = kha_RendererOptions;
kha_RendererOptions.__name__ = ["kha","RendererOptions"];
kha_RendererOptions.prototype = {
	__class__: kha_RendererOptions
};
var kha_WindowedModeOptions = function(minimizable,maximizable,resizable) {
	this.minimizable = minimizable;
	this.maximizable = maximizable;
	this.resizable = resizable;
};
$hxClasses["kha.WindowedModeOptions"] = kha_WindowedModeOptions;
kha_WindowedModeOptions.__name__ = ["kha","WindowedModeOptions"];
kha_WindowedModeOptions.prototype = {
	__class__: kha_WindowedModeOptions
};
var kha_WindowOptions = function(width,height,mode,title,x,y,targetDisplay,rendererOptions,windowedModeOptions) {
	this.width = width;
	this.height = height;
	this.mode = mode;
	this.title = title;
	this.x = x;
	this.y = y;
	this.targetDisplay = targetDisplay;
	this.rendererOptions = rendererOptions;
	this.windowedModeOptions = windowedModeOptions;
};
$hxClasses["kha.WindowOptions"] = kha_WindowOptions;
kha_WindowOptions.__name__ = ["kha","WindowOptions"];
kha_WindowOptions.prototype = {
	__class__: kha_WindowOptions
};
var kha_arrays__$Float32Array_Float32Array_$Impl_$ = {};
$hxClasses["kha.arrays._Float32Array.Float32Array_Impl_"] = kha_arrays__$Float32Array_Float32Array_$Impl_$;
kha_arrays__$Float32Array_Float32Array_$Impl_$.__name__ = ["kha","arrays","_Float32Array","Float32Array_Impl_"];
kha_arrays__$Float32Array_Float32Array_$Impl_$.__properties__ = {get_length:"get_length"};
kha_arrays__$Float32Array_Float32Array_$Impl_$._new = function(elements) {
	var this1 = new Float32Array(elements);
	return this1;
};
kha_arrays__$Float32Array_Float32Array_$Impl_$.get_length = function(this1) {
	return this1.length;
};
kha_arrays__$Float32Array_Float32Array_$Impl_$.set = function(this1,index,value) {
	return this1[index] = value;
};
kha_arrays__$Float32Array_Float32Array_$Impl_$.get = function(this1,index) {
	return this1[index];
};
kha_arrays__$Float32Array_Float32Array_$Impl_$.data = function(this1) {
	return this1;
};
var kha_audio1_AudioChannel = function() { };
$hxClasses["kha.audio1.AudioChannel"] = kha_audio1_AudioChannel;
kha_audio1_AudioChannel.__name__ = ["kha","audio1","AudioChannel"];
kha_audio1_AudioChannel.prototype = {
	__class__: kha_audio1_AudioChannel
	,__properties__: {get_finished:"get_finished",set_volume:"set_volume",get_volume:"get_volume",get_position:"get_position",get_length:"get_length"}
};
var kha_audio2_Audio = function() { };
$hxClasses["kha.audio2.Audio"] = kha_audio2_Audio;
kha_audio2_Audio.__name__ = ["kha","audio2","Audio"];
kha_audio2_Audio.initContext = function() {
	try {
		kha_audio2_Audio._context = new AudioContext();
		return;
	} catch( e ) {
	}
	try {
		this._context = new webkitAudioContext();
		return;
	} catch( e1 ) {
	}
};
kha_audio2_Audio._init = function() {
	kha_audio2_Audio.initContext();
	if(kha_audio2_Audio._context == null) {
		return false;
	}
	var bufferSize = 2048;
	kha_audio2_Audio.buffer = new kha_audio2_Buffer(bufferSize * 4,2,kha_audio2_Audio._context.sampleRate | 0);
	kha_audio2_Audio.processingNode = kha_audio2_Audio._context.createScriptProcessor(bufferSize,0,2);
	kha_audio2_Audio.processingNode.onaudioprocess = function(e) {
		var output1 = e.outputBuffer.getChannelData(0);
		var output2 = e.outputBuffer.getChannelData(1);
		if(kha_audio2_Audio.audioCallback != null) {
			kha_audio2_Audio.audioCallback(e.outputBuffer.length * 2,kha_audio2_Audio.buffer);
			var _g1 = 0;
			var _g = e.outputBuffer.length;
			while(_g1 < _g) {
				var i = _g1++;
				output1[i] = kha_audio2_Audio.buffer.data[kha_audio2_Audio.buffer.readLocation];
				kha_audio2_Audio.buffer.readLocation += 1;
				output2[i] = kha_audio2_Audio.buffer.data[kha_audio2_Audio.buffer.readLocation];
				kha_audio2_Audio.buffer.readLocation += 1;
				if(kha_audio2_Audio.buffer.readLocation >= kha_audio2_Audio.buffer.size) {
					kha_audio2_Audio.buffer.readLocation = 0;
				}
			}
		} else {
			var _g11 = 0;
			var _g2 = e.outputBuffer.length;
			while(_g11 < _g2) {
				var i1 = _g11++;
				output1[i1] = 0;
				output2[i1] = 0;
			}
		}
	};
	kha_audio2_Audio.processingNode.connect(kha_audio2_Audio._context.destination);
	return true;
};
kha_audio2_Audio.stream = function(sound,loop) {
	if(loop == null) {
		loop = false;
	}
	var element = window.document.createElement("audio");
	var blob = new Blob([sound.compressedData.b.bufferValue],{ type : "audio/mp4"});
	element.src = URL.createObjectURL(blob);
	element.loop = loop;
	var channel = new kha_js_AEAudioChannel(element);
	channel.play();
	return channel;
};
var kha_audio2_Audio1 = function() { };
$hxClasses["kha.audio2.Audio1"] = kha_audio2_Audio1;
kha_audio2_Audio1.__name__ = ["kha","audio2","Audio1"];
kha_audio2_Audio1._init = function() {
	var this1 = new Array(16);
	kha_audio2_Audio1.soundChannels = this1;
	var this2 = new Array(16);
	kha_audio2_Audio1.streamChannels = this2;
	var this3 = new Array(16);
	kha_audio2_Audio1.internalSoundChannels = this3;
	var this4 = new Array(16);
	kha_audio2_Audio1.internalStreamChannels = this4;
	var this5 = new Array(512);
	kha_audio2_Audio1.sampleCache1 = this5;
	var this6 = new Array(512);
	kha_audio2_Audio1.sampleCache2 = this6;
	kha_audio2_Audio.audioCallback = kha_audio2_Audio1._mix;
};
kha_audio2_Audio1.max = function(a,b) {
	if(a > b) {
		return a;
	} else {
		return b;
	}
};
kha_audio2_Audio1.min = function(a,b) {
	if(a < b) {
		return a;
	} else {
		return b;
	}
};
kha_audio2_Audio1._mix = function(samples,buffer) {
	if(kha_audio2_Audio1.sampleCache1.length < samples) {
		var this1 = new Array(samples);
		kha_audio2_Audio1.sampleCache1 = this1;
		var this2 = new Array(samples);
		kha_audio2_Audio1.sampleCache2 = this2;
	}
	var _g1 = 0;
	var _g = samples;
	while(_g1 < _g) {
		var i = _g1++;
		kha_audio2_Audio1.sampleCache2[i] = 0;
	}
	var _g2 = 0;
	while(_g2 < 16) {
		var i1 = _g2++;
		kha_audio2_Audio1.internalSoundChannels[i1] = kha_audio2_Audio1.soundChannels[i1];
	}
	var _g3 = 0;
	while(_g3 < 16) {
		var i2 = _g3++;
		kha_audio2_Audio1.internalStreamChannels[i2] = kha_audio2_Audio1.streamChannels[i2];
	}
	var _g4 = 0;
	var _g11 = kha_audio2_Audio1.internalSoundChannels;
	while(_g4 < _g11.length) {
		var channel = _g11[_g4];
		++_g4;
		if(channel == null || channel.get_finished()) {
			continue;
		}
		channel.nextSamples(kha_audio2_Audio1.sampleCache1,samples,buffer.samplesPerSecond);
		var _g31 = 0;
		var _g21 = samples;
		while(_g31 < _g21) {
			var i3 = _g31++;
			var _g41 = i3;
			var _g5 = kha_audio2_Audio1.sampleCache2;
			var val = kha_audio2_Audio1.sampleCache1[i3] * channel.get_volume();
			_g5[_g41] = _g5[_g41] + val;
		}
	}
	var _g6 = 0;
	var _g12 = kha_audio2_Audio1.internalStreamChannels;
	while(_g6 < _g12.length) {
		var channel1 = _g12[_g6];
		++_g6;
		if(channel1 == null || channel1.get_finished()) {
			continue;
		}
		channel1.nextSamples(kha_audio2_Audio1.sampleCache1,samples,buffer.samplesPerSecond);
		var _g32 = 0;
		var _g22 = samples;
		while(_g32 < _g22) {
			var i4 = _g32++;
			var _g42 = i4;
			var _g51 = kha_audio2_Audio1.sampleCache2;
			var val1 = kha_audio2_Audio1.sampleCache1[i4] * channel1.get_volume();
			_g51[_g42] = _g51[_g42] + val1;
		}
	}
	var _g13 = 0;
	var _g7 = samples;
	while(_g13 < _g7) {
		var i5 = _g13++;
		var a = kha_audio2_Audio1.sampleCache2[i5];
		var a1 = a < 1.0 ? a : 1.0;
		buffer.data[buffer.writeLocation] = a1 > -1.0 ? a1 : -1.0;
		buffer.writeLocation += 1;
		if(buffer.writeLocation >= buffer.size) {
			buffer.writeLocation = 0;
		}
	}
};
kha_audio2_Audio1.play = function(sound,loop) {
	if(loop == null) {
		loop = false;
	}
	var channel = null;
	var _g = 0;
	while(_g < 16) {
		var i = _g++;
		if(kha_audio2_Audio1.soundChannels[i] == null || kha_audio2_Audio1.soundChannels[i].get_finished()) {
			channel = new kha_audio2_AudioChannel(loop);
			channel.data = sound.uncompressedData;
			kha_audio2_Audio1.soundChannels[i] = channel;
			break;
		}
	}
	return channel;
};
kha_audio2_Audio1._playAgain = function(channel) {
	var _g = 0;
	while(_g < 16) {
		var i = _g++;
		if(kha_audio2_Audio1.soundChannels[i] == null || kha_audio2_Audio1.soundChannels[i].get_finished() || kha_audio2_Audio1.soundChannels[i] == channel) {
			kha_audio2_Audio1.soundChannels[i] = channel;
			break;
		}
	}
};
kha_audio2_Audio1.stream = function(sound,loop) {
	if(loop == null) {
		loop = false;
	}
	var hardwareChannel = kha_audio2_Audio.stream(sound,loop);
	if(hardwareChannel != null) {
		return hardwareChannel;
	}
	var channel = null;
	var _g = 0;
	while(_g < 16) {
		var i = _g++;
		if(kha_audio2_Audio1.streamChannels[i] == null || kha_audio2_Audio1.streamChannels[i].get_finished()) {
			channel = new kha_audio2_StreamChannel(sound.compressedData,loop);
			kha_audio2_Audio1.streamChannels[i] = channel;
			break;
		}
	}
	return channel;
};
var kha_audio2_AudioChannel = function(looping) {
	this.paused = false;
	this.looping = looping;
	this.myVolume = 1;
	this.myPosition = 0;
};
$hxClasses["kha.audio2.AudioChannel"] = kha_audio2_AudioChannel;
kha_audio2_AudioChannel.__name__ = ["kha","audio2","AudioChannel"];
kha_audio2_AudioChannel.__interfaces__ = [kha_audio1_AudioChannel];
kha_audio2_AudioChannel.prototype = {
	nextSamples: function(samples,length,sampleRate) {
		if(this.paused) {
			var _g1 = 0;
			var _g = length;
			while(_g1 < _g) {
				var i = _g1++;
				samples[i] = 0;
			}
			return;
		}
		var _g11 = 0;
		var _g2 = length;
		while(_g11 < _g2) {
			var i1 = _g11++;
			if(this.myPosition >= this.data.length && this.looping) {
				this.myPosition = 0;
			}
			samples[i1] = this.myPosition < this.data.length ? this.data[this.myPosition] : 0;
			++this.myPosition;
		}
	}
	,play: function() {
		this.paused = false;
		if(this.get_finished()) {
			this.myPosition = 0;
			kha_audio2_Audio1._playAgain(this);
		}
	}
	,pause: function() {
		this.paused = true;
	}
	,stop: function() {
		this.myPosition = this.data.length;
	}
	,get_length: function() {
		return this.data.length / 44100 / 2;
	}
	,get_position: function() {
		return this.myPosition / 44100 / 2;
	}
	,get_volume: function() {
		return this.myVolume;
	}
	,set_volume: function(value) {
		return this.myVolume = value;
	}
	,get_finished: function() {
		return this.myPosition >= this.data.length;
	}
	,__class__: kha_audio2_AudioChannel
	,__properties__: {get_finished:"get_finished",set_volume:"set_volume",get_volume:"get_volume",get_position:"get_position",get_length:"get_length"}
};
var kha_audio2_Buffer = function(size,channels,samplesPerSecond) {
	this.size = size;
	var this1 = new Array(size);
	this.data = this1;
	this.channels = channels;
	this.samplesPerSecond = samplesPerSecond;
	this.readLocation = 0;
	this.writeLocation = 0;
};
$hxClasses["kha.audio2.Buffer"] = kha_audio2_Buffer;
kha_audio2_Buffer.__name__ = ["kha","audio2","Buffer"];
kha_audio2_Buffer.prototype = {
	__class__: kha_audio2_Buffer
};
var kha_audio2_StreamChannel = function(data,loop) {
	this.paused = false;
	this.atend = false;
	this.myVolume = 1;
	this.loop = loop;
	this.reader = kha_audio2_ogg_vorbis_Reader.openFromBytes(data);
};
$hxClasses["kha.audio2.StreamChannel"] = kha_audio2_StreamChannel;
kha_audio2_StreamChannel.__name__ = ["kha","audio2","StreamChannel"];
kha_audio2_StreamChannel.__interfaces__ = [kha_audio1_AudioChannel];
kha_audio2_StreamChannel.prototype = {
	nextSamples: function(samples,length,sampleRate) {
		if(this.paused) {
			var _g1 = 0;
			var _g = length;
			while(_g1 < _g) {
				var i = _g1++;
				samples[i] = 0;
			}
			return;
		}
		var count = this.reader.read(samples,length / 2 | 0,2,sampleRate,true) * 2;
		if(count < length) {
			if(this.loop) {
				this.reader.set_currentMillisecond(0);
			} else {
				this.atend = true;
			}
			var _g11 = count;
			var _g2 = length;
			while(_g11 < _g2) {
				var i1 = _g11++;
				samples[i1] = 0;
			}
		}
	}
	,play: function() {
		this.paused = false;
	}
	,pause: function() {
		this.paused = true;
	}
	,stop: function() {
		this.atend = true;
	}
	,get_length: function() {
		return this.reader.get_totalMillisecond() / 1000.0;
	}
	,get_position: function() {
		return this.reader.get_currentMillisecond() / 1000.0;
	}
	,get_volume: function() {
		return this.myVolume;
	}
	,set_volume: function(value) {
		return this.myVolume = value;
	}
	,get_finished: function() {
		return this.atend;
	}
	,__class__: kha_audio2_StreamChannel
	,__properties__: {get_finished:"get_finished",set_volume:"set_volume",get_volume:"get_volume",get_position:"get_position",get_length:"get_length"}
};
var kha_audio2_ogg_tools_Crc32 = function() { };
$hxClasses["kha.audio2.ogg.tools.Crc32"] = kha_audio2_ogg_tools_Crc32;
kha_audio2_ogg_tools_Crc32.__name__ = ["kha","audio2","ogg","tools","Crc32"];
kha_audio2_ogg_tools_Crc32.init = function() {
	if(kha_audio2_ogg_tools_Crc32.table != null) {
		return;
	}
	var this1 = new Array(256);
	kha_audio2_ogg_tools_Crc32.table = this1;
	var _g = 0;
	while(_g < 256) {
		var i = _g++;
		var s = i << 24;
		var _g1 = 0;
		while(_g1 < 8) {
			var j = _g1++;
			s = s << 1 ^ (_$UInt_UInt_$Impl_$.gte(s,1 << 31) ? 79764919 : 0);
		}
		kha_audio2_ogg_tools_Crc32.table[i] = s;
	}
};
kha_audio2_ogg_tools_Crc32.update = function(crc,$byte) {
	return crc << 8 ^ kha_audio2_ogg_tools_Crc32.table[$byte ^ crc >>> 24];
};
var kha_audio2_ogg_tools_MathTools = function() { };
$hxClasses["kha.audio2.ogg.tools.MathTools"] = kha_audio2_ogg_tools_MathTools;
kha_audio2_ogg_tools_MathTools.__name__ = ["kha","audio2","ogg","tools","MathTools"];
kha_audio2_ogg_tools_MathTools.ilog = function(n) {
	var log2_4 = [0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4];
	if(n < 16384) {
		if(n < 16) {
			return log2_4[n];
		} else if(n < 512) {
			return 5 + log2_4[n >> 5];
		} else {
			return 10 + log2_4[n >> 10];
		}
	} else if(n < 16777216) {
		if(n < 524288) {
			return 15 + log2_4[n >> 15];
		} else {
			return 20 + log2_4[n >> 20];
		}
	} else if(n < 536870912) {
		return 25 + log2_4[n >> 25];
	} else if(n < -2147483648) {
		return 30 + log2_4[n >> 30];
	} else {
		return 0;
	}
};
var kha_audio2_ogg_tools_Mdct = function() { };
$hxClasses["kha.audio2.ogg.tools.Mdct"] = kha_audio2_ogg_tools_Mdct;
kha_audio2_ogg_tools_Mdct.__name__ = ["kha","audio2","ogg","tools","Mdct"];
kha_audio2_ogg_tools_Mdct.inverseTransform = function(buffer,n,a,b,c,bitReverse) {
	var n2 = n >> 1;
	var n4 = n >> 2;
	var n8 = n >> 3;
	var this1 = new Array(n2);
	var buf2 = this1;
	var dOffset = n2 - 2;
	var aaOffset = 0;
	var eOffset = 0;
	var eStopOffset = n2;
	while(eOffset != eStopOffset) {
		buf2[dOffset + 1] = buffer[eOffset] * a[aaOffset] - buffer[eOffset + 2] * a[aaOffset + 1];
		buf2[dOffset] = buffer[eOffset] * a[aaOffset + 1] + buffer[eOffset + 2] * a[aaOffset];
		dOffset -= 2;
		aaOffset += 2;
		eOffset += 4;
	}
	eOffset = n2 - 3;
	while(dOffset >= 0) {
		buf2[dOffset + 1] = -buffer[eOffset + 2] * a[aaOffset] - -buffer[eOffset] * a[aaOffset + 1];
		buf2[dOffset] = -buffer[eOffset + 2] * a[aaOffset + 1] + -buffer[eOffset] * a[aaOffset];
		dOffset -= 2;
		aaOffset += 2;
		eOffset -= 4;
	}
	var u = buffer;
	var v = buf2;
	var aaOffset1 = n2 - 8;
	var eOffset0 = n4;
	var eOffset1 = 0;
	var dOffset0 = n4;
	var dOffset1 = 0;
	while(aaOffset1 >= 0) {
		var v41_21 = v[eOffset0 + 1] - v[eOffset1 + 1];
		var v40_20 = v[eOffset0] - v[eOffset1];
		u[dOffset0 + 1] = v[eOffset0 + 1] + v[eOffset1 + 1];
		u[dOffset0] = v[eOffset0] + v[eOffset1];
		u[dOffset1 + 1] = v41_21 * a[aaOffset1 + 4] - v40_20 * a[aaOffset1 + 5];
		u[dOffset1] = v40_20 * a[aaOffset1 + 4] + v41_21 * a[aaOffset1 + 5];
		v41_21 = v[eOffset0 + 3] - v[eOffset1 + 3];
		v40_20 = v[eOffset0 + 2] - v[eOffset1 + 2];
		u[dOffset0 + 3] = v[eOffset0 + 3] + v[eOffset1 + 3];
		u[dOffset0 + 2] = v[eOffset0 + 2] + v[eOffset1 + 2];
		u[dOffset1 + 3] = v41_21 * a[aaOffset1] - v40_20 * a[aaOffset1 + 1];
		u[dOffset1 + 2] = v40_20 * a[aaOffset1] + v41_21 * a[aaOffset1 + 1];
		aaOffset1 -= 8;
		dOffset0 += 4;
		dOffset1 += 4;
		eOffset0 += 4;
		eOffset1 += 4;
	}
	var log2_4 = [0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4];
	var ld = (n < 16384 ? n < 16 ? log2_4[n] : n < 512 ? 5 + log2_4[n >> 5] : 10 + log2_4[n >> 10] : n < 16777216 ? n < 524288 ? 15 + log2_4[n >> 15] : 20 + log2_4[n >> 20] : n < 536870912 ? 25 + log2_4[n >> 25] : n < -2147483648 ? 30 + log2_4[n >> 30] : 0) - 1;
	var i_off = n2 - 1 - n4 * 0;
	var eeOffset0 = i_off;
	var eeOffset2 = i_off + -(n >> 3);
	var aOffset = 0;
	var i = (n >> 4 >> 2) + 1;
	while(--i > 0) {
		var k00_20 = u[eeOffset0] - u[eeOffset2];
		var k01_21 = u[eeOffset0 + -1] - u[eeOffset2 + -1];
		var _g = eeOffset0;
		var _g1 = u;
		_g1[_g] = _g1[_g] + u[eeOffset2];
		var _g2 = eeOffset0 + -1;
		var _g11 = u;
		_g11[_g2] = _g11[_g2] + u[eeOffset2 + -1];
		u[eeOffset2] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
		u[eeOffset2 + -1] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
		aOffset += 8;
		k00_20 = u[eeOffset0 + -2] - u[eeOffset2 + -2];
		k01_21 = u[eeOffset0 + -3] - u[eeOffset2 + -3];
		var _g3 = eeOffset0 + -2;
		var _g12 = u;
		_g12[_g3] = _g12[_g3] + u[eeOffset2 + -2];
		var _g4 = eeOffset0 + -3;
		var _g13 = u;
		_g13[_g4] = _g13[_g4] + u[eeOffset2 + -3];
		u[eeOffset2 + -2] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
		u[eeOffset2 + -3] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
		aOffset += 8;
		k00_20 = u[eeOffset0 + -4] - u[eeOffset2 + -4];
		k01_21 = u[eeOffset0 + -5] - u[eeOffset2 + -5];
		var _g5 = eeOffset0 + -4;
		var _g14 = u;
		_g14[_g5] = _g14[_g5] + u[eeOffset2 + -4];
		var _g6 = eeOffset0 + -5;
		var _g15 = u;
		_g15[_g6] = _g15[_g6] + u[eeOffset2 + -5];
		u[eeOffset2 + -4] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
		u[eeOffset2 + -5] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
		aOffset += 8;
		k00_20 = u[eeOffset0 + -6] - u[eeOffset2 + -6];
		k01_21 = u[eeOffset0 + -7] - u[eeOffset2 + -7];
		var _g7 = eeOffset0 + -6;
		var _g16 = u;
		_g16[_g7] = _g16[_g7] + u[eeOffset2 + -6];
		var _g8 = eeOffset0 + -7;
		var _g17 = u;
		_g17[_g8] = _g17[_g8] + u[eeOffset2 + -7];
		u[eeOffset2 + -6] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
		u[eeOffset2 + -7] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
		aOffset += 8;
		eeOffset0 -= 8;
		eeOffset2 -= 8;
	}
	var i_off1 = n2 - 1 - n4;
	var eeOffset01 = i_off1;
	var eeOffset21 = i_off1 + -(n >> 3);
	var aOffset1 = 0;
	var i1 = (n >> 4 >> 2) + 1;
	while(--i1 > 0) {
		var k00_201 = u[eeOffset01] - u[eeOffset21];
		var k01_211 = u[eeOffset01 + -1] - u[eeOffset21 + -1];
		var _g9 = eeOffset01;
		var _g18 = u;
		_g18[_g9] = _g18[_g9] + u[eeOffset21];
		var _g10 = eeOffset01 + -1;
		var _g19 = u;
		_g19[_g10] = _g19[_g10] + u[eeOffset21 + -1];
		u[eeOffset21] = k00_201 * a[aOffset1] - k01_211 * a[aOffset1 + 1];
		u[eeOffset21 + -1] = k01_211 * a[aOffset1] + k00_201 * a[aOffset1 + 1];
		aOffset1 += 8;
		k00_201 = u[eeOffset01 + -2] - u[eeOffset21 + -2];
		k01_211 = u[eeOffset01 + -3] - u[eeOffset21 + -3];
		var _g20 = eeOffset01 + -2;
		var _g110 = u;
		_g110[_g20] = _g110[_g20] + u[eeOffset21 + -2];
		var _g21 = eeOffset01 + -3;
		var _g111 = u;
		_g111[_g21] = _g111[_g21] + u[eeOffset21 + -3];
		u[eeOffset21 + -2] = k00_201 * a[aOffset1] - k01_211 * a[aOffset1 + 1];
		u[eeOffset21 + -3] = k01_211 * a[aOffset1] + k00_201 * a[aOffset1 + 1];
		aOffset1 += 8;
		k00_201 = u[eeOffset01 + -4] - u[eeOffset21 + -4];
		k01_211 = u[eeOffset01 + -5] - u[eeOffset21 + -5];
		var _g22 = eeOffset01 + -4;
		var _g112 = u;
		_g112[_g22] = _g112[_g22] + u[eeOffset21 + -4];
		var _g23 = eeOffset01 + -5;
		var _g113 = u;
		_g113[_g23] = _g113[_g23] + u[eeOffset21 + -5];
		u[eeOffset21 + -4] = k00_201 * a[aOffset1] - k01_211 * a[aOffset1 + 1];
		u[eeOffset21 + -5] = k01_211 * a[aOffset1] + k00_201 * a[aOffset1 + 1];
		aOffset1 += 8;
		k00_201 = u[eeOffset01 + -6] - u[eeOffset21 + -6];
		k01_211 = u[eeOffset01 + -7] - u[eeOffset21 + -7];
		var _g24 = eeOffset01 + -6;
		var _g114 = u;
		_g114[_g24] = _g114[_g24] + u[eeOffset21 + -6];
		var _g25 = eeOffset01 + -7;
		var _g115 = u;
		_g115[_g25] = _g115[_g25] + u[eeOffset21 + -7];
		u[eeOffset21 + -6] = k00_201 * a[aOffset1] - k01_211 * a[aOffset1 + 1];
		u[eeOffset21 + -7] = k01_211 * a[aOffset1] + k00_201 * a[aOffset1 + 1];
		aOffset1 += 8;
		eeOffset01 -= 8;
		eeOffset21 -= 8;
	}
	var d0 = n2 - 1 - n8 * 0;
	var aOffset2 = 0;
	var eOffset01 = d0;
	var eOffset2 = d0 + -(n >> 4);
	var i2 = (n >> 5 >> 2) + 1;
	while(--i2 > 0) {
		var k00_202 = u[eOffset01] - u[eOffset2];
		var k01_212 = u[eOffset01 + -1] - u[eOffset2 + -1];
		var _g26 = eOffset01;
		var _g116 = u;
		_g116[_g26] = _g116[_g26] + u[eOffset2];
		var _g27 = eOffset01 + -1;
		var _g117 = u;
		_g117[_g27] = _g117[_g27] + u[eOffset2 + -1];
		u[eOffset2] = k00_202 * a[aOffset2] - k01_212 * a[aOffset2 + 1];
		u[eOffset2 + -1] = k01_212 * a[aOffset2] + k00_202 * a[aOffset2 + 1];
		aOffset2 += 16;
		k00_202 = u[eOffset01 + -2] - u[eOffset2 + -2];
		k01_212 = u[eOffset01 + -3] - u[eOffset2 + -3];
		var _g28 = eOffset01 + -2;
		var _g118 = u;
		_g118[_g28] = _g118[_g28] + u[eOffset2 + -2];
		var _g29 = eOffset01 + -3;
		var _g119 = u;
		_g119[_g29] = _g119[_g29] + u[eOffset2 + -3];
		u[eOffset2 + -2] = k00_202 * a[aOffset2] - k01_212 * a[aOffset2 + 1];
		u[eOffset2 + -3] = k01_212 * a[aOffset2] + k00_202 * a[aOffset2 + 1];
		aOffset2 += 16;
		k00_202 = u[eOffset01 + -4] - u[eOffset2 + -4];
		k01_212 = u[eOffset01 + -5] - u[eOffset2 + -5];
		var _g30 = eOffset01 + -4;
		var _g120 = u;
		_g120[_g30] = _g120[_g30] + u[eOffset2 + -4];
		var _g31 = eOffset01 + -5;
		var _g121 = u;
		_g121[_g31] = _g121[_g31] + u[eOffset2 + -5];
		u[eOffset2 + -4] = k00_202 * a[aOffset2] - k01_212 * a[aOffset2 + 1];
		u[eOffset2 + -5] = k01_212 * a[aOffset2] + k00_202 * a[aOffset2 + 1];
		aOffset2 += 16;
		k00_202 = u[eOffset01 + -6] - u[eOffset2 + -6];
		k01_212 = u[eOffset01 + -7] - u[eOffset2 + -7];
		var _g32 = eOffset01 + -6;
		var _g122 = u;
		_g122[_g32] = _g122[_g32] + u[eOffset2 + -6];
		var _g33 = eOffset01 + -7;
		var _g123 = u;
		_g123[_g33] = _g123[_g33] + u[eOffset2 + -7];
		u[eOffset2 + -6] = k00_202 * a[aOffset2] - k01_212 * a[aOffset2 + 1];
		u[eOffset2 + -7] = k01_212 * a[aOffset2] + k00_202 * a[aOffset2 + 1];
		eOffset01 -= 8;
		eOffset2 -= 8;
		aOffset2 += 16;
	}
	var d01 = n2 - 1 - n8;
	var aOffset3 = 0;
	var eOffset02 = d01;
	var eOffset21 = d01 + -(n >> 4);
	var i3 = (n >> 5 >> 2) + 1;
	while(--i3 > 0) {
		var k00_203 = u[eOffset02] - u[eOffset21];
		var k01_213 = u[eOffset02 + -1] - u[eOffset21 + -1];
		var _g34 = eOffset02;
		var _g124 = u;
		_g124[_g34] = _g124[_g34] + u[eOffset21];
		var _g35 = eOffset02 + -1;
		var _g125 = u;
		_g125[_g35] = _g125[_g35] + u[eOffset21 + -1];
		u[eOffset21] = k00_203 * a[aOffset3] - k01_213 * a[aOffset3 + 1];
		u[eOffset21 + -1] = k01_213 * a[aOffset3] + k00_203 * a[aOffset3 + 1];
		aOffset3 += 16;
		k00_203 = u[eOffset02 + -2] - u[eOffset21 + -2];
		k01_213 = u[eOffset02 + -3] - u[eOffset21 + -3];
		var _g36 = eOffset02 + -2;
		var _g126 = u;
		_g126[_g36] = _g126[_g36] + u[eOffset21 + -2];
		var _g37 = eOffset02 + -3;
		var _g127 = u;
		_g127[_g37] = _g127[_g37] + u[eOffset21 + -3];
		u[eOffset21 + -2] = k00_203 * a[aOffset3] - k01_213 * a[aOffset3 + 1];
		u[eOffset21 + -3] = k01_213 * a[aOffset3] + k00_203 * a[aOffset3 + 1];
		aOffset3 += 16;
		k00_203 = u[eOffset02 + -4] - u[eOffset21 + -4];
		k01_213 = u[eOffset02 + -5] - u[eOffset21 + -5];
		var _g38 = eOffset02 + -4;
		var _g128 = u;
		_g128[_g38] = _g128[_g38] + u[eOffset21 + -4];
		var _g39 = eOffset02 + -5;
		var _g129 = u;
		_g129[_g39] = _g129[_g39] + u[eOffset21 + -5];
		u[eOffset21 + -4] = k00_203 * a[aOffset3] - k01_213 * a[aOffset3 + 1];
		u[eOffset21 + -5] = k01_213 * a[aOffset3] + k00_203 * a[aOffset3 + 1];
		aOffset3 += 16;
		k00_203 = u[eOffset02 + -6] - u[eOffset21 + -6];
		k01_213 = u[eOffset02 + -7] - u[eOffset21 + -7];
		var _g40 = eOffset02 + -6;
		var _g130 = u;
		_g130[_g40] = _g130[_g40] + u[eOffset21 + -6];
		var _g41 = eOffset02 + -7;
		var _g131 = u;
		_g131[_g41] = _g131[_g41] + u[eOffset21 + -7];
		u[eOffset21 + -6] = k00_203 * a[aOffset3] - k01_213 * a[aOffset3 + 1];
		u[eOffset21 + -7] = k01_213 * a[aOffset3] + k00_203 * a[aOffset3 + 1];
		eOffset02 -= 8;
		eOffset21 -= 8;
		aOffset3 += 16;
	}
	var d02 = n2 - 1 - n8 * 2;
	var aOffset4 = 0;
	var eOffset03 = d02;
	var eOffset22 = d02 + -(n >> 4);
	var i4 = (n >> 5 >> 2) + 1;
	while(--i4 > 0) {
		var k00_204 = u[eOffset03] - u[eOffset22];
		var k01_214 = u[eOffset03 + -1] - u[eOffset22 + -1];
		var _g42 = eOffset03;
		var _g132 = u;
		_g132[_g42] = _g132[_g42] + u[eOffset22];
		var _g43 = eOffset03 + -1;
		var _g133 = u;
		_g133[_g43] = _g133[_g43] + u[eOffset22 + -1];
		u[eOffset22] = k00_204 * a[aOffset4] - k01_214 * a[aOffset4 + 1];
		u[eOffset22 + -1] = k01_214 * a[aOffset4] + k00_204 * a[aOffset4 + 1];
		aOffset4 += 16;
		k00_204 = u[eOffset03 + -2] - u[eOffset22 + -2];
		k01_214 = u[eOffset03 + -3] - u[eOffset22 + -3];
		var _g44 = eOffset03 + -2;
		var _g134 = u;
		_g134[_g44] = _g134[_g44] + u[eOffset22 + -2];
		var _g45 = eOffset03 + -3;
		var _g135 = u;
		_g135[_g45] = _g135[_g45] + u[eOffset22 + -3];
		u[eOffset22 + -2] = k00_204 * a[aOffset4] - k01_214 * a[aOffset4 + 1];
		u[eOffset22 + -3] = k01_214 * a[aOffset4] + k00_204 * a[aOffset4 + 1];
		aOffset4 += 16;
		k00_204 = u[eOffset03 + -4] - u[eOffset22 + -4];
		k01_214 = u[eOffset03 + -5] - u[eOffset22 + -5];
		var _g46 = eOffset03 + -4;
		var _g136 = u;
		_g136[_g46] = _g136[_g46] + u[eOffset22 + -4];
		var _g47 = eOffset03 + -5;
		var _g137 = u;
		_g137[_g47] = _g137[_g47] + u[eOffset22 + -5];
		u[eOffset22 + -4] = k00_204 * a[aOffset4] - k01_214 * a[aOffset4 + 1];
		u[eOffset22 + -5] = k01_214 * a[aOffset4] + k00_204 * a[aOffset4 + 1];
		aOffset4 += 16;
		k00_204 = u[eOffset03 + -6] - u[eOffset22 + -6];
		k01_214 = u[eOffset03 + -7] - u[eOffset22 + -7];
		var _g48 = eOffset03 + -6;
		var _g138 = u;
		_g138[_g48] = _g138[_g48] + u[eOffset22 + -6];
		var _g49 = eOffset03 + -7;
		var _g139 = u;
		_g139[_g49] = _g139[_g49] + u[eOffset22 + -7];
		u[eOffset22 + -6] = k00_204 * a[aOffset4] - k01_214 * a[aOffset4 + 1];
		u[eOffset22 + -7] = k01_214 * a[aOffset4] + k00_204 * a[aOffset4 + 1];
		eOffset03 -= 8;
		eOffset22 -= 8;
		aOffset4 += 16;
	}
	var d03 = n2 - 1 - n8 * 3;
	var aOffset5 = 0;
	var eOffset04 = d03;
	var eOffset23 = d03 + -(n >> 4);
	var i5 = (n >> 5 >> 2) + 1;
	while(--i5 > 0) {
		var k00_205 = u[eOffset04] - u[eOffset23];
		var k01_215 = u[eOffset04 + -1] - u[eOffset23 + -1];
		var _g50 = eOffset04;
		var _g140 = u;
		_g140[_g50] = _g140[_g50] + u[eOffset23];
		var _g51 = eOffset04 + -1;
		var _g141 = u;
		_g141[_g51] = _g141[_g51] + u[eOffset23 + -1];
		u[eOffset23] = k00_205 * a[aOffset5] - k01_215 * a[aOffset5 + 1];
		u[eOffset23 + -1] = k01_215 * a[aOffset5] + k00_205 * a[aOffset5 + 1];
		aOffset5 += 16;
		k00_205 = u[eOffset04 + -2] - u[eOffset23 + -2];
		k01_215 = u[eOffset04 + -3] - u[eOffset23 + -3];
		var _g52 = eOffset04 + -2;
		var _g142 = u;
		_g142[_g52] = _g142[_g52] + u[eOffset23 + -2];
		var _g53 = eOffset04 + -3;
		var _g143 = u;
		_g143[_g53] = _g143[_g53] + u[eOffset23 + -3];
		u[eOffset23 + -2] = k00_205 * a[aOffset5] - k01_215 * a[aOffset5 + 1];
		u[eOffset23 + -3] = k01_215 * a[aOffset5] + k00_205 * a[aOffset5 + 1];
		aOffset5 += 16;
		k00_205 = u[eOffset04 + -4] - u[eOffset23 + -4];
		k01_215 = u[eOffset04 + -5] - u[eOffset23 + -5];
		var _g54 = eOffset04 + -4;
		var _g144 = u;
		_g144[_g54] = _g144[_g54] + u[eOffset23 + -4];
		var _g55 = eOffset04 + -5;
		var _g145 = u;
		_g145[_g55] = _g145[_g55] + u[eOffset23 + -5];
		u[eOffset23 + -4] = k00_205 * a[aOffset5] - k01_215 * a[aOffset5 + 1];
		u[eOffset23 + -5] = k01_215 * a[aOffset5] + k00_205 * a[aOffset5 + 1];
		aOffset5 += 16;
		k00_205 = u[eOffset04 + -6] - u[eOffset23 + -6];
		k01_215 = u[eOffset04 + -7] - u[eOffset23 + -7];
		var _g56 = eOffset04 + -6;
		var _g146 = u;
		_g146[_g56] = _g146[_g56] + u[eOffset23 + -6];
		var _g57 = eOffset04 + -7;
		var _g147 = u;
		_g147[_g57] = _g147[_g57] + u[eOffset23 + -7];
		u[eOffset23 + -6] = k00_205 * a[aOffset5] - k01_215 * a[aOffset5 + 1];
		u[eOffset23 + -7] = k01_215 * a[aOffset5] + k00_205 * a[aOffset5 + 1];
		eOffset04 -= 8;
		eOffset23 -= 8;
		aOffset5 += 16;
	}
	var _g148 = 2;
	var _g58 = ld - 3 >> 1;
	while(_g148 < _g58) {
		var l = _g148++;
		var k0 = n >> l + 2;
		var k0_2 = k0 >> 1;
		var lim = 1 << l + 1;
		var _g310 = 0;
		var _g210 = lim;
		while(_g310 < _g210) {
			var i6 = _g310++;
			var d04 = n2 - 1 - k0 * i6;
			var k1 = 1 << l + 3;
			var aOffset6 = 0;
			var eOffset05 = d04;
			var eOffset24 = d04 + -k0_2;
			var i7 = (n >> l + 4 >> 2) + 1;
			while(--i7 > 0) {
				var k00_206 = u[eOffset05] - u[eOffset24];
				var k01_216 = u[eOffset05 + -1] - u[eOffset24 + -1];
				var _g59 = eOffset05;
				var _g149 = u;
				_g149[_g59] = _g149[_g59] + u[eOffset24];
				var _g60 = eOffset05 + -1;
				var _g150 = u;
				_g150[_g60] = _g150[_g60] + u[eOffset24 + -1];
				u[eOffset24] = k00_206 * a[aOffset6] - k01_216 * a[aOffset6 + 1];
				u[eOffset24 + -1] = k01_216 * a[aOffset6] + k00_206 * a[aOffset6 + 1];
				aOffset6 += k1;
				k00_206 = u[eOffset05 + -2] - u[eOffset24 + -2];
				k01_216 = u[eOffset05 + -3] - u[eOffset24 + -3];
				var _g61 = eOffset05 + -2;
				var _g151 = u;
				_g151[_g61] = _g151[_g61] + u[eOffset24 + -2];
				var _g62 = eOffset05 + -3;
				var _g152 = u;
				_g152[_g62] = _g152[_g62] + u[eOffset24 + -3];
				u[eOffset24 + -2] = k00_206 * a[aOffset6] - k01_216 * a[aOffset6 + 1];
				u[eOffset24 + -3] = k01_216 * a[aOffset6] + k00_206 * a[aOffset6 + 1];
				aOffset6 += k1;
				k00_206 = u[eOffset05 + -4] - u[eOffset24 + -4];
				k01_216 = u[eOffset05 + -5] - u[eOffset24 + -5];
				var _g63 = eOffset05 + -4;
				var _g153 = u;
				_g153[_g63] = _g153[_g63] + u[eOffset24 + -4];
				var _g64 = eOffset05 + -5;
				var _g154 = u;
				_g154[_g64] = _g154[_g64] + u[eOffset24 + -5];
				u[eOffset24 + -4] = k00_206 * a[aOffset6] - k01_216 * a[aOffset6 + 1];
				u[eOffset24 + -5] = k01_216 * a[aOffset6] + k00_206 * a[aOffset6 + 1];
				aOffset6 += k1;
				k00_206 = u[eOffset05 + -6] - u[eOffset24 + -6];
				k01_216 = u[eOffset05 + -7] - u[eOffset24 + -7];
				var _g65 = eOffset05 + -6;
				var _g155 = u;
				_g155[_g65] = _g155[_g65] + u[eOffset24 + -6];
				var _g66 = eOffset05 + -7;
				var _g156 = u;
				_g156[_g66] = _g156[_g66] + u[eOffset24 + -7];
				u[eOffset24 + -6] = k00_206 * a[aOffset6] - k01_216 * a[aOffset6 + 1];
				u[eOffset24 + -7] = k01_216 * a[aOffset6] + k00_206 * a[aOffset6 + 1];
				eOffset05 -= 8;
				eOffset24 -= 8;
				aOffset6 += k1;
			}
		}
	}
	var _g157 = ld - 3 >> 1;
	var _g67 = ld - 6;
	while(_g157 < _g67) {
		var l1 = _g157++;
		var k01 = n >> l1 + 2;
		var k11 = 1 << l1 + 3;
		var k0_21 = k01 >> 1;
		var rlim = n >> l1 + 6;
		var lim1 = 1 << l1 + 1;
		var aOffset7 = 0;
		var i_off2 = n2 - 1;
		var r = rlim + 1;
		while(--r > 0) {
			var A0 = a[aOffset7];
			var A1 = a[aOffset7 + 1];
			var A2 = a[aOffset7 + k11];
			var A3 = a[aOffset7 + k11 + 1];
			var A4 = a[aOffset7 + k11 * 2];
			var A5 = a[aOffset7 + k11 * 2 + 1];
			var A6 = a[aOffset7 + k11 * 3];
			var A7 = a[aOffset7 + k11 * 3 + 1];
			var eeOffset02 = i_off2;
			var eeOffset22 = i_off2 + -k0_21;
			var i8 = lim1 + 1;
			while(--i8 > 0) {
				var k00 = u[eeOffset02] - u[eeOffset22];
				var k111 = u[eeOffset02 + -1] - u[eeOffset22 + -1];
				u[eeOffset02] = u[eeOffset02] + u[eeOffset22];
				u[eeOffset02 + -1] = u[eeOffset02 + -1] + u[eeOffset22 + -1];
				u[eeOffset22] = k00 * A0 - k111 * A1;
				u[eeOffset22 + -1] = k111 * A0 + k00 * A1;
				k00 = u[eeOffset02 + -2] - u[eeOffset22 + -2];
				k111 = u[eeOffset02 + -3] - u[eeOffset22 + -3];
				u[eeOffset02 + -2] = u[eeOffset02 + -2] + u[eeOffset22 + -2];
				u[eeOffset02 + -3] = u[eeOffset02 + -3] + u[eeOffset22 + -3];
				u[eeOffset22 + -2] = k00 * A2 - k111 * A3;
				u[eeOffset22 + -3] = k111 * A2 + k00 * A3;
				k00 = u[eeOffset02 + -4] - u[eeOffset22 + -4];
				k111 = u[eeOffset02 + -5] - u[eeOffset22 + -5];
				u[eeOffset02 + -4] = u[eeOffset02 + -4] + u[eeOffset22 + -4];
				u[eeOffset02 + -5] = u[eeOffset02 + -5] + u[eeOffset22 + -5];
				u[eeOffset22 + -4] = k00 * A4 - k111 * A5;
				u[eeOffset22 + -5] = k111 * A4 + k00 * A5;
				k00 = u[eeOffset02 + -6] - u[eeOffset22 + -6];
				k111 = u[eeOffset02 + -7] - u[eeOffset22 + -7];
				u[eeOffset02 + -6] = u[eeOffset02 + -6] + u[eeOffset22 + -6];
				u[eeOffset02 + -7] = u[eeOffset02 + -7] + u[eeOffset22 + -7];
				u[eeOffset22 + -6] = k00 * A6 - k111 * A7;
				u[eeOffset22 + -7] = k111 * A6 + k00 * A7;
				eeOffset02 -= k01;
				eeOffset22 -= k01;
			}
			aOffset7 += k11 * 4;
			i_off2 -= 8;
		}
	}
	var i_off3 = n2 - 1;
	var A21 = a[n >> 3];
	var zOffset = i_off3;
	var baseOffset = i_off3 - 16 * (n >> 5);
	while(zOffset > baseOffset) {
		var t0 = u[zOffset];
		var t1 = u[zOffset + -8];
		u[zOffset + -8] = t0 - t1;
		u[zOffset] = t0 + t1;
		t0 = u[zOffset + -1];
		t1 = u[zOffset + -9];
		u[zOffset + -9] = t0 - t1;
		u[zOffset + -1] = t0 + t1;
		t0 = u[zOffset + -2];
		t1 = u[zOffset + -10];
		var k001 = t0 - t1;
		u[zOffset + -2] = t0 + t1;
		t0 = u[zOffset + -3];
		t1 = u[zOffset + -11];
		var k112 = t0 - t1;
		u[zOffset + -3] = t0 + t1;
		u[zOffset + -10] = (k001 + k112) * A21;
		u[zOffset + -11] = (k112 - k001) * A21;
		t0 = u[zOffset + -4];
		t1 = u[zOffset + -12];
		k001 = t1 - t0;
		u[zOffset + -4] = t0 + t1;
		t0 = u[zOffset + -5];
		t1 = u[zOffset + -13];
		k112 = t0 - t1;
		u[zOffset + -5] = t0 + t1;
		u[zOffset + -12] = k112;
		u[zOffset + -13] = k001;
		t0 = u[zOffset + -6];
		t1 = u[zOffset + -14];
		k001 = t1 - t0;
		u[zOffset + -6] = t0 + t1;
		t0 = u[zOffset + -7];
		t1 = u[zOffset + -15];
		k112 = t0 - t1;
		u[zOffset + -7] = t0 + t1;
		u[zOffset + -14] = (k001 + k112) * A21;
		u[zOffset + -15] = (k001 - k112) * A21;
		var t01 = u[zOffset];
		var t11 = u[zOffset + -4];
		var k002 = t01 - t11;
		var y0 = t01 + t11;
		t01 = u[zOffset + -2];
		t11 = u[zOffset + -6];
		var y2 = t01 + t11;
		var k22 = t01 - t11;
		u[zOffset] = y0 + y2;
		u[zOffset + -2] = y0 - y2;
		var k33 = u[zOffset + -3] - u[zOffset + -7];
		u[zOffset + -4] = k002 + k33;
		u[zOffset + -6] = k002 - k33;
		t01 = u[zOffset + -1];
		t11 = u[zOffset + -5];
		var k113 = t01 - t11;
		var y1 = t01 + t11;
		var y3 = u[zOffset + -3] + u[zOffset + -7];
		u[zOffset + -1] = y1 + y3;
		u[zOffset + -3] = y1 - y3;
		u[zOffset + -5] = k113 - k22;
		u[zOffset + -7] = k113 + k22;
		var zOffset1 = zOffset - 8;
		var t02 = u[zOffset1];
		var t12 = u[zOffset1 + -4];
		var k003 = t02 - t12;
		var y01 = t02 + t12;
		t02 = u[zOffset1 + -2];
		t12 = u[zOffset1 + -6];
		var y21 = t02 + t12;
		var k221 = t02 - t12;
		u[zOffset1] = y01 + y21;
		u[zOffset1 + -2] = y01 - y21;
		var k331 = u[zOffset1 + -3] - u[zOffset1 + -7];
		u[zOffset1 + -4] = k003 + k331;
		u[zOffset1 + -6] = k003 - k331;
		t02 = u[zOffset1 + -1];
		t12 = u[zOffset1 + -5];
		var k114 = t02 - t12;
		var y11 = t02 + t12;
		var y31 = u[zOffset1 + -3] + u[zOffset1 + -7];
		u[zOffset1 + -1] = y11 + y31;
		u[zOffset1 + -3] = y11 - y31;
		u[zOffset1 + -5] = k114 - k221;
		u[zOffset1 + -7] = k114 + k221;
		zOffset -= 16;
	}
	var brOffset = 0;
	var dOffset01 = n4 - 4;
	var dOffset11 = n2 - 4;
	while(dOffset01 >= 0) {
		var k4 = bitReverse[brOffset];
		v[dOffset11 + 3] = u[k4];
		v[dOffset11 + 2] = u[k4 + 1];
		v[dOffset01 + 3] = u[k4 + 2];
		v[dOffset01 + 2] = u[k4 + 3];
		k4 = bitReverse[brOffset + 1];
		v[dOffset11 + 1] = u[k4];
		v[dOffset11] = u[k4 + 1];
		v[dOffset01 + 1] = u[k4 + 2];
		v[dOffset01] = u[k4 + 3];
		dOffset01 -= 4;
		dOffset11 -= 4;
		brOffset += 2;
	}
	var cOffset = 0;
	var dOffset2 = 0;
	var eOffset3 = n2 - 4;
	while(dOffset2 < eOffset3) {
		var a02 = v[dOffset2] - v[eOffset3 + 2];
		var a11 = v[dOffset2 + 1] + v[eOffset3 + 3];
		var b0 = c[cOffset + 1] * a02 + c[cOffset] * a11;
		var b1 = c[cOffset + 1] * a11 - c[cOffset] * a02;
		var b2 = v[dOffset2] + v[eOffset3 + 2];
		var b3 = v[dOffset2 + 1] - v[eOffset3 + 3];
		v[dOffset2] = b2 + b0;
		v[dOffset2 + 1] = b3 + b1;
		v[eOffset3 + 2] = b2 - b0;
		v[eOffset3 + 3] = b1 - b3;
		a02 = v[dOffset2 + 2] - v[eOffset3];
		a11 = v[dOffset2 + 3] + v[eOffset3 + 1];
		b0 = c[cOffset + 3] * a02 + c[cOffset + 2] * a11;
		b1 = c[cOffset + 3] * a11 - c[cOffset + 2] * a02;
		b2 = v[dOffset2 + 2] + v[eOffset3];
		b3 = v[dOffset2 + 3] - v[eOffset3 + 1];
		v[dOffset2 + 2] = b2 + b0;
		v[dOffset2 + 3] = b3 + b1;
		v[eOffset3] = b2 - b0;
		v[eOffset3 + 1] = b1 - b3;
		cOffset += 4;
		dOffset2 += 4;
		eOffset3 -= 4;
	}
	var bOffset = n2 - 8;
	var eOffset4 = n2 - 8;
	var dOffset02 = 0;
	var dOffset12 = n2 - 4;
	var dOffset21 = n2;
	var dOffset3 = n - 4;
	while(eOffset4 >= 0) {
		var p3 = buf2[eOffset4 + 6] * b[bOffset + 7] - buf2[eOffset4 + 7] * b[bOffset + 6];
		var p2 = -buf2[eOffset4 + 6] * b[bOffset + 6] - buf2[eOffset4 + 7] * b[bOffset + 7];
		buffer[dOffset02] = p3;
		buffer[dOffset12 + 3] = -p3;
		buffer[dOffset21] = p2;
		buffer[dOffset3 + 3] = p2;
		var p1 = buf2[eOffset4 + 4] * b[bOffset + 5] - buf2[eOffset4 + 5] * b[bOffset + 4];
		var p0 = -buf2[eOffset4 + 4] * b[bOffset + 4] - buf2[eOffset4 + 5] * b[bOffset + 5];
		buffer[dOffset02 + 1] = p1;
		buffer[dOffset12 + 2] = -p1;
		buffer[dOffset21 + 1] = p0;
		buffer[dOffset3 + 2] = p0;
		p3 = buf2[eOffset4 + 2] * b[bOffset + 3] - buf2[eOffset4 + 3] * b[bOffset + 2];
		p2 = -buf2[eOffset4 + 2] * b[bOffset + 2] - buf2[eOffset4 + 3] * b[bOffset + 3];
		buffer[dOffset02 + 2] = p3;
		buffer[dOffset12 + 1] = -p3;
		buffer[dOffset21 + 2] = p2;
		buffer[dOffset3 + 1] = p2;
		p1 = buf2[eOffset4] * b[bOffset + 1] - buf2[eOffset4 + 1] * b[bOffset];
		p0 = -buf2[eOffset4] * b[bOffset] - buf2[eOffset4 + 1] * b[bOffset + 1];
		buffer[dOffset02 + 3] = p1;
		buffer[dOffset12] = -p1;
		buffer[dOffset21 + 3] = p0;
		buffer[dOffset3] = p0;
		bOffset -= 8;
		eOffset4 -= 8;
		dOffset02 += 4;
		dOffset21 += 4;
		dOffset12 -= 4;
		dOffset3 -= 4;
	}
};
kha_audio2_ogg_tools_Mdct.step3Iter0Loop = function(n,e,i_off,k_off,a) {
	var eeOffset0 = i_off;
	var eeOffset2 = i_off + k_off;
	var aOffset = 0;
	var i = (n >> 2) + 1;
	while(--i > 0) {
		var k00_20 = e[eeOffset0] - e[eeOffset2];
		var k01_21 = e[eeOffset0 + -1] - e[eeOffset2 + -1];
		var _g = eeOffset0;
		var _g1 = e;
		_g1[_g] = _g1[_g] + e[eeOffset2];
		var _g2 = eeOffset0 + -1;
		var _g11 = e;
		_g11[_g2] = _g11[_g2] + e[eeOffset2 + -1];
		e[eeOffset2] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
		e[eeOffset2 + -1] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
		aOffset += 8;
		k00_20 = e[eeOffset0 + -2] - e[eeOffset2 + -2];
		k01_21 = e[eeOffset0 + -3] - e[eeOffset2 + -3];
		var _g3 = eeOffset0 + -2;
		var _g12 = e;
		_g12[_g3] = _g12[_g3] + e[eeOffset2 + -2];
		var _g4 = eeOffset0 + -3;
		var _g13 = e;
		_g13[_g4] = _g13[_g4] + e[eeOffset2 + -3];
		e[eeOffset2 + -2] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
		e[eeOffset2 + -3] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
		aOffset += 8;
		k00_20 = e[eeOffset0 + -4] - e[eeOffset2 + -4];
		k01_21 = e[eeOffset0 + -5] - e[eeOffset2 + -5];
		var _g5 = eeOffset0 + -4;
		var _g14 = e;
		_g14[_g5] = _g14[_g5] + e[eeOffset2 + -4];
		var _g6 = eeOffset0 + -5;
		var _g15 = e;
		_g15[_g6] = _g15[_g6] + e[eeOffset2 + -5];
		e[eeOffset2 + -4] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
		e[eeOffset2 + -5] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
		aOffset += 8;
		k00_20 = e[eeOffset0 + -6] - e[eeOffset2 + -6];
		k01_21 = e[eeOffset0 + -7] - e[eeOffset2 + -7];
		var _g7 = eeOffset0 + -6;
		var _g16 = e;
		_g16[_g7] = _g16[_g7] + e[eeOffset2 + -6];
		var _g8 = eeOffset0 + -7;
		var _g17 = e;
		_g17[_g8] = _g17[_g8] + e[eeOffset2 + -7];
		e[eeOffset2 + -6] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
		e[eeOffset2 + -7] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
		aOffset += 8;
		eeOffset0 -= 8;
		eeOffset2 -= 8;
	}
};
kha_audio2_ogg_tools_Mdct.step3InnerRLoop = function(lim,e,d0,k_off,a,k1) {
	var aOffset = 0;
	var eOffset0 = d0;
	var eOffset2 = d0 + k_off;
	var i = (lim >> 2) + 1;
	while(--i > 0) {
		var k00_20 = e[eOffset0] - e[eOffset2];
		var k01_21 = e[eOffset0 + -1] - e[eOffset2 + -1];
		var _g = eOffset0;
		var _g1 = e;
		_g1[_g] = _g1[_g] + e[eOffset2];
		var _g2 = eOffset0 + -1;
		var _g11 = e;
		_g11[_g2] = _g11[_g2] + e[eOffset2 + -1];
		e[eOffset2] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
		e[eOffset2 + -1] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
		aOffset += k1;
		k00_20 = e[eOffset0 + -2] - e[eOffset2 + -2];
		k01_21 = e[eOffset0 + -3] - e[eOffset2 + -3];
		var _g3 = eOffset0 + -2;
		var _g12 = e;
		_g12[_g3] = _g12[_g3] + e[eOffset2 + -2];
		var _g4 = eOffset0 + -3;
		var _g13 = e;
		_g13[_g4] = _g13[_g4] + e[eOffset2 + -3];
		e[eOffset2 + -2] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
		e[eOffset2 + -3] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
		aOffset += k1;
		k00_20 = e[eOffset0 + -4] - e[eOffset2 + -4];
		k01_21 = e[eOffset0 + -5] - e[eOffset2 + -5];
		var _g5 = eOffset0 + -4;
		var _g14 = e;
		_g14[_g5] = _g14[_g5] + e[eOffset2 + -4];
		var _g6 = eOffset0 + -5;
		var _g15 = e;
		_g15[_g6] = _g15[_g6] + e[eOffset2 + -5];
		e[eOffset2 + -4] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
		e[eOffset2 + -5] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
		aOffset += k1;
		k00_20 = e[eOffset0 + -6] - e[eOffset2 + -6];
		k01_21 = e[eOffset0 + -7] - e[eOffset2 + -7];
		var _g7 = eOffset0 + -6;
		var _g16 = e;
		_g16[_g7] = _g16[_g7] + e[eOffset2 + -6];
		var _g8 = eOffset0 + -7;
		var _g17 = e;
		_g17[_g8] = _g17[_g8] + e[eOffset2 + -7];
		e[eOffset2 + -6] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
		e[eOffset2 + -7] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
		eOffset0 -= 8;
		eOffset2 -= 8;
		aOffset += k1;
	}
};
kha_audio2_ogg_tools_Mdct.step3InnerSLoop = function(n,e,i_off,k_off,a,aOffset0,aOffset1,k0) {
	var A0 = a[aOffset0];
	var A1 = a[aOffset0 + 1];
	var A2 = a[aOffset0 + aOffset1];
	var A3 = a[aOffset0 + aOffset1 + 1];
	var A4 = a[aOffset0 + aOffset1 * 2];
	var A5 = a[aOffset0 + aOffset1 * 2 + 1];
	var A6 = a[aOffset0 + aOffset1 * 3];
	var A7 = a[aOffset0 + aOffset1 * 3 + 1];
	var eeOffset0 = i_off;
	var eeOffset2 = i_off + k_off;
	var i = n + 1;
	while(--i > 0) {
		var k00 = e[eeOffset0] - e[eeOffset2];
		var k11 = e[eeOffset0 + -1] - e[eeOffset2 + -1];
		e[eeOffset0] = e[eeOffset0] + e[eeOffset2];
		e[eeOffset0 + -1] = e[eeOffset0 + -1] + e[eeOffset2 + -1];
		e[eeOffset2] = k00 * A0 - k11 * A1;
		e[eeOffset2 + -1] = k11 * A0 + k00 * A1;
		k00 = e[eeOffset0 + -2] - e[eeOffset2 + -2];
		k11 = e[eeOffset0 + -3] - e[eeOffset2 + -3];
		e[eeOffset0 + -2] = e[eeOffset0 + -2] + e[eeOffset2 + -2];
		e[eeOffset0 + -3] = e[eeOffset0 + -3] + e[eeOffset2 + -3];
		e[eeOffset2 + -2] = k00 * A2 - k11 * A3;
		e[eeOffset2 + -3] = k11 * A2 + k00 * A3;
		k00 = e[eeOffset0 + -4] - e[eeOffset2 + -4];
		k11 = e[eeOffset0 + -5] - e[eeOffset2 + -5];
		e[eeOffset0 + -4] = e[eeOffset0 + -4] + e[eeOffset2 + -4];
		e[eeOffset0 + -5] = e[eeOffset0 + -5] + e[eeOffset2 + -5];
		e[eeOffset2 + -4] = k00 * A4 - k11 * A5;
		e[eeOffset2 + -5] = k11 * A4 + k00 * A5;
		k00 = e[eeOffset0 + -6] - e[eeOffset2 + -6];
		k11 = e[eeOffset0 + -7] - e[eeOffset2 + -7];
		e[eeOffset0 + -6] = e[eeOffset0 + -6] + e[eeOffset2 + -6];
		e[eeOffset0 + -7] = e[eeOffset0 + -7] + e[eeOffset2 + -7];
		e[eeOffset2 + -6] = k00 * A6 - k11 * A7;
		e[eeOffset2 + -7] = k11 * A6 + k00 * A7;
		eeOffset0 -= k0;
		eeOffset2 -= k0;
	}
};
kha_audio2_ogg_tools_Mdct.iter54 = function(e,zOffset) {
	var t0 = e[zOffset];
	var t1 = e[zOffset + -4];
	var k00 = t0 - t1;
	var y0 = t0 + t1;
	t0 = e[zOffset + -2];
	t1 = e[zOffset + -6];
	var y2 = t0 + t1;
	var k22 = t0 - t1;
	e[zOffset] = y0 + y2;
	e[zOffset + -2] = y0 - y2;
	var k33 = e[zOffset + -3] - e[zOffset + -7];
	e[zOffset + -4] = k00 + k33;
	e[zOffset + -6] = k00 - k33;
	t0 = e[zOffset + -1];
	t1 = e[zOffset + -5];
	var k11 = t0 - t1;
	var y1 = t0 + t1;
	var y3 = e[zOffset + -3] + e[zOffset + -7];
	e[zOffset + -1] = y1 + y3;
	e[zOffset + -3] = y1 - y3;
	e[zOffset + -5] = k11 - k22;
	e[zOffset + -7] = k11 + k22;
};
kha_audio2_ogg_tools_Mdct.step3InnerSLoopLd654 = function(n,e,i_off,a,baseN) {
	var A2 = a[baseN >> 3];
	var zOffset = i_off;
	var baseOffset = i_off - 16 * n;
	while(zOffset > baseOffset) {
		var t0 = e[zOffset];
		var t1 = e[zOffset + -8];
		e[zOffset + -8] = t0 - t1;
		e[zOffset] = t0 + t1;
		t0 = e[zOffset + -1];
		t1 = e[zOffset + -9];
		e[zOffset + -9] = t0 - t1;
		e[zOffset + -1] = t0 + t1;
		t0 = e[zOffset + -2];
		t1 = e[zOffset + -10];
		var k00 = t0 - t1;
		e[zOffset + -2] = t0 + t1;
		t0 = e[zOffset + -3];
		t1 = e[zOffset + -11];
		var k11 = t0 - t1;
		e[zOffset + -3] = t0 + t1;
		e[zOffset + -10] = (k00 + k11) * A2;
		e[zOffset + -11] = (k11 - k00) * A2;
		t0 = e[zOffset + -4];
		t1 = e[zOffset + -12];
		k00 = t1 - t0;
		e[zOffset + -4] = t0 + t1;
		t0 = e[zOffset + -5];
		t1 = e[zOffset + -13];
		k11 = t0 - t1;
		e[zOffset + -5] = t0 + t1;
		e[zOffset + -12] = k11;
		e[zOffset + -13] = k00;
		t0 = e[zOffset + -6];
		t1 = e[zOffset + -14];
		k00 = t1 - t0;
		e[zOffset + -6] = t0 + t1;
		t0 = e[zOffset + -7];
		t1 = e[zOffset + -15];
		k11 = t0 - t1;
		e[zOffset + -7] = t0 + t1;
		e[zOffset + -14] = (k00 + k11) * A2;
		e[zOffset + -15] = (k00 - k11) * A2;
		var t01 = e[zOffset];
		var t11 = e[zOffset + -4];
		var k001 = t01 - t11;
		var y0 = t01 + t11;
		t01 = e[zOffset + -2];
		t11 = e[zOffset + -6];
		var y2 = t01 + t11;
		var k22 = t01 - t11;
		e[zOffset] = y0 + y2;
		e[zOffset + -2] = y0 - y2;
		var k33 = e[zOffset + -3] - e[zOffset + -7];
		e[zOffset + -4] = k001 + k33;
		e[zOffset + -6] = k001 - k33;
		t01 = e[zOffset + -1];
		t11 = e[zOffset + -5];
		var k111 = t01 - t11;
		var y1 = t01 + t11;
		var y3 = e[zOffset + -3] + e[zOffset + -7];
		e[zOffset + -1] = y1 + y3;
		e[zOffset + -3] = y1 - y3;
		e[zOffset + -5] = k111 - k22;
		e[zOffset + -7] = k111 + k22;
		var zOffset1 = zOffset - 8;
		var t02 = e[zOffset1];
		var t12 = e[zOffset1 + -4];
		var k002 = t02 - t12;
		var y01 = t02 + t12;
		t02 = e[zOffset1 + -2];
		t12 = e[zOffset1 + -6];
		var y21 = t02 + t12;
		var k221 = t02 - t12;
		e[zOffset1] = y01 + y21;
		e[zOffset1 + -2] = y01 - y21;
		var k331 = e[zOffset1 + -3] - e[zOffset1 + -7];
		e[zOffset1 + -4] = k002 + k331;
		e[zOffset1 + -6] = k002 - k331;
		t02 = e[zOffset1 + -1];
		t12 = e[zOffset1 + -5];
		var k112 = t02 - t12;
		var y11 = t02 + t12;
		var y31 = e[zOffset1 + -3] + e[zOffset1 + -7];
		e[zOffset1 + -1] = y11 + y31;
		e[zOffset1 + -3] = y11 - y31;
		e[zOffset1 + -5] = k112 - k221;
		e[zOffset1 + -7] = k112 + k221;
		zOffset -= 16;
	}
};
var kha_audio2_ogg_vorbis_Reader = function(input,seekFunc,inputLength) {
	this.seekFunc = seekFunc;
	this.inputLength = inputLength;
	this.decoder = kha_audio2_ogg_vorbis_VorbisDecoder.start(input);
	this.decoder.setupSampleNumber(seekFunc,inputLength);
	this.loopStart = this.get_header().comment.get_loopStart();
	this.loopLength = this.get_header().comment.get_loopLength();
};
$hxClasses["kha.audio2.ogg.vorbis.Reader"] = kha_audio2_ogg_vorbis_Reader;
kha_audio2_ogg_vorbis_Reader.__name__ = ["kha","audio2","ogg","vorbis","Reader"];
kha_audio2_ogg_vorbis_Reader.openFromBytes = function(bytes) {
	var input = new haxe_io_BytesInput(bytes);
	var a1 = input;
	return new kha_audio2_ogg_vorbis_Reader(input,function(a2) {
		kha_audio2_ogg_vorbis_Reader.seekBytes(a1,a2);
	},bytes.length);
};
kha_audio2_ogg_vorbis_Reader.seekBytes = function(bytes,pos) {
	bytes.set_position(pos);
};
kha_audio2_ogg_vorbis_Reader.readAll = function(bytes,output,useFloat) {
	if(useFloat == null) {
		useFloat = false;
	}
	var input = new haxe_io_BytesInput(bytes);
	var decoder = kha_audio2_ogg_vorbis_VorbisDecoder.start(input);
	var a1 = input;
	decoder.setupSampleNumber(function(a2) {
		kha_audio2_ogg_vorbis_Reader.seekBytes(a1,a2);
	},bytes.length);
	var header = decoder.header;
	var count = 0;
	var bufferSize = 4096;
	var length = bufferSize * header.channel;
	var this1 = new Array(length);
	var buffer = this1;
	while(true) {
		var n = decoder.read(buffer,bufferSize,header.channel,header.sampleRate,useFloat);
		var _g1 = 0;
		var _g = n * header.channel;
		while(_g1 < _g) {
			var i = _g1++;
			output.writeFloat(buffer[i]);
		}
		if(n == 0) {
			break;
		}
		count += n;
	}
	return decoder.header;
};
kha_audio2_ogg_vorbis_Reader.prototype = {
	get_header: function() {
		return this.decoder.header;
	}
	,get_totalSample: function() {
		return this.decoder.totalSample;
	}
	,get_totalMillisecond: function() {
		var samples = this.decoder.totalSample;
		var b = this.get_header().sampleRate;
		return _$UInt_UInt_$Impl_$.toFloat(samples) / _$UInt_UInt_$Impl_$.toFloat(b) * 1000;
	}
	,get_currentSample: function() {
		return this.decoder.currentSample;
	}
	,set_currentSample: function(value) {
		this.decoder.seek(this.seekFunc,this.inputLength,value);
		return this.decoder.currentSample;
	}
	,get_currentMillisecond: function() {
		var samples = this.get_currentSample();
		var b = this.get_header().sampleRate;
		return _$UInt_UInt_$Impl_$.toFloat(samples) / _$UInt_UInt_$Impl_$.toFloat(b) * 1000;
	}
	,set_currentMillisecond: function(value) {
		var _g = value / 1000;
		var _g1 = this.get_header().sampleRate;
		this.set_currentSample(Math.floor(_$UInt_UInt_$Impl_$.toFloat(_g1) * _g));
		return this.get_currentMillisecond();
	}
	,read: function(output,samples,channels,sampleRate,useFloat) {
		if(useFloat == null) {
			useFloat = false;
		}
		this.decoder.ensurePosition(this.seekFunc);
		if(samples == null) {
			samples = this.decoder.totalSample;
		}
		if(channels == null) {
			channels = this.get_header().channel;
		}
		if(sampleRate == null) {
			sampleRate = this.get_header().sampleRate;
		}
		return this.decoder.read(output,samples,channels,sampleRate,useFloat);
	}
	,clone: function() {
		var reader = Type.createEmptyInstance(kha_audio2_ogg_vorbis_Reader);
		reader.seekFunc = this.seekFunc;
		reader.inputLength = this.inputLength;
		reader.decoder = this.decoder.clone(this.seekFunc);
		reader.loopStart = this.loopStart;
		reader.loopLength = this.loopLength;
		return reader;
	}
	,sampleToMillisecond: function(samples) {
		var b = this.get_header().sampleRate;
		return _$UInt_UInt_$Impl_$.toFloat(samples) / _$UInt_UInt_$Impl_$.toFloat(b) * 1000;
	}
	,millisecondToSample: function(millseconds) {
		var _g = millseconds / 1000;
		var _g1 = this.get_header().sampleRate;
		return Math.floor(_$UInt_UInt_$Impl_$.toFloat(_g1) * _g);
	}
	,__class__: kha_audio2_ogg_vorbis_Reader
	,__properties__: {set_currentMillisecond:"set_currentMillisecond",get_currentMillisecond:"get_currentMillisecond",set_currentSample:"set_currentSample",get_currentSample:"get_currentSample",get_totalMillisecond:"get_totalMillisecond",get_totalSample:"get_totalSample",get_header:"get_header"}
};
var kha_audio2_ogg_vorbis_VorbisDecodeState = function(input) {
	this.nextSeg = 0;
	this.firstDecode = false;
	this.bytesInSeg = 0;
	this.validBits = 0;
	this.input = input;
	this.inputPosition = 0;
	this.page = new kha_audio2_ogg_vorbis_data_Page();
	kha_audio2_ogg_tools_Crc32.init();
};
$hxClasses["kha.audio2.ogg.vorbis.VorbisDecodeState"] = kha_audio2_ogg_vorbis_VorbisDecodeState;
kha_audio2_ogg_vorbis_VorbisDecodeState.__name__ = ["kha","audio2","ogg","vorbis","VorbisDecodeState"];
kha_audio2_ogg_vorbis_VorbisDecodeState.prototype = {
	setup: function(loc0,loc1) {
		this.inputPosition += 1;
		var segmentCount = this.input.readByte();
		this.inputPosition += segmentCount;
		var this1 = new Array(segmentCount);
		var vec = this1;
		var _g1 = 0;
		var _g = segmentCount;
		while(_g1 < _g) {
			var i = _g1++;
			vec[i] = this.input.readByte();
		}
		this.segments = vec;
		this.endSegWithKnownLoc = -2;
		if(loc0 != -1 || loc1 != -1) {
			var i1 = segmentCount - 1;
			while(i1 >= 0) {
				if(this.segments[i1] < 255) {
					break;
				}
				if(i1 >= 0) {
					this.endSegWithKnownLoc = i1;
					this.knownLocForPacket = loc0;
				}
				--i1;
			}
		}
		if(this.firstDecode) {
			var i2 = 0;
			var len = 0;
			var p = new kha_audio2_ogg_vorbis_data_ProbedPage();
			var _g11 = 0;
			var _g2 = segmentCount;
			while(_g11 < _g2) {
				var i3 = _g11++;
				len += this.segments[i3];
			}
			len += 27 + segmentCount;
			p.pageStart = this.firstAudioPageOffset;
			p.pageEnd = p.pageStart + len;
			p.firstDecodedSample = 0;
			p.lastDecodedSample = loc0;
			this.pFirst = p;
		}
		this.nextSeg = 0;
	}
	,clone: function(seekFunc) {
		var state = Type.createEmptyInstance(kha_audio2_ogg_vorbis_VorbisDecodeState);
		seekFunc(this.inputPosition);
		state.input = this.input;
		state.eof = this.eof;
		state.validBits = this.validBits;
		state.discardSamplesDeferred = this.discardSamplesDeferred;
		state.firstDecode = this.firstDecode;
		state.nextSeg = this.nextSeg;
		state.bytesInSeg = this.bytesInSeg;
		state.acc = state.acc;
		state.lastSeg = this.lastSeg;
		state.lastSegWhich = this.lastSegWhich;
		state.currentLoc = this.currentLoc;
		state.currentLocValid = this.currentLocValid;
		state.inputPosition = this.inputPosition;
		state.firstAudioPageOffset = this.firstAudioPageOffset;
		state.error = this.error;
		state.segments = this.segments;
		state.pFirst = this.pFirst;
		state.pLast = this.pLast;
		state.page = this.page.clone();
		return state;
	}
	,next: function() {
		if(this.lastSeg) {
			return 0;
		}
		if(this.nextSeg == -1) {
			this.lastSegWhich = this.segments.length - 1;
			try {
				this.page.start(this);
			} catch( e ) {
				if (e instanceof js__$Boot_HaxeError) e = e.val;
				if( js_Boot.__instanceof(e,kha_audio2_ogg_vorbis_data_ReaderError) ) {
					this.lastSeg = true;
					this.error = e;
					return 0;
				} else throw(e);
			}
			if((this.page.flag & 1) == 0) {
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.CONTINUED_PACKET_FLAG_INVALID,null,{ fileName : "VorbisDecodeState.hx", lineNumber : 171, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "next"}));
			}
		}
		var len = this.segments[this.nextSeg++];
		if(len < 255) {
			this.lastSeg = true;
			this.lastSegWhich = this.nextSeg - 1;
		}
		if(this.nextSeg >= this.segments.length) {
			this.nextSeg = -1;
		}
		var b = this.bytesInSeg == 0;
		this.bytesInSeg = len;
		return len;
	}
	,startPacket: function() {
		while(this.nextSeg == -1) {
			this.page.start(this);
			if((this.page.flag & 1) != 0) {
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.MISSING_CAPTURE_PATTERN,null,{ fileName : "VorbisDecodeState.hx", lineNumber : 193, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "startPacket"}));
			}
		}
		this.lastSeg = false;
		this.validBits = 0;
		this.bytesInSeg = 0;
	}
	,maybeStartPacket: function() {
		if(this.nextSeg == -1) {
			var eof = false;
			var x;
			try {
				this.inputPosition += 1;
				x = this.input.readByte();
			} catch( e ) {
				if (e instanceof js__$Boot_HaxeError) e = e.val;
				if( js_Boot.__instanceof(e,haxe_io_Eof) ) {
					eof = true;
					x = 0;
				} else throw(e);
			}
			if(eof) {
				return false;
			}
			var tmp;
			var tmp1;
			var tmp2;
			if(x == 79) {
				this.inputPosition += 1;
				tmp2 = this.input.readByte() != 103;
			} else {
				tmp2 = true;
			}
			if(!tmp2) {
				this.inputPosition += 1;
				tmp1 = this.input.readByte() != 103;
			} else {
				tmp1 = true;
			}
			if(!tmp1) {
				this.inputPosition += 1;
				tmp = this.input.readByte() != 83;
			} else {
				tmp = true;
			}
			if(tmp) {
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.MISSING_CAPTURE_PATTERN,null,{ fileName : "VorbisDecodeState.hx", lineNumber : 218, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "maybeStartPacket"}));
			}
			this.page.startWithoutCapturePattern(this);
		}
		this.startPacket();
		return true;
	}
	,readBits: function(n) {
		if(this.validBits < 0) {
			return 0;
		} else if(this.validBits < n) {
			if(n > 24) {
				return this.readBits(24) + (this.readBits(n - 24) << 24);
			} else {
				if(this.validBits == 0) {
					this.acc = 0;
				}
				while(true) {
					if(this.bytesInSeg == 0 && (this.lastSeg || this.next() == 0)) {
						this.validBits = -1;
						break;
					} else {
						this.bytesInSeg--;
						this.inputPosition += 1;
						this.acc = this.acc + (this.input.readByte() << this.validBits);
						this.validBits += 8;
					}
					if(!(this.validBits < n)) {
						break;
					}
				}
				if(this.validBits < 0) {
					return 0;
				} else {
					var z = this.acc & (1 << n) - 1;
					this.acc = this.acc >>> n;
					this.validBits -= n;
					return z;
				}
			}
		} else {
			var z1 = this.acc & (1 << n) - 1;
			this.acc = this.acc >>> n;
			this.validBits -= n;
			return z1;
		}
	}
	,readPacketRaw: function() {
		if(this.bytesInSeg == 0 && (this.lastSeg || this.next() == 0)) {
			return -1;
		} else {
			this.bytesInSeg--;
			this.inputPosition += 1;
			return this.input.readByte();
		}
	}
	,readPacket: function() {
		var x;
		if(this.bytesInSeg == 0 && (this.lastSeg || this.next() == 0)) {
			x = -1;
		} else {
			this.bytesInSeg--;
			this.inputPosition += 1;
			x = this.input.readByte();
		}
		this.validBits = 0;
		return x;
	}
	,flushPacket: function() {
		while(this.bytesInSeg != 0 || !this.lastSeg && this.next() != 0) {
			this.bytesInSeg--;
			this.inputPosition += 1;
			this.input.readByte();
		}
	}
	,vorbisValidate: function() {
		var header = new haxe_io_Bytes(new ArrayBuffer(6));
		var _g = 0;
		while(_g < 6) {
			var i = _g++;
			var x;
			if(this.bytesInSeg == 0 && (this.lastSeg || this.next() == 0)) {
				x = -1;
			} else {
				this.bytesInSeg--;
				this.inputPosition += 1;
				x = this.input.readByte();
			}
			this.validBits = 0;
			header.b[i] = x & 255;
		}
		if(header.toString() != "vorbis") {
			throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,"vorbis header",{ fileName : "VorbisDecodeState.hx", lineNumber : 300, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "vorbisValidate"}));
		}
	}
	,firstPageValidate: function() {
		if(this.segments.length != 1) {
			throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE,"segmentCount",{ fileName : "VorbisDecodeState.hx", lineNumber : 307, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "firstPageValidate"}));
		}
		if(this.segments[0] != 30) {
			throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE,"decodeState head",{ fileName : "VorbisDecodeState.hx", lineNumber : 310, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "firstPageValidate"}));
		}
	}
	,startFirstDecode: function() {
		this.firstAudioPageOffset = this.inputPosition;
		this.firstDecode = true;
	}
	,capturePattern: function() {
		var tmp;
		var tmp1;
		var tmp2;
		this.inputPosition += 1;
		if(this.input.readByte() == 79) {
			this.inputPosition += 1;
			tmp2 = this.input.readByte() != 103;
		} else {
			tmp2 = true;
		}
		if(!tmp2) {
			this.inputPosition += 1;
			tmp1 = this.input.readByte() != 103;
		} else {
			tmp1 = true;
		}
		if(!tmp1) {
			this.inputPosition += 1;
			tmp = this.input.readByte() != 83;
		} else {
			tmp = true;
		}
		if(tmp) {
			throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.MISSING_CAPTURE_PATTERN,null,{ fileName : "VorbisDecodeState.hx", lineNumber : 323, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "capturePattern"}));
		}
	}
	,skip: function(len) {
		this.inputPosition += len;
		var this1 = new Array(len);
		var vec = this1;
		var _g1 = 0;
		var _g = len;
		while(_g1 < _g) {
			var i = _g1++;
			vec[i] = this.input.readByte();
		}
	}
	,prepHuffman: function() {
		if(this.validBits <= 24) {
			if(this.validBits == 0) {
				this.acc = 0;
			}
			while(true) {
				if(this.bytesInSeg == 0 && (this.lastSeg || this.next() == 0)) {
					return;
				} else {
					this.bytesInSeg--;
					this.inputPosition += 1;
					this.acc = this.acc + (this.input.readByte() << this.validBits);
					this.validBits += 8;
				}
				if(!(this.validBits <= 24)) {
					break;
				}
			}
		}
	}
	,decode: function(c) {
		if(this.validBits < 10) {
			this.prepHuffman();
		}
		var i = c.fastHuffman[this.acc & 1023];
		var val;
		if(i >= 0) {
			var l = c.codewordLengths[i];
			this.acc = this.acc >>> l;
			this.validBits -= l;
			if(this.validBits < 0) {
				this.validBits = 0;
				val = -1;
			} else {
				val = i;
			}
		} else {
			val = this.decodeScalarRaw(c);
		}
		if(c.sparse) {
			val = c.sortedValues[val];
		}
		return val;
	}
	,decodeRaw: function(c) {
		if(this.validBits < 10) {
			this.prepHuffman();
		}
		var i = c.fastHuffman[this.acc & 1023];
		if(i >= 0) {
			var l = c.codewordLengths[i];
			this.acc = this.acc >>> l;
			this.validBits -= l;
			if(this.validBits < 0) {
				this.validBits = 0;
				return -1;
			} else {
				return i;
			}
		} else {
			return this.decodeScalarRaw(c);
		}
	}
	,isLastByte: function() {
		if(this.bytesInSeg == 0) {
			return this.lastSeg;
		} else {
			return false;
		}
	}
	,finishDecodePacket: function(previousLength,n,r) {
		var left = r.left.start;
		var currentLocValid = false;
		var n2 = n >> 1;
		if(this.firstDecode) {
			this.currentLoc = -n2;
			this.discardSamplesDeferred = n - r.right.end;
			currentLocValid = true;
			this.firstDecode = false;
		} else if(this.discardSamplesDeferred != 0) {
			r.left.start += this.discardSamplesDeferred;
			left = r.left.start;
			this.discardSamplesDeferred = 0;
		} else {
			var tmp = previousLength == 0 && currentLocValid;
		}
		if(this.lastSegWhich == this.endSegWithKnownLoc) {
			if(currentLocValid && (this.page.flag & 4) != 0) {
				var currentEnd = this.knownLocForPacket - (n - r.right.end);
				if(currentEnd < this.currentLoc + r.right.end) {
					var len = currentEnd < this.currentLoc ? 0 : currentEnd - this.currentLoc;
					len += r.left.start;
					this.currentLoc += len;
					return { len : len, left : left, right : r.right.start};
				}
			}
			this.currentLoc = this.knownLocForPacket - (n2 - r.left.start);
			currentLocValid = true;
		}
		if(currentLocValid) {
			this.currentLoc += r.right.start - r.left.start;
		}
		return { len : r.right.end, left : left, right : r.right.start};
	}
	,readInt32: function() {
		this.inputPosition += 4;
		return this.input.readInt32();
	}
	,readByte: function() {
		this.inputPosition += 1;
		return this.input.readByte();
	}
	,read: function(n) {
		this.inputPosition += n;
		var this1 = new Array(n);
		var vec = this1;
		var _g1 = 0;
		var _g = n;
		while(_g1 < _g) {
			var i = _g1++;
			vec[i] = this.input.readByte();
		}
		return vec;
	}
	,readBytes: function(n) {
		this.inputPosition += n;
		return this.input.read(n);
	}
	,readString: function(n) {
		this.inputPosition += n;
		return this.input.readString(n);
	}
	,getSampleNumber: function(seekFunc,inputLength) {
		var restoreOffset = this.inputPosition;
		var previousSafe = _$UInt_UInt_$Impl_$.gte(inputLength,65536) && _$UInt_UInt_$Impl_$.gte(inputLength - 65536,this.firstAudioPageOffset) ? inputLength - 65536 : this.firstAudioPageOffset;
		seekFunc(this.inputPosition = previousSafe);
		var end = 0;
		var last = false;
		var _g = this.findPage(seekFunc,inputLength);
		switch(_g[1]) {
		case 0:
			var l = _g[3];
			var e = _g[2];
			end = e;
			last = l;
			break;
		case 1:
			throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.CANT_FIND_LAST_PAGE,null,{ fileName : "VorbisDecodeState.hx", lineNumber : 518, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "getSampleNumber"}));
			break;
		}
		var lastPageLoc = this.inputPosition;
		try {
			while(!last) {
				seekFunc(this.inputPosition = end);
				var _g1 = this.findPage(seekFunc,inputLength);
				switch(_g1[1]) {
				case 0:
					var l1 = _g1[3];
					var e1 = _g1[2];
					end = e1;
					last = l1;
					break;
				case 1:
					throw "__break__";
					break;
				}
				previousSafe = lastPageLoc + 1;
				lastPageLoc = this.inputPosition;
			}
		} catch( e ) { if( e != "__break__" ) throw e; }
		seekFunc(this.inputPosition = lastPageLoc);
		this.inputPosition += 6;
		var this1 = new Array(6);
		var vec = this1;
		var _g11 = 0;
		var _g2 = 6;
		while(_g11 < _g2) {
			var i = _g11++;
			vec[i] = this.input.readByte();
		}
		var vorbisHeader = vec;
		this.inputPosition += 4;
		var lo = this.input.readInt32();
		this.inputPosition += 4;
		var hi = this.input.readInt32();
		if(lo == -1 && hi == -1 || hi > 0) {
			throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.CANT_FIND_LAST_PAGE,null,{ fileName : "VorbisDecodeState.hx", lineNumber : 552, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "getSampleNumber"}));
		}
		this.pLast = new kha_audio2_ogg_vorbis_data_ProbedPage();
		this.pLast.pageStart = lastPageLoc;
		this.pLast.pageEnd = end;
		this.pLast.lastDecodedSample = lo;
		this.pLast.firstDecodedSample = null;
		this.pLast.afterPreviousPageStart = previousSafe;
		seekFunc(this.inputPosition = restoreOffset);
		return lo;
	}
	,forcePageResync: function() {
		this.nextSeg = -1;
	}
	,setInputOffset: function(seekFunc,n) {
		seekFunc(this.inputPosition = n);
	}
	,findPage: function(seekFunc,inputLength) {
		try {
			while(true) {
				this.inputPosition += 1;
				var n = this.input.readByte();
				if(n == 79) {
					var retryLoc = this.inputPosition;
					if(retryLoc - 25 > inputLength) {
						return kha_audio2_ogg_vorbis__$VorbisDecodeState_FindPageResult.NotFound;
					}
					var tmp;
					var tmp1;
					this.inputPosition += 1;
					if(this.input.readByte() == 103) {
						this.inputPosition += 1;
						tmp1 = this.input.readByte() != 103;
					} else {
						tmp1 = true;
					}
					if(!tmp1) {
						this.inputPosition += 1;
						tmp = this.input.readByte() != 83;
					} else {
						tmp = true;
					}
					if(tmp) {
						continue;
					}
					var this1 = new Array(27);
					var header = this1;
					header[0] = 79;
					header[1] = 103;
					header[2] = 103;
					header[3] = 83;
					var _g = 4;
					while(_g < 27) {
						var i = _g++;
						this.inputPosition += 1;
						header[i] = this.input.readByte();
					}
					if(header[4] != 0) {
						seekFunc(this.inputPosition = retryLoc);
						continue;
					}
					var goal = header[22] + (header[23] << 8) + (header[24] << 16) + (header[25] << 24);
					var _g1 = 22;
					while(_g1 < 26) {
						var i1 = _g1++;
						header[i1] = 0;
					}
					var crc = 0;
					var _g2 = 0;
					while(_g2 < 27) {
						var i2 = _g2++;
						crc = crc << 8 ^ kha_audio2_ogg_tools_Crc32.table[header[i2] ^ crc >>> 24];
					}
					var len = 0;
					try {
						var _g11 = 0;
						var _g3 = header[26];
						while(_g11 < _g3) {
							var i3 = _g11++;
							this.inputPosition += 1;
							var s = this.input.readByte();
							crc = crc << 8 ^ kha_audio2_ogg_tools_Crc32.table[s ^ crc >>> 24];
							len += s;
						}
						var _g12 = 0;
						var _g4 = len;
						while(_g12 < _g4) {
							var i4 = _g12++;
							this.inputPosition += 1;
							var $byte = this.input.readByte();
							crc = crc << 8 ^ kha_audio2_ogg_tools_Crc32.table[$byte ^ crc >>> 24];
						}
					} catch( e ) {
						if (e instanceof js__$Boot_HaxeError) e = e.val;
						if( js_Boot.__instanceof(e,haxe_io_Eof) ) {
							return kha_audio2_ogg_vorbis__$VorbisDecodeState_FindPageResult.NotFound;
						} else throw(e);
					}
					if(crc == goal) {
						var end = this.inputPosition;
						seekFunc(this.inputPosition = retryLoc - 1);
						return kha_audio2_ogg_vorbis__$VorbisDecodeState_FindPageResult.Found(end,(header[5] & 4) != 0);
					}
				}
			}
		} catch( e1 ) {
			if (e1 instanceof js__$Boot_HaxeError) e1 = e1.val;
			if( js_Boot.__instanceof(e1,haxe_io_Eof) ) {
				return kha_audio2_ogg_vorbis__$VorbisDecodeState_FindPageResult.NotFound;
			} else throw(e1);
		}
	}
	,analyzePage: function(seekFunc,h) {
		var z = new kha_audio2_ogg_vorbis_data_ProbedPage();
		var this1 = new Array(255);
		var packetType = this1;
		z.pageStart = this.inputPosition;
		this.inputPosition += 27;
		var this2 = new Array(27);
		var vec = this2;
		var _g1 = 0;
		var _g = 27;
		while(_g1 < _g) {
			var i = _g1++;
			vec[i] = this.input.readByte();
		}
		var pageHeader = vec;
		var n = pageHeader[26];
		this.inputPosition += n;
		var this3 = new Array(n);
		var vec1 = this3;
		var _g11 = 0;
		var _g2 = n;
		while(_g11 < _g2) {
			var i1 = _g11++;
			vec1[i1] = this.input.readByte();
		}
		var lacing = vec1;
		var len = 0;
		var _g12 = 0;
		var _g3 = pageHeader[26];
		while(_g12 < _g3) {
			var i2 = _g12++;
			len += lacing[i2];
		}
		z.pageEnd = z.pageStart + 27 + pageHeader[26] + len;
		z.lastDecodedSample = pageHeader[6] + (pageHeader[7] << 8) + (pageHeader[8] << 16) + (pageHeader[9] << 16);
		if((pageHeader[5] & 4) != 0) {
			z.firstDecodedSample = null;
			seekFunc(this.inputPosition = z.pageStart);
			return z;
		}
		var numPacket = 0;
		var packetStart = (pageHeader[5] & 1) == 0;
		var modeCount = h.modes.length;
		var _g13 = 0;
		var _g4 = pageHeader[26];
		while(_g13 < _g4) {
			var i3 = _g13++;
			if(packetStart) {
				if(lacing[i3] == 0) {
					seekFunc(this.inputPosition = z.pageStart);
					return null;
				}
				this.inputPosition += 1;
				var n1 = this.input.readByte();
				if((n1 & 1) != 0) {
					seekFunc(this.inputPosition = z.pageStart);
					return null;
				}
				n1 >>= 1;
				var n2 = modeCount - 1;
				var log2_4 = [0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4];
				var b = n2 < 16384 ? n2 < 16 ? log2_4[n2] : n2 < 512 ? 5 + log2_4[n2 >> 5] : 10 + log2_4[n2 >> 10] : n2 < 16777216 ? n2 < 524288 ? 15 + log2_4[n2 >> 15] : 20 + log2_4[n2 >> 20] : n2 < 536870912 ? 25 + log2_4[n2 >> 25] : n2 < -2147483648 ? 30 + log2_4[n2 >> 30] : 0;
				n1 &= (1 << b) - 1;
				if(n1 >= modeCount) {
					seekFunc(this.inputPosition = z.pageStart);
					return null;
				}
				packetType[numPacket++] = h.modes[n1].blockflag;
				var len1 = lacing[i3] - 1;
				this.inputPosition += len1;
				var this4 = new Array(len1);
				var vec2 = this4;
				var _g14 = 0;
				var _g5 = len1;
				while(_g14 < _g5) {
					var i4 = _g14++;
					vec2[i4] = this.input.readByte();
				}
			} else {
				var len2 = lacing[i3];
				this.inputPosition += len2;
				var this5 = new Array(len2);
				var vec3 = this5;
				var _g15 = 0;
				var _g6 = len2;
				while(_g15 < _g6) {
					var i5 = _g15++;
					vec3[i5] = this.input.readByte();
				}
			}
			packetStart = lacing[i3] < 255;
		}
		var samples = 0;
		if(numPacket > 1) {
			samples += packetType[numPacket - 1] ? h.blocksize1 : h.blocksize0;
		}
		var i6 = numPacket - 2;
		while(i6 >= 1) {
			--i6;
			if(packetType[i6]) {
				if(packetType[i6 + 1]) {
					samples += h.blocksize1 >> 1;
				} else {
					samples += (h.blocksize1 - h.blocksize0 >> 2) + (h.blocksize0 >> 1);
				}
			} else {
				samples += h.blocksize0 >> 1;
			}
			--i6;
		}
		z.firstDecodedSample = z.lastDecodedSample - samples;
		seekFunc(this.inputPosition = z.pageStart);
		return z;
	}
	,decodeScalarRaw: function(c) {
		this.prepHuffman();
		var b = c.sortedCodewords != null || c.codewords != null;
		var codewordLengths = c.codewordLengths;
		var codewords = c.codewords;
		var sortedCodewords = c.sortedCodewords;
		if(c.entries > 8 ? sortedCodewords != null : codewords != null) {
			var n = this.acc;
			n = (n & -1431655766) >>> 1 | (n & 1431655765) << 1;
			n = (n & -858993460) >>> 2 | (n & 858993459) << 2;
			n = (n & -252645136) >>> 4 | (n & 252645135) << 4;
			n = (n & -16711936) >>> 8 | (n & 16711935) << 8;
			var code = n >>> 16 | n << 16;
			var x = 0;
			var n1 = c.sortedEntries;
			while(n1 > 1) {
				var m = x + (n1 >> 1);
				if(_$UInt_UInt_$Impl_$.gte(code,sortedCodewords[m])) {
					x = m;
					n1 -= n1 >> 1;
				} else {
					n1 >>= 1;
				}
			}
			if(!c.sparse) {
				x = c.sortedValues[x];
			}
			var len = codewordLengths[x];
			if(this.validBits >= len) {
				this.acc = this.acc >>> len;
				this.validBits -= len;
				return x;
			}
			this.validBits = 0;
			return -1;
		}
		var b1 = !c.sparse;
		var _g1 = 0;
		var _g = c.entries;
		while(_g1 < _g) {
			var i = _g1++;
			var cl = codewordLengths[i];
			if(cl == 255) {
				continue;
			}
			if(codewords[i] == (this.acc & (1 << cl) - 1)) {
				if(this.validBits >= cl) {
					this.acc = this.acc >>> cl;
					this.validBits -= cl;
					return i;
				}
				this.validBits = 0;
				return -1;
			}
		}
		this.error = new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_STREAM,null,{ fileName : "VorbisDecodeState.hx", lineNumber : 846, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "decodeScalarRaw"});
		this.validBits = 0;
		return -1;
	}
	,__class__: kha_audio2_ogg_vorbis_VorbisDecodeState
};
var kha_audio2_ogg_vorbis__$VorbisDecodeState_FindPageResult = $hxClasses["kha.audio2.ogg.vorbis._VorbisDecodeState.FindPageResult"] = { __ename__ : true, __constructs__ : ["Found","NotFound"] };
kha_audio2_ogg_vorbis__$VorbisDecodeState_FindPageResult.Found = function(end,last) { var $x = ["Found",0,end,last]; $x.__enum__ = kha_audio2_ogg_vorbis__$VorbisDecodeState_FindPageResult; $x.toString = $estr; return $x; };
kha_audio2_ogg_vorbis__$VorbisDecodeState_FindPageResult.NotFound = ["NotFound",1];
kha_audio2_ogg_vorbis__$VorbisDecodeState_FindPageResult.NotFound.toString = $estr;
kha_audio2_ogg_vorbis__$VorbisDecodeState_FindPageResult.NotFound.__enum__ = kha_audio2_ogg_vorbis__$VorbisDecodeState_FindPageResult;
var kha_audio2_ogg_vorbis_VorbisDecoder = function(header,decodeState) {
	this.header = header;
	this.decodeState = decodeState;
	this.totalSample = null;
	this.currentSample = 0;
	this.previousLength = 0;
	var length = header.channel;
	var this1 = new Array(length);
	this.channelBuffers = this1;
	var length1 = header.channel;
	var this2 = new Array(length1);
	this.previousWindow = this2;
	var length2 = header.channel;
	var this3 = new Array(length2);
	this.finalY = this3;
	var _g1 = 0;
	var _g = header.channel;
	while(_g1 < _g) {
		var i = _g1++;
		var this4 = this.channelBuffers;
		var len = header.blocksize1;
		var this5 = new Array(len);
		var vec = this5;
		this4[i] = vec;
		var this6 = this.previousWindow;
		var len1 = header.blocksize1 / 2 | 0;
		var this7 = new Array(len1);
		var vec1 = this7;
		this6[i] = vec1;
		this.finalY[i] = [];
	}
	var this8 = new Array(2);
	this.a = this8;
	var this9 = new Array(2);
	this.b = this9;
	var this10 = new Array(2);
	this.c = this10;
	var this11 = new Array(2);
	this.window = this11;
	var this12 = new Array(2);
	this.bitReverseData = this12;
	this.initBlocksize(0,header.blocksize0);
	this.initBlocksize(1,header.blocksize1);
};
$hxClasses["kha.audio2.ogg.vorbis.VorbisDecoder"] = kha_audio2_ogg_vorbis_VorbisDecoder;
kha_audio2_ogg_vorbis_VorbisDecoder.__name__ = ["kha","audio2","ogg","vorbis","VorbisDecoder"];
kha_audio2_ogg_vorbis_VorbisDecoder.start = function(input) {
	var decodeState = new kha_audio2_ogg_vorbis_VorbisDecodeState(input);
	var header = kha_audio2_ogg_vorbis_data_Header.read(decodeState);
	var decoder = new kha_audio2_ogg_vorbis_VorbisDecoder(header,decodeState);
	decodeState.startFirstDecode();
	decoder.pumpFirstFrame();
	return decoder;
};
kha_audio2_ogg_vorbis_VorbisDecoder.prototype = {
	read: function(output,samples,channels,sampleRate,useFloat) {
		var b = this.header.sampleRate;
		if((_$UInt_UInt_$Impl_$.toFloat(sampleRate) % _$UInt_UInt_$Impl_$.toFloat(b) | 0) != 0) {
			throw new js__$Boot_HaxeError("Unsupported sampleRate : can't convert " + Std.string(_$UInt_UInt_$Impl_$.toFloat(this.header.sampleRate)) + " to " + sampleRate);
		}
		if(channels % this.header.channel != 0) {
			throw new js__$Boot_HaxeError("Unsupported channels : can't convert " + this.header.channel + " to " + channels);
		}
		var b1 = this.header.sampleRate;
		var sampleRepeat = _$UInt_UInt_$Impl_$.toFloat(sampleRate) / _$UInt_UInt_$Impl_$.toFloat(b1) | 0;
		var channelRepeat = channels / this.header.channel | 0;
		var n = 0;
		var len = Math.floor(samples / sampleRepeat);
		if(this.totalSample != null && len > this.totalSample - this.currentSample) {
			len = this.totalSample - this.currentSample;
		}
		var index = 0;
		while(n < len) {
			var k = this.channelBufferEnd - this.channelBufferStart;
			if(k >= len - n) {
				k = len - n;
			}
			var _g1 = this.channelBufferStart;
			var _g = this.channelBufferStart + k;
			while(_g1 < _g) {
				var j = _g1++;
				var _g3 = 0;
				var _g2 = sampleRepeat;
				while(_g3 < _g2) {
					var sr = _g3++;
					var _g5 = 0;
					var _g4 = this.header.channel;
					while(_g5 < _g4) {
						var i = _g5++;
						var _g7 = 0;
						var _g6 = channelRepeat;
						while(_g7 < _g6) {
							var cr = _g7++;
							var value = this.channelBuffers[i][j];
							if(value > 1) {
								value = 1;
							} else if(value < -1) {
								value = -1;
							}
							if(useFloat) {
								output[index] = value;
								++index;
							}
						}
					}
				}
			}
			n += k;
			this.channelBufferStart += k;
			if(n == len || this.getFrameFloat() == 0) {
				break;
			}
		}
		var _g11 = n;
		var _g8 = len;
		while(_g11 < _g8) {
			var j1 = _g11++;
			var _g31 = 0;
			var _g21 = sampleRepeat;
			while(_g31 < _g21) {
				var sr1 = _g31++;
				var _g51 = 0;
				var _g41 = this.header.channel;
				while(_g51 < _g41) {
					var i1 = _g51++;
					var _g71 = 0;
					var _g61 = channelRepeat;
					while(_g71 < _g61) {
						var cr1 = _g71++;
						if(useFloat) {
							output[index] = 0;
							++index;
						}
					}
				}
			}
		}
		this.currentSample += len;
		return len * sampleRepeat;
	}
	,skipSamples: function(len) {
		var n = 0;
		if(this.totalSample != null && len > this.totalSample - this.currentSample) {
			len = this.totalSample - this.currentSample;
		}
		while(n < len) {
			var k = this.channelBufferEnd - this.channelBufferStart;
			if(k >= len - n) {
				k = len - n;
			}
			n += k;
			this.channelBufferStart += k;
			if(n == len || this.getFrameFloat() == 0) {
				break;
			}
		}
		this.currentSample += len;
		return len;
	}
	,setupSampleNumber: function(seekFunc,inputLength) {
		if(this.totalSample == null) {
			this.totalSample = this.decodeState.getSampleNumber(seekFunc,inputLength);
		}
	}
	,seek: function(seekFunc,inputLength,sampleNumber) {
		if(this.currentSample == sampleNumber) {
			return;
		}
		if(this.totalSample == null) {
			this.setupSampleNumber(seekFunc,inputLength);
			if(this.totalSample == 0) {
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.CANT_FIND_LAST_PAGE,null,{ fileName : "VorbisDecoder.hx", lineNumber : 187, className : "kha.audio2.ogg.vorbis.VorbisDecoder", methodName : "seek"}));
			}
		}
		if(sampleNumber < 0) {
			sampleNumber = 0;
		}
		var p0 = this.decodeState.pFirst;
		var p1 = this.decodeState.pLast;
		if(sampleNumber >= p1.lastDecodedSample) {
			sampleNumber = p1.lastDecodedSample - 1;
		}
		if(sampleNumber < p0.lastDecodedSample) {
			this.seekFrameFromPage(seekFunc,p0.pageStart,0,sampleNumber);
		} else {
			var attempts = 0;
			while(p0.pageEnd < p1.pageStart) {
				var startOffset = p0.pageEnd;
				var endOffset = p1.afterPreviousPageStart;
				var startSample = p0.lastDecodedSample;
				var endSample = p1.lastDecodedSample;
				if(startSample == null || endSample == null) {
					throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.SEEK_FAILED,null,{ fileName : "VorbisDecoder.hx", lineNumber : 219, className : "kha.audio2.ogg.vorbis.VorbisDecoder", methodName : "seek"}));
				}
				if(_$UInt_UInt_$Impl_$.gt(endOffset,startOffset + 4000)) {
					endOffset = endOffset - 4000;
				}
				var probe = startOffset + Math.floor(_$UInt_UInt_$Impl_$.toFloat(endOffset - startOffset) / _$UInt_UInt_$Impl_$.toFloat(endSample - startSample) * (sampleNumber - startSample));
				if(attempts >= 4) {
					var probe2 = startOffset + (endOffset - startOffset >>> 1);
					if(attempts >= 8) {
						probe = probe2;
					} else if(_$UInt_UInt_$Impl_$.gt(probe2,probe)) {
						probe = probe + (probe2 - probe >>> 1);
					} else {
						probe = probe2 + (probe - probe2 >>> 1);
					}
				}
				++attempts;
				seekFunc(this.decodeState.inputPosition = probe);
				var _g = this.decodeState.findPage(seekFunc,inputLength);
				switch(_g[1]) {
				case 0:
					break;
				case 1:
					throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.SEEK_FAILED,null,{ fileName : "VorbisDecoder.hx", lineNumber : 249, className : "kha.audio2.ogg.vorbis.VorbisDecoder", methodName : "seek"}));
					break;
				}
				var q = this.decodeState.analyzePage(seekFunc,this.header);
				if(q == null) {
					throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.SEEK_FAILED,null,{ fileName : "VorbisDecoder.hx", lineNumber : 255, className : "kha.audio2.ogg.vorbis.VorbisDecoder", methodName : "seek"}));
				}
				q.afterPreviousPageStart = probe;
				if(q.pageStart == p1.pageStart) {
					p1 = q;
					continue;
				}
				if(sampleNumber < q.lastDecodedSample) {
					p1 = q;
				} else {
					p0 = q;
				}
			}
			if(p0.lastDecodedSample <= sampleNumber && sampleNumber < p1.lastDecodedSample) {
				this.seekFrameFromPage(seekFunc,p1.pageStart,p0.lastDecodedSample,sampleNumber);
			} else {
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.SEEK_FAILED,null,{ fileName : "VorbisDecoder.hx", lineNumber : 275, className : "kha.audio2.ogg.vorbis.VorbisDecoder", methodName : "seek"}));
			}
		}
	}
	,seekFrameFromPage: function(seekFunc,pageStart,firstSample,targetSample) {
		var frame = 0;
		var frameStart = firstSample;
		seekFunc(this.decodeState.inputPosition = pageStart);
		this.decodeState.nextSeg = -1;
		var leftEnd = 0;
		var leftStart = 0;
		var prevState = null;
		var lastState = null;
		while(true) {
			prevState = lastState;
			lastState = this.decodeState.clone(seekFunc);
			var initialResult = this.decodeInitial();
			if(initialResult == null) {
				lastState = prevState;
				break;
			}
			leftStart = initialResult.left.start;
			leftEnd = initialResult.left.end;
			var start = frame == 0 ? leftEnd : leftStart;
			if(targetSample < frameStart + initialResult.right.start - start) {
				break;
			}
			var _this = this.decodeState;
			while(_this.bytesInSeg != 0 || !_this.lastSeg && _this.next() != 0) {
				_this.bytesInSeg--;
				_this.inputPosition += 1;
				_this.input.readByte();
			}
			frameStart += initialResult.right.start - start;
			++frame;
		}
		this.decodeState = lastState;
		seekFunc(this.decodeState.inputPosition);
		this.previousLength = 0;
		this.pumpFirstFrame();
		this.currentSample = frameStart;
		this.skipSamples(targetSample - frameStart);
	}
	,clone: function(seekFunc) {
		var decoder = Type.createEmptyInstance(kha_audio2_ogg_vorbis_VorbisDecoder);
		decoder.currentSample = this.currentSample;
		decoder.totalSample = this.totalSample;
		decoder.previousLength = this.previousLength;
		decoder.channelBufferStart = this.channelBufferStart;
		decoder.channelBufferEnd = this.channelBufferEnd;
		decoder.a = this.a;
		decoder.b = this.b;
		decoder.c = this.c;
		decoder.window = this.window;
		decoder.bitReverseData = this.bitReverseData;
		decoder.header = this.header;
		decoder.decodeState = this.decodeState.clone(seekFunc);
		var length = this.header.channel;
		var this1 = new Array(length);
		decoder.channelBuffers = this1;
		var length1 = this.header.channel;
		var this2 = new Array(length1);
		decoder.previousWindow = this2;
		var length2 = this.header.channel;
		var this3 = new Array(length2);
		decoder.finalY = this3;
		var _g1 = 0;
		var _g = this.header.channel;
		while(_g1 < _g) {
			var i = _g1++;
			decoder.channelBuffers[i] = kha_audio2_ogg_vorbis_VorbisTools.copyVector(this.channelBuffers[i]);
			decoder.previousWindow[i] = kha_audio2_ogg_vorbis_VorbisTools.copyVector(this.previousWindow[i]);
			decoder.finalY[i] = Lambda.array(this.finalY[i]);
		}
		return decoder;
	}
	,ensurePosition: function(seekFunc) {
		seekFunc(this.decodeState.inputPosition);
	}
	,getFrameFloat: function() {
		var result = this.decodePacket();
		if(result == null) {
			this.channelBufferStart = this.channelBufferEnd = 0;
			return 0;
		}
		var len = this.finishFrame(result);
		this.channelBufferStart = result.left;
		this.channelBufferEnd = result.left + len;
		return len;
	}
	,pumpFirstFrame: function() {
		this.finishFrame(this.decodePacket());
	}
	,finishFrame: function(r) {
		var len = r.len;
		var right = r.right;
		var left = r.left;
		if(this.previousLength != 0) {
			var n = this.previousLength;
			var w = this.getWindow(n);
			var _g1 = 0;
			var _g = this.header.channel;
			while(_g1 < _g) {
				var i = _g1++;
				var cb = this.channelBuffers[i];
				var pw = this.previousWindow[i];
				var _g3 = 0;
				var _g2 = n;
				while(_g3 < _g2) {
					var j = _g3++;
					cb[left + j] = cb[left + j] * w[j] + pw[j] * w[n - 1 - j];
				}
			}
		}
		var prev = this.previousLength;
		this.previousLength = len - right;
		var _g11 = 0;
		var _g4 = this.header.channel;
		while(_g11 < _g4) {
			var i1 = _g11++;
			var pw1 = this.previousWindow[i1];
			var cb1 = this.channelBuffers[i1];
			var _g31 = 0;
			var _g21 = len - right;
			while(_g31 < _g21) {
				var j1 = _g31++;
				pw1[j1] = cb1[right + j1];
			}
		}
		if(prev == 0) {
			return 0;
		}
		if(len < right) {
			right = len;
		}
		return right - left;
	}
	,getWindow: function(len) {
		len <<= 1;
		if(len == this.header.blocksize0) {
			return this.window[0];
		} else if(len == this.header.blocksize1) {
			return this.window[1];
		} else {
			return null;
		}
	}
	,initBlocksize: function(bs,n) {
		var n2 = n >> 1;
		var n4 = n >> 2;
		var n8 = n >> 3;
		var this1 = this.a;
		var this2 = new Array(n2);
		this1[bs] = this2;
		var this3 = this.b;
		var this4 = new Array(n2);
		this3[bs] = this4;
		var this5 = this.c;
		var this6 = new Array(n4);
		this5[bs] = this6;
		var this7 = this.window;
		var this8 = new Array(n2);
		this7[bs] = this8;
		var this9 = this.bitReverseData;
		var this10 = new Array(n8);
		this9[bs] = this10;
		kha_audio2_ogg_vorbis_VorbisTools.computeTwiddleFactors(n,this.a[bs],this.b[bs],this.c[bs]);
		kha_audio2_ogg_vorbis_VorbisTools.computeWindow(n,this.window[bs]);
		kha_audio2_ogg_vorbis_VorbisTools.computeBitReverse(n,this.bitReverseData[bs]);
	}
	,inverseMdct: function(buffer,n,blocktype) {
		var bt = blocktype ? 1 : 0;
		var a = this.a[bt];
		var b = this.b[bt];
		var c = this.c[bt];
		var bitReverse = this.bitReverseData[bt];
		var n2 = n >> 1;
		var n4 = n >> 2;
		var n8 = n >> 3;
		var this1 = new Array(n2);
		var buf2 = this1;
		var dOffset = n2 - 2;
		var aaOffset = 0;
		var eOffset = 0;
		var eStopOffset = n2;
		while(eOffset != eStopOffset) {
			buf2[dOffset + 1] = buffer[eOffset] * a[aaOffset] - buffer[eOffset + 2] * a[aaOffset + 1];
			buf2[dOffset] = buffer[eOffset] * a[aaOffset + 1] + buffer[eOffset + 2] * a[aaOffset];
			dOffset -= 2;
			aaOffset += 2;
			eOffset += 4;
		}
		eOffset = n2 - 3;
		while(dOffset >= 0) {
			buf2[dOffset + 1] = -buffer[eOffset + 2] * a[aaOffset] - -buffer[eOffset] * a[aaOffset + 1];
			buf2[dOffset] = -buffer[eOffset + 2] * a[aaOffset + 1] + -buffer[eOffset] * a[aaOffset];
			dOffset -= 2;
			aaOffset += 2;
			eOffset -= 4;
		}
		var u = buffer;
		var v = buf2;
		var aaOffset1 = n2 - 8;
		var eOffset0 = n4;
		var eOffset1 = 0;
		var dOffset0 = n4;
		var dOffset1 = 0;
		while(aaOffset1 >= 0) {
			var v41_21 = v[eOffset0 + 1] - v[eOffset1 + 1];
			var v40_20 = v[eOffset0] - v[eOffset1];
			u[dOffset0 + 1] = v[eOffset0 + 1] + v[eOffset1 + 1];
			u[dOffset0] = v[eOffset0] + v[eOffset1];
			u[dOffset1 + 1] = v41_21 * a[aaOffset1 + 4] - v40_20 * a[aaOffset1 + 5];
			u[dOffset1] = v40_20 * a[aaOffset1 + 4] + v41_21 * a[aaOffset1 + 5];
			v41_21 = v[eOffset0 + 3] - v[eOffset1 + 3];
			v40_20 = v[eOffset0 + 2] - v[eOffset1 + 2];
			u[dOffset0 + 3] = v[eOffset0 + 3] + v[eOffset1 + 3];
			u[dOffset0 + 2] = v[eOffset0 + 2] + v[eOffset1 + 2];
			u[dOffset1 + 3] = v41_21 * a[aaOffset1] - v40_20 * a[aaOffset1 + 1];
			u[dOffset1 + 2] = v40_20 * a[aaOffset1] + v41_21 * a[aaOffset1 + 1];
			aaOffset1 -= 8;
			dOffset0 += 4;
			dOffset1 += 4;
			eOffset0 += 4;
			eOffset1 += 4;
		}
		var log2_4 = [0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4];
		var ld = (n < 16384 ? n < 16 ? log2_4[n] : n < 512 ? 5 + log2_4[n >> 5] : 10 + log2_4[n >> 10] : n < 16777216 ? n < 524288 ? 15 + log2_4[n >> 15] : 20 + log2_4[n >> 20] : n < 536870912 ? 25 + log2_4[n >> 25] : n < -2147483648 ? 30 + log2_4[n >> 30] : 0) - 1;
		var i_off = n2 - 1 - n4 * 0;
		var eeOffset0 = i_off;
		var eeOffset2 = i_off + -(n >> 3);
		var aOffset = 0;
		var i = (n >> 4 >> 2) + 1;
		while(--i > 0) {
			var k00_20 = u[eeOffset0] - u[eeOffset2];
			var k01_21 = u[eeOffset0 + -1] - u[eeOffset2 + -1];
			var _g = eeOffset0;
			var _g1 = u;
			_g1[_g] = _g1[_g] + u[eeOffset2];
			var _g2 = eeOffset0 + -1;
			var _g11 = u;
			_g11[_g2] = _g11[_g2] + u[eeOffset2 + -1];
			u[eeOffset2] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
			u[eeOffset2 + -1] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
			aOffset += 8;
			k00_20 = u[eeOffset0 + -2] - u[eeOffset2 + -2];
			k01_21 = u[eeOffset0 + -3] - u[eeOffset2 + -3];
			var _g3 = eeOffset0 + -2;
			var _g12 = u;
			_g12[_g3] = _g12[_g3] + u[eeOffset2 + -2];
			var _g4 = eeOffset0 + -3;
			var _g13 = u;
			_g13[_g4] = _g13[_g4] + u[eeOffset2 + -3];
			u[eeOffset2 + -2] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
			u[eeOffset2 + -3] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
			aOffset += 8;
			k00_20 = u[eeOffset0 + -4] - u[eeOffset2 + -4];
			k01_21 = u[eeOffset0 + -5] - u[eeOffset2 + -5];
			var _g5 = eeOffset0 + -4;
			var _g14 = u;
			_g14[_g5] = _g14[_g5] + u[eeOffset2 + -4];
			var _g6 = eeOffset0 + -5;
			var _g15 = u;
			_g15[_g6] = _g15[_g6] + u[eeOffset2 + -5];
			u[eeOffset2 + -4] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
			u[eeOffset2 + -5] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
			aOffset += 8;
			k00_20 = u[eeOffset0 + -6] - u[eeOffset2 + -6];
			k01_21 = u[eeOffset0 + -7] - u[eeOffset2 + -7];
			var _g7 = eeOffset0 + -6;
			var _g16 = u;
			_g16[_g7] = _g16[_g7] + u[eeOffset2 + -6];
			var _g8 = eeOffset0 + -7;
			var _g17 = u;
			_g17[_g8] = _g17[_g8] + u[eeOffset2 + -7];
			u[eeOffset2 + -6] = k00_20 * a[aOffset] - k01_21 * a[aOffset + 1];
			u[eeOffset2 + -7] = k01_21 * a[aOffset] + k00_20 * a[aOffset + 1];
			aOffset += 8;
			eeOffset0 -= 8;
			eeOffset2 -= 8;
		}
		var i_off1 = n2 - 1 - n4;
		var eeOffset01 = i_off1;
		var eeOffset21 = i_off1 + -(n >> 3);
		var aOffset1 = 0;
		var i1 = (n >> 4 >> 2) + 1;
		while(--i1 > 0) {
			var k00_201 = u[eeOffset01] - u[eeOffset21];
			var k01_211 = u[eeOffset01 + -1] - u[eeOffset21 + -1];
			var _g9 = eeOffset01;
			var _g18 = u;
			_g18[_g9] = _g18[_g9] + u[eeOffset21];
			var _g10 = eeOffset01 + -1;
			var _g19 = u;
			_g19[_g10] = _g19[_g10] + u[eeOffset21 + -1];
			u[eeOffset21] = k00_201 * a[aOffset1] - k01_211 * a[aOffset1 + 1];
			u[eeOffset21 + -1] = k01_211 * a[aOffset1] + k00_201 * a[aOffset1 + 1];
			aOffset1 += 8;
			k00_201 = u[eeOffset01 + -2] - u[eeOffset21 + -2];
			k01_211 = u[eeOffset01 + -3] - u[eeOffset21 + -3];
			var _g20 = eeOffset01 + -2;
			var _g110 = u;
			_g110[_g20] = _g110[_g20] + u[eeOffset21 + -2];
			var _g21 = eeOffset01 + -3;
			var _g111 = u;
			_g111[_g21] = _g111[_g21] + u[eeOffset21 + -3];
			u[eeOffset21 + -2] = k00_201 * a[aOffset1] - k01_211 * a[aOffset1 + 1];
			u[eeOffset21 + -3] = k01_211 * a[aOffset1] + k00_201 * a[aOffset1 + 1];
			aOffset1 += 8;
			k00_201 = u[eeOffset01 + -4] - u[eeOffset21 + -4];
			k01_211 = u[eeOffset01 + -5] - u[eeOffset21 + -5];
			var _g22 = eeOffset01 + -4;
			var _g112 = u;
			_g112[_g22] = _g112[_g22] + u[eeOffset21 + -4];
			var _g23 = eeOffset01 + -5;
			var _g113 = u;
			_g113[_g23] = _g113[_g23] + u[eeOffset21 + -5];
			u[eeOffset21 + -4] = k00_201 * a[aOffset1] - k01_211 * a[aOffset1 + 1];
			u[eeOffset21 + -5] = k01_211 * a[aOffset1] + k00_201 * a[aOffset1 + 1];
			aOffset1 += 8;
			k00_201 = u[eeOffset01 + -6] - u[eeOffset21 + -6];
			k01_211 = u[eeOffset01 + -7] - u[eeOffset21 + -7];
			var _g24 = eeOffset01 + -6;
			var _g114 = u;
			_g114[_g24] = _g114[_g24] + u[eeOffset21 + -6];
			var _g25 = eeOffset01 + -7;
			var _g115 = u;
			_g115[_g25] = _g115[_g25] + u[eeOffset21 + -7];
			u[eeOffset21 + -6] = k00_201 * a[aOffset1] - k01_211 * a[aOffset1 + 1];
			u[eeOffset21 + -7] = k01_211 * a[aOffset1] + k00_201 * a[aOffset1 + 1];
			aOffset1 += 8;
			eeOffset01 -= 8;
			eeOffset21 -= 8;
		}
		var d0 = n2 - 1 - n8 * 0;
		var aOffset2 = 0;
		var eOffset01 = d0;
		var eOffset2 = d0 + -(n >> 4);
		var i2 = (n >> 5 >> 2) + 1;
		while(--i2 > 0) {
			var k00_202 = u[eOffset01] - u[eOffset2];
			var k01_212 = u[eOffset01 + -1] - u[eOffset2 + -1];
			var _g26 = eOffset01;
			var _g116 = u;
			_g116[_g26] = _g116[_g26] + u[eOffset2];
			var _g27 = eOffset01 + -1;
			var _g117 = u;
			_g117[_g27] = _g117[_g27] + u[eOffset2 + -1];
			u[eOffset2] = k00_202 * a[aOffset2] - k01_212 * a[aOffset2 + 1];
			u[eOffset2 + -1] = k01_212 * a[aOffset2] + k00_202 * a[aOffset2 + 1];
			aOffset2 += 16;
			k00_202 = u[eOffset01 + -2] - u[eOffset2 + -2];
			k01_212 = u[eOffset01 + -3] - u[eOffset2 + -3];
			var _g28 = eOffset01 + -2;
			var _g118 = u;
			_g118[_g28] = _g118[_g28] + u[eOffset2 + -2];
			var _g29 = eOffset01 + -3;
			var _g119 = u;
			_g119[_g29] = _g119[_g29] + u[eOffset2 + -3];
			u[eOffset2 + -2] = k00_202 * a[aOffset2] - k01_212 * a[aOffset2 + 1];
			u[eOffset2 + -3] = k01_212 * a[aOffset2] + k00_202 * a[aOffset2 + 1];
			aOffset2 += 16;
			k00_202 = u[eOffset01 + -4] - u[eOffset2 + -4];
			k01_212 = u[eOffset01 + -5] - u[eOffset2 + -5];
			var _g30 = eOffset01 + -4;
			var _g120 = u;
			_g120[_g30] = _g120[_g30] + u[eOffset2 + -4];
			var _g31 = eOffset01 + -5;
			var _g121 = u;
			_g121[_g31] = _g121[_g31] + u[eOffset2 + -5];
			u[eOffset2 + -4] = k00_202 * a[aOffset2] - k01_212 * a[aOffset2 + 1];
			u[eOffset2 + -5] = k01_212 * a[aOffset2] + k00_202 * a[aOffset2 + 1];
			aOffset2 += 16;
			k00_202 = u[eOffset01 + -6] - u[eOffset2 + -6];
			k01_212 = u[eOffset01 + -7] - u[eOffset2 + -7];
			var _g32 = eOffset01 + -6;
			var _g122 = u;
			_g122[_g32] = _g122[_g32] + u[eOffset2 + -6];
			var _g33 = eOffset01 + -7;
			var _g123 = u;
			_g123[_g33] = _g123[_g33] + u[eOffset2 + -7];
			u[eOffset2 + -6] = k00_202 * a[aOffset2] - k01_212 * a[aOffset2 + 1];
			u[eOffset2 + -7] = k01_212 * a[aOffset2] + k00_202 * a[aOffset2 + 1];
			eOffset01 -= 8;
			eOffset2 -= 8;
			aOffset2 += 16;
		}
		var d01 = n2 - 1 - n8;
		var aOffset3 = 0;
		var eOffset02 = d01;
		var eOffset21 = d01 + -(n >> 4);
		var i3 = (n >> 5 >> 2) + 1;
		while(--i3 > 0) {
			var k00_203 = u[eOffset02] - u[eOffset21];
			var k01_213 = u[eOffset02 + -1] - u[eOffset21 + -1];
			var _g34 = eOffset02;
			var _g124 = u;
			_g124[_g34] = _g124[_g34] + u[eOffset21];
			var _g35 = eOffset02 + -1;
			var _g125 = u;
			_g125[_g35] = _g125[_g35] + u[eOffset21 + -1];
			u[eOffset21] = k00_203 * a[aOffset3] - k01_213 * a[aOffset3 + 1];
			u[eOffset21 + -1] = k01_213 * a[aOffset3] + k00_203 * a[aOffset3 + 1];
			aOffset3 += 16;
			k00_203 = u[eOffset02 + -2] - u[eOffset21 + -2];
			k01_213 = u[eOffset02 + -3] - u[eOffset21 + -3];
			var _g36 = eOffset02 + -2;
			var _g126 = u;
			_g126[_g36] = _g126[_g36] + u[eOffset21 + -2];
			var _g37 = eOffset02 + -3;
			var _g127 = u;
			_g127[_g37] = _g127[_g37] + u[eOffset21 + -3];
			u[eOffset21 + -2] = k00_203 * a[aOffset3] - k01_213 * a[aOffset3 + 1];
			u[eOffset21 + -3] = k01_213 * a[aOffset3] + k00_203 * a[aOffset3 + 1];
			aOffset3 += 16;
			k00_203 = u[eOffset02 + -4] - u[eOffset21 + -4];
			k01_213 = u[eOffset02 + -5] - u[eOffset21 + -5];
			var _g38 = eOffset02 + -4;
			var _g128 = u;
			_g128[_g38] = _g128[_g38] + u[eOffset21 + -4];
			var _g39 = eOffset02 + -5;
			var _g129 = u;
			_g129[_g39] = _g129[_g39] + u[eOffset21 + -5];
			u[eOffset21 + -4] = k00_203 * a[aOffset3] - k01_213 * a[aOffset3 + 1];
			u[eOffset21 + -5] = k01_213 * a[aOffset3] + k00_203 * a[aOffset3 + 1];
			aOffset3 += 16;
			k00_203 = u[eOffset02 + -6] - u[eOffset21 + -6];
			k01_213 = u[eOffset02 + -7] - u[eOffset21 + -7];
			var _g40 = eOffset02 + -6;
			var _g130 = u;
			_g130[_g40] = _g130[_g40] + u[eOffset21 + -6];
			var _g41 = eOffset02 + -7;
			var _g131 = u;
			_g131[_g41] = _g131[_g41] + u[eOffset21 + -7];
			u[eOffset21 + -6] = k00_203 * a[aOffset3] - k01_213 * a[aOffset3 + 1];
			u[eOffset21 + -7] = k01_213 * a[aOffset3] + k00_203 * a[aOffset3 + 1];
			eOffset02 -= 8;
			eOffset21 -= 8;
			aOffset3 += 16;
		}
		var d02 = n2 - 1 - n8 * 2;
		var aOffset4 = 0;
		var eOffset03 = d02;
		var eOffset22 = d02 + -(n >> 4);
		var i4 = (n >> 5 >> 2) + 1;
		while(--i4 > 0) {
			var k00_204 = u[eOffset03] - u[eOffset22];
			var k01_214 = u[eOffset03 + -1] - u[eOffset22 + -1];
			var _g42 = eOffset03;
			var _g132 = u;
			_g132[_g42] = _g132[_g42] + u[eOffset22];
			var _g43 = eOffset03 + -1;
			var _g133 = u;
			_g133[_g43] = _g133[_g43] + u[eOffset22 + -1];
			u[eOffset22] = k00_204 * a[aOffset4] - k01_214 * a[aOffset4 + 1];
			u[eOffset22 + -1] = k01_214 * a[aOffset4] + k00_204 * a[aOffset4 + 1];
			aOffset4 += 16;
			k00_204 = u[eOffset03 + -2] - u[eOffset22 + -2];
			k01_214 = u[eOffset03 + -3] - u[eOffset22 + -3];
			var _g44 = eOffset03 + -2;
			var _g134 = u;
			_g134[_g44] = _g134[_g44] + u[eOffset22 + -2];
			var _g45 = eOffset03 + -3;
			var _g135 = u;
			_g135[_g45] = _g135[_g45] + u[eOffset22 + -3];
			u[eOffset22 + -2] = k00_204 * a[aOffset4] - k01_214 * a[aOffset4 + 1];
			u[eOffset22 + -3] = k01_214 * a[aOffset4] + k00_204 * a[aOffset4 + 1];
			aOffset4 += 16;
			k00_204 = u[eOffset03 + -4] - u[eOffset22 + -4];
			k01_214 = u[eOffset03 + -5] - u[eOffset22 + -5];
			var _g46 = eOffset03 + -4;
			var _g136 = u;
			_g136[_g46] = _g136[_g46] + u[eOffset22 + -4];
			var _g47 = eOffset03 + -5;
			var _g137 = u;
			_g137[_g47] = _g137[_g47] + u[eOffset22 + -5];
			u[eOffset22 + -4] = k00_204 * a[aOffset4] - k01_214 * a[aOffset4 + 1];
			u[eOffset22 + -5] = k01_214 * a[aOffset4] + k00_204 * a[aOffset4 + 1];
			aOffset4 += 16;
			k00_204 = u[eOffset03 + -6] - u[eOffset22 + -6];
			k01_214 = u[eOffset03 + -7] - u[eOffset22 + -7];
			var _g48 = eOffset03 + -6;
			var _g138 = u;
			_g138[_g48] = _g138[_g48] + u[eOffset22 + -6];
			var _g49 = eOffset03 + -7;
			var _g139 = u;
			_g139[_g49] = _g139[_g49] + u[eOffset22 + -7];
			u[eOffset22 + -6] = k00_204 * a[aOffset4] - k01_214 * a[aOffset4 + 1];
			u[eOffset22 + -7] = k01_214 * a[aOffset4] + k00_204 * a[aOffset4 + 1];
			eOffset03 -= 8;
			eOffset22 -= 8;
			aOffset4 += 16;
		}
		var d03 = n2 - 1 - n8 * 3;
		var aOffset5 = 0;
		var eOffset04 = d03;
		var eOffset23 = d03 + -(n >> 4);
		var i5 = (n >> 5 >> 2) + 1;
		while(--i5 > 0) {
			var k00_205 = u[eOffset04] - u[eOffset23];
			var k01_215 = u[eOffset04 + -1] - u[eOffset23 + -1];
			var _g50 = eOffset04;
			var _g140 = u;
			_g140[_g50] = _g140[_g50] + u[eOffset23];
			var _g51 = eOffset04 + -1;
			var _g141 = u;
			_g141[_g51] = _g141[_g51] + u[eOffset23 + -1];
			u[eOffset23] = k00_205 * a[aOffset5] - k01_215 * a[aOffset5 + 1];
			u[eOffset23 + -1] = k01_215 * a[aOffset5] + k00_205 * a[aOffset5 + 1];
			aOffset5 += 16;
			k00_205 = u[eOffset04 + -2] - u[eOffset23 + -2];
			k01_215 = u[eOffset04 + -3] - u[eOffset23 + -3];
			var _g52 = eOffset04 + -2;
			var _g142 = u;
			_g142[_g52] = _g142[_g52] + u[eOffset23 + -2];
			var _g53 = eOffset04 + -3;
			var _g143 = u;
			_g143[_g53] = _g143[_g53] + u[eOffset23 + -3];
			u[eOffset23 + -2] = k00_205 * a[aOffset5] - k01_215 * a[aOffset5 + 1];
			u[eOffset23 + -3] = k01_215 * a[aOffset5] + k00_205 * a[aOffset5 + 1];
			aOffset5 += 16;
			k00_205 = u[eOffset04 + -4] - u[eOffset23 + -4];
			k01_215 = u[eOffset04 + -5] - u[eOffset23 + -5];
			var _g54 = eOffset04 + -4;
			var _g144 = u;
			_g144[_g54] = _g144[_g54] + u[eOffset23 + -4];
			var _g55 = eOffset04 + -5;
			var _g145 = u;
			_g145[_g55] = _g145[_g55] + u[eOffset23 + -5];
			u[eOffset23 + -4] = k00_205 * a[aOffset5] - k01_215 * a[aOffset5 + 1];
			u[eOffset23 + -5] = k01_215 * a[aOffset5] + k00_205 * a[aOffset5 + 1];
			aOffset5 += 16;
			k00_205 = u[eOffset04 + -6] - u[eOffset23 + -6];
			k01_215 = u[eOffset04 + -7] - u[eOffset23 + -7];
			var _g56 = eOffset04 + -6;
			var _g146 = u;
			_g146[_g56] = _g146[_g56] + u[eOffset23 + -6];
			var _g57 = eOffset04 + -7;
			var _g147 = u;
			_g147[_g57] = _g147[_g57] + u[eOffset23 + -7];
			u[eOffset23 + -6] = k00_205 * a[aOffset5] - k01_215 * a[aOffset5 + 1];
			u[eOffset23 + -7] = k01_215 * a[aOffset5] + k00_205 * a[aOffset5 + 1];
			eOffset04 -= 8;
			eOffset23 -= 8;
			aOffset5 += 16;
		}
		var _g148 = 2;
		var _g58 = ld - 3 >> 1;
		while(_g148 < _g58) {
			var l = _g148++;
			var k0 = n >> l + 2;
			var k0_2 = k0 >> 1;
			var lim = 1 << l + 1;
			var _g310 = 0;
			var _g210 = lim;
			while(_g310 < _g210) {
				var i6 = _g310++;
				var d04 = n2 - 1 - k0 * i6;
				var k1 = 1 << l + 3;
				var aOffset6 = 0;
				var eOffset05 = d04;
				var eOffset24 = d04 + -k0_2;
				var i7 = (n >> l + 4 >> 2) + 1;
				while(--i7 > 0) {
					var k00_206 = u[eOffset05] - u[eOffset24];
					var k01_216 = u[eOffset05 + -1] - u[eOffset24 + -1];
					var _g59 = eOffset05;
					var _g149 = u;
					_g149[_g59] = _g149[_g59] + u[eOffset24];
					var _g60 = eOffset05 + -1;
					var _g150 = u;
					_g150[_g60] = _g150[_g60] + u[eOffset24 + -1];
					u[eOffset24] = k00_206 * a[aOffset6] - k01_216 * a[aOffset6 + 1];
					u[eOffset24 + -1] = k01_216 * a[aOffset6] + k00_206 * a[aOffset6 + 1];
					aOffset6 += k1;
					k00_206 = u[eOffset05 + -2] - u[eOffset24 + -2];
					k01_216 = u[eOffset05 + -3] - u[eOffset24 + -3];
					var _g61 = eOffset05 + -2;
					var _g151 = u;
					_g151[_g61] = _g151[_g61] + u[eOffset24 + -2];
					var _g62 = eOffset05 + -3;
					var _g152 = u;
					_g152[_g62] = _g152[_g62] + u[eOffset24 + -3];
					u[eOffset24 + -2] = k00_206 * a[aOffset6] - k01_216 * a[aOffset6 + 1];
					u[eOffset24 + -3] = k01_216 * a[aOffset6] + k00_206 * a[aOffset6 + 1];
					aOffset6 += k1;
					k00_206 = u[eOffset05 + -4] - u[eOffset24 + -4];
					k01_216 = u[eOffset05 + -5] - u[eOffset24 + -5];
					var _g63 = eOffset05 + -4;
					var _g153 = u;
					_g153[_g63] = _g153[_g63] + u[eOffset24 + -4];
					var _g64 = eOffset05 + -5;
					var _g154 = u;
					_g154[_g64] = _g154[_g64] + u[eOffset24 + -5];
					u[eOffset24 + -4] = k00_206 * a[aOffset6] - k01_216 * a[aOffset6 + 1];
					u[eOffset24 + -5] = k01_216 * a[aOffset6] + k00_206 * a[aOffset6 + 1];
					aOffset6 += k1;
					k00_206 = u[eOffset05 + -6] - u[eOffset24 + -6];
					k01_216 = u[eOffset05 + -7] - u[eOffset24 + -7];
					var _g65 = eOffset05 + -6;
					var _g155 = u;
					_g155[_g65] = _g155[_g65] + u[eOffset24 + -6];
					var _g66 = eOffset05 + -7;
					var _g156 = u;
					_g156[_g66] = _g156[_g66] + u[eOffset24 + -7];
					u[eOffset24 + -6] = k00_206 * a[aOffset6] - k01_216 * a[aOffset6 + 1];
					u[eOffset24 + -7] = k01_216 * a[aOffset6] + k00_206 * a[aOffset6 + 1];
					eOffset05 -= 8;
					eOffset24 -= 8;
					aOffset6 += k1;
				}
			}
		}
		var _g157 = ld - 3 >> 1;
		var _g67 = ld - 6;
		while(_g157 < _g67) {
			var l1 = _g157++;
			var k01 = n >> l1 + 2;
			var k11 = 1 << l1 + 3;
			var k0_21 = k01 >> 1;
			var rlim = n >> l1 + 6;
			var lim1 = 1 << l1 + 1;
			var aOffset7 = 0;
			var i_off2 = n2 - 1;
			var r = rlim + 1;
			while(--r > 0) {
				var A0 = a[aOffset7];
				var A1 = a[aOffset7 + 1];
				var A2 = a[aOffset7 + k11];
				var A3 = a[aOffset7 + k11 + 1];
				var A4 = a[aOffset7 + k11 * 2];
				var A5 = a[aOffset7 + k11 * 2 + 1];
				var A6 = a[aOffset7 + k11 * 3];
				var A7 = a[aOffset7 + k11 * 3 + 1];
				var eeOffset02 = i_off2;
				var eeOffset22 = i_off2 + -k0_21;
				var i8 = lim1 + 1;
				while(--i8 > 0) {
					var k00 = u[eeOffset02] - u[eeOffset22];
					var k111 = u[eeOffset02 + -1] - u[eeOffset22 + -1];
					u[eeOffset02] = u[eeOffset02] + u[eeOffset22];
					u[eeOffset02 + -1] = u[eeOffset02 + -1] + u[eeOffset22 + -1];
					u[eeOffset22] = k00 * A0 - k111 * A1;
					u[eeOffset22 + -1] = k111 * A0 + k00 * A1;
					k00 = u[eeOffset02 + -2] - u[eeOffset22 + -2];
					k111 = u[eeOffset02 + -3] - u[eeOffset22 + -3];
					u[eeOffset02 + -2] = u[eeOffset02 + -2] + u[eeOffset22 + -2];
					u[eeOffset02 + -3] = u[eeOffset02 + -3] + u[eeOffset22 + -3];
					u[eeOffset22 + -2] = k00 * A2 - k111 * A3;
					u[eeOffset22 + -3] = k111 * A2 + k00 * A3;
					k00 = u[eeOffset02 + -4] - u[eeOffset22 + -4];
					k111 = u[eeOffset02 + -5] - u[eeOffset22 + -5];
					u[eeOffset02 + -4] = u[eeOffset02 + -4] + u[eeOffset22 + -4];
					u[eeOffset02 + -5] = u[eeOffset02 + -5] + u[eeOffset22 + -5];
					u[eeOffset22 + -4] = k00 * A4 - k111 * A5;
					u[eeOffset22 + -5] = k111 * A4 + k00 * A5;
					k00 = u[eeOffset02 + -6] - u[eeOffset22 + -6];
					k111 = u[eeOffset02 + -7] - u[eeOffset22 + -7];
					u[eeOffset02 + -6] = u[eeOffset02 + -6] + u[eeOffset22 + -6];
					u[eeOffset02 + -7] = u[eeOffset02 + -7] + u[eeOffset22 + -7];
					u[eeOffset22 + -6] = k00 * A6 - k111 * A7;
					u[eeOffset22 + -7] = k111 * A6 + k00 * A7;
					eeOffset02 -= k01;
					eeOffset22 -= k01;
				}
				aOffset7 += k11 * 4;
				i_off2 -= 8;
			}
		}
		var i_off3 = n2 - 1;
		var A21 = a[n >> 3];
		var zOffset = i_off3;
		var baseOffset = i_off3 - 16 * (n >> 5);
		while(zOffset > baseOffset) {
			var t0 = u[zOffset];
			var t1 = u[zOffset + -8];
			u[zOffset + -8] = t0 - t1;
			u[zOffset] = t0 + t1;
			t0 = u[zOffset + -1];
			t1 = u[zOffset + -9];
			u[zOffset + -9] = t0 - t1;
			u[zOffset + -1] = t0 + t1;
			t0 = u[zOffset + -2];
			t1 = u[zOffset + -10];
			var k001 = t0 - t1;
			u[zOffset + -2] = t0 + t1;
			t0 = u[zOffset + -3];
			t1 = u[zOffset + -11];
			var k112 = t0 - t1;
			u[zOffset + -3] = t0 + t1;
			u[zOffset + -10] = (k001 + k112) * A21;
			u[zOffset + -11] = (k112 - k001) * A21;
			t0 = u[zOffset + -4];
			t1 = u[zOffset + -12];
			k001 = t1 - t0;
			u[zOffset + -4] = t0 + t1;
			t0 = u[zOffset + -5];
			t1 = u[zOffset + -13];
			k112 = t0 - t1;
			u[zOffset + -5] = t0 + t1;
			u[zOffset + -12] = k112;
			u[zOffset + -13] = k001;
			t0 = u[zOffset + -6];
			t1 = u[zOffset + -14];
			k001 = t1 - t0;
			u[zOffset + -6] = t0 + t1;
			t0 = u[zOffset + -7];
			t1 = u[zOffset + -15];
			k112 = t0 - t1;
			u[zOffset + -7] = t0 + t1;
			u[zOffset + -14] = (k001 + k112) * A21;
			u[zOffset + -15] = (k001 - k112) * A21;
			var t01 = u[zOffset];
			var t11 = u[zOffset + -4];
			var k002 = t01 - t11;
			var y0 = t01 + t11;
			t01 = u[zOffset + -2];
			t11 = u[zOffset + -6];
			var y2 = t01 + t11;
			var k22 = t01 - t11;
			u[zOffset] = y0 + y2;
			u[zOffset + -2] = y0 - y2;
			var k33 = u[zOffset + -3] - u[zOffset + -7];
			u[zOffset + -4] = k002 + k33;
			u[zOffset + -6] = k002 - k33;
			t01 = u[zOffset + -1];
			t11 = u[zOffset + -5];
			var k113 = t01 - t11;
			var y1 = t01 + t11;
			var y3 = u[zOffset + -3] + u[zOffset + -7];
			u[zOffset + -1] = y1 + y3;
			u[zOffset + -3] = y1 - y3;
			u[zOffset + -5] = k113 - k22;
			u[zOffset + -7] = k113 + k22;
			var zOffset1 = zOffset - 8;
			var t02 = u[zOffset1];
			var t12 = u[zOffset1 + -4];
			var k003 = t02 - t12;
			var y01 = t02 + t12;
			t02 = u[zOffset1 + -2];
			t12 = u[zOffset1 + -6];
			var y21 = t02 + t12;
			var k221 = t02 - t12;
			u[zOffset1] = y01 + y21;
			u[zOffset1 + -2] = y01 - y21;
			var k331 = u[zOffset1 + -3] - u[zOffset1 + -7];
			u[zOffset1 + -4] = k003 + k331;
			u[zOffset1 + -6] = k003 - k331;
			t02 = u[zOffset1 + -1];
			t12 = u[zOffset1 + -5];
			var k114 = t02 - t12;
			var y11 = t02 + t12;
			var y31 = u[zOffset1 + -3] + u[zOffset1 + -7];
			u[zOffset1 + -1] = y11 + y31;
			u[zOffset1 + -3] = y11 - y31;
			u[zOffset1 + -5] = k114 - k221;
			u[zOffset1 + -7] = k114 + k221;
			zOffset -= 16;
		}
		var brOffset = 0;
		var dOffset01 = n4 - 4;
		var dOffset11 = n2 - 4;
		while(dOffset01 >= 0) {
			var k4 = bitReverse[brOffset];
			v[dOffset11 + 3] = u[k4];
			v[dOffset11 + 2] = u[k4 + 1];
			v[dOffset01 + 3] = u[k4 + 2];
			v[dOffset01 + 2] = u[k4 + 3];
			k4 = bitReverse[brOffset + 1];
			v[dOffset11 + 1] = u[k4];
			v[dOffset11] = u[k4 + 1];
			v[dOffset01 + 1] = u[k4 + 2];
			v[dOffset01] = u[k4 + 3];
			dOffset01 -= 4;
			dOffset11 -= 4;
			brOffset += 2;
		}
		var cOffset = 0;
		var dOffset2 = 0;
		var eOffset3 = n2 - 4;
		while(dOffset2 < eOffset3) {
			var a02 = v[dOffset2] - v[eOffset3 + 2];
			var a11 = v[dOffset2 + 1] + v[eOffset3 + 3];
			var b0 = c[cOffset + 1] * a02 + c[cOffset] * a11;
			var b1 = c[cOffset + 1] * a11 - c[cOffset] * a02;
			var b2 = v[dOffset2] + v[eOffset3 + 2];
			var b3 = v[dOffset2 + 1] - v[eOffset3 + 3];
			v[dOffset2] = b2 + b0;
			v[dOffset2 + 1] = b3 + b1;
			v[eOffset3 + 2] = b2 - b0;
			v[eOffset3 + 3] = b1 - b3;
			a02 = v[dOffset2 + 2] - v[eOffset3];
			a11 = v[dOffset2 + 3] + v[eOffset3 + 1];
			b0 = c[cOffset + 3] * a02 + c[cOffset + 2] * a11;
			b1 = c[cOffset + 3] * a11 - c[cOffset + 2] * a02;
			b2 = v[dOffset2 + 2] + v[eOffset3];
			b3 = v[dOffset2 + 3] - v[eOffset3 + 1];
			v[dOffset2 + 2] = b2 + b0;
			v[dOffset2 + 3] = b3 + b1;
			v[eOffset3] = b2 - b0;
			v[eOffset3 + 1] = b1 - b3;
			cOffset += 4;
			dOffset2 += 4;
			eOffset3 -= 4;
		}
		var bOffset = n2 - 8;
		var eOffset4 = n2 - 8;
		var dOffset02 = 0;
		var dOffset12 = n2 - 4;
		var dOffset21 = n2;
		var dOffset3 = n - 4;
		while(eOffset4 >= 0) {
			var p3 = buf2[eOffset4 + 6] * b[bOffset + 7] - buf2[eOffset4 + 7] * b[bOffset + 6];
			var p2 = -buf2[eOffset4 + 6] * b[bOffset + 6] - buf2[eOffset4 + 7] * b[bOffset + 7];
			buffer[dOffset02] = p3;
			buffer[dOffset12 + 3] = -p3;
			buffer[dOffset21] = p2;
			buffer[dOffset3 + 3] = p2;
			var p1 = buf2[eOffset4 + 4] * b[bOffset + 5] - buf2[eOffset4 + 5] * b[bOffset + 4];
			var p0 = -buf2[eOffset4 + 4] * b[bOffset + 4] - buf2[eOffset4 + 5] * b[bOffset + 5];
			buffer[dOffset02 + 1] = p1;
			buffer[dOffset12 + 2] = -p1;
			buffer[dOffset21 + 1] = p0;
			buffer[dOffset3 + 2] = p0;
			p3 = buf2[eOffset4 + 2] * b[bOffset + 3] - buf2[eOffset4 + 3] * b[bOffset + 2];
			p2 = -buf2[eOffset4 + 2] * b[bOffset + 2] - buf2[eOffset4 + 3] * b[bOffset + 3];
			buffer[dOffset02 + 2] = p3;
			buffer[dOffset12 + 1] = -p3;
			buffer[dOffset21 + 2] = p2;
			buffer[dOffset3 + 1] = p2;
			p1 = buf2[eOffset4] * b[bOffset + 1] - buf2[eOffset4 + 1] * b[bOffset];
			p0 = -buf2[eOffset4] * b[bOffset] - buf2[eOffset4 + 1] * b[bOffset + 1];
			buffer[dOffset02 + 3] = p1;
			buffer[dOffset12] = -p1;
			buffer[dOffset21 + 3] = p0;
			buffer[dOffset3] = p0;
			bOffset -= 8;
			eOffset4 -= 8;
			dOffset02 += 4;
			dOffset21 += 4;
			dOffset12 -= 4;
			dOffset3 -= 4;
		}
	}
	,decodePacket: function() {
		var result = this.decodeInitial();
		if(result == null) {
			return null;
		}
		var rest = this.decodePacketRest(result);
		return rest;
	}
	,decodeInitial: function() {
		this.channelBufferStart = this.channelBufferEnd = 0;
		while(true) {
			if(!this.decodeState.maybeStartPacket()) {
				return null;
			}
			var _this = this.decodeState;
			var tmp;
			if(_this.validBits < 0) {
				tmp = 0;
			} else if(_this.validBits < 1) {
				if(_this.validBits == 0) {
					_this.acc = 0;
				}
				while(true) {
					if(_this.bytesInSeg == 0 && (_this.lastSeg || _this.next() == 0)) {
						_this.validBits = -1;
						break;
					} else {
						_this.bytesInSeg--;
						_this.inputPosition += 1;
						_this.acc = _this.acc + (_this.input.readByte() << _this.validBits);
						_this.validBits += 8;
					}
					if(!(_this.validBits < 1)) {
						break;
					}
				}
				if(_this.validBits < 0) {
					tmp = 0;
				} else {
					var z = _this.acc & 1;
					_this.acc = _this.acc >>> 1;
					_this.validBits -= 1;
					tmp = z;
				}
			} else {
				var z1 = _this.acc & 1;
				_this.acc = _this.acc >>> 1;
				_this.validBits -= 1;
				tmp = z1;
			}
			if(tmp != 0) {
				while(true) {
					var _this1 = this.decodeState;
					var x;
					if(_this1.bytesInSeg == 0 && (_this1.lastSeg || _this1.next() == 0)) {
						x = -1;
					} else {
						_this1.bytesInSeg--;
						_this1.inputPosition += 1;
						x = _this1.input.readByte();
					}
					_this1.validBits = 0;
					if(!(-1 != x)) {
						break;
					}
				}
				continue;
			}
			break;
		}
		var _this2 = this.decodeState;
		var n = this.header.modes.length - 1;
		var log2_4 = [0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4];
		var n1 = n < 16384 ? n < 16 ? log2_4[n] : n < 512 ? 5 + log2_4[n >> 5] : 10 + log2_4[n >> 10] : n < 16777216 ? n < 524288 ? 15 + log2_4[n >> 15] : 20 + log2_4[n >> 20] : n < 536870912 ? 25 + log2_4[n >> 25] : n < -2147483648 ? 30 + log2_4[n >> 30] : 0;
		var i;
		if(_this2.validBits < 0) {
			i = 0;
		} else if(_this2.validBits < n1) {
			if(n1 > 24) {
				i = _this2.readBits(24) + (_this2.readBits(n1 - 24) << 24);
			} else {
				if(_this2.validBits == 0) {
					_this2.acc = 0;
				}
				while(true) {
					if(_this2.bytesInSeg == 0 && (_this2.lastSeg || _this2.next() == 0)) {
						_this2.validBits = -1;
						break;
					} else {
						_this2.bytesInSeg--;
						_this2.inputPosition += 1;
						_this2.acc = _this2.acc + (_this2.input.readByte() << _this2.validBits);
						_this2.validBits += 8;
					}
					if(!(_this2.validBits < n1)) {
						break;
					}
				}
				if(_this2.validBits < 0) {
					i = 0;
				} else {
					var z2 = _this2.acc & (1 << n1) - 1;
					_this2.acc = _this2.acc >>> n1;
					_this2.validBits -= n1;
					i = z2;
				}
			}
		} else {
			var z3 = _this2.acc & (1 << n1) - 1;
			_this2.acc = _this2.acc >>> n1;
			_this2.validBits -= n1;
			i = z3;
		}
		if(i == -1 || i >= this.header.modes.length) {
			throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.SEEK_FAILED,null,{ fileName : "VorbisDecoder.hx", lineNumber : 519, className : "kha.audio2.ogg.vorbis.VorbisDecoder", methodName : "decodeInitial"}));
		}
		var m = this.header.modes[i];
		var n2;
		var prev;
		var next;
		if(m.blockflag) {
			n2 = this.header.blocksize1;
			var _this3 = this.decodeState;
			if(_this3.validBits < 0) {
				prev = 0;
			} else if(_this3.validBits < 1) {
				if(_this3.validBits == 0) {
					_this3.acc = 0;
				}
				while(true) {
					if(_this3.bytesInSeg == 0 && (_this3.lastSeg || _this3.next() == 0)) {
						_this3.validBits = -1;
						break;
					} else {
						_this3.bytesInSeg--;
						_this3.inputPosition += 1;
						_this3.acc = _this3.acc + (_this3.input.readByte() << _this3.validBits);
						_this3.validBits += 8;
					}
					if(!(_this3.validBits < 1)) {
						break;
					}
				}
				if(_this3.validBits < 0) {
					prev = 0;
				} else {
					var z4 = _this3.acc & 1;
					_this3.acc = _this3.acc >>> 1;
					_this3.validBits -= 1;
					prev = z4;
				}
			} else {
				var z5 = _this3.acc & 1;
				_this3.acc = _this3.acc >>> 1;
				_this3.validBits -= 1;
				prev = z5;
			}
			var _this4 = this.decodeState;
			if(_this4.validBits < 0) {
				next = 0;
			} else if(_this4.validBits < 1) {
				if(_this4.validBits == 0) {
					_this4.acc = 0;
				}
				while(true) {
					if(_this4.bytesInSeg == 0 && (_this4.lastSeg || _this4.next() == 0)) {
						_this4.validBits = -1;
						break;
					} else {
						_this4.bytesInSeg--;
						_this4.inputPosition += 1;
						_this4.acc = _this4.acc + (_this4.input.readByte() << _this4.validBits);
						_this4.validBits += 8;
					}
					if(!(_this4.validBits < 1)) {
						break;
					}
				}
				if(_this4.validBits < 0) {
					next = 0;
				} else {
					var z6 = _this4.acc & 1;
					_this4.acc = _this4.acc >>> 1;
					_this4.validBits -= 1;
					next = z6;
				}
			} else {
				var z7 = _this4.acc & 1;
				_this4.acc = _this4.acc >>> 1;
				_this4.validBits -= 1;
				next = z7;
			}
		} else {
			next = 0;
			prev = next;
			n2 = this.header.blocksize0;
		}
		var windowCenter = n2 >> 1;
		return { mode : i, left : m.blockflag && prev == 0 ? { start : n2 - this.header.blocksize0 >> 2, end : n2 + this.header.blocksize0 >> 2} : { start : 0, end : windowCenter}, right : m.blockflag && next == 0 ? { start : n2 * 3 - this.header.blocksize0 >> 2, end : n2 * 3 + this.header.blocksize0 >> 2} : { start : windowCenter, end : n2}};
	}
	,decodePacketRest: function(r) {
		var len = 0;
		var m = this.header.modes[r.mode];
		var this1 = new Array(256);
		var zeroChannel = this1;
		var this2 = new Array(256);
		var reallyZeroChannel = this2;
		var n = m.blockflag ? this.header.blocksize1 : this.header.blocksize0;
		var map = this.header.mapping[m.mapping];
		var n2 = n >> 1;
		var rangeList = [256,128,86,64];
		var codebooks = this.header.codebooks;
		var _g1 = 0;
		var _g = this.header.channel;
		while(_g1 < _g) {
			var i = _g1++;
			var s = map.chan[i].mux;
			zeroChannel[i] = false;
			var floor = this.header.floorConfig[map.submapFloor[s]];
			if(floor.type == 0) {
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_STREAM,null,{ fileName : "VorbisDecoder.hx", lineNumber : 581, className : "kha.audio2.ogg.vorbis.VorbisDecoder", methodName : "decodePacketRest"}));
			} else {
				var g = floor.floor1;
				var _this = this.decodeState;
				var tmp;
				if(_this.validBits < 0) {
					tmp = 0;
				} else if(_this.validBits < 1) {
					if(_this.validBits == 0) {
						_this.acc = 0;
					}
					while(true) {
						if(_this.bytesInSeg == 0 && (_this.lastSeg || _this.next() == 0)) {
							_this.validBits = -1;
							break;
						} else {
							_this.bytesInSeg--;
							_this.inputPosition += 1;
							_this.acc = _this.acc + (_this.input.readByte() << _this.validBits);
							_this.validBits += 8;
						}
						if(!(_this.validBits < 1)) {
							break;
						}
					}
					if(_this.validBits < 0) {
						tmp = 0;
					} else {
						var z = _this.acc & 1;
						_this.acc = _this.acc >>> 1;
						_this.validBits -= 1;
						tmp = z;
					}
				} else {
					var z1 = _this.acc & 1;
					_this.acc = _this.acc >>> 1;
					_this.validBits -= 1;
					tmp = z1;
				}
				if(tmp != 0) {
					var fy = [];
					var this3 = new Array(256);
					var step2Flag = this3;
					var range = rangeList[g.floor1Multiplier - 1];
					var offset = 2;
					fy = this.finalY[i];
					var _this1 = this.decodeState;
					var log2_4 = [0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4];
					var n1 = (range < 16384 ? range < 16 ? log2_4[range] : range < 512 ? 5 + log2_4[range >> 5] : 10 + log2_4[range >> 10] : range < 16777216 ? range < 524288 ? 15 + log2_4[range >> 15] : 20 + log2_4[range >> 20] : range < 536870912 ? 25 + log2_4[range >> 25] : range < -2147483648 ? 30 + log2_4[range >> 30] : 0) - 1;
					var tmp1;
					if(_this1.validBits < 0) {
						tmp1 = 0;
					} else if(_this1.validBits < n1) {
						if(n1 > 24) {
							tmp1 = _this1.readBits(24) + (_this1.readBits(n1 - 24) << 24);
						} else {
							if(_this1.validBits == 0) {
								_this1.acc = 0;
							}
							while(true) {
								if(_this1.bytesInSeg == 0 && (_this1.lastSeg || _this1.next() == 0)) {
									_this1.validBits = -1;
									break;
								} else {
									_this1.bytesInSeg--;
									_this1.inputPosition += 1;
									_this1.acc = _this1.acc + (_this1.input.readByte() << _this1.validBits);
									_this1.validBits += 8;
								}
								if(!(_this1.validBits < n1)) {
									break;
								}
							}
							if(_this1.validBits < 0) {
								tmp1 = 0;
							} else {
								var z2 = _this1.acc & (1 << n1) - 1;
								_this1.acc = _this1.acc >>> n1;
								_this1.validBits -= n1;
								tmp1 = z2;
							}
						}
					} else {
						var z3 = _this1.acc & (1 << n1) - 1;
						_this1.acc = _this1.acc >>> n1;
						_this1.validBits -= n1;
						tmp1 = z3;
					}
					fy[0] = tmp1;
					var _this2 = this.decodeState;
					var log2_41 = [0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4];
					var n3 = (range < 16384 ? range < 16 ? log2_41[range] : range < 512 ? 5 + log2_41[range >> 5] : 10 + log2_41[range >> 10] : range < 16777216 ? range < 524288 ? 15 + log2_41[range >> 15] : 20 + log2_41[range >> 20] : range < 536870912 ? 25 + log2_41[range >> 25] : range < -2147483648 ? 30 + log2_41[range >> 30] : 0) - 1;
					var tmp2;
					if(_this2.validBits < 0) {
						tmp2 = 0;
					} else if(_this2.validBits < n3) {
						if(n3 > 24) {
							tmp2 = _this2.readBits(24) + (_this2.readBits(n3 - 24) << 24);
						} else {
							if(_this2.validBits == 0) {
								_this2.acc = 0;
							}
							while(true) {
								if(_this2.bytesInSeg == 0 && (_this2.lastSeg || _this2.next() == 0)) {
									_this2.validBits = -1;
									break;
								} else {
									_this2.bytesInSeg--;
									_this2.inputPosition += 1;
									_this2.acc = _this2.acc + (_this2.input.readByte() << _this2.validBits);
									_this2.validBits += 8;
								}
								if(!(_this2.validBits < n3)) {
									break;
								}
							}
							if(_this2.validBits < 0) {
								tmp2 = 0;
							} else {
								var z4 = _this2.acc & (1 << n3) - 1;
								_this2.acc = _this2.acc >>> n3;
								_this2.validBits -= n3;
								tmp2 = z4;
							}
						}
					} else {
						var z5 = _this2.acc & (1 << n3) - 1;
						_this2.acc = _this2.acc >>> n3;
						_this2.validBits -= n3;
						tmp2 = z5;
					}
					fy[1] = tmp2;
					var _g3 = 0;
					var _g2 = g.partitions;
					while(_g3 < _g2) {
						var j = _g3++;
						var pclass = g.partitionClassList[j];
						var cdim = g.classDimensions[pclass];
						var cbits = g.classSubclasses[pclass];
						var csub = (1 << cbits) - 1;
						var cval = 0;
						if(cbits != 0) {
							var c = codebooks[g.classMasterbooks[pclass]];
							var _this3 = this.decodeState;
							if(_this3.validBits < 10) {
								_this3.prepHuffman();
							}
							var i1 = c.fastHuffman[_this3.acc & 1023];
							var val;
							if(i1 >= 0) {
								var l = c.codewordLengths[i1];
								_this3.acc = _this3.acc >>> l;
								_this3.validBits -= l;
								if(_this3.validBits < 0) {
									_this3.validBits = 0;
									val = -1;
								} else {
									val = i1;
								}
							} else {
								val = _this3.decodeScalarRaw(c);
							}
							if(c.sparse) {
								val = c.sortedValues[val];
							}
							cval = val;
						}
						var books = g.subclassBooks[pclass];
						var _g5 = 0;
						var _g4 = cdim;
						while(_g5 < _g4) {
							var k = _g5++;
							var book = books[cval & csub];
							cval >>= cbits;
							var tmp3 = offset++;
							var tmp4;
							if(book >= 0) {
								var _this4 = this.decodeState;
								var c1 = codebooks[book];
								if(_this4.validBits < 10) {
									_this4.prepHuffman();
								}
								var i2 = c1.fastHuffman[_this4.acc & 1023];
								var val1;
								if(i2 >= 0) {
									var l1 = c1.codewordLengths[i2];
									_this4.acc = _this4.acc >>> l1;
									_this4.validBits -= l1;
									if(_this4.validBits < 0) {
										_this4.validBits = 0;
										val1 = -1;
									} else {
										val1 = i2;
									}
								} else {
									val1 = _this4.decodeScalarRaw(c1);
								}
								if(c1.sparse) {
									val1 = c1.sortedValues[val1];
								}
								tmp4 = val1;
							} else {
								tmp4 = 0;
							}
							fy[tmp3] = tmp4;
						}
					}
					if(this.decodeState.validBits == -1) {
						zeroChannel[i] = true;
						continue;
					}
					step2Flag[0] = step2Flag[1] = true;
					var naighbors = g.neighbors;
					var xlist = g.xlist;
					var _g31 = 2;
					var _g21 = g.values;
					while(_g31 < _g21) {
						var j1 = _g31++;
						var low = naighbors[j1][0];
						var high = naighbors[j1][1];
						var x0 = xlist[low];
						var y0 = fy[low];
						var dy = fy[high] - y0;
						var adx = xlist[high] - x0;
						var err = Math.abs(dy) * (xlist[j1] - x0);
						var off = err / adx | 0;
						var lowroom = dy < 0 ? y0 - off : y0 + off;
						var val2 = fy[j1];
						var highroom = range - lowroom;
						var room = highroom < lowroom ? highroom * 2 : lowroom * 2;
						if(val2 != 0) {
							step2Flag[low] = step2Flag[high] = true;
							step2Flag[j1] = true;
							if(val2 >= room) {
								if(highroom > lowroom) {
									fy[j1] = val2 - lowroom + lowroom;
								} else {
									fy[j1] = lowroom - val2 + highroom - 1;
								}
							} else if((val2 & 1) != 0) {
								fy[j1] = lowroom - (val2 + 1 >> 1);
							} else {
								fy[j1] = lowroom + (val2 >> 1);
							}
						} else {
							step2Flag[j1] = false;
							fy[j1] = lowroom;
						}
					}
					var _g32 = 0;
					var _g22 = g.values;
					while(_g32 < _g22) {
						var j2 = _g32++;
						if(!step2Flag[j2]) {
							fy[j2] = -1;
						}
					}
				} else {
					zeroChannel[i] = true;
				}
			}
		}
		var _g11 = 0;
		var _g6 = this.header.channel;
		while(_g11 < _g6) {
			var i3 = _g11++;
			reallyZeroChannel[i3] = zeroChannel[i3];
		}
		var _g12 = 0;
		var _g7 = map.couplingSteps;
		while(_g12 < _g7) {
			var i4 = _g12++;
			if(!zeroChannel[map.chan[i4].magnitude] || !zeroChannel[map.chan[i4].angle]) {
				zeroChannel[map.chan[i4].magnitude] = zeroChannel[map.chan[i4].angle] = false;
			}
		}
		var _g13 = 0;
		var _g8 = map.submaps;
		while(_g13 < _g8) {
			var i5 = _g13++;
			var length = this.header.channel;
			var this4 = new Array(length);
			var residueBuffers = this4;
			var this5 = new Array(256);
			var doNotDecode = this5;
			var ch = 0;
			var _g33 = 0;
			var _g23 = this.header.channel;
			while(_g33 < _g23) {
				var j3 = _g33++;
				if(map.chan[j3].mux == i5) {
					if(zeroChannel[j3]) {
						doNotDecode[ch] = true;
						residueBuffers[ch] = null;
					} else {
						doNotDecode[ch] = false;
						residueBuffers[ch] = this.channelBuffers[j3];
					}
					++ch;
				}
			}
			var r1 = map.submapResidue[i5];
			var residue = this.header.residueConfig[r1];
			residue.decode(this.decodeState,this.header,residueBuffers,ch,n2,doNotDecode,this.channelBuffers);
		}
		var i6 = map.couplingSteps;
		var n21 = n >> 1;
		while(--i6 >= 0) {
			var m1 = this.channelBuffers[map.chan[i6].magnitude];
			var a = this.channelBuffers[map.chan[i6].angle];
			var _g14 = 0;
			var _g9 = n21;
			while(_g14 < _g9) {
				var j4 = _g14++;
				var a2;
				var m2;
				if(m1[j4] > 0) {
					if(a[j4] > 0) {
						m2 = m1[j4];
						a2 = m1[j4] - a[j4];
					} else {
						a2 = m1[j4];
						m2 = m1[j4] + a[j4];
					}
				} else if(a[j4] > 0) {
					m2 = m1[j4];
					a2 = m1[j4] + a[j4];
				} else {
					a2 = m1[j4];
					m2 = m1[j4] - a[j4];
				}
				m1[j4] = m2;
				a[j4] = a2;
			}
		}
		var _g15 = 0;
		var _g10 = this.header.channel;
		while(_g15 < _g10) {
			var i7 = _g15++;
			if(reallyZeroChannel[i7]) {
				var _g34 = 0;
				var _g24 = n21;
				while(_g34 < _g24) {
					var j5 = _g34++;
					this.channelBuffers[i7][j5] = 0;
				}
			} else {
				map.doFloor(this.header.floorConfig,i7,n,this.channelBuffers[i7],this.finalY[i7],null);
			}
		}
		var _g16 = 0;
		var _g17 = this.header.channel;
		while(_g16 < _g17) {
			var i8 = _g16++;
			this.inverseMdct(this.channelBuffers[i8],n,m.blockflag);
		}
		var _this5 = this.decodeState;
		while(_this5.bytesInSeg != 0 || !_this5.lastSeg && _this5.next() != 0) {
			_this5.bytesInSeg--;
			_this5.inputPosition += 1;
			_this5.input.readByte();
		}
		return this.decodeState.finishDecodePacket(this.previousLength,n,r);
	}
	,__class__: kha_audio2_ogg_vorbis_VorbisDecoder
};
var kha_audio2_ogg_vorbis_VorbisTools = function() { };
$hxClasses["kha.audio2.ogg.vorbis.VorbisTools"] = kha_audio2_ogg_vorbis_VorbisTools;
kha_audio2_ogg_vorbis_VorbisTools.__name__ = ["kha","audio2","ogg","vorbis","VorbisTools"];
kha_audio2_ogg_vorbis_VorbisTools.assert = function(b,p) {
};
kha_audio2_ogg_vorbis_VorbisTools.neighbors = function(x,n) {
	var low = -1;
	var high = 65536;
	var plow = 0;
	var phigh = 0;
	var _g1 = 0;
	var _g = n;
	while(_g1 < _g) {
		var i = _g1++;
		if(x[i] > low && x[i] < x[n]) {
			plow = i;
			low = x[i];
		}
		if(x[i] < high && x[i] > x[n]) {
			phigh = i;
			high = x[i];
		}
	}
	return { low : plow, high : phigh};
};
kha_audio2_ogg_vorbis_VorbisTools.floatUnpack = function(x) {
	var mantissa = _$UInt_UInt_$Impl_$.toFloat(x & 2097151);
	var sign = x & -2147483648;
	var exp = (x & 2145386496) >>> 21;
	var res = sign != 0 ? -mantissa : mantissa;
	return res * Math.pow(2,exp - 788);
};
kha_audio2_ogg_vorbis_VorbisTools.bitReverse = function(n) {
	n = (n & -1431655766) >>> 1 | (n & 1431655765) << 1;
	n = (n & -858993460) >>> 2 | (n & 858993459) << 2;
	n = (n & -252645136) >>> 4 | (n & 252645135) << 4;
	n = (n & -16711936) >>> 8 | (n & 16711935) << 8;
	return n >>> 16 | n << 16;
};
kha_audio2_ogg_vorbis_VorbisTools.pointCompare = function(a,b) {
	if(a.x < b.x) {
		return -1;
	} else if(a.x > b.x) {
		return 1;
	} else {
		return 0;
	}
};
kha_audio2_ogg_vorbis_VorbisTools.uintAsc = function(a,b) {
	if(_$UInt_UInt_$Impl_$.gt(b,a)) {
		return -1;
	} else if(a == b) {
		return 0;
	} else {
		return 1;
	}
};
kha_audio2_ogg_vorbis_VorbisTools.lookup1Values = function(entries,dim) {
	var r = Math.exp(Math.log(entries) / dim) | 0;
	if((Math.pow(r + 1,dim) | 0) <= entries) {
		++r;
	}
	var b = Math.pow(r + 1,dim) > entries;
	var b1 = (Math.pow(r,dim) | 0) <= entries;
	return r;
};
kha_audio2_ogg_vorbis_VorbisTools.computeWindow = function(n,window) {
	var n2 = n >> 1;
	var _g1 = 0;
	var _g = n2;
	while(_g1 < _g) {
		var i = _g1++;
		window[i] = Math.sin(1.57079632679489656 * kha_audio2_ogg_vorbis_VorbisTools.square(Math.sin((i + 0.5) / n2 * 0.5 * 3.14159265358979323846264)));
	}
};
kha_audio2_ogg_vorbis_VorbisTools.square = function(f) {
	return f * f;
};
kha_audio2_ogg_vorbis_VorbisTools.computeBitReverse = function(n,rev) {
	var log2_4 = [0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4];
	var ld = (n < 16384 ? n < 16 ? log2_4[n] : n < 512 ? 5 + log2_4[n >> 5] : 10 + log2_4[n >> 10] : n < 16777216 ? n < 524288 ? 15 + log2_4[n >> 15] : 20 + log2_4[n >> 20] : n < 536870912 ? 25 + log2_4[n >> 25] : n < -2147483648 ? 30 + log2_4[n >> 30] : 0) - 1;
	var n8 = n >> 3;
	var _g1 = 0;
	var _g = n8;
	while(_g1 < _g) {
		var i = _g1++;
		var n1 = i;
		n1 = (n1 & -1431655766) >>> 1 | (n1 & 1431655765) << 1;
		n1 = (n1 & -858993460) >>> 2 | (n1 & 858993459) << 2;
		n1 = (n1 & -252645136) >>> 4 | (n1 & 252645135) << 4;
		n1 = (n1 & -16711936) >>> 8 | (n1 & 16711935) << 8;
		rev[i] = (n1 >>> 16 | n1 << 16) >>> 32 - ld + 3 << 2;
	}
};
kha_audio2_ogg_vorbis_VorbisTools.computeTwiddleFactors = function(n,af,bf,cf) {
	var n4 = n >> 2;
	var n8 = n >> 3;
	var k2 = 0;
	var _g1 = 0;
	var _g = n4;
	while(_g1 < _g) {
		var k = _g1++;
		af[k2] = Math.cos(4 * k * 3.14159265358979323846264 / n);
		af[k2 + 1] = -Math.sin(4 * k * 3.14159265358979323846264 / n);
		bf[k2] = Math.cos((k2 + 1) * 3.14159265358979323846264 / n / 2) * 0.5;
		bf[k2 + 1] = Math.sin((k2 + 1) * 3.14159265358979323846264 / n / 2) * 0.5;
		k2 += 2;
	}
	var k21 = 0;
	var _g11 = 0;
	var _g2 = n8;
	while(_g11 < _g2) {
		var k1 = _g11++;
		cf[k21] = Math.cos(2 * (k21 + 1) * 3.14159265358979323846264 / n);
		cf[k21 + 1] = -Math.sin(2 * (k21 + 1) * 3.14159265358979323846264 / n);
		k21 += 2;
	}
};
kha_audio2_ogg_vorbis_VorbisTools.drawLine = function(output,x0,y0,x1,y1,n) {
	if(kha_audio2_ogg_vorbis_VorbisTools.integerDivideTable == null) {
		var this1 = new Array(32);
		kha_audio2_ogg_vorbis_VorbisTools.integerDivideTable = this1;
		var _g = 0;
		while(_g < 32) {
			var i = _g++;
			var this2 = kha_audio2_ogg_vorbis_VorbisTools.integerDivideTable;
			var this3 = new Array(64);
			this2[i] = this3;
			var _g1 = 1;
			while(_g1 < 64) {
				var j = _g1++;
				kha_audio2_ogg_vorbis_VorbisTools.integerDivideTable[i][j] = i / j | 0;
			}
		}
	}
	var dy = y1 - y0;
	var adx = x1 - x0;
	var ady = dy < 0 ? -dy : dy;
	var base;
	var x = x0;
	var y = y0;
	var err = 0;
	var sy;
	if(adx < 64 && ady < 32) {
		if(dy < 0) {
			base = -kha_audio2_ogg_vorbis_VorbisTools.integerDivideTable[ady][adx];
			sy = base - 1;
		} else {
			base = kha_audio2_ogg_vorbis_VorbisTools.integerDivideTable[ady][adx];
			sy = base + 1;
		}
	} else {
		base = dy / adx | 0;
		if(dy < 0) {
			sy = base - 1;
		} else {
			sy = base + 1;
		}
	}
	ady -= (base < 0 ? -base : base) * adx;
	if(x1 > n) {
		x1 = n;
	}
	var _g2 = x;
	var _g11 = output;
	_g11[_g2] = _g11[_g2] * kha_audio2_ogg_vorbis_VorbisTools.INVERSE_DB_TABLE[y];
	var _g12 = x + 1;
	var _g3 = x1;
	while(_g12 < _g3) {
		var i1 = _g12++;
		err += ady;
		if(err >= adx) {
			err -= adx;
			y += sy;
		} else {
			y += base;
		}
		var _g21 = i1;
		var _g31 = output;
		_g31[_g21] = _g31[_g21] * kha_audio2_ogg_vorbis_VorbisTools.INVERSE_DB_TABLE[y];
	}
};
kha_audio2_ogg_vorbis_VorbisTools.predictPoint = function(x,x0,x1,y0,y1) {
	var dy = y1 - y0;
	var adx = x1 - x0;
	var err = Math.abs(dy) * (x - x0);
	var off = err / adx | 0;
	if(dy < 0) {
		return y0 - off;
	} else {
		return y0 + off;
	}
};
kha_audio2_ogg_vorbis_VorbisTools.emptyFloatVector = function(len) {
	var this1 = new Array(len);
	var vec = this1;
	return vec;
};
kha_audio2_ogg_vorbis_VorbisTools.copyVector = function(source) {
	var length = source.length;
	var this1 = new Array(length);
	var dest = this1;
	var _g1 = 0;
	var _g = source.length;
	while(_g1 < _g) {
		var i = _g1++;
		dest[i] = source[i];
	}
	return dest;
};
var kha_audio2_ogg_vorbis_data_Codebook = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.Codebook"] = kha_audio2_ogg_vorbis_data_Codebook;
kha_audio2_ogg_vorbis_data_Codebook.__name__ = ["kha","audio2","ogg","vorbis","data","Codebook"];
kha_audio2_ogg_vorbis_data_Codebook.read = function(decodeState) {
	var c = new kha_audio2_ogg_vorbis_data_Codebook();
	var tmp;
	var tmp1;
	var tmp2;
	if(decodeState.validBits < 0) {
		tmp2 = 0;
	} else if(decodeState.validBits < 8) {
		if(decodeState.validBits == 0) {
			decodeState.acc = 0;
		}
		while(true) {
			if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
				decodeState.validBits = -1;
				break;
			} else {
				decodeState.bytesInSeg--;
				decodeState.inputPosition += 1;
				decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
				decodeState.validBits += 8;
			}
			if(!(decodeState.validBits < 8)) {
				break;
			}
		}
		if(decodeState.validBits < 0) {
			tmp2 = 0;
		} else {
			var z = decodeState.acc & 255;
			decodeState.acc = decodeState.acc >>> 8;
			decodeState.validBits -= 8;
			tmp2 = z;
		}
	} else {
		var z1 = decodeState.acc & 255;
		decodeState.acc = decodeState.acc >>> 8;
		decodeState.validBits -= 8;
		tmp2 = z1;
	}
	if(tmp2 == 66) {
		var tmp3;
		if(decodeState.validBits < 0) {
			tmp3 = 0;
		} else if(decodeState.validBits < 8) {
			if(decodeState.validBits == 0) {
				decodeState.acc = 0;
			}
			while(true) {
				if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
					decodeState.validBits = -1;
					break;
				} else {
					decodeState.bytesInSeg--;
					decodeState.inputPosition += 1;
					decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
					decodeState.validBits += 8;
				}
				if(!(decodeState.validBits < 8)) {
					break;
				}
			}
			if(decodeState.validBits < 0) {
				tmp3 = 0;
			} else {
				var z2 = decodeState.acc & 255;
				decodeState.acc = decodeState.acc >>> 8;
				decodeState.validBits -= 8;
				tmp3 = z2;
			}
		} else {
			var z3 = decodeState.acc & 255;
			decodeState.acc = decodeState.acc >>> 8;
			decodeState.validBits -= 8;
			tmp3 = z3;
		}
		tmp1 = tmp3 != 67;
	} else {
		tmp1 = true;
	}
	if(!tmp1) {
		var tmp4;
		if(decodeState.validBits < 0) {
			tmp4 = 0;
		} else if(decodeState.validBits < 8) {
			if(decodeState.validBits == 0) {
				decodeState.acc = 0;
			}
			while(true) {
				if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
					decodeState.validBits = -1;
					break;
				} else {
					decodeState.bytesInSeg--;
					decodeState.inputPosition += 1;
					decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
					decodeState.validBits += 8;
				}
				if(!(decodeState.validBits < 8)) {
					break;
				}
			}
			if(decodeState.validBits < 0) {
				tmp4 = 0;
			} else {
				var z4 = decodeState.acc & 255;
				decodeState.acc = decodeState.acc >>> 8;
				decodeState.validBits -= 8;
				tmp4 = z4;
			}
		} else {
			var z5 = decodeState.acc & 255;
			decodeState.acc = decodeState.acc >>> 8;
			decodeState.validBits -= 8;
			tmp4 = z5;
		}
		tmp = tmp4 != 86;
	} else {
		tmp = true;
	}
	if(tmp) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "Codebook.hx", lineNumber : 40, className : "kha.audio2.ogg.vorbis.data.Codebook", methodName : "read"}));
	}
	var x;
	if(decodeState.validBits < 0) {
		x = 0;
	} else if(decodeState.validBits < 8) {
		if(decodeState.validBits == 0) {
			decodeState.acc = 0;
		}
		while(true) {
			if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
				decodeState.validBits = -1;
				break;
			} else {
				decodeState.bytesInSeg--;
				decodeState.inputPosition += 1;
				decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
				decodeState.validBits += 8;
			}
			if(!(decodeState.validBits < 8)) {
				break;
			}
		}
		if(decodeState.validBits < 0) {
			x = 0;
		} else {
			var z6 = decodeState.acc & 255;
			decodeState.acc = decodeState.acc >>> 8;
			decodeState.validBits -= 8;
			x = z6;
		}
	} else {
		var z7 = decodeState.acc & 255;
		decodeState.acc = decodeState.acc >>> 8;
		decodeState.validBits -= 8;
		x = z7;
	}
	var tmp5;
	if(decodeState.validBits < 0) {
		tmp5 = 0;
	} else if(decodeState.validBits < 8) {
		if(decodeState.validBits == 0) {
			decodeState.acc = 0;
		}
		while(true) {
			if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
				decodeState.validBits = -1;
				break;
			} else {
				decodeState.bytesInSeg--;
				decodeState.inputPosition += 1;
				decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
				decodeState.validBits += 8;
			}
			if(!(decodeState.validBits < 8)) {
				break;
			}
		}
		if(decodeState.validBits < 0) {
			tmp5 = 0;
		} else {
			var z8 = decodeState.acc & 255;
			decodeState.acc = decodeState.acc >>> 8;
			decodeState.validBits -= 8;
			tmp5 = z8;
		}
	} else {
		var z9 = decodeState.acc & 255;
		decodeState.acc = decodeState.acc >>> 8;
		decodeState.validBits -= 8;
		tmp5 = z9;
	}
	c.dimensions = (tmp5 << 8) + x;
	var x1;
	if(decodeState.validBits < 0) {
		x1 = 0;
	} else if(decodeState.validBits < 8) {
		if(decodeState.validBits == 0) {
			decodeState.acc = 0;
		}
		while(true) {
			if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
				decodeState.validBits = -1;
				break;
			} else {
				decodeState.bytesInSeg--;
				decodeState.inputPosition += 1;
				decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
				decodeState.validBits += 8;
			}
			if(!(decodeState.validBits < 8)) {
				break;
			}
		}
		if(decodeState.validBits < 0) {
			x1 = 0;
		} else {
			var z10 = decodeState.acc & 255;
			decodeState.acc = decodeState.acc >>> 8;
			decodeState.validBits -= 8;
			x1 = z10;
		}
	} else {
		var z11 = decodeState.acc & 255;
		decodeState.acc = decodeState.acc >>> 8;
		decodeState.validBits -= 8;
		x1 = z11;
	}
	var y;
	if(decodeState.validBits < 0) {
		y = 0;
	} else if(decodeState.validBits < 8) {
		if(decodeState.validBits == 0) {
			decodeState.acc = 0;
		}
		while(true) {
			if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
				decodeState.validBits = -1;
				break;
			} else {
				decodeState.bytesInSeg--;
				decodeState.inputPosition += 1;
				decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
				decodeState.validBits += 8;
			}
			if(!(decodeState.validBits < 8)) {
				break;
			}
		}
		if(decodeState.validBits < 0) {
			y = 0;
		} else {
			var z12 = decodeState.acc & 255;
			decodeState.acc = decodeState.acc >>> 8;
			decodeState.validBits -= 8;
			y = z12;
		}
	} else {
		var z13 = decodeState.acc & 255;
		decodeState.acc = decodeState.acc >>> 8;
		decodeState.validBits -= 8;
		y = z13;
	}
	var tmp6;
	if(decodeState.validBits < 0) {
		tmp6 = 0;
	} else if(decodeState.validBits < 8) {
		if(decodeState.validBits == 0) {
			decodeState.acc = 0;
		}
		while(true) {
			if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
				decodeState.validBits = -1;
				break;
			} else {
				decodeState.bytesInSeg--;
				decodeState.inputPosition += 1;
				decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
				decodeState.validBits += 8;
			}
			if(!(decodeState.validBits < 8)) {
				break;
			}
		}
		if(decodeState.validBits < 0) {
			tmp6 = 0;
		} else {
			var z14 = decodeState.acc & 255;
			decodeState.acc = decodeState.acc >>> 8;
			decodeState.validBits -= 8;
			tmp6 = z14;
		}
	} else {
		var z15 = decodeState.acc & 255;
		decodeState.acc = decodeState.acc >>> 8;
		decodeState.validBits -= 8;
		tmp6 = z15;
	}
	c.entries = (tmp6 << 16) + (y << 8) + x1;
	var ordered;
	if(decodeState.validBits < 0) {
		ordered = 0;
	} else if(decodeState.validBits < 1) {
		if(decodeState.validBits == 0) {
			decodeState.acc = 0;
		}
		while(true) {
			if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
				decodeState.validBits = -1;
				break;
			} else {
				decodeState.bytesInSeg--;
				decodeState.inputPosition += 1;
				decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
				decodeState.validBits += 8;
			}
			if(!(decodeState.validBits < 1)) {
				break;
			}
		}
		if(decodeState.validBits < 0) {
			ordered = 0;
		} else {
			var z16 = decodeState.acc & 1;
			decodeState.acc = decodeState.acc >>> 1;
			decodeState.validBits -= 1;
			ordered = z16;
		}
	} else {
		var z17 = decodeState.acc & 1;
		decodeState.acc = decodeState.acc >>> 1;
		decodeState.validBits -= 1;
		ordered = z17;
	}
	var tmp7;
	if(ordered != 0) {
		tmp7 = false;
	} else {
		var tmp8;
		if(decodeState.validBits < 0) {
			tmp8 = 0;
		} else if(decodeState.validBits < 1) {
			if(decodeState.validBits == 0) {
				decodeState.acc = 0;
			}
			while(true) {
				if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
					decodeState.validBits = -1;
					break;
				} else {
					decodeState.bytesInSeg--;
					decodeState.inputPosition += 1;
					decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
					decodeState.validBits += 8;
				}
				if(!(decodeState.validBits < 1)) {
					break;
				}
			}
			if(decodeState.validBits < 0) {
				tmp8 = 0;
			} else {
				var z18 = decodeState.acc & 1;
				decodeState.acc = decodeState.acc >>> 1;
				decodeState.validBits -= 1;
				tmp8 = z18;
			}
		} else {
			var z19 = decodeState.acc & 1;
			decodeState.acc = decodeState.acc >>> 1;
			decodeState.validBits -= 1;
			tmp8 = z19;
		}
		tmp7 = tmp8 != 0;
	}
	c.sparse = tmp7;
	var length = c.entries;
	var this1 = new Array(length);
	var lengths = this1;
	if(!c.sparse) {
		c.codewordLengths = lengths;
	}
	var total = 0;
	if(ordered != 0) {
		var currentEntry = 0;
		var currentLength;
		if(decodeState.validBits < 0) {
			currentLength = 0;
		} else if(decodeState.validBits < 5) {
			if(decodeState.validBits == 0) {
				decodeState.acc = 0;
			}
			while(true) {
				if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
					decodeState.validBits = -1;
					break;
				} else {
					decodeState.bytesInSeg--;
					decodeState.inputPosition += 1;
					decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
					decodeState.validBits += 8;
				}
				if(!(decodeState.validBits < 5)) {
					break;
				}
			}
			if(decodeState.validBits < 0) {
				currentLength = 0;
			} else {
				var z20 = decodeState.acc & 31;
				decodeState.acc = decodeState.acc >>> 5;
				decodeState.validBits -= 5;
				currentLength = z20;
			}
		} else {
			var z21 = decodeState.acc & 31;
			decodeState.acc = decodeState.acc >>> 5;
			decodeState.validBits -= 5;
			currentLength = z21;
		}
		var currentLength1 = currentLength + 1;
		while(currentEntry < c.entries) {
			var limit = c.entries - currentEntry;
			var log2_4 = [0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4];
			var n = limit < 16384 ? limit < 16 ? log2_4[limit] : limit < 512 ? 5 + log2_4[limit >> 5] : 10 + log2_4[limit >> 10] : limit < 16777216 ? limit < 524288 ? 15 + log2_4[limit >> 15] : 20 + log2_4[limit >> 20] : limit < 536870912 ? 25 + log2_4[limit >> 25] : limit < -2147483648 ? 30 + log2_4[limit >> 30] : 0;
			var n1;
			if(decodeState.validBits < 0) {
				n1 = 0;
			} else if(decodeState.validBits < n) {
				if(n > 24) {
					n1 = decodeState.readBits(24) + (decodeState.readBits(n - 24) << 24);
				} else {
					if(decodeState.validBits == 0) {
						decodeState.acc = 0;
					}
					while(true) {
						if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
							decodeState.validBits = -1;
							break;
						} else {
							decodeState.bytesInSeg--;
							decodeState.inputPosition += 1;
							decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
							decodeState.validBits += 8;
						}
						if(!(decodeState.validBits < n)) {
							break;
						}
					}
					if(decodeState.validBits < 0) {
						n1 = 0;
					} else {
						var z22 = decodeState.acc & (1 << n) - 1;
						decodeState.acc = decodeState.acc >>> n;
						decodeState.validBits -= n;
						n1 = z22;
					}
				}
			} else {
				var z23 = decodeState.acc & (1 << n) - 1;
				decodeState.acc = decodeState.acc >>> n;
				decodeState.validBits -= n;
				n1 = z23;
			}
			if(currentEntry + n1 > c.entries) {
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,"codebook entrys",{ fileName : "Codebook.hx", lineNumber : 67, className : "kha.audio2.ogg.vorbis.data.Codebook", methodName : "read"}));
			}
			var _g1 = 0;
			var _g = n1;
			while(_g1 < _g) {
				var i = _g1++;
				lengths[currentEntry + i] = currentLength1;
			}
			currentEntry += n1;
			++currentLength1;
		}
	} else {
		var _g11 = 0;
		var _g2 = c.entries;
		while(_g11 < _g2) {
			var j = _g11++;
			var present;
			if(c.sparse) {
				if(decodeState.validBits < 0) {
					present = 0;
				} else if(decodeState.validBits < 1) {
					if(decodeState.validBits == 0) {
						decodeState.acc = 0;
					}
					while(true) {
						if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
							decodeState.validBits = -1;
							break;
						} else {
							decodeState.bytesInSeg--;
							decodeState.inputPosition += 1;
							decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
							decodeState.validBits += 8;
						}
						if(!(decodeState.validBits < 1)) {
							break;
						}
					}
					if(decodeState.validBits < 0) {
						present = 0;
					} else {
						var z24 = decodeState.acc & 1;
						decodeState.acc = decodeState.acc >>> 1;
						decodeState.validBits -= 1;
						present = z24;
					}
				} else {
					var z25 = decodeState.acc & 1;
					decodeState.acc = decodeState.acc >>> 1;
					decodeState.validBits -= 1;
					present = z25;
				}
			} else {
				present = 1;
			}
			if(present != 0) {
				var val;
				if(decodeState.validBits < 0) {
					val = 0;
				} else if(decodeState.validBits < 5) {
					if(decodeState.validBits == 0) {
						decodeState.acc = 0;
					}
					while(true) {
						if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
							decodeState.validBits = -1;
							break;
						} else {
							decodeState.bytesInSeg--;
							decodeState.inputPosition += 1;
							decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
							decodeState.validBits += 8;
						}
						if(!(decodeState.validBits < 5)) {
							break;
						}
					}
					if(decodeState.validBits < 0) {
						val = 0;
					} else {
						var z26 = decodeState.acc & 31;
						decodeState.acc = decodeState.acc >>> 5;
						decodeState.validBits -= 5;
						val = z26;
					}
				} else {
					var z27 = decodeState.acc & 31;
					decodeState.acc = decodeState.acc >>> 5;
					decodeState.validBits -= 5;
					val = z27;
				}
				lengths[j] = val + 1;
				++total;
			} else {
				lengths[j] = 255;
			}
		}
	}
	if(c.sparse && total >= c.entries >> 2) {
		c.codewordLengths = lengths;
		c.sparse = false;
	}
	var tmp9;
	if(c.sparse) {
		tmp9 = total;
	} else {
		var sortedCount = 0;
		var _g12 = 0;
		var _g3 = c.entries;
		while(_g12 < _g3) {
			var j1 = _g12++;
			var l = lengths[j1];
			if(l > 10 && l != 255) {
				++sortedCount;
			}
		}
		tmp9 = sortedCount;
	}
	c.sortedEntries = tmp9;
	var values = null;
	if(!c.sparse) {
		var length1 = c.entries;
		var this2 = new Array(length1);
		c.codewords = this2;
	} else {
		if(c.sortedEntries != 0) {
			var length2 = c.sortedEntries;
			var this3 = new Array(length2);
			c.codewordLengths = this3;
			var length3 = c.entries;
			var this4 = new Array(length3);
			c.codewords = this4;
			var length4 = c.entries;
			var this5 = new Array(length4);
			values = this5;
		}
		var size = c.entries + 64 * c.sortedEntries;
	}
	if(!c.computeCodewords(lengths,c.entries,values)) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,"compute codewords",{ fileName : "Codebook.hx", lineNumber : 120, className : "kha.audio2.ogg.vorbis.data.Codebook", methodName : "read"}));
	}
	if(c.sortedEntries != 0) {
		c.sortedCodewords = [];
		var length5 = c.sortedEntries;
		var this6 = new Array(length5);
		c.sortedValues = this6;
		c.computeSortedHuffman(lengths,values);
	}
	if(c.sparse) {
		values = null;
		c.codewords = null;
		lengths = null;
	}
	c.computeAcceleratedHuffman();
	var tmp10;
	if(decodeState.validBits < 0) {
		tmp10 = 0;
	} else if(decodeState.validBits < 4) {
		if(decodeState.validBits == 0) {
			decodeState.acc = 0;
		}
		while(true) {
			if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
				decodeState.validBits = -1;
				break;
			} else {
				decodeState.bytesInSeg--;
				decodeState.inputPosition += 1;
				decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
				decodeState.validBits += 8;
			}
			if(!(decodeState.validBits < 4)) {
				break;
			}
		}
		if(decodeState.validBits < 0) {
			tmp10 = 0;
		} else {
			var z28 = decodeState.acc & 15;
			decodeState.acc = decodeState.acc >>> 4;
			decodeState.validBits -= 4;
			tmp10 = z28;
		}
	} else {
		var z29 = decodeState.acc & 15;
		decodeState.acc = decodeState.acc >>> 4;
		decodeState.validBits -= 4;
		tmp10 = z29;
	}
	c.lookupType = tmp10;
	if(c.lookupType > 2) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,"codebook lookup type",{ fileName : "Codebook.hx", lineNumber : 143, className : "kha.audio2.ogg.vorbis.data.Codebook", methodName : "read"}));
	}
	if(c.lookupType > 0) {
		var x2;
		if(decodeState.validBits < 0) {
			x2 = 0;
		} else if(decodeState.validBits < 32) {
			x2 = decodeState.readBits(24) + (decodeState.readBits(8) << 24);
		} else {
			var z30 = decodeState.acc & -1;
			decodeState.acc = decodeState.acc >>> 32;
			decodeState.validBits -= 32;
			x2 = z30;
		}
		var mantissa = _$UInt_UInt_$Impl_$.toFloat(x2 & 2097151);
		var sign = x2 & -2147483648;
		var exp = (x2 & 2145386496) >>> 21;
		var res = sign != 0 ? -mantissa : mantissa;
		c.minimumValue = res * Math.pow(2,exp - 788);
		var x3;
		if(decodeState.validBits < 0) {
			x3 = 0;
		} else if(decodeState.validBits < 32) {
			x3 = decodeState.readBits(24) + (decodeState.readBits(8) << 24);
		} else {
			var z31 = decodeState.acc & -1;
			decodeState.acc = decodeState.acc >>> 32;
			decodeState.validBits -= 32;
			x3 = z31;
		}
		var mantissa1 = _$UInt_UInt_$Impl_$.toFloat(x3 & 2097151);
		var sign1 = x3 & -2147483648;
		var exp1 = (x3 & 2145386496) >>> 21;
		var res1 = sign1 != 0 ? -mantissa1 : mantissa1;
		c.deltaValue = res1 * Math.pow(2,exp1 - 788);
		var tmp11;
		if(decodeState.validBits < 0) {
			tmp11 = 0;
		} else if(decodeState.validBits < 4) {
			if(decodeState.validBits == 0) {
				decodeState.acc = 0;
			}
			while(true) {
				if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
					decodeState.validBits = -1;
					break;
				} else {
					decodeState.bytesInSeg--;
					decodeState.inputPosition += 1;
					decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
					decodeState.validBits += 8;
				}
				if(!(decodeState.validBits < 4)) {
					break;
				}
			}
			if(decodeState.validBits < 0) {
				tmp11 = 0;
			} else {
				var z32 = decodeState.acc & 15;
				decodeState.acc = decodeState.acc >>> 4;
				decodeState.validBits -= 4;
				tmp11 = z32;
			}
		} else {
			var z33 = decodeState.acc & 15;
			decodeState.acc = decodeState.acc >>> 4;
			decodeState.validBits -= 4;
			tmp11 = z33;
		}
		c.valueBits = tmp11 + 1;
		var tmp12;
		if(decodeState.validBits < 0) {
			tmp12 = 0;
		} else if(decodeState.validBits < 1) {
			if(decodeState.validBits == 0) {
				decodeState.acc = 0;
			}
			while(true) {
				if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
					decodeState.validBits = -1;
					break;
				} else {
					decodeState.bytesInSeg--;
					decodeState.inputPosition += 1;
					decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
					decodeState.validBits += 8;
				}
				if(!(decodeState.validBits < 1)) {
					break;
				}
			}
			if(decodeState.validBits < 0) {
				tmp12 = 0;
			} else {
				var z34 = decodeState.acc & 1;
				decodeState.acc = decodeState.acc >>> 1;
				decodeState.validBits -= 1;
				tmp12 = z34;
			}
		} else {
			var z35 = decodeState.acc & 1;
			decodeState.acc = decodeState.acc >>> 1;
			decodeState.validBits -= 1;
			tmp12 = z35;
		}
		c.sequenceP = tmp12 != 0;
		if(c.lookupType == 1) {
			c.lookupValues = kha_audio2_ogg_vorbis_VorbisTools.lookup1Values(c.entries,c.dimensions);
		} else {
			c.lookupValues = c.entries * c.dimensions;
		}
		var length6 = c.lookupValues;
		var this7 = new Array(length6);
		var mults = this7;
		var _g13 = 0;
		var _g4 = c.lookupValues;
		while(_g13 < _g4) {
			var j2 = _g13++;
			var n2 = c.valueBits;
			var q;
			if(decodeState.validBits < 0) {
				q = 0;
			} else if(decodeState.validBits < n2) {
				if(n2 > 24) {
					q = decodeState.readBits(24) + (decodeState.readBits(n2 - 24) << 24);
				} else {
					if(decodeState.validBits == 0) {
						decodeState.acc = 0;
					}
					while(true) {
						if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
							decodeState.validBits = -1;
							break;
						} else {
							decodeState.bytesInSeg--;
							decodeState.inputPosition += 1;
							decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
							decodeState.validBits += 8;
						}
						if(!(decodeState.validBits < n2)) {
							break;
						}
					}
					if(decodeState.validBits < 0) {
						q = 0;
					} else {
						var z36 = decodeState.acc & (1 << n2) - 1;
						decodeState.acc = decodeState.acc >>> n2;
						decodeState.validBits -= n2;
						q = z36;
					}
				}
			} else {
				var z37 = decodeState.acc & (1 << n2) - 1;
				decodeState.acc = decodeState.acc >>> n2;
				decodeState.validBits -= n2;
				q = z37;
			}
			if(q == -1) {
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,"fail lookup",{ fileName : "Codebook.hx", lineNumber : 161, className : "kha.audio2.ogg.vorbis.data.Codebook", methodName : "read"}));
			}
			mults[j2] = q;
		}
		var length7 = c.lookupValues;
		var this8 = new Array(length7);
		c.multiplicands = this8;
		var _g14 = 0;
		var _g5 = c.lookupValues;
		while(_g14 < _g5) {
			var j3 = _g14++;
			c.multiplicands[j3] = mults[j3] * c.deltaValue + c.minimumValue;
		}
		if(c.lookupType == 2 && c.sequenceP) {
			var _g15 = 1;
			var _g6 = c.lookupValues;
			while(_g15 < _g6) {
				var j4 = _g15++;
				c.multiplicands[j4] = c.multiplicands[j4 - 1];
			}
			c.sequenceP = false;
		}
	}
	return c;
};
kha_audio2_ogg_vorbis_data_Codebook.prototype = {
	addEntry: function(huffCode,symbol,count,len,values) {
		if(!this.sparse) {
			this.codewords[symbol] = huffCode;
		} else {
			this.codewords[count] = huffCode;
			this.codewordLengths[count] = len;
			values[count] = symbol;
		}
	}
	,includeInSort: function(len) {
		if(this.sparse) {
			return true;
		} else if(len == 255) {
			return false;
		} else if(len > 10) {
			return true;
		} else {
			return false;
		}
	}
	,computeCodewords: function(len,n,values) {
		var this1 = new Array(32);
		var available = this1;
		var _g = 0;
		while(_g < 32) {
			var x = _g++;
			available[x] = 0;
		}
		var k = 0;
		while(k < n) {
			if(len[k] < 255) {
				break;
			}
			++k;
		}
		if(k == n) {
			var b = this.sortedEntries == 0;
			return true;
		}
		var m = 0;
		var count = m++;
		if(!this.sparse) {
			this.codewords[k] = 0;
		} else {
			this.codewords[count] = 0;
			this.codewordLengths[count] = len[k];
			values[count] = k;
		}
		var i = 0;
		while(++i <= len[k]) available[i] = 1 << 32 - i;
		i = k;
		while(++i < n) {
			var z = len[i];
			if(z == 255) {
				continue;
			}
			while(z > 0 && available[z] == 0) --z;
			if(z == 0) {
				return false;
			}
			var res = available[z];
			available[z] = 0;
			var n1 = res;
			n1 = (n1 & -1431655766) >>> 1 | (n1 & 1431655765) << 1;
			n1 = (n1 & -858993460) >>> 2 | (n1 & 858993459) << 2;
			n1 = (n1 & -252645136) >>> 4 | (n1 & 252645135) << 4;
			n1 = (n1 & -16711936) >>> 8 | (n1 & 16711935) << 8;
			var huffCode = n1 >>> 16 | n1 << 16;
			var count1 = m++;
			if(!this.sparse) {
				this.codewords[i] = huffCode;
			} else {
				this.codewords[count1] = huffCode;
				this.codewordLengths[count1] = len[i];
				values[count1] = i;
			}
			if(z != len[i]) {
				var y = len[i];
				while(y > z) {
					available[y] = res + (1 << 32 - y);
					--y;
				}
			}
		}
		return true;
	}
	,computeSortedHuffman: function(lengths,values) {
		if(!this.sparse) {
			var k = 0;
			var _g1 = 0;
			var _g = this.entries;
			while(_g1 < _g) {
				var i = _g1++;
				var len = lengths[i];
				if(this.sparse ? true : len == 255 ? false : len > 10) {
					var n = this.codewords[i];
					n = (n & -1431655766) >>> 1 | (n & 1431655765) << 1;
					n = (n & -858993460) >>> 2 | (n & 858993459) << 2;
					n = (n & -252645136) >>> 4 | (n & 252645135) << 4;
					n = (n & -16711936) >>> 8 | (n & 16711935) << 8;
					this.sortedCodewords[k++] = n >>> 16 | n << 16;
				}
			}
			var b = k == this.sortedEntries;
		} else {
			var _g11 = 0;
			var _g2 = this.sortedEntries;
			while(_g11 < _g2) {
				var i1 = _g11++;
				var n1 = this.codewords[i1];
				n1 = (n1 & -1431655766) >>> 1 | (n1 & 1431655765) << 1;
				n1 = (n1 & -858993460) >>> 2 | (n1 & 858993459) << 2;
				n1 = (n1 & -252645136) >>> 4 | (n1 & 252645135) << 4;
				n1 = (n1 & -16711936) >>> 8 | (n1 & 16711935) << 8;
				this.sortedCodewords[i1] = n1 >>> 16 | n1 << 16;
			}
		}
		this.sortedCodewords[this.sortedEntries] = -1;
		this.sortedCodewords.sort(kha_audio2_ogg_vorbis_VorbisTools.uintAsc);
		var len1 = this.sparse ? this.sortedEntries : this.entries;
		var _g12 = 0;
		var _g3 = len1;
		while(_g12 < _g3) {
			var i2 = _g12++;
			var huffLen = this.sparse ? lengths[values[i2]] : lengths[i2];
			if(this.sparse ? true : huffLen == 255 ? false : huffLen > 10) {
				var n2 = this.codewords[i2];
				n2 = (n2 & -1431655766) >>> 1 | (n2 & 1431655765) << 1;
				n2 = (n2 & -858993460) >>> 2 | (n2 & 858993459) << 2;
				n2 = (n2 & -252645136) >>> 4 | (n2 & 252645135) << 4;
				n2 = (n2 & -16711936) >>> 8 | (n2 & 16711935) << 8;
				var code = n2 >>> 16 | n2 << 16;
				var x = 0;
				var n3 = this.sortedEntries;
				while(n3 > 1) {
					var m = x + (n3 >> 1);
					if(_$UInt_UInt_$Impl_$.gte(code,this.sortedCodewords[m])) {
						x = m;
						n3 -= n3 >> 1;
					} else {
						n3 >>= 1;
					}
				}
				if(this.sparse) {
					this.sortedValues[x] = values[i2];
					this.codewordLengths[x] = huffLen;
				} else {
					this.sortedValues[x] = i2;
				}
			}
		}
	}
	,computeAcceleratedHuffman: function() {
		var this1 = new Array(1024);
		this.fastHuffman = this1;
		this.fastHuffman[0] = -1;
		var _g1 = 0;
		var _g = 1024;
		while(_g1 < _g) {
			var i = _g1++;
			this.fastHuffman[i] = -1;
		}
		var len = this.sparse ? this.sortedEntries : this.entries;
		var _g11 = 0;
		var _g2 = len;
		while(_g11 < _g2) {
			var i1 = _g11++;
			if(this.codewordLengths[i1] <= 10) {
				var z;
				if(this.sparse) {
					var n = this.sortedCodewords[i1];
					n = (n & -1431655766) >>> 1 | (n & 1431655765) << 1;
					n = (n & -858993460) >>> 2 | (n & 858993459) << 2;
					n = (n & -252645136) >>> 4 | (n & 252645135) << 4;
					n = (n & -16711936) >>> 8 | (n & 16711935) << 8;
					z = n >>> 16 | n << 16;
				} else {
					z = this.codewords[i1];
				}
				while(z < 1024) {
					this.fastHuffman[z] = i1;
					z += 1 << this.codewordLengths[i1];
				}
			}
		}
	}
	,codebookDecode: function(decodeState,output,offset,len) {
		if(decodeState.validBits < 10) {
			decodeState.prepHuffman();
		}
		var i = this.fastHuffman[decodeState.acc & 1023];
		var val;
		if(i >= 0) {
			var l = this.codewordLengths[i];
			decodeState.acc = decodeState.acc >>> l;
			decodeState.validBits -= l;
			if(decodeState.validBits < 0) {
				decodeState.validBits = 0;
				val = -1;
			} else {
				val = i;
			}
		} else {
			val = decodeState.decodeScalarRaw(this);
		}
		if(this.sparse) {
			val = this.sortedValues[val];
		}
		var z = val;
		var lookupValues = this.lookupValues;
		var sequenceP = this.sequenceP;
		var multiplicands = this.multiplicands;
		var minimumValue = this.minimumValue;
		if(z < 0) {
			return false;
		}
		if(len > this.dimensions) {
			len = this.dimensions;
		}
		if(this.lookupType == 1) {
			var div = 1;
			var last = 0.0;
			var _g1 = 0;
			var _g = len;
			while(_g1 < _g) {
				var i1 = _g1++;
				var off = _$UInt_UInt_$Impl_$.toFloat(z / div | 0) % _$UInt_UInt_$Impl_$.toFloat(lookupValues) | 0;
				var val1 = multiplicands[off] + last;
				var _g2 = offset + i1;
				var _g3 = output;
				_g3[_g2] = _g3[_g2] + val1;
				if(sequenceP) {
					last = val1 + minimumValue;
				}
				div = div * lookupValues;
			}
			return true;
		}
		z *= this.dimensions;
		if(sequenceP) {
			var last1 = 0.0;
			var _g11 = 0;
			var _g4 = len;
			while(_g11 < _g4) {
				var i2 = _g11++;
				var val2 = multiplicands[z + i2] + last1;
				var _g21 = offset + i2;
				var _g31 = output;
				_g31[_g21] = _g31[_g21] + val2;
				last1 = val2 + minimumValue;
			}
		} else {
			var last2 = 0.0;
			var _g12 = 0;
			var _g5 = len;
			while(_g12 < _g5) {
				var i3 = _g12++;
				var _g22 = offset + i3;
				var _g32 = output;
				_g32[_g22] = _g32[_g22] + (multiplicands[z + i3] + last2);
			}
		}
		return true;
	}
	,codebookDecodeStep: function(decodeState,output,offset,len,step) {
		if(decodeState.validBits < 10) {
			decodeState.prepHuffman();
		}
		var i = this.fastHuffman[decodeState.acc & 1023];
		var val;
		if(i >= 0) {
			var l = this.codewordLengths[i];
			decodeState.acc = decodeState.acc >>> l;
			decodeState.validBits -= l;
			if(decodeState.validBits < 0) {
				decodeState.validBits = 0;
				val = -1;
			} else {
				val = i;
			}
		} else {
			val = decodeState.decodeScalarRaw(this);
		}
		if(this.sparse) {
			val = this.sortedValues[val];
		}
		var z = val;
		var last = 0.0;
		if(z < 0) {
			return false;
		}
		if(len > this.dimensions) {
			len = this.dimensions;
		}
		var lookupValues = this.lookupValues;
		var sequenceP = this.sequenceP;
		var multiplicands = this.multiplicands;
		if(this.lookupType == 1) {
			var div = 1;
			var _g1 = 0;
			var _g = len;
			while(_g1 < _g) {
				var i1 = _g1++;
				var off = _$UInt_UInt_$Impl_$.toFloat(z / div | 0) % _$UInt_UInt_$Impl_$.toFloat(lookupValues) | 0;
				var val1 = multiplicands[off] + last;
				var _g2 = offset + i1 * step;
				var _g3 = output;
				_g3[_g2] = _g3[_g2] + val1;
				if(sequenceP) {
					last = val1;
				}
				div = div * lookupValues;
			}
			return true;
		}
		z *= this.dimensions;
		var _g11 = 0;
		var _g4 = len;
		while(_g11 < _g4) {
			var i2 = _g11++;
			var val2 = multiplicands[z + i2] + last;
			var _g21 = offset + i2 * step;
			var _g31 = output;
			_g31[_g21] = _g31[_g21] + val2;
			if(sequenceP) {
				last = val2;
			}
		}
		return true;
	}
	,decodeStart: function(decodeState) {
		if(decodeState.validBits < 10) {
			decodeState.prepHuffman();
		}
		var i = this.fastHuffman[decodeState.acc & 1023];
		var val;
		if(i >= 0) {
			var l = this.codewordLengths[i];
			decodeState.acc = decodeState.acc >>> l;
			decodeState.validBits -= l;
			if(decodeState.validBits < 0) {
				decodeState.validBits = 0;
				val = -1;
			} else {
				val = i;
			}
		} else {
			val = decodeState.decodeScalarRaw(this);
		}
		if(this.sparse) {
			val = this.sortedValues[val];
		}
		return val;
	}
	,decodeDeinterleaveRepeat: function(decodeState,residueBuffers,ch,cInter,pInter,len,totalDecode) {
		var effective = this.dimensions;
		if(this.lookupType == 0) {
			throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_STREAM,null,{ fileName : "Codebook.hx", lineNumber : 488, className : "kha.audio2.ogg.vorbis.data.Codebook", methodName : "decodeDeinterleaveRepeat"}));
		}
		var multiplicands = this.multiplicands;
		var sequenceP = this.sequenceP;
		var lookupValues = this.lookupValues;
		while(totalDecode > 0) {
			var last = 0.0;
			if(decodeState.validBits < 10) {
				decodeState.prepHuffman();
			}
			var i = this.fastHuffman[decodeState.acc & 1023];
			var val;
			if(i >= 0) {
				var l = this.codewordLengths[i];
				decodeState.acc = decodeState.acc >>> l;
				decodeState.validBits -= l;
				if(decodeState.validBits < 0) {
					decodeState.validBits = 0;
					val = -1;
				} else {
					val = i;
				}
			} else {
				val = decodeState.decodeScalarRaw(this);
			}
			if(this.sparse) {
				val = this.sortedValues[val];
			}
			var z = val;
			if(z < 0) {
				if(decodeState.bytesInSeg == 0 && decodeState.lastSeg) {
					return null;
				}
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_STREAM,null,{ fileName : "Codebook.hx", lineNumber : 503, className : "kha.audio2.ogg.vorbis.data.Codebook", methodName : "decodeDeinterleaveRepeat"}));
			}
			if(cInter + pInter * ch + effective > len * ch) {
				effective = len * ch - (pInter * ch - cInter);
			}
			if(this.lookupType == 1) {
				var div = 1;
				if(sequenceP) {
					var _g1 = 0;
					var _g = effective;
					while(_g1 < _g) {
						var i1 = _g1++;
						var off = _$UInt_UInt_$Impl_$.toFloat(z / div | 0) % _$UInt_UInt_$Impl_$.toFloat(lookupValues) | 0;
						var val1 = multiplicands[off] + last;
						var _g2 = pInter;
						var _g3 = residueBuffers[cInter];
						_g3[_g2] = _g3[_g2] + val1;
						if(++cInter == ch) {
							cInter = 0;
							++pInter;
						}
						last = val1;
						div = div * lookupValues;
					}
				} else {
					var _g11 = 0;
					var _g4 = effective;
					while(_g11 < _g4) {
						var i2 = _g11++;
						var off1 = _$UInt_UInt_$Impl_$.toFloat(z / div | 0) % _$UInt_UInt_$Impl_$.toFloat(lookupValues) | 0;
						var val2 = multiplicands[off1] + last;
						var _g21 = pInter;
						var _g31 = residueBuffers[cInter];
						_g31[_g21] = _g31[_g21] + val2;
						if(++cInter == ch) {
							cInter = 0;
							++pInter;
						}
						div = div * lookupValues;
					}
				}
			} else {
				z *= this.dimensions;
				if(sequenceP) {
					var _g12 = 0;
					var _g5 = effective;
					while(_g12 < _g5) {
						var i3 = _g12++;
						var val3 = multiplicands[z + i3] + last;
						var _g22 = pInter;
						var _g32 = residueBuffers[cInter];
						_g32[_g22] = _g32[_g22] + val3;
						if(++cInter == ch) {
							cInter = 0;
							++pInter;
						}
						last = val3;
					}
				} else {
					var _g13 = 0;
					var _g6 = effective;
					while(_g13 < _g6) {
						var i4 = _g13++;
						var val4 = multiplicands[z + i4] + last;
						var _g23 = pInter;
						var _g33 = residueBuffers[cInter];
						_g33[_g23] = _g33[_g23] + val4;
						if(++cInter == ch) {
							cInter = 0;
							++pInter;
						}
					}
				}
			}
			totalDecode -= effective;
		}
		return { cInter : cInter, pInter : pInter};
	}
	,residueDecode: function(decodeState,target,offset,n,rtype) {
		if(rtype == 0) {
			var step = n / this.dimensions | 0;
			var _g1 = 0;
			var _g = step;
			while(_g1 < _g) {
				var k = _g1++;
				if(!this.codebookDecodeStep(decodeState,target,offset + k,n - offset - k,step)) {
					return false;
				}
			}
		} else {
			var k1 = 0;
			while(k1 < n) {
				if(!this.codebookDecode(decodeState,target,offset,n - k1)) {
					return false;
				}
				k1 += this.dimensions;
				offset += this.dimensions;
			}
		}
		return true;
	}
	,__class__: kha_audio2_ogg_vorbis_data_Codebook
};
var kha_audio2_ogg_vorbis_data_Comment = function() {
	this.data = new haxe_ds_StringMap();
};
$hxClasses["kha.audio2.ogg.vorbis.data.Comment"] = kha_audio2_ogg_vorbis_data_Comment;
kha_audio2_ogg_vorbis_data_Comment.__name__ = ["kha","audio2","ogg","vorbis","data","Comment"];
kha_audio2_ogg_vorbis_data_Comment.prototype = {
	get_title: function() {
		return this.getString("title");
	}
	,get_loopStart: function() {
		return Std.parseInt(this.getString("loopstart"));
	}
	,get_loopLength: function() {
		return Std.parseInt(this.getString("looplength"));
	}
	,get_version: function() {
		return this.getString("version");
	}
	,get_album: function() {
		return this.getString("album");
	}
	,get_organization: function() {
		return this.getString("organization");
	}
	,get_tracknumber: function() {
		return this.getString("tracknumber");
	}
	,get_performer: function() {
		return this.getString("performer");
	}
	,get_copyright: function() {
		return this.getString("copyright");
	}
	,get_license: function() {
		return this.getString("license");
	}
	,get_artist: function() {
		return this.getString("artist");
	}
	,get_description: function() {
		return this.getString("description");
	}
	,get_genre: function() {
		return this.getString("genre");
	}
	,get_date: function() {
		return this.getString("date");
	}
	,get_location: function() {
		return this.getString("location");
	}
	,get_contact: function() {
		return this.getString("contact");
	}
	,get_isrc: function() {
		return this.getString("isrc");
	}
	,get_artists: function() {
		return this.getArray("artist");
	}
	,add: function(key,value) {
		key = key.toLowerCase();
		var _this = this.data;
		if(__map_reserved[key] != null ? _this.existsReserved(key) : _this.h.hasOwnProperty(key)) {
			var _this1 = this.data;
			(__map_reserved[key] != null ? _this1.getReserved(key) : _this1.h[key]).push(value);
		} else {
			var v = [value];
			var _this2 = this.data;
			if(__map_reserved[key] != null) {
				_this2.setReserved(key,v);
			} else {
				_this2.h[key] = v;
			}
		}
	}
	,getString: function(key) {
		key = key.toLowerCase();
		var _this = this.data;
		if(__map_reserved[key] != null ? _this.existsReserved(key) : _this.h.hasOwnProperty(key)) {
			var _this1 = this.data;
			return (__map_reserved[key] != null ? _this1.getReserved(key) : _this1.h[key])[0];
		} else {
			return null;
		}
	}
	,getArray: function(key) {
		key = key.toLowerCase();
		var _this = this.data;
		if(__map_reserved[key] != null ? _this.existsReserved(key) : _this.h.hasOwnProperty(key)) {
			var _this1 = this.data;
			if(__map_reserved[key] != null) {
				return _this1.getReserved(key);
			} else {
				return _this1.h[key];
			}
		} else {
			return null;
		}
	}
	,__class__: kha_audio2_ogg_vorbis_data_Comment
	,__properties__: {get_artists:"get_artists",get_isrc:"get_isrc",get_contact:"get_contact",get_location:"get_location",get_date:"get_date",get_genre:"get_genre",get_description:"get_description",get_artist:"get_artist",get_license:"get_license",get_copyright:"get_copyright",get_performer:"get_performer",get_tracknumber:"get_tracknumber",get_organization:"get_organization",get_album:"get_album",get_version:"get_version",get_loopLength:"get_loopLength",get_loopStart:"get_loopStart",get_title:"get_title"}
};
var kha_audio2_ogg_vorbis_data_Floor = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.Floor"] = kha_audio2_ogg_vorbis_data_Floor;
kha_audio2_ogg_vorbis_data_Floor.__name__ = ["kha","audio2","ogg","vorbis","data","Floor"];
kha_audio2_ogg_vorbis_data_Floor.read = function(decodeState,codebooks) {
	var floor = new kha_audio2_ogg_vorbis_data_Floor();
	var tmp;
	if(decodeState.validBits < 0) {
		tmp = 0;
	} else if(decodeState.validBits < 16) {
		if(decodeState.validBits == 0) {
			decodeState.acc = 0;
		}
		while(true) {
			if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
				decodeState.validBits = -1;
				break;
			} else {
				decodeState.bytesInSeg--;
				decodeState.inputPosition += 1;
				decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
				decodeState.validBits += 8;
			}
			if(!(decodeState.validBits < 16)) {
				break;
			}
		}
		if(decodeState.validBits < 0) {
			tmp = 0;
		} else {
			var z = decodeState.acc & 65535;
			decodeState.acc = decodeState.acc >>> 16;
			decodeState.validBits -= 16;
			tmp = z;
		}
	} else {
		var z1 = decodeState.acc & 65535;
		decodeState.acc = decodeState.acc >>> 16;
		decodeState.validBits -= 16;
		tmp = z1;
	}
	floor.type = tmp;
	if(floor.type > 1) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "Floor.hx", lineNumber : 28, className : "kha.audio2.ogg.vorbis.data.Floor", methodName : "read"}));
	}
	if(floor.type == 0) {
		var g = floor.floor0 = new kha_audio2_ogg_vorbis_data_Floor0();
		var tmp1;
		if(decodeState.validBits < 0) {
			tmp1 = 0;
		} else if(decodeState.validBits < 8) {
			if(decodeState.validBits == 0) {
				decodeState.acc = 0;
			}
			while(true) {
				if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
					decodeState.validBits = -1;
					break;
				} else {
					decodeState.bytesInSeg--;
					decodeState.inputPosition += 1;
					decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
					decodeState.validBits += 8;
				}
				if(!(decodeState.validBits < 8)) {
					break;
				}
			}
			if(decodeState.validBits < 0) {
				tmp1 = 0;
			} else {
				var z2 = decodeState.acc & 255;
				decodeState.acc = decodeState.acc >>> 8;
				decodeState.validBits -= 8;
				tmp1 = z2;
			}
		} else {
			var z3 = decodeState.acc & 255;
			decodeState.acc = decodeState.acc >>> 8;
			decodeState.validBits -= 8;
			tmp1 = z3;
		}
		g.order = tmp1;
		var tmp2;
		if(decodeState.validBits < 0) {
			tmp2 = 0;
		} else if(decodeState.validBits < 16) {
			if(decodeState.validBits == 0) {
				decodeState.acc = 0;
			}
			while(true) {
				if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
					decodeState.validBits = -1;
					break;
				} else {
					decodeState.bytesInSeg--;
					decodeState.inputPosition += 1;
					decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
					decodeState.validBits += 8;
				}
				if(!(decodeState.validBits < 16)) {
					break;
				}
			}
			if(decodeState.validBits < 0) {
				tmp2 = 0;
			} else {
				var z4 = decodeState.acc & 65535;
				decodeState.acc = decodeState.acc >>> 16;
				decodeState.validBits -= 16;
				tmp2 = z4;
			}
		} else {
			var z5 = decodeState.acc & 65535;
			decodeState.acc = decodeState.acc >>> 16;
			decodeState.validBits -= 16;
			tmp2 = z5;
		}
		g.rate = tmp2;
		var tmp3;
		if(decodeState.validBits < 0) {
			tmp3 = 0;
		} else if(decodeState.validBits < 16) {
			if(decodeState.validBits == 0) {
				decodeState.acc = 0;
			}
			while(true) {
				if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
					decodeState.validBits = -1;
					break;
				} else {
					decodeState.bytesInSeg--;
					decodeState.inputPosition += 1;
					decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
					decodeState.validBits += 8;
				}
				if(!(decodeState.validBits < 16)) {
					break;
				}
			}
			if(decodeState.validBits < 0) {
				tmp3 = 0;
			} else {
				var z6 = decodeState.acc & 65535;
				decodeState.acc = decodeState.acc >>> 16;
				decodeState.validBits -= 16;
				tmp3 = z6;
			}
		} else {
			var z7 = decodeState.acc & 65535;
			decodeState.acc = decodeState.acc >>> 16;
			decodeState.validBits -= 16;
			tmp3 = z7;
		}
		g.barkMapSize = tmp3;
		var tmp4;
		if(decodeState.validBits < 0) {
			tmp4 = 0;
		} else if(decodeState.validBits < 6) {
			if(decodeState.validBits == 0) {
				decodeState.acc = 0;
			}
			while(true) {
				if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
					decodeState.validBits = -1;
					break;
				} else {
					decodeState.bytesInSeg--;
					decodeState.inputPosition += 1;
					decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
					decodeState.validBits += 8;
				}
				if(!(decodeState.validBits < 6)) {
					break;
				}
			}
			if(decodeState.validBits < 0) {
				tmp4 = 0;
			} else {
				var z8 = decodeState.acc & 63;
				decodeState.acc = decodeState.acc >>> 6;
				decodeState.validBits -= 6;
				tmp4 = z8;
			}
		} else {
			var z9 = decodeState.acc & 63;
			decodeState.acc = decodeState.acc >>> 6;
			decodeState.validBits -= 6;
			tmp4 = z9;
		}
		g.amplitudeBits = tmp4;
		var tmp5;
		if(decodeState.validBits < 0) {
			tmp5 = 0;
		} else if(decodeState.validBits < 8) {
			if(decodeState.validBits == 0) {
				decodeState.acc = 0;
			}
			while(true) {
				if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
					decodeState.validBits = -1;
					break;
				} else {
					decodeState.bytesInSeg--;
					decodeState.inputPosition += 1;
					decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
					decodeState.validBits += 8;
				}
				if(!(decodeState.validBits < 8)) {
					break;
				}
			}
			if(decodeState.validBits < 0) {
				tmp5 = 0;
			} else {
				var z10 = decodeState.acc & 255;
				decodeState.acc = decodeState.acc >>> 8;
				decodeState.validBits -= 8;
				tmp5 = z10;
			}
		} else {
			var z11 = decodeState.acc & 255;
			decodeState.acc = decodeState.acc >>> 8;
			decodeState.validBits -= 8;
			tmp5 = z11;
		}
		g.amplitudeOffset = tmp5;
		var tmp6;
		if(decodeState.validBits < 0) {
			tmp6 = 0;
		} else if(decodeState.validBits < 4) {
			if(decodeState.validBits == 0) {
				decodeState.acc = 0;
			}
			while(true) {
				if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
					decodeState.validBits = -1;
					break;
				} else {
					decodeState.bytesInSeg--;
					decodeState.inputPosition += 1;
					decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
					decodeState.validBits += 8;
				}
				if(!(decodeState.validBits < 4)) {
					break;
				}
			}
			if(decodeState.validBits < 0) {
				tmp6 = 0;
			} else {
				var z12 = decodeState.acc & 15;
				decodeState.acc = decodeState.acc >>> 4;
				decodeState.validBits -= 4;
				tmp6 = z12;
			}
		} else {
			var z13 = decodeState.acc & 15;
			decodeState.acc = decodeState.acc >>> 4;
			decodeState.validBits -= 4;
			tmp6 = z13;
		}
		g.numberOfBooks = tmp6 + 1;
		var _g1 = 0;
		var _g = g.numberOfBooks;
		while(_g1 < _g) {
			var j = _g1++;
			var this1 = g.bookList;
			var val;
			if(decodeState.validBits < 0) {
				val = 0;
			} else if(decodeState.validBits < 8) {
				if(decodeState.validBits == 0) {
					decodeState.acc = 0;
				}
				while(true) {
					if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
						decodeState.validBits = -1;
						break;
					} else {
						decodeState.bytesInSeg--;
						decodeState.inputPosition += 1;
						decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
						decodeState.validBits += 8;
					}
					if(!(decodeState.validBits < 8)) {
						break;
					}
				}
				if(decodeState.validBits < 0) {
					val = 0;
				} else {
					var z14 = decodeState.acc & 255;
					decodeState.acc = decodeState.acc >>> 8;
					decodeState.validBits -= 8;
					val = z14;
				}
			} else {
				var z15 = decodeState.acc & 255;
				decodeState.acc = decodeState.acc >>> 8;
				decodeState.validBits -= 8;
				val = z15;
			}
			this1[j] = val;
		}
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.FEATURE_NOT_SUPPORTED,null,{ fileName : "Floor.hx", lineNumber : 41, className : "kha.audio2.ogg.vorbis.data.Floor", methodName : "read"}));
	} else {
		var p = [];
		var g1 = floor.floor1 = new kha_audio2_ogg_vorbis_data_Floor1();
		var maxClass = -1;
		var tmp7;
		if(decodeState.validBits < 0) {
			tmp7 = 0;
		} else if(decodeState.validBits < 5) {
			if(decodeState.validBits == 0) {
				decodeState.acc = 0;
			}
			while(true) {
				if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
					decodeState.validBits = -1;
					break;
				} else {
					decodeState.bytesInSeg--;
					decodeState.inputPosition += 1;
					decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
					decodeState.validBits += 8;
				}
				if(!(decodeState.validBits < 5)) {
					break;
				}
			}
			if(decodeState.validBits < 0) {
				tmp7 = 0;
			} else {
				var z16 = decodeState.acc & 31;
				decodeState.acc = decodeState.acc >>> 5;
				decodeState.validBits -= 5;
				tmp7 = z16;
			}
		} else {
			var z17 = decodeState.acc & 31;
			decodeState.acc = decodeState.acc >>> 5;
			decodeState.validBits -= 5;
			tmp7 = z17;
		}
		g1.partitions = tmp7;
		var length = g1.partitions;
		var this2 = new Array(length);
		g1.partitionClassList = this2;
		var _g11 = 0;
		var _g2 = g1.partitions;
		while(_g11 < _g2) {
			var j1 = _g11++;
			var this3 = g1.partitionClassList;
			var val1;
			if(decodeState.validBits < 0) {
				val1 = 0;
			} else if(decodeState.validBits < 4) {
				if(decodeState.validBits == 0) {
					decodeState.acc = 0;
				}
				while(true) {
					if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
						decodeState.validBits = -1;
						break;
					} else {
						decodeState.bytesInSeg--;
						decodeState.inputPosition += 1;
						decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
						decodeState.validBits += 8;
					}
					if(!(decodeState.validBits < 4)) {
						break;
					}
				}
				if(decodeState.validBits < 0) {
					val1 = 0;
				} else {
					var z18 = decodeState.acc & 15;
					decodeState.acc = decodeState.acc >>> 4;
					decodeState.validBits -= 4;
					val1 = z18;
				}
			} else {
				var z19 = decodeState.acc & 15;
				decodeState.acc = decodeState.acc >>> 4;
				decodeState.validBits -= 4;
				val1 = z19;
			}
			this3[j1] = val1;
			if(g1.partitionClassList[j1] > maxClass) {
				maxClass = g1.partitionClassList[j1];
			}
		}
		var this4 = new Array(maxClass + 1);
		g1.classDimensions = this4;
		var this5 = new Array(maxClass + 1);
		g1.classMasterbooks = this5;
		var this6 = new Array(maxClass + 1);
		g1.classSubclasses = this6;
		var this7 = new Array(maxClass + 1);
		g1.subclassBooks = this7;
		var _g12 = 0;
		var _g3 = maxClass + 1;
		while(_g12 < _g3) {
			var j2 = _g12++;
			var this8 = g1.classDimensions;
			var val2;
			if(decodeState.validBits < 0) {
				val2 = 0;
			} else if(decodeState.validBits < 3) {
				if(decodeState.validBits == 0) {
					decodeState.acc = 0;
				}
				while(true) {
					if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
						decodeState.validBits = -1;
						break;
					} else {
						decodeState.bytesInSeg--;
						decodeState.inputPosition += 1;
						decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
						decodeState.validBits += 8;
					}
					if(!(decodeState.validBits < 3)) {
						break;
					}
				}
				if(decodeState.validBits < 0) {
					val2 = 0;
				} else {
					var z20 = decodeState.acc & 7;
					decodeState.acc = decodeState.acc >>> 3;
					decodeState.validBits -= 3;
					val2 = z20;
				}
			} else {
				var z21 = decodeState.acc & 7;
				decodeState.acc = decodeState.acc >>> 3;
				decodeState.validBits -= 3;
				val2 = z21;
			}
			this8[j2] = val2 + 1;
			var this9 = g1.classSubclasses;
			var val3;
			if(decodeState.validBits < 0) {
				val3 = 0;
			} else if(decodeState.validBits < 2) {
				if(decodeState.validBits == 0) {
					decodeState.acc = 0;
				}
				while(true) {
					if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
						decodeState.validBits = -1;
						break;
					} else {
						decodeState.bytesInSeg--;
						decodeState.inputPosition += 1;
						decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
						decodeState.validBits += 8;
					}
					if(!(decodeState.validBits < 2)) {
						break;
					}
				}
				if(decodeState.validBits < 0) {
					val3 = 0;
				} else {
					var z22 = decodeState.acc & 3;
					decodeState.acc = decodeState.acc >>> 2;
					decodeState.validBits -= 2;
					val3 = z22;
				}
			} else {
				var z23 = decodeState.acc & 3;
				decodeState.acc = decodeState.acc >>> 2;
				decodeState.validBits -= 2;
				val3 = z23;
			}
			this9[j2] = val3;
			if(g1.classSubclasses[j2] != 0) {
				var this10 = g1.classMasterbooks;
				var val4;
				if(decodeState.validBits < 0) {
					val4 = 0;
				} else if(decodeState.validBits < 8) {
					if(decodeState.validBits == 0) {
						decodeState.acc = 0;
					}
					while(true) {
						if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
							decodeState.validBits = -1;
							break;
						} else {
							decodeState.bytesInSeg--;
							decodeState.inputPosition += 1;
							decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
							decodeState.validBits += 8;
						}
						if(!(decodeState.validBits < 8)) {
							break;
						}
					}
					if(decodeState.validBits < 0) {
						val4 = 0;
					} else {
						var z24 = decodeState.acc & 255;
						decodeState.acc = decodeState.acc >>> 8;
						decodeState.validBits -= 8;
						val4 = z24;
					}
				} else {
					var z25 = decodeState.acc & 255;
					decodeState.acc = decodeState.acc >>> 8;
					decodeState.validBits -= 8;
					val4 = z25;
				}
				this10[j2] = val4;
				if(g1.classMasterbooks[j2] >= codebooks.length) {
					throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "Floor.hx", lineNumber : 64, className : "kha.audio2.ogg.vorbis.data.Floor", methodName : "read"}));
				}
			}
			var kl = 1 << g1.classSubclasses[j2];
			var this11 = g1.subclassBooks;
			var this12 = new Array(kl);
			this11[j2] = this12;
			var _g31 = 0;
			var _g21 = kl;
			while(_g31 < _g21) {
				var k = _g31++;
				var this13 = g1.subclassBooks[j2];
				var val5;
				if(decodeState.validBits < 0) {
					val5 = 0;
				} else if(decodeState.validBits < 8) {
					if(decodeState.validBits == 0) {
						decodeState.acc = 0;
					}
					while(true) {
						if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
							decodeState.validBits = -1;
							break;
						} else {
							decodeState.bytesInSeg--;
							decodeState.inputPosition += 1;
							decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
							decodeState.validBits += 8;
						}
						if(!(decodeState.validBits < 8)) {
							break;
						}
					}
					if(decodeState.validBits < 0) {
						val5 = 0;
					} else {
						var z26 = decodeState.acc & 255;
						decodeState.acc = decodeState.acc >>> 8;
						decodeState.validBits -= 8;
						val5 = z26;
					}
				} else {
					var z27 = decodeState.acc & 255;
					decodeState.acc = decodeState.acc >>> 8;
					decodeState.validBits -= 8;
					val5 = z27;
				}
				this13[k] = val5 - 1;
				if(g1.subclassBooks[j2][k] >= codebooks.length) {
					throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "Floor.hx", lineNumber : 73, className : "kha.audio2.ogg.vorbis.data.Floor", methodName : "read"}));
				}
			}
		}
		var tmp8;
		if(decodeState.validBits < 0) {
			tmp8 = 0;
		} else if(decodeState.validBits < 2) {
			if(decodeState.validBits == 0) {
				decodeState.acc = 0;
			}
			while(true) {
				if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
					decodeState.validBits = -1;
					break;
				} else {
					decodeState.bytesInSeg--;
					decodeState.inputPosition += 1;
					decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
					decodeState.validBits += 8;
				}
				if(!(decodeState.validBits < 2)) {
					break;
				}
			}
			if(decodeState.validBits < 0) {
				tmp8 = 0;
			} else {
				var z28 = decodeState.acc & 3;
				decodeState.acc = decodeState.acc >>> 2;
				decodeState.validBits -= 2;
				tmp8 = z28;
			}
		} else {
			var z29 = decodeState.acc & 3;
			decodeState.acc = decodeState.acc >>> 2;
			decodeState.validBits -= 2;
			tmp8 = z29;
		}
		g1.floor1Multiplier = tmp8 + 1;
		var tmp9;
		if(decodeState.validBits < 0) {
			tmp9 = 0;
		} else if(decodeState.validBits < 4) {
			if(decodeState.validBits == 0) {
				decodeState.acc = 0;
			}
			while(true) {
				if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
					decodeState.validBits = -1;
					break;
				} else {
					decodeState.bytesInSeg--;
					decodeState.inputPosition += 1;
					decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
					decodeState.validBits += 8;
				}
				if(!(decodeState.validBits < 4)) {
					break;
				}
			}
			if(decodeState.validBits < 0) {
				tmp9 = 0;
			} else {
				var z30 = decodeState.acc & 15;
				decodeState.acc = decodeState.acc >>> 4;
				decodeState.validBits -= 4;
				tmp9 = z30;
			}
		} else {
			var z31 = decodeState.acc & 15;
			decodeState.acc = decodeState.acc >>> 4;
			decodeState.validBits -= 4;
			tmp9 = z31;
		}
		g1.rangebits = tmp9;
		var this14 = new Array(250);
		g1.xlist = this14;
		g1.xlist[0] = 0;
		g1.xlist[1] = 1 << g1.rangebits;
		g1.values = 2;
		var _g13 = 0;
		var _g4 = g1.partitions;
		while(_g13 < _g4) {
			var j3 = _g13++;
			var c = g1.partitionClassList[j3];
			var _g32 = 0;
			var _g22 = g1.classDimensions[c];
			while(_g32 < _g22) {
				var k1 = _g32++;
				var this15 = g1.xlist;
				var index = g1.values;
				var n = g1.rangebits;
				var val6;
				if(decodeState.validBits < 0) {
					val6 = 0;
				} else if(decodeState.validBits < n) {
					if(n > 24) {
						val6 = decodeState.readBits(24) + (decodeState.readBits(n - 24) << 24);
					} else {
						if(decodeState.validBits == 0) {
							decodeState.acc = 0;
						}
						while(true) {
							if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
								decodeState.validBits = -1;
								break;
							} else {
								decodeState.bytesInSeg--;
								decodeState.inputPosition += 1;
								decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
								decodeState.validBits += 8;
							}
							if(!(decodeState.validBits < n)) {
								break;
							}
						}
						if(decodeState.validBits < 0) {
							val6 = 0;
						} else {
							var z32 = decodeState.acc & (1 << n) - 1;
							decodeState.acc = decodeState.acc >>> n;
							decodeState.validBits -= n;
							val6 = z32;
						}
					}
				} else {
					var z33 = decodeState.acc & (1 << n) - 1;
					decodeState.acc = decodeState.acc >>> n;
					decodeState.validBits -= n;
					val6 = z33;
				}
				this15[index] = val6;
				g1.values++;
			}
		}
		var _g14 = 0;
		var _g5 = g1.values;
		while(_g14 < _g5) {
			var j4 = _g14++;
			p.push(new kha_audio2_ogg_vorbis_data_IntPoint());
			p[j4].x = g1.xlist[j4];
			p[j4].y = j4;
		}
		p.sort(kha_audio2_ogg_vorbis_VorbisTools.pointCompare);
		var length1 = g1.values;
		var this16 = new Array(length1);
		g1.sortedOrder = this16;
		var _g15 = 0;
		var _g6 = g1.values;
		while(_g15 < _g6) {
			var j5 = _g15++;
			g1.sortedOrder[j5] = p[j5].y;
		}
		var length2 = g1.values;
		var this17 = new Array(length2);
		g1.neighbors = this17;
		var _g16 = 2;
		var _g7 = g1.values;
		while(_g16 < _g7) {
			var j6 = _g16++;
			var ne_low;
			var ne_high;
			var x = g1.xlist;
			var low = -1;
			var high = 65536;
			var plow = 0;
			var phigh = 0;
			var _g17 = 0;
			var _g8 = j6;
			while(_g17 < _g8) {
				var i = _g17++;
				if(x[i] > low && x[i] < x[j6]) {
					plow = i;
					low = x[i];
				}
				if(x[i] < high && x[i] > x[j6]) {
					phigh = i;
					high = x[i];
				}
			}
			ne_low = plow;
			ne_high = phigh;
			var this18 = g1.neighbors;
			var length3 = g1.values;
			var this19 = new Array(length3);
			this18[j6] = this19;
			g1.neighbors[j6][0] = ne_low;
			g1.neighbors[j6][1] = ne_high;
		}
	}
	return floor;
};
kha_audio2_ogg_vorbis_data_Floor.prototype = {
	__class__: kha_audio2_ogg_vorbis_data_Floor
};
var kha_audio2_ogg_vorbis_data_Floor0 = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.Floor0"] = kha_audio2_ogg_vorbis_data_Floor0;
kha_audio2_ogg_vorbis_data_Floor0.__name__ = ["kha","audio2","ogg","vorbis","data","Floor0"];
kha_audio2_ogg_vorbis_data_Floor0.prototype = {
	__class__: kha_audio2_ogg_vorbis_data_Floor0
};
var kha_audio2_ogg_vorbis_data_Floor1 = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.Floor1"] = kha_audio2_ogg_vorbis_data_Floor1;
kha_audio2_ogg_vorbis_data_Floor1.__name__ = ["kha","audio2","ogg","vorbis","data","Floor1"];
kha_audio2_ogg_vorbis_data_Floor1.prototype = {
	__class__: kha_audio2_ogg_vorbis_data_Floor1
};
var kha_audio2_ogg_vorbis_data_Header = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.Header"] = kha_audio2_ogg_vorbis_data_Header;
kha_audio2_ogg_vorbis_data_Header.__name__ = ["kha","audio2","ogg","vorbis","data","Header"];
kha_audio2_ogg_vorbis_data_Header.read = function(decodeState) {
	var page = decodeState.page;
	page.start(decodeState);
	if((page.flag & 2) == 0) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE,"not firstPage",{ fileName : "Header.hx", lineNumber : 46, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	if((page.flag & 4) != 0) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE,"lastPage",{ fileName : "Header.hx", lineNumber : 49, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	if((page.flag & 1) != 0) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE,"continuedPacket",{ fileName : "Header.hx", lineNumber : 52, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	decodeState.firstPageValidate();
	decodeState.inputPosition += 1;
	if(decodeState.input.readByte() != 1) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE,"decodeState head",{ fileName : "Header.hx", lineNumber : 57, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	var header = new haxe_io_Bytes(new ArrayBuffer(6));
	var _g = 0;
	while(_g < 6) {
		var i = _g++;
		var x;
		if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
			x = -1;
		} else {
			decodeState.bytesInSeg--;
			decodeState.inputPosition += 1;
			x = decodeState.input.readByte();
		}
		decodeState.validBits = 0;
		header.b[i] = x & 255;
	}
	if(header.toString() != "vorbis") {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,"vorbis header",{ fileName : "VorbisDecodeState.hx", lineNumber : 300, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "vorbisValidate"}));
	}
	decodeState.inputPosition += 4;
	var version = decodeState.input.readInt32();
	if(version != 0) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE,"vorbis version : " + version,{ fileName : "Header.hx", lineNumber : 66, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	var header1 = new kha_audio2_ogg_vorbis_data_Header();
	decodeState.inputPosition += 1;
	header1.channel = decodeState.input.readByte();
	if(header1.channel == 0) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE,"no channel",{ fileName : "Header.hx", lineNumber : 73, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	} else if(header1.channel > 16) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.TOO_MANY_CHANNELS,"too many channels",{ fileName : "Header.hx", lineNumber : 75, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	decodeState.inputPosition += 4;
	header1.sampleRate = decodeState.input.readInt32();
	if(header1.sampleRate == 0) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE,"no sampling rate",{ fileName : "Header.hx", lineNumber : 80, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	decodeState.inputPosition += 4;
	header1.maximumBitRate = decodeState.input.readInt32();
	decodeState.inputPosition += 4;
	header1.nominalBitRate = decodeState.input.readInt32();
	decodeState.inputPosition += 4;
	header1.minimumBitRate = decodeState.input.readInt32();
	decodeState.inputPosition += 1;
	var x1 = decodeState.input.readByte();
	var log0 = x1 & 15;
	var log1 = x1 >> 4;
	header1.blocksize0 = 1 << log0;
	header1.blocksize1 = 1 << log1;
	if(log0 < 6 || log0 > 13) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "Header.hx", lineNumber : 93, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	if(log1 < 6 || log1 > 13) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "Header.hx", lineNumber : 96, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	if(log0 > log1) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "Header.hx", lineNumber : 99, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	decodeState.inputPosition += 1;
	var x2 = decodeState.input.readByte();
	if((x2 & 1) == 0) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE,null,{ fileName : "Header.hx", lineNumber : 105, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	decodeState.page.start(decodeState);
	decodeState.startPacket();
	var len = 0;
	var output = new haxe_io_BytesOutput();
	while(true) {
		len = decodeState.next();
		if(!(len != 0)) {
			break;
		}
		decodeState.inputPosition += len;
		output.write(decodeState.input.read(len));
		decodeState.bytesInSeg = 0;
	}
	var packetInput = new haxe_io_BytesInput(output.getBytes());
	packetInput.readByte();
	packetInput.read(6);
	var vendorLength = packetInput.readInt32();
	header1.vendor = packetInput.readString(vendorLength);
	header1.comment = new kha_audio2_ogg_vorbis_data_Comment();
	var commentCount = packetInput.readInt32();
	var _g1 = 0;
	var _g2 = commentCount;
	while(_g1 < _g2) {
		var i1 = _g1++;
		var n = packetInput.readInt32();
		var str = packetInput.readString(n);
		var splitter = str.indexOf("=");
		if(splitter != -1) {
			header1.comment.add(str.substring(0,splitter),str.substring(splitter + 1));
		}
	}
	var x3 = packetInput.readByte();
	if((x3 & 1) == 0) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "Header.hx", lineNumber : 141, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	decodeState.startPacket();
	var x4;
	if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
		x4 = -1;
	} else {
		decodeState.bytesInSeg--;
		decodeState.inputPosition += 1;
		x4 = decodeState.input.readByte();
	}
	decodeState.validBits = 0;
	if(x4 != 5) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,"setup packet",{ fileName : "Header.hx", lineNumber : 149, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
	}
	var header2 = new haxe_io_Bytes(new ArrayBuffer(6));
	var _g3 = 0;
	while(_g3 < 6) {
		var i2 = _g3++;
		var x5;
		if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
			x5 = -1;
		} else {
			decodeState.bytesInSeg--;
			decodeState.inputPosition += 1;
			x5 = decodeState.input.readByte();
		}
		decodeState.validBits = 0;
		header2.b[i2] = x5 & 255;
	}
	if(header2.toString() != "vorbis") {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,"vorbis header",{ fileName : "VorbisDecodeState.hx", lineNumber : 300, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "vorbisValidate"}));
	}
	var codebookCount;
	if(decodeState.validBits < 0) {
		codebookCount = 0;
	} else if(decodeState.validBits < 8) {
		if(decodeState.validBits == 0) {
			decodeState.acc = 0;
		}
		while(true) {
			if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
				decodeState.validBits = -1;
				break;
			} else {
				decodeState.bytesInSeg--;
				decodeState.inputPosition += 1;
				decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
				decodeState.validBits += 8;
			}
			if(!(decodeState.validBits < 8)) {
				break;
			}
		}
		if(decodeState.validBits < 0) {
			codebookCount = 0;
		} else {
			var z = decodeState.acc & 255;
			decodeState.acc = decodeState.acc >>> 8;
			decodeState.validBits -= 8;
			codebookCount = z;
		}
	} else {
		var z1 = decodeState.acc & 255;
		decodeState.acc = decodeState.acc >>> 8;
		decodeState.validBits -= 8;
		codebookCount = z1;
	}
	var codebookCount1 = codebookCount + 1;
	var this1 = new Array(codebookCount1);
	header1.codebooks = this1;
	var _g11 = 0;
	var _g4 = codebookCount1;
	while(_g11 < _g4) {
		var i3 = _g11++;
		header1.codebooks[i3] = kha_audio2_ogg_vorbis_data_Codebook.read(decodeState);
	}
	var x6;
	if(decodeState.validBits < 0) {
		x6 = 0;
	} else if(decodeState.validBits < 6) {
		if(decodeState.validBits == 0) {
			decodeState.acc = 0;
		}
		while(true) {
			if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
				decodeState.validBits = -1;
				break;
			} else {
				decodeState.bytesInSeg--;
				decodeState.inputPosition += 1;
				decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
				decodeState.validBits += 8;
			}
			if(!(decodeState.validBits < 6)) {
				break;
			}
		}
		if(decodeState.validBits < 0) {
			x6 = 0;
		} else {
			var z2 = decodeState.acc & 63;
			decodeState.acc = decodeState.acc >>> 6;
			decodeState.validBits -= 6;
			x6 = z2;
		}
	} else {
		var z3 = decodeState.acc & 63;
		decodeState.acc = decodeState.acc >>> 6;
		decodeState.validBits -= 6;
		x6 = z3;
	}
	x2 = x6 + 1;
	var _g12 = 0;
	var _g5 = x2;
	while(_g12 < _g5) {
		var i4 = _g12++;
		var tmp;
		if(decodeState.validBits < 0) {
			tmp = 0;
		} else if(decodeState.validBits < 16) {
			if(decodeState.validBits == 0) {
				decodeState.acc = 0;
			}
			while(true) {
				if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
					decodeState.validBits = -1;
					break;
				} else {
					decodeState.bytesInSeg--;
					decodeState.inputPosition += 1;
					decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
					decodeState.validBits += 8;
				}
				if(!(decodeState.validBits < 16)) {
					break;
				}
			}
			if(decodeState.validBits < 0) {
				tmp = 0;
			} else {
				var z4 = decodeState.acc & 65535;
				decodeState.acc = decodeState.acc >>> 16;
				decodeState.validBits -= 16;
				tmp = z4;
			}
		} else {
			var z5 = decodeState.acc & 65535;
			decodeState.acc = decodeState.acc >>> 16;
			decodeState.validBits -= 16;
			tmp = z5;
		}
		if(tmp != 0) {
			throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "Header.hx", lineNumber : 165, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
		}
	}
	var floorCount;
	if(decodeState.validBits < 0) {
		floorCount = 0;
	} else if(decodeState.validBits < 6) {
		if(decodeState.validBits == 0) {
			decodeState.acc = 0;
		}
		while(true) {
			if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
				decodeState.validBits = -1;
				break;
			} else {
				decodeState.bytesInSeg--;
				decodeState.inputPosition += 1;
				decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
				decodeState.validBits += 8;
			}
			if(!(decodeState.validBits < 6)) {
				break;
			}
		}
		if(decodeState.validBits < 0) {
			floorCount = 0;
		} else {
			var z6 = decodeState.acc & 63;
			decodeState.acc = decodeState.acc >>> 6;
			decodeState.validBits -= 6;
			floorCount = z6;
		}
	} else {
		var z7 = decodeState.acc & 63;
		decodeState.acc = decodeState.acc >>> 6;
		decodeState.validBits -= 6;
		floorCount = z7;
	}
	var floorCount1 = floorCount + 1;
	var this2 = new Array(floorCount1);
	header1.floorConfig = this2;
	var _g13 = 0;
	var _g6 = floorCount1;
	while(_g13 < _g6) {
		var i5 = _g13++;
		header1.floorConfig[i5] = kha_audio2_ogg_vorbis_data_Floor.read(decodeState,header1.codebooks);
	}
	var residueCount;
	if(decodeState.validBits < 0) {
		residueCount = 0;
	} else if(decodeState.validBits < 6) {
		if(decodeState.validBits == 0) {
			decodeState.acc = 0;
		}
		while(true) {
			if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
				decodeState.validBits = -1;
				break;
			} else {
				decodeState.bytesInSeg--;
				decodeState.inputPosition += 1;
				decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
				decodeState.validBits += 8;
			}
			if(!(decodeState.validBits < 6)) {
				break;
			}
		}
		if(decodeState.validBits < 0) {
			residueCount = 0;
		} else {
			var z8 = decodeState.acc & 63;
			decodeState.acc = decodeState.acc >>> 6;
			decodeState.validBits -= 6;
			residueCount = z8;
		}
	} else {
		var z9 = decodeState.acc & 63;
		decodeState.acc = decodeState.acc >>> 6;
		decodeState.validBits -= 6;
		residueCount = z9;
	}
	var residueCount1 = residueCount + 1;
	var this3 = new Array(residueCount1);
	header1.residueConfig = this3;
	var _g14 = 0;
	var _g7 = residueCount1;
	while(_g14 < _g7) {
		var i6 = _g14++;
		header1.residueConfig[i6] = kha_audio2_ogg_vorbis_data_Residue.read(decodeState,header1.codebooks);
	}
	var mappingCount;
	if(decodeState.validBits < 0) {
		mappingCount = 0;
	} else if(decodeState.validBits < 6) {
		if(decodeState.validBits == 0) {
			decodeState.acc = 0;
		}
		while(true) {
			if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
				decodeState.validBits = -1;
				break;
			} else {
				decodeState.bytesInSeg--;
				decodeState.inputPosition += 1;
				decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
				decodeState.validBits += 8;
			}
			if(!(decodeState.validBits < 6)) {
				break;
			}
		}
		if(decodeState.validBits < 0) {
			mappingCount = 0;
		} else {
			var z10 = decodeState.acc & 63;
			decodeState.acc = decodeState.acc >>> 6;
			decodeState.validBits -= 6;
			mappingCount = z10;
		}
	} else {
		var z11 = decodeState.acc & 63;
		decodeState.acc = decodeState.acc >>> 6;
		decodeState.validBits -= 6;
		mappingCount = z11;
	}
	var mappingCount1 = mappingCount + 1;
	var this4 = new Array(mappingCount1);
	header1.mapping = this4;
	var _g15 = 0;
	var _g8 = mappingCount1;
	while(_g15 < _g8) {
		var i7 = _g15++;
		var map = kha_audio2_ogg_vorbis_data_Mapping.read(decodeState,header1.channel);
		header1.mapping[i7] = map;
		var _g31 = 0;
		var _g21 = map.submaps;
		while(_g31 < _g21) {
			var j = _g31++;
			if(map.submapFloor[j] >= header1.floorConfig.length) {
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "Header.hx", lineNumber : 191, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
			}
			if(map.submapResidue[j] >= header1.residueConfig.length) {
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "Header.hx", lineNumber : 194, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
			}
		}
	}
	var modeCount;
	if(decodeState.validBits < 0) {
		modeCount = 0;
	} else if(decodeState.validBits < 6) {
		if(decodeState.validBits == 0) {
			decodeState.acc = 0;
		}
		while(true) {
			if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
				decodeState.validBits = -1;
				break;
			} else {
				decodeState.bytesInSeg--;
				decodeState.inputPosition += 1;
				decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
				decodeState.validBits += 8;
			}
			if(!(decodeState.validBits < 6)) {
				break;
			}
		}
		if(decodeState.validBits < 0) {
			modeCount = 0;
		} else {
			var z12 = decodeState.acc & 63;
			decodeState.acc = decodeState.acc >>> 6;
			decodeState.validBits -= 6;
			modeCount = z12;
		}
	} else {
		var z13 = decodeState.acc & 63;
		decodeState.acc = decodeState.acc >>> 6;
		decodeState.validBits -= 6;
		modeCount = z13;
	}
	var modeCount1 = modeCount + 1;
	var this5 = new Array(modeCount1);
	header1.modes = this5;
	var _g16 = 0;
	var _g9 = modeCount1;
	while(_g16 < _g9) {
		var i8 = _g16++;
		var mode = kha_audio2_ogg_vorbis_data_Mode.read(decodeState);
		header1.modes[i8] = mode;
		if(mode.mapping >= header1.mapping.length) {
			throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "Header.hx", lineNumber : 205, className : "kha.audio2.ogg.vorbis.data.Header", methodName : "read"}));
		}
	}
	while(decodeState.bytesInSeg != 0 || !decodeState.lastSeg && decodeState.next() != 0) {
		decodeState.bytesInSeg--;
		decodeState.inputPosition += 1;
		decodeState.input.readByte();
	}
	return header1;
};
kha_audio2_ogg_vorbis_data_Header.prototype = {
	__class__: kha_audio2_ogg_vorbis_data_Header
};
var kha_audio2_ogg_vorbis_data_IntPoint = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.IntPoint"] = kha_audio2_ogg_vorbis_data_IntPoint;
kha_audio2_ogg_vorbis_data_IntPoint.__name__ = ["kha","audio2","ogg","vorbis","data","IntPoint"];
kha_audio2_ogg_vorbis_data_IntPoint.prototype = {
	__class__: kha_audio2_ogg_vorbis_data_IntPoint
};
var kha_audio2_ogg_vorbis_data_Mapping = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.Mapping"] = kha_audio2_ogg_vorbis_data_Mapping;
kha_audio2_ogg_vorbis_data_Mapping.__name__ = ["kha","audio2","ogg","vorbis","data","Mapping"];
kha_audio2_ogg_vorbis_data_Mapping.read = function(decodeState,channels) {
	var m = new kha_audio2_ogg_vorbis_data_Mapping();
	var mappingType;
	if(decodeState.validBits < 0) {
		mappingType = 0;
	} else if(decodeState.validBits < 16) {
		if(decodeState.validBits == 0) {
			decodeState.acc = 0;
		}
		while(true) {
			if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
				decodeState.validBits = -1;
				break;
			} else {
				decodeState.bytesInSeg--;
				decodeState.inputPosition += 1;
				decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
				decodeState.validBits += 8;
			}
			if(!(decodeState.validBits < 16)) {
				break;
			}
		}
		if(decodeState.validBits < 0) {
			mappingType = 0;
		} else {
			var z = decodeState.acc & 65535;
			decodeState.acc = decodeState.acc >>> 16;
			decodeState.validBits -= 16;
			mappingType = z;
		}
	} else {
		var z1 = decodeState.acc & 65535;
		decodeState.acc = decodeState.acc >>> 16;
		decodeState.validBits -= 16;
		mappingType = z1;
	}
	if(mappingType != 0) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,"mapping type " + mappingType,{ fileName : "Mapping.hx", lineNumber : 22, className : "kha.audio2.ogg.vorbis.data.Mapping", methodName : "read"}));
	}
	var this1 = new Array(channels);
	m.chan = this1;
	var _g1 = 0;
	var _g = channels;
	while(_g1 < _g) {
		var j = _g1++;
		m.chan[j] = new kha_audio2_ogg_vorbis_data_MappingChannel();
	}
	var tmp;
	if(decodeState.validBits < 0) {
		tmp = 0;
	} else if(decodeState.validBits < 1) {
		if(decodeState.validBits == 0) {
			decodeState.acc = 0;
		}
		while(true) {
			if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
				decodeState.validBits = -1;
				break;
			} else {
				decodeState.bytesInSeg--;
				decodeState.inputPosition += 1;
				decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
				decodeState.validBits += 8;
			}
			if(!(decodeState.validBits < 1)) {
				break;
			}
		}
		if(decodeState.validBits < 0) {
			tmp = 0;
		} else {
			var z2 = decodeState.acc & 1;
			decodeState.acc = decodeState.acc >>> 1;
			decodeState.validBits -= 1;
			tmp = z2;
		}
	} else {
		var z3 = decodeState.acc & 1;
		decodeState.acc = decodeState.acc >>> 1;
		decodeState.validBits -= 1;
		tmp = z3;
	}
	if(tmp != 0) {
		var tmp1;
		if(decodeState.validBits < 0) {
			tmp1 = 0;
		} else if(decodeState.validBits < 4) {
			if(decodeState.validBits == 0) {
				decodeState.acc = 0;
			}
			while(true) {
				if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
					decodeState.validBits = -1;
					break;
				} else {
					decodeState.bytesInSeg--;
					decodeState.inputPosition += 1;
					decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
					decodeState.validBits += 8;
				}
				if(!(decodeState.validBits < 4)) {
					break;
				}
			}
			if(decodeState.validBits < 0) {
				tmp1 = 0;
			} else {
				var z4 = decodeState.acc & 15;
				decodeState.acc = decodeState.acc >>> 4;
				decodeState.validBits -= 4;
				tmp1 = z4;
			}
		} else {
			var z5 = decodeState.acc & 15;
			decodeState.acc = decodeState.acc >>> 4;
			decodeState.validBits -= 4;
			tmp1 = z5;
		}
		m.submaps = tmp1 + 1;
	} else {
		m.submaps = 1;
	}
	var tmp2;
	if(decodeState.validBits < 0) {
		tmp2 = 0;
	} else if(decodeState.validBits < 1) {
		if(decodeState.validBits == 0) {
			decodeState.acc = 0;
		}
		while(true) {
			if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
				decodeState.validBits = -1;
				break;
			} else {
				decodeState.bytesInSeg--;
				decodeState.inputPosition += 1;
				decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
				decodeState.validBits += 8;
			}
			if(!(decodeState.validBits < 1)) {
				break;
			}
		}
		if(decodeState.validBits < 0) {
			tmp2 = 0;
		} else {
			var z6 = decodeState.acc & 1;
			decodeState.acc = decodeState.acc >>> 1;
			decodeState.validBits -= 1;
			tmp2 = z6;
		}
	} else {
		var z7 = decodeState.acc & 1;
		decodeState.acc = decodeState.acc >>> 1;
		decodeState.validBits -= 1;
		tmp2 = z7;
	}
	if(tmp2 != 0) {
		var tmp3;
		if(decodeState.validBits < 0) {
			tmp3 = 0;
		} else if(decodeState.validBits < 8) {
			if(decodeState.validBits == 0) {
				decodeState.acc = 0;
			}
			while(true) {
				if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
					decodeState.validBits = -1;
					break;
				} else {
					decodeState.bytesInSeg--;
					decodeState.inputPosition += 1;
					decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
					decodeState.validBits += 8;
				}
				if(!(decodeState.validBits < 8)) {
					break;
				}
			}
			if(decodeState.validBits < 0) {
				tmp3 = 0;
			} else {
				var z8 = decodeState.acc & 255;
				decodeState.acc = decodeState.acc >>> 8;
				decodeState.validBits -= 8;
				tmp3 = z8;
			}
		} else {
			var z9 = decodeState.acc & 255;
			decodeState.acc = decodeState.acc >>> 8;
			decodeState.validBits -= 8;
			tmp3 = z9;
		}
		m.couplingSteps = tmp3 + 1;
		var _g11 = 0;
		var _g2 = m.couplingSteps;
		while(_g11 < _g2) {
			var k = _g11++;
			var tmp4 = m.chan[k];
			var n = channels - 1;
			var log2_4 = [0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4];
			var n1 = n < 16384 ? n < 16 ? log2_4[n] : n < 512 ? 5 + log2_4[n >> 5] : 10 + log2_4[n >> 10] : n < 16777216 ? n < 524288 ? 15 + log2_4[n >> 15] : 20 + log2_4[n >> 20] : n < 536870912 ? 25 + log2_4[n >> 25] : n < -2147483648 ? 30 + log2_4[n >> 30] : 0;
			var tmp5;
			if(decodeState.validBits < 0) {
				tmp5 = 0;
			} else if(decodeState.validBits < n1) {
				if(n1 > 24) {
					tmp5 = decodeState.readBits(24) + (decodeState.readBits(n1 - 24) << 24);
				} else {
					if(decodeState.validBits == 0) {
						decodeState.acc = 0;
					}
					while(true) {
						if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
							decodeState.validBits = -1;
							break;
						} else {
							decodeState.bytesInSeg--;
							decodeState.inputPosition += 1;
							decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
							decodeState.validBits += 8;
						}
						if(!(decodeState.validBits < n1)) {
							break;
						}
					}
					if(decodeState.validBits < 0) {
						tmp5 = 0;
					} else {
						var z10 = decodeState.acc & (1 << n1) - 1;
						decodeState.acc = decodeState.acc >>> n1;
						decodeState.validBits -= n1;
						tmp5 = z10;
					}
				}
			} else {
				var z11 = decodeState.acc & (1 << n1) - 1;
				decodeState.acc = decodeState.acc >>> n1;
				decodeState.validBits -= n1;
				tmp5 = z11;
			}
			tmp4.magnitude = tmp5;
			var tmp6 = m.chan[k];
			var n2 = channels - 1;
			var log2_41 = [0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4];
			var n3 = n2 < 16384 ? n2 < 16 ? log2_41[n2] : n2 < 512 ? 5 + log2_41[n2 >> 5] : 10 + log2_41[n2 >> 10] : n2 < 16777216 ? n2 < 524288 ? 15 + log2_41[n2 >> 15] : 20 + log2_41[n2 >> 20] : n2 < 536870912 ? 25 + log2_41[n2 >> 25] : n2 < -2147483648 ? 30 + log2_41[n2 >> 30] : 0;
			var tmp7;
			if(decodeState.validBits < 0) {
				tmp7 = 0;
			} else if(decodeState.validBits < n3) {
				if(n3 > 24) {
					tmp7 = decodeState.readBits(24) + (decodeState.readBits(n3 - 24) << 24);
				} else {
					if(decodeState.validBits == 0) {
						decodeState.acc = 0;
					}
					while(true) {
						if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
							decodeState.validBits = -1;
							break;
						} else {
							decodeState.bytesInSeg--;
							decodeState.inputPosition += 1;
							decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
							decodeState.validBits += 8;
						}
						if(!(decodeState.validBits < n3)) {
							break;
						}
					}
					if(decodeState.validBits < 0) {
						tmp7 = 0;
					} else {
						var z12 = decodeState.acc & (1 << n3) - 1;
						decodeState.acc = decodeState.acc >>> n3;
						decodeState.validBits -= n3;
						tmp7 = z12;
					}
				}
			} else {
				var z13 = decodeState.acc & (1 << n3) - 1;
				decodeState.acc = decodeState.acc >>> n3;
				decodeState.validBits -= n3;
				tmp7 = z13;
			}
			tmp6.angle = tmp7;
			if(m.chan[k].magnitude >= channels) {
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "Mapping.hx", lineNumber : 46, className : "kha.audio2.ogg.vorbis.data.Mapping", methodName : "read"}));
			}
			if(m.chan[k].angle >= channels) {
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "Mapping.hx", lineNumber : 49, className : "kha.audio2.ogg.vorbis.data.Mapping", methodName : "read"}));
			}
			if(m.chan[k].magnitude == m.chan[k].angle) {
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "Mapping.hx", lineNumber : 52, className : "kha.audio2.ogg.vorbis.data.Mapping", methodName : "read"}));
			}
		}
	} else {
		m.couplingSteps = 0;
	}
	var tmp8;
	if(decodeState.validBits < 0) {
		tmp8 = 0;
	} else if(decodeState.validBits < 2) {
		if(decodeState.validBits == 0) {
			decodeState.acc = 0;
		}
		while(true) {
			if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
				decodeState.validBits = -1;
				break;
			} else {
				decodeState.bytesInSeg--;
				decodeState.inputPosition += 1;
				decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
				decodeState.validBits += 8;
			}
			if(!(decodeState.validBits < 2)) {
				break;
			}
		}
		if(decodeState.validBits < 0) {
			tmp8 = 0;
		} else {
			var z14 = decodeState.acc & 3;
			decodeState.acc = decodeState.acc >>> 2;
			decodeState.validBits -= 2;
			tmp8 = z14;
		}
	} else {
		var z15 = decodeState.acc & 3;
		decodeState.acc = decodeState.acc >>> 2;
		decodeState.validBits -= 2;
		tmp8 = z15;
	}
	if(tmp8 != 0) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "Mapping.hx", lineNumber : 61, className : "kha.audio2.ogg.vorbis.data.Mapping", methodName : "read"}));
	}
	if(m.submaps > 1) {
		var _g12 = 0;
		var _g3 = channels;
		while(_g12 < _g3) {
			var j1 = _g12++;
			var tmp9 = m.chan[j1];
			var tmp10;
			if(decodeState.validBits < 0) {
				tmp10 = 0;
			} else if(decodeState.validBits < 4) {
				if(decodeState.validBits == 0) {
					decodeState.acc = 0;
				}
				while(true) {
					if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
						decodeState.validBits = -1;
						break;
					} else {
						decodeState.bytesInSeg--;
						decodeState.inputPosition += 1;
						decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
						decodeState.validBits += 8;
					}
					if(!(decodeState.validBits < 4)) {
						break;
					}
				}
				if(decodeState.validBits < 0) {
					tmp10 = 0;
				} else {
					var z16 = decodeState.acc & 15;
					decodeState.acc = decodeState.acc >>> 4;
					decodeState.validBits -= 4;
					tmp10 = z16;
				}
			} else {
				var z17 = decodeState.acc & 15;
				decodeState.acc = decodeState.acc >>> 4;
				decodeState.validBits -= 4;
				tmp10 = z17;
			}
			tmp9.mux = tmp10;
			if(m.chan[j1].mux >= m.submaps) {
				throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "Mapping.hx", lineNumber : 67, className : "kha.audio2.ogg.vorbis.data.Mapping", methodName : "read"}));
			}
		}
	} else {
		var _g13 = 0;
		var _g4 = channels;
		while(_g13 < _g4) {
			var j2 = _g13++;
			m.chan[j2].mux = 0;
		}
	}
	var length = m.submaps;
	var this2 = new Array(length);
	m.submapFloor = this2;
	var length1 = m.submaps;
	var this3 = new Array(length1);
	m.submapResidue = this3;
	var _g14 = 0;
	var _g5 = m.submaps;
	while(_g14 < _g5) {
		var j3 = _g14++;
		if(decodeState.validBits >= 0) {
			if(decodeState.validBits < 8) {
				if(decodeState.validBits == 0) {
					decodeState.acc = 0;
				}
				while(true) {
					if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
						decodeState.validBits = -1;
						break;
					} else {
						decodeState.bytesInSeg--;
						decodeState.inputPosition += 1;
						decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
						decodeState.validBits += 8;
					}
					if(!(decodeState.validBits < 8)) {
						break;
					}
				}
				if(decodeState.validBits >= 0) {
					var z18 = decodeState.acc & 255;
					decodeState.acc = decodeState.acc >>> 8;
					decodeState.validBits -= 8;
				}
			} else {
				var z19 = decodeState.acc & 255;
				decodeState.acc = decodeState.acc >>> 8;
				decodeState.validBits -= 8;
			}
		}
		var this4 = m.submapFloor;
		var val;
		if(decodeState.validBits < 0) {
			val = 0;
		} else if(decodeState.validBits < 8) {
			if(decodeState.validBits == 0) {
				decodeState.acc = 0;
			}
			while(true) {
				if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
					decodeState.validBits = -1;
					break;
				} else {
					decodeState.bytesInSeg--;
					decodeState.inputPosition += 1;
					decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
					decodeState.validBits += 8;
				}
				if(!(decodeState.validBits < 8)) {
					break;
				}
			}
			if(decodeState.validBits < 0) {
				val = 0;
			} else {
				var z20 = decodeState.acc & 255;
				decodeState.acc = decodeState.acc >>> 8;
				decodeState.validBits -= 8;
				val = z20;
			}
		} else {
			var z21 = decodeState.acc & 255;
			decodeState.acc = decodeState.acc >>> 8;
			decodeState.validBits -= 8;
			val = z21;
		}
		this4[j3] = val;
		var this5 = m.submapResidue;
		var val1;
		if(decodeState.validBits < 0) {
			val1 = 0;
		} else if(decodeState.validBits < 8) {
			if(decodeState.validBits == 0) {
				decodeState.acc = 0;
			}
			while(true) {
				if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
					decodeState.validBits = -1;
					break;
				} else {
					decodeState.bytesInSeg--;
					decodeState.inputPosition += 1;
					decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
					decodeState.validBits += 8;
				}
				if(!(decodeState.validBits < 8)) {
					break;
				}
			}
			if(decodeState.validBits < 0) {
				val1 = 0;
			} else {
				var z22 = decodeState.acc & 255;
				decodeState.acc = decodeState.acc >>> 8;
				decodeState.validBits -= 8;
				val1 = z22;
			}
		} else {
			var z23 = decodeState.acc & 255;
			decodeState.acc = decodeState.acc >>> 8;
			decodeState.validBits -= 8;
			val1 = z23;
		}
		this5[j3] = val1;
	}
	return m;
};
kha_audio2_ogg_vorbis_data_Mapping.prototype = {
	doFloor: function(floors,i,n,target,finalY,step2Flag) {
		var n2 = n >> 1;
		var s = this.chan[i].mux;
		var floor;
		var floor1 = floors[this.submapFloor[s]];
		if(floor1.type == 0) {
			throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_STREAM,null,{ fileName : "Mapping.hx", lineNumber : 94, className : "kha.audio2.ogg.vorbis.data.Mapping", methodName : "doFloor"}));
		} else {
			var g = floor1.floor1;
			var lx = 0;
			var ly = finalY[0] * g.floor1Multiplier;
			var _g1 = 1;
			var _g = g.values;
			while(_g1 < _g) {
				var q = _g1++;
				var j = g.sortedOrder[q];
				if(finalY[j] >= 0) {
					var hy = finalY[j] * g.floor1Multiplier;
					var hx = g.xlist[j];
					kha_audio2_ogg_vorbis_VorbisTools.drawLine(target,lx,ly,hx,hy,n2);
					lx = hx;
					ly = hy;
				}
			}
			if(lx < n2) {
				var _g11 = lx;
				var _g2 = n2;
				while(_g11 < _g2) {
					var j1 = _g11++;
					var _g21 = j1;
					var _g3 = target;
					_g3[_g21] = _g3[_g21] * kha_audio2_ogg_vorbis_VorbisTools.INVERSE_DB_TABLE[ly];
				}
			}
		}
	}
	,__class__: kha_audio2_ogg_vorbis_data_Mapping
};
var kha_audio2_ogg_vorbis_data_MappingChannel = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.MappingChannel"] = kha_audio2_ogg_vorbis_data_MappingChannel;
kha_audio2_ogg_vorbis_data_MappingChannel.__name__ = ["kha","audio2","ogg","vorbis","data","MappingChannel"];
kha_audio2_ogg_vorbis_data_MappingChannel.prototype = {
	__class__: kha_audio2_ogg_vorbis_data_MappingChannel
};
var kha_audio2_ogg_vorbis_data_Mode = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.Mode"] = kha_audio2_ogg_vorbis_data_Mode;
kha_audio2_ogg_vorbis_data_Mode.__name__ = ["kha","audio2","ogg","vorbis","data","Mode"];
kha_audio2_ogg_vorbis_data_Mode.read = function(decodeState) {
	var m = new kha_audio2_ogg_vorbis_data_Mode();
	var tmp;
	if(decodeState.validBits < 0) {
		tmp = 0;
	} else if(decodeState.validBits < 1) {
		if(decodeState.validBits == 0) {
			decodeState.acc = 0;
		}
		while(true) {
			if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
				decodeState.validBits = -1;
				break;
			} else {
				decodeState.bytesInSeg--;
				decodeState.inputPosition += 1;
				decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
				decodeState.validBits += 8;
			}
			if(!(decodeState.validBits < 1)) {
				break;
			}
		}
		if(decodeState.validBits < 0) {
			tmp = 0;
		} else {
			var z = decodeState.acc & 1;
			decodeState.acc = decodeState.acc >>> 1;
			decodeState.validBits -= 1;
			tmp = z;
		}
	} else {
		var z1 = decodeState.acc & 1;
		decodeState.acc = decodeState.acc >>> 1;
		decodeState.validBits -= 1;
		tmp = z1;
	}
	m.blockflag = tmp != 0;
	var tmp1;
	if(decodeState.validBits < 0) {
		tmp1 = 0;
	} else if(decodeState.validBits < 16) {
		if(decodeState.validBits == 0) {
			decodeState.acc = 0;
		}
		while(true) {
			if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
				decodeState.validBits = -1;
				break;
			} else {
				decodeState.bytesInSeg--;
				decodeState.inputPosition += 1;
				decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
				decodeState.validBits += 8;
			}
			if(!(decodeState.validBits < 16)) {
				break;
			}
		}
		if(decodeState.validBits < 0) {
			tmp1 = 0;
		} else {
			var z2 = decodeState.acc & 65535;
			decodeState.acc = decodeState.acc >>> 16;
			decodeState.validBits -= 16;
			tmp1 = z2;
		}
	} else {
		var z3 = decodeState.acc & 65535;
		decodeState.acc = decodeState.acc >>> 16;
		decodeState.validBits -= 16;
		tmp1 = z3;
	}
	m.windowtype = tmp1;
	var tmp2;
	if(decodeState.validBits < 0) {
		tmp2 = 0;
	} else if(decodeState.validBits < 16) {
		if(decodeState.validBits == 0) {
			decodeState.acc = 0;
		}
		while(true) {
			if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
				decodeState.validBits = -1;
				break;
			} else {
				decodeState.bytesInSeg--;
				decodeState.inputPosition += 1;
				decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
				decodeState.validBits += 8;
			}
			if(!(decodeState.validBits < 16)) {
				break;
			}
		}
		if(decodeState.validBits < 0) {
			tmp2 = 0;
		} else {
			var z4 = decodeState.acc & 65535;
			decodeState.acc = decodeState.acc >>> 16;
			decodeState.validBits -= 16;
			tmp2 = z4;
		}
	} else {
		var z5 = decodeState.acc & 65535;
		decodeState.acc = decodeState.acc >>> 16;
		decodeState.validBits -= 16;
		tmp2 = z5;
	}
	m.transformtype = tmp2;
	var tmp3;
	if(decodeState.validBits < 0) {
		tmp3 = 0;
	} else if(decodeState.validBits < 8) {
		if(decodeState.validBits == 0) {
			decodeState.acc = 0;
		}
		while(true) {
			if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
				decodeState.validBits = -1;
				break;
			} else {
				decodeState.bytesInSeg--;
				decodeState.inputPosition += 1;
				decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
				decodeState.validBits += 8;
			}
			if(!(decodeState.validBits < 8)) {
				break;
			}
		}
		if(decodeState.validBits < 0) {
			tmp3 = 0;
		} else {
			var z6 = decodeState.acc & 255;
			decodeState.acc = decodeState.acc >>> 8;
			decodeState.validBits -= 8;
			tmp3 = z6;
		}
	} else {
		var z7 = decodeState.acc & 255;
		decodeState.acc = decodeState.acc >>> 8;
		decodeState.validBits -= 8;
		tmp3 = z7;
	}
	m.mapping = tmp3;
	if(m.windowtype != 0) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "Mode.hx", lineNumber : 22, className : "kha.audio2.ogg.vorbis.data.Mode", methodName : "read"}));
	}
	if(m.transformtype != 0) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "Mode.hx", lineNumber : 25, className : "kha.audio2.ogg.vorbis.data.Mode", methodName : "read"}));
	}
	return m;
};
kha_audio2_ogg_vorbis_data_Mode.prototype = {
	__class__: kha_audio2_ogg_vorbis_data_Mode
};
var kha_audio2_ogg_vorbis_data_Page = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.Page"] = kha_audio2_ogg_vorbis_data_Page;
kha_audio2_ogg_vorbis_data_Page.__name__ = ["kha","audio2","ogg","vorbis","data","Page"];
kha_audio2_ogg_vorbis_data_Page.prototype = {
	clone: function() {
		var page = new kha_audio2_ogg_vorbis_data_Page();
		page.flag = this.flag;
		return page;
	}
	,start: function(decodeState) {
		var tmp;
		var tmp1;
		var tmp2;
		decodeState.inputPosition += 1;
		if(decodeState.input.readByte() == 79) {
			decodeState.inputPosition += 1;
			tmp2 = decodeState.input.readByte() != 103;
		} else {
			tmp2 = true;
		}
		if(!tmp2) {
			decodeState.inputPosition += 1;
			tmp1 = decodeState.input.readByte() != 103;
		} else {
			tmp1 = true;
		}
		if(!tmp1) {
			decodeState.inputPosition += 1;
			tmp = decodeState.input.readByte() != 83;
		} else {
			tmp = true;
		}
		if(tmp) {
			throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.MISSING_CAPTURE_PATTERN,null,{ fileName : "VorbisDecodeState.hx", lineNumber : 323, className : "kha.audio2.ogg.vorbis.VorbisDecodeState", methodName : "capturePattern"}));
		}
		this.startWithoutCapturePattern(decodeState);
	}
	,startWithoutCapturePattern: function(decodeState) {
		decodeState.inputPosition += 1;
		var version = decodeState.input.readByte();
		if(version != 0) {
			throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_STREAM_STRUCTURE_VERSION,"" + version,{ fileName : "Page.hx", lineNumber : 34, className : "kha.audio2.ogg.vorbis.data.Page", methodName : "startWithoutCapturePattern"}));
		}
		decodeState.inputPosition += 1;
		this.flag = decodeState.input.readByte();
		decodeState.inputPosition += 4;
		var loc0 = decodeState.input.readInt32();
		decodeState.inputPosition += 4;
		var loc1 = decodeState.input.readInt32();
		decodeState.inputPosition += 4;
		decodeState.input.readInt32();
		decodeState.inputPosition += 4;
		decodeState.input.readInt32();
		decodeState.inputPosition += 4;
		decodeState.input.readInt32();
		decodeState.setup(loc0,loc1);
	}
	,__class__: kha_audio2_ogg_vorbis_data_Page
};
var kha_audio2_ogg_vorbis_data_PageFlag = function() { };
$hxClasses["kha.audio2.ogg.vorbis.data.PageFlag"] = kha_audio2_ogg_vorbis_data_PageFlag;
kha_audio2_ogg_vorbis_data_PageFlag.__name__ = ["kha","audio2","ogg","vorbis","data","PageFlag"];
var kha_audio2_ogg_vorbis_data_ProbedPage = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.ProbedPage"] = kha_audio2_ogg_vorbis_data_ProbedPage;
kha_audio2_ogg_vorbis_data_ProbedPage.__name__ = ["kha","audio2","ogg","vorbis","data","ProbedPage"];
kha_audio2_ogg_vorbis_data_ProbedPage.prototype = {
	__class__: kha_audio2_ogg_vorbis_data_ProbedPage
};
var kha_audio2_ogg_vorbis_data_ReaderError = function(type,message,posInfos) {
	if(message == null) {
		message = "";
	}
	this.type = type;
	this.message = message;
	this.posInfos = posInfos;
};
$hxClasses["kha.audio2.ogg.vorbis.data.ReaderError"] = kha_audio2_ogg_vorbis_data_ReaderError;
kha_audio2_ogg_vorbis_data_ReaderError.__name__ = ["kha","audio2","ogg","vorbis","data","ReaderError"];
kha_audio2_ogg_vorbis_data_ReaderError.prototype = {
	__class__: kha_audio2_ogg_vorbis_data_ReaderError
};
var kha_audio2_ogg_vorbis_data_ReaderErrorType = $hxClasses["kha.audio2.ogg.vorbis.data.ReaderErrorType"] = { __ename__ : true, __constructs__ : ["NEED_MORE_DATA","INVALID_API_MIXING","OUTOFMEM","FEATURE_NOT_SUPPORTED","TOO_MANY_CHANNELS","FILE_OPEN_FAILURE","SEEK_WITHOUT_LENGTH","UNEXPECTED_EOF","SEEK_INVALID","INVALID_SETUP","INVALID_STREAM","MISSING_CAPTURE_PATTERN","INVALID_STREAM_STRUCTURE_VERSION","CONTINUED_PACKET_FLAG_INVALID","INCORRECT_STREAM_SERIAL_NUMBER","INVALID_FIRST_PAGE","BAD_PACKET_TYPE","CANT_FIND_LAST_PAGE","SEEK_FAILED","OTHER"] };
kha_audio2_ogg_vorbis_data_ReaderErrorType.NEED_MORE_DATA = ["NEED_MORE_DATA",0];
kha_audio2_ogg_vorbis_data_ReaderErrorType.NEED_MORE_DATA.toString = $estr;
kha_audio2_ogg_vorbis_data_ReaderErrorType.NEED_MORE_DATA.__enum__ = kha_audio2_ogg_vorbis_data_ReaderErrorType;
kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_API_MIXING = ["INVALID_API_MIXING",1];
kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_API_MIXING.toString = $estr;
kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_API_MIXING.__enum__ = kha_audio2_ogg_vorbis_data_ReaderErrorType;
kha_audio2_ogg_vorbis_data_ReaderErrorType.OUTOFMEM = ["OUTOFMEM",2];
kha_audio2_ogg_vorbis_data_ReaderErrorType.OUTOFMEM.toString = $estr;
kha_audio2_ogg_vorbis_data_ReaderErrorType.OUTOFMEM.__enum__ = kha_audio2_ogg_vorbis_data_ReaderErrorType;
kha_audio2_ogg_vorbis_data_ReaderErrorType.FEATURE_NOT_SUPPORTED = ["FEATURE_NOT_SUPPORTED",3];
kha_audio2_ogg_vorbis_data_ReaderErrorType.FEATURE_NOT_SUPPORTED.toString = $estr;
kha_audio2_ogg_vorbis_data_ReaderErrorType.FEATURE_NOT_SUPPORTED.__enum__ = kha_audio2_ogg_vorbis_data_ReaderErrorType;
kha_audio2_ogg_vorbis_data_ReaderErrorType.TOO_MANY_CHANNELS = ["TOO_MANY_CHANNELS",4];
kha_audio2_ogg_vorbis_data_ReaderErrorType.TOO_MANY_CHANNELS.toString = $estr;
kha_audio2_ogg_vorbis_data_ReaderErrorType.TOO_MANY_CHANNELS.__enum__ = kha_audio2_ogg_vorbis_data_ReaderErrorType;
kha_audio2_ogg_vorbis_data_ReaderErrorType.FILE_OPEN_FAILURE = ["FILE_OPEN_FAILURE",5];
kha_audio2_ogg_vorbis_data_ReaderErrorType.FILE_OPEN_FAILURE.toString = $estr;
kha_audio2_ogg_vorbis_data_ReaderErrorType.FILE_OPEN_FAILURE.__enum__ = kha_audio2_ogg_vorbis_data_ReaderErrorType;
kha_audio2_ogg_vorbis_data_ReaderErrorType.SEEK_WITHOUT_LENGTH = ["SEEK_WITHOUT_LENGTH",6];
kha_audio2_ogg_vorbis_data_ReaderErrorType.SEEK_WITHOUT_LENGTH.toString = $estr;
kha_audio2_ogg_vorbis_data_ReaderErrorType.SEEK_WITHOUT_LENGTH.__enum__ = kha_audio2_ogg_vorbis_data_ReaderErrorType;
kha_audio2_ogg_vorbis_data_ReaderErrorType.UNEXPECTED_EOF = ["UNEXPECTED_EOF",7];
kha_audio2_ogg_vorbis_data_ReaderErrorType.UNEXPECTED_EOF.toString = $estr;
kha_audio2_ogg_vorbis_data_ReaderErrorType.UNEXPECTED_EOF.__enum__ = kha_audio2_ogg_vorbis_data_ReaderErrorType;
kha_audio2_ogg_vorbis_data_ReaderErrorType.SEEK_INVALID = ["SEEK_INVALID",8];
kha_audio2_ogg_vorbis_data_ReaderErrorType.SEEK_INVALID.toString = $estr;
kha_audio2_ogg_vorbis_data_ReaderErrorType.SEEK_INVALID.__enum__ = kha_audio2_ogg_vorbis_data_ReaderErrorType;
kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP = ["INVALID_SETUP",9];
kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP.toString = $estr;
kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP.__enum__ = kha_audio2_ogg_vorbis_data_ReaderErrorType;
kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_STREAM = ["INVALID_STREAM",10];
kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_STREAM.toString = $estr;
kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_STREAM.__enum__ = kha_audio2_ogg_vorbis_data_ReaderErrorType;
kha_audio2_ogg_vorbis_data_ReaderErrorType.MISSING_CAPTURE_PATTERN = ["MISSING_CAPTURE_PATTERN",11];
kha_audio2_ogg_vorbis_data_ReaderErrorType.MISSING_CAPTURE_PATTERN.toString = $estr;
kha_audio2_ogg_vorbis_data_ReaderErrorType.MISSING_CAPTURE_PATTERN.__enum__ = kha_audio2_ogg_vorbis_data_ReaderErrorType;
kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_STREAM_STRUCTURE_VERSION = ["INVALID_STREAM_STRUCTURE_VERSION",12];
kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_STREAM_STRUCTURE_VERSION.toString = $estr;
kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_STREAM_STRUCTURE_VERSION.__enum__ = kha_audio2_ogg_vorbis_data_ReaderErrorType;
kha_audio2_ogg_vorbis_data_ReaderErrorType.CONTINUED_PACKET_FLAG_INVALID = ["CONTINUED_PACKET_FLAG_INVALID",13];
kha_audio2_ogg_vorbis_data_ReaderErrorType.CONTINUED_PACKET_FLAG_INVALID.toString = $estr;
kha_audio2_ogg_vorbis_data_ReaderErrorType.CONTINUED_PACKET_FLAG_INVALID.__enum__ = kha_audio2_ogg_vorbis_data_ReaderErrorType;
kha_audio2_ogg_vorbis_data_ReaderErrorType.INCORRECT_STREAM_SERIAL_NUMBER = ["INCORRECT_STREAM_SERIAL_NUMBER",14];
kha_audio2_ogg_vorbis_data_ReaderErrorType.INCORRECT_STREAM_SERIAL_NUMBER.toString = $estr;
kha_audio2_ogg_vorbis_data_ReaderErrorType.INCORRECT_STREAM_SERIAL_NUMBER.__enum__ = kha_audio2_ogg_vorbis_data_ReaderErrorType;
kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE = ["INVALID_FIRST_PAGE",15];
kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE.toString = $estr;
kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_FIRST_PAGE.__enum__ = kha_audio2_ogg_vorbis_data_ReaderErrorType;
kha_audio2_ogg_vorbis_data_ReaderErrorType.BAD_PACKET_TYPE = ["BAD_PACKET_TYPE",16];
kha_audio2_ogg_vorbis_data_ReaderErrorType.BAD_PACKET_TYPE.toString = $estr;
kha_audio2_ogg_vorbis_data_ReaderErrorType.BAD_PACKET_TYPE.__enum__ = kha_audio2_ogg_vorbis_data_ReaderErrorType;
kha_audio2_ogg_vorbis_data_ReaderErrorType.CANT_FIND_LAST_PAGE = ["CANT_FIND_LAST_PAGE",17];
kha_audio2_ogg_vorbis_data_ReaderErrorType.CANT_FIND_LAST_PAGE.toString = $estr;
kha_audio2_ogg_vorbis_data_ReaderErrorType.CANT_FIND_LAST_PAGE.__enum__ = kha_audio2_ogg_vorbis_data_ReaderErrorType;
kha_audio2_ogg_vorbis_data_ReaderErrorType.SEEK_FAILED = ["SEEK_FAILED",18];
kha_audio2_ogg_vorbis_data_ReaderErrorType.SEEK_FAILED.toString = $estr;
kha_audio2_ogg_vorbis_data_ReaderErrorType.SEEK_FAILED.__enum__ = kha_audio2_ogg_vorbis_data_ReaderErrorType;
kha_audio2_ogg_vorbis_data_ReaderErrorType.OTHER = ["OTHER",19];
kha_audio2_ogg_vorbis_data_ReaderErrorType.OTHER.toString = $estr;
kha_audio2_ogg_vorbis_data_ReaderErrorType.OTHER.__enum__ = kha_audio2_ogg_vorbis_data_ReaderErrorType;
var kha_audio2_ogg_vorbis_data_Residue = function() {
};
$hxClasses["kha.audio2.ogg.vorbis.data.Residue"] = kha_audio2_ogg_vorbis_data_Residue;
kha_audio2_ogg_vorbis_data_Residue.__name__ = ["kha","audio2","ogg","vorbis","data","Residue"];
kha_audio2_ogg_vorbis_data_Residue.read = function(decodeState,codebooks) {
	var r = new kha_audio2_ogg_vorbis_data_Residue();
	var tmp;
	if(decodeState.validBits < 0) {
		tmp = 0;
	} else if(decodeState.validBits < 16) {
		if(decodeState.validBits == 0) {
			decodeState.acc = 0;
		}
		while(true) {
			if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
				decodeState.validBits = -1;
				break;
			} else {
				decodeState.bytesInSeg--;
				decodeState.inputPosition += 1;
				decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
				decodeState.validBits += 8;
			}
			if(!(decodeState.validBits < 16)) {
				break;
			}
		}
		if(decodeState.validBits < 0) {
			tmp = 0;
		} else {
			var z = decodeState.acc & 65535;
			decodeState.acc = decodeState.acc >>> 16;
			decodeState.validBits -= 16;
			tmp = z;
		}
	} else {
		var z1 = decodeState.acc & 65535;
		decodeState.acc = decodeState.acc >>> 16;
		decodeState.validBits -= 16;
		tmp = z1;
	}
	r.type = tmp;
	if(r.type > 2) {
		throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "Residue.hx", lineNumber : 29, className : "kha.audio2.ogg.vorbis.data.Residue", methodName : "read"}));
	}
	var this1 = new Array(64);
	var residueCascade = this1;
	var tmp1;
	if(decodeState.validBits < 0) {
		tmp1 = 0;
	} else if(decodeState.validBits < 24) {
		if(decodeState.validBits == 0) {
			decodeState.acc = 0;
		}
		while(true) {
			if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
				decodeState.validBits = -1;
				break;
			} else {
				decodeState.bytesInSeg--;
				decodeState.inputPosition += 1;
				decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
				decodeState.validBits += 8;
			}
			if(!(decodeState.validBits < 24)) {
				break;
			}
		}
		if(decodeState.validBits < 0) {
			tmp1 = 0;
		} else {
			var z2 = decodeState.acc & 16777215;
			decodeState.acc = decodeState.acc >>> 24;
			decodeState.validBits -= 24;
			tmp1 = z2;
		}
	} else {
		var z3 = decodeState.acc & 16777215;
		decodeState.acc = decodeState.acc >>> 24;
		decodeState.validBits -= 24;
		tmp1 = z3;
	}
	r.begin = tmp1;
	var tmp2;
	if(decodeState.validBits < 0) {
		tmp2 = 0;
	} else if(decodeState.validBits < 24) {
		if(decodeState.validBits == 0) {
			decodeState.acc = 0;
		}
		while(true) {
			if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
				decodeState.validBits = -1;
				break;
			} else {
				decodeState.bytesInSeg--;
				decodeState.inputPosition += 1;
				decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
				decodeState.validBits += 8;
			}
			if(!(decodeState.validBits < 24)) {
				break;
			}
		}
		if(decodeState.validBits < 0) {
			tmp2 = 0;
		} else {
			var z4 = decodeState.acc & 16777215;
			decodeState.acc = decodeState.acc >>> 24;
			decodeState.validBits -= 24;
			tmp2 = z4;
		}
	} else {
		var z5 = decodeState.acc & 16777215;
		decodeState.acc = decodeState.acc >>> 24;
		decodeState.validBits -= 24;
		tmp2 = z5;
	}
	r.end = tmp2;
	var tmp3;
	if(decodeState.validBits < 0) {
		tmp3 = 0;
	} else if(decodeState.validBits < 24) {
		if(decodeState.validBits == 0) {
			decodeState.acc = 0;
		}
		while(true) {
			if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
				decodeState.validBits = -1;
				break;
			} else {
				decodeState.bytesInSeg--;
				decodeState.inputPosition += 1;
				decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
				decodeState.validBits += 8;
			}
			if(!(decodeState.validBits < 24)) {
				break;
			}
		}
		if(decodeState.validBits < 0) {
			tmp3 = 0;
		} else {
			var z6 = decodeState.acc & 16777215;
			decodeState.acc = decodeState.acc >>> 24;
			decodeState.validBits -= 24;
			tmp3 = z6;
		}
	} else {
		var z7 = decodeState.acc & 16777215;
		decodeState.acc = decodeState.acc >>> 24;
		decodeState.validBits -= 24;
		tmp3 = z7;
	}
	r.partSize = tmp3 + 1;
	var classifications;
	if(decodeState.validBits < 0) {
		classifications = 0;
	} else if(decodeState.validBits < 6) {
		if(decodeState.validBits == 0) {
			decodeState.acc = 0;
		}
		while(true) {
			if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
				decodeState.validBits = -1;
				break;
			} else {
				decodeState.bytesInSeg--;
				decodeState.inputPosition += 1;
				decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
				decodeState.validBits += 8;
			}
			if(!(decodeState.validBits < 6)) {
				break;
			}
		}
		if(decodeState.validBits < 0) {
			classifications = 0;
		} else {
			var z8 = decodeState.acc & 63;
			decodeState.acc = decodeState.acc >>> 6;
			decodeState.validBits -= 6;
			classifications = z8;
		}
	} else {
		var z9 = decodeState.acc & 63;
		decodeState.acc = decodeState.acc >>> 6;
		decodeState.validBits -= 6;
		classifications = z9;
	}
	var classifications1 = r.classifications = classifications + 1;
	var tmp4;
	if(decodeState.validBits < 0) {
		tmp4 = 0;
	} else if(decodeState.validBits < 8) {
		if(decodeState.validBits == 0) {
			decodeState.acc = 0;
		}
		while(true) {
			if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
				decodeState.validBits = -1;
				break;
			} else {
				decodeState.bytesInSeg--;
				decodeState.inputPosition += 1;
				decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
				decodeState.validBits += 8;
			}
			if(!(decodeState.validBits < 8)) {
				break;
			}
		}
		if(decodeState.validBits < 0) {
			tmp4 = 0;
		} else {
			var z10 = decodeState.acc & 255;
			decodeState.acc = decodeState.acc >>> 8;
			decodeState.validBits -= 8;
			tmp4 = z10;
		}
	} else {
		var z11 = decodeState.acc & 255;
		decodeState.acc = decodeState.acc >>> 8;
		decodeState.validBits -= 8;
		tmp4 = z11;
	}
	r.classbook = tmp4;
	var _g1 = 0;
	var _g = r.classifications;
	while(_g1 < _g) {
		var j = _g1++;
		var highBits = 0;
		var lowBits;
		if(decodeState.validBits < 0) {
			lowBits = 0;
		} else if(decodeState.validBits < 3) {
			if(decodeState.validBits == 0) {
				decodeState.acc = 0;
			}
			while(true) {
				if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
					decodeState.validBits = -1;
					break;
				} else {
					decodeState.bytesInSeg--;
					decodeState.inputPosition += 1;
					decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
					decodeState.validBits += 8;
				}
				if(!(decodeState.validBits < 3)) {
					break;
				}
			}
			if(decodeState.validBits < 0) {
				lowBits = 0;
			} else {
				var z12 = decodeState.acc & 7;
				decodeState.acc = decodeState.acc >>> 3;
				decodeState.validBits -= 3;
				lowBits = z12;
			}
		} else {
			var z13 = decodeState.acc & 7;
			decodeState.acc = decodeState.acc >>> 3;
			decodeState.validBits -= 3;
			lowBits = z13;
		}
		var tmp5;
		if(decodeState.validBits < 0) {
			tmp5 = 0;
		} else if(decodeState.validBits < 1) {
			if(decodeState.validBits == 0) {
				decodeState.acc = 0;
			}
			while(true) {
				if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
					decodeState.validBits = -1;
					break;
				} else {
					decodeState.bytesInSeg--;
					decodeState.inputPosition += 1;
					decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
					decodeState.validBits += 8;
				}
				if(!(decodeState.validBits < 1)) {
					break;
				}
			}
			if(decodeState.validBits < 0) {
				tmp5 = 0;
			} else {
				var z14 = decodeState.acc & 1;
				decodeState.acc = decodeState.acc >>> 1;
				decodeState.validBits -= 1;
				tmp5 = z14;
			}
		} else {
			var z15 = decodeState.acc & 1;
			decodeState.acc = decodeState.acc >>> 1;
			decodeState.validBits -= 1;
			tmp5 = z15;
		}
		if(tmp5 != 0) {
			if(decodeState.validBits < 0) {
				highBits = 0;
			} else if(decodeState.validBits < 5) {
				if(decodeState.validBits == 0) {
					decodeState.acc = 0;
				}
				while(true) {
					if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
						decodeState.validBits = -1;
						break;
					} else {
						decodeState.bytesInSeg--;
						decodeState.inputPosition += 1;
						decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
						decodeState.validBits += 8;
					}
					if(!(decodeState.validBits < 5)) {
						break;
					}
				}
				if(decodeState.validBits < 0) {
					highBits = 0;
				} else {
					var z16 = decodeState.acc & 31;
					decodeState.acc = decodeState.acc >>> 5;
					decodeState.validBits -= 5;
					highBits = z16;
				}
			} else {
				var z17 = decodeState.acc & 31;
				decodeState.acc = decodeState.acc >>> 5;
				decodeState.validBits -= 5;
				highBits = z17;
			}
		}
		residueCascade[j] = highBits * 8 + lowBits;
	}
	var length = r.classifications;
	var this2 = new Array(length);
	r.residueBooks = this2;
	var _g11 = 0;
	var _g2 = r.classifications;
	while(_g11 < _g2) {
		var j1 = _g11++;
		var this3 = r.residueBooks;
		var this4 = new Array(8);
		this3[j1] = this4;
		var _g21 = 0;
		while(_g21 < 8) {
			var k = _g21++;
			if((residueCascade[j1] & 1 << k) != 0) {
				var this5 = r.residueBooks[j1];
				var val;
				if(decodeState.validBits < 0) {
					val = 0;
				} else if(decodeState.validBits < 8) {
					if(decodeState.validBits == 0) {
						decodeState.acc = 0;
					}
					while(true) {
						if(decodeState.bytesInSeg == 0 && (decodeState.lastSeg || decodeState.next() == 0)) {
							decodeState.validBits = -1;
							break;
						} else {
							decodeState.bytesInSeg--;
							decodeState.inputPosition += 1;
							decodeState.acc = decodeState.acc + (decodeState.input.readByte() << decodeState.validBits);
							decodeState.validBits += 8;
						}
						if(!(decodeState.validBits < 8)) {
							break;
						}
					}
					if(decodeState.validBits < 0) {
						val = 0;
					} else {
						var z18 = decodeState.acc & 255;
						decodeState.acc = decodeState.acc >>> 8;
						decodeState.validBits -= 8;
						val = z18;
					}
				} else {
					var z19 = decodeState.acc & 255;
					decodeState.acc = decodeState.acc >>> 8;
					decodeState.validBits -= 8;
					val = z19;
				}
				this5[k] = val;
				if(r.residueBooks[j1][k] >= codebooks.length) {
					throw new js__$Boot_HaxeError(new kha_audio2_ogg_vorbis_data_ReaderError(kha_audio2_ogg_vorbis_data_ReaderErrorType.INVALID_SETUP,null,{ fileName : "Residue.hx", lineNumber : 55, className : "kha.audio2.ogg.vorbis.data.Residue", methodName : "read"}));
				}
			} else {
				r.residueBooks[j1][k] = -1;
			}
		}
	}
	var el = codebooks[r.classbook].entries;
	var classwords = codebooks[r.classbook].dimensions;
	var this6 = new Array(el);
	r.classdata = this6;
	var _g12 = 0;
	var _g3 = el;
	while(_g12 < _g3) {
		var j2 = _g12++;
		var temp = j2;
		var k1 = classwords;
		var this7 = r.classdata;
		var this8 = new Array(classwords);
		var cd = this7[j2] = this8;
		while(--k1 >= 0) {
			cd[k1] = temp % classifications1;
			temp = temp / classifications1 | 0;
		}
	}
	return r;
};
kha_audio2_ogg_vorbis_data_Residue.prototype = {
	decode: function(decodeState,header,residueBuffers,ch,n,doNotDecode,channelBuffers) {
		var codebooks = header.codebooks;
		var classwords = codebooks[this.classbook].dimensions;
		var nRead = this.end - this.begin;
		var partSize = this.partSize;
		var partRead = _$UInt_UInt_$Impl_$.toFloat(nRead) / _$UInt_UInt_$Impl_$.toFloat(partSize) | 0;
		var length = header.channel * partRead + 1;
		var this1 = new Array(length);
		var classifications = this1;
		var _g1 = 0;
		var _g = ch;
		while(_g1 < _g) {
			var i = _g1++;
			if(!doNotDecode[i]) {
				var buffer = residueBuffers[i];
				var _g3 = 0;
				var _g2 = buffer.length;
				while(_g3 < _g2) {
					var j = _g3++;
					buffer[j] = 0;
				}
			}
		}
		if(this.type == 2 && ch != 1) {
			var _g11 = 0;
			var _g4 = ch;
			while(_g11 < _g4) {
				var j1 = _g11++;
				if(!doNotDecode[j1]) {
					break;
				} else if(j1 == ch - 1) {
					return;
				}
			}
			var _g5 = 0;
			while(_g5 < 8) {
				var pass = _g5++;
				var pcount = 0;
				var classSet = 0;
				if(ch == 2) {
					while(pcount < partRead) {
						var z = this.begin + pcount * partSize;
						var cInter = z & 1;
						var pInter = z >>> 1;
						if(pass == 0) {
							var c = codebooks[this.classbook];
							if(decodeState.validBits < 10) {
								decodeState.prepHuffman();
							}
							var i1 = c.fastHuffman[decodeState.acc & 1023];
							var val;
							if(i1 >= 0) {
								var l = c.codewordLengths[i1];
								decodeState.acc = decodeState.acc >>> l;
								decodeState.validBits -= l;
								if(decodeState.validBits < 0) {
									decodeState.validBits = 0;
									val = -1;
								} else {
									val = i1;
								}
							} else {
								val = decodeState.decodeScalarRaw(c);
							}
							if(c.sparse) {
								val = c.sortedValues[val];
							}
							var q = val;
							if(q == -1) {
								return;
							}
							var i2 = classwords;
							while(--i2 >= 0) {
								classifications[i2 + pcount] = q % this.classifications;
								q = q / this.classifications | 0;
							}
						}
						var _g21 = 0;
						var _g12 = classwords;
						while(_g21 < _g12) {
							var i3 = _g21++;
							if(pcount >= partRead) {
								break;
							}
							var z1 = this.begin + pcount * partSize;
							var c1 = classifications[pcount];
							var b = this.residueBooks[c1][pass];
							if(b >= 0) {
								var book = codebooks[b];
								var result = book.decodeDeinterleaveRepeat(decodeState,residueBuffers,ch,cInter,pInter,n,partSize);
								if(result == null) {
									return;
								} else {
									cInter = result.cInter;
									pInter = result.pInter;
								}
							} else {
								z1 = z1 + partSize;
								cInter = z1 & 1;
								pInter = z1 >>> 1;
							}
							++pcount;
						}
					}
				} else if(ch == 1) {
					while(pcount < partRead) {
						var z2 = this.begin + pcount * partSize;
						var cInter1 = 0;
						var pInter1 = z2;
						if(pass == 0) {
							var c2 = codebooks[this.classbook];
							if(decodeState.validBits < 10) {
								decodeState.prepHuffman();
							}
							var i4 = c2.fastHuffman[decodeState.acc & 1023];
							var val1;
							if(i4 >= 0) {
								var l1 = c2.codewordLengths[i4];
								decodeState.acc = decodeState.acc >>> l1;
								decodeState.validBits -= l1;
								if(decodeState.validBits < 0) {
									decodeState.validBits = 0;
									val1 = -1;
								} else {
									val1 = i4;
								}
							} else {
								val1 = decodeState.decodeScalarRaw(c2);
							}
							if(c2.sparse) {
								val1 = c2.sortedValues[val1];
							}
							var q1 = val1;
							if(q1 == -1) {
								return;
							}
							var i5 = classwords;
							while(--i5 >= 0) {
								classifications[i5 + pcount] = q1 % this.classifications;
								q1 = q1 / this.classifications | 0;
							}
						}
						var _g22 = 0;
						var _g13 = classwords;
						while(_g22 < _g13) {
							var i6 = _g22++;
							if(pcount >= partRead) {
								break;
							}
							var z3 = this.begin + pcount * partSize;
							var b1 = this.residueBooks[classifications[pcount]][pass];
							if(b1 >= 0) {
								var book1 = codebooks[b1];
								var result1 = book1.decodeDeinterleaveRepeat(decodeState,residueBuffers,ch,cInter1,pInter1,n,partSize);
								if(result1 == null) {
									return;
								} else {
									cInter1 = result1.cInter;
									pInter1 = result1.pInter;
								}
							} else {
								z3 = z3 + partSize;
								cInter1 = 0;
								pInter1 = z3;
							}
							++pcount;
						}
					}
				} else {
					while(pcount < partRead) {
						var z4 = this.begin + pcount * partSize;
						var cInter2 = _$UInt_UInt_$Impl_$.toFloat(z4) % _$UInt_UInt_$Impl_$.toFloat(ch) | 0;
						var pInter2 = _$UInt_UInt_$Impl_$.toFloat(z4) / _$UInt_UInt_$Impl_$.toFloat(ch) | 0;
						if(pass == 0) {
							var c3 = codebooks[this.classbook];
							if(decodeState.validBits < 10) {
								decodeState.prepHuffman();
							}
							var i7 = c3.fastHuffman[decodeState.acc & 1023];
							var val2;
							if(i7 >= 0) {
								var l2 = c3.codewordLengths[i7];
								decodeState.acc = decodeState.acc >>> l2;
								decodeState.validBits -= l2;
								if(decodeState.validBits < 0) {
									decodeState.validBits = 0;
									val2 = -1;
								} else {
									val2 = i7;
								}
							} else {
								val2 = decodeState.decodeScalarRaw(c3);
							}
							if(c3.sparse) {
								val2 = c3.sortedValues[val2];
							}
							var q2 = val2;
							if(q2 == -1) {
								return;
							}
							var i8 = classwords;
							while(--i8 >= 0) {
								classifications[i8 + pcount] = q2 % this.classifications;
								q2 = q2 / this.classifications | 0;
							}
						}
						var _g23 = 0;
						var _g14 = classwords;
						while(_g23 < _g14) {
							var i9 = _g23++;
							if(pcount >= partRead) {
								break;
							}
							var z5 = this.begin + pcount * partSize;
							var b2 = this.residueBooks[classifications[pcount]][pass];
							if(b2 >= 0) {
								var book2 = codebooks[b2];
								var result2 = book2.decodeDeinterleaveRepeat(decodeState,residueBuffers,ch,cInter2,pInter2,n,partSize);
								if(result2 == null) {
									return;
								} else {
									cInter2 = result2.cInter;
									pInter2 = result2.pInter;
								}
							} else {
								z5 = z5 + partSize;
								cInter2 = _$UInt_UInt_$Impl_$.toFloat(z5) % _$UInt_UInt_$Impl_$.toFloat(ch) | 0;
								pInter2 = _$UInt_UInt_$Impl_$.toFloat(z5) / _$UInt_UInt_$Impl_$.toFloat(ch) | 0;
							}
							++pcount;
						}
					}
				}
			}
			return;
		}
		var _g6 = 0;
		while(_g6 < 8) {
			var pass1 = _g6++;
			var pcount1 = 0;
			var classSet1 = 0;
			while(pcount1 < partRead) {
				if(pass1 == 0) {
					var _g24 = 0;
					var _g15 = ch;
					while(_g24 < _g15) {
						var j2 = _g24++;
						if(!doNotDecode[j2]) {
							var c4 = codebooks[this.classbook];
							if(decodeState.validBits < 10) {
								decodeState.prepHuffman();
							}
							var i10 = c4.fastHuffman[decodeState.acc & 1023];
							var val3;
							if(i10 >= 0) {
								var l3 = c4.codewordLengths[i10];
								decodeState.acc = decodeState.acc >>> l3;
								decodeState.validBits -= l3;
								if(decodeState.validBits < 0) {
									decodeState.validBits = 0;
									val3 = -1;
								} else {
									val3 = i10;
								}
							} else {
								val3 = decodeState.decodeScalarRaw(c4);
							}
							if(c4.sparse) {
								val3 = c4.sortedValues[val3];
							}
							var temp = val3;
							if(temp == -1) {
								return;
							}
							var i11 = classwords;
							while(--i11 >= 0) {
								classifications[j2 * partRead + i11 + pcount1] = temp % this.classifications;
								temp = temp / this.classifications | 0;
							}
						}
					}
				}
				var _g25 = 0;
				var _g16 = classwords;
				while(_g25 < _g16) {
					var i12 = _g25++;
					if(pcount1 >= partRead) {
						break;
					}
					var _g41 = 0;
					var _g31 = ch;
					while(_g41 < _g31) {
						var j3 = _g41++;
						if(!doNotDecode[j3]) {
							var c5 = classifications[j3 * partRead + pcount1];
							var b3 = this.residueBooks[c5][pass1];
							if(b3 >= 0) {
								var target = residueBuffers[j3];
								var offset = this.begin + pcount1 * partSize;
								var n1 = partSize;
								var book3 = codebooks[b3];
								if(!book3.residueDecode(decodeState,target,offset,n1,this.type)) {
									return;
								}
							}
						}
					}
					++pcount1;
				}
			}
		}
	}
	,__class__: kha_audio2_ogg_vorbis_data_Residue
};
var kha_audio2_ogg_vorbis_data_Setting = function() { };
$hxClasses["kha.audio2.ogg.vorbis.data.Setting"] = kha_audio2_ogg_vorbis_data_Setting;
kha_audio2_ogg_vorbis_data_Setting.__name__ = ["kha","audio2","ogg","vorbis","data","Setting"];
var kha_graphics1_Graphics = function() { };
$hxClasses["kha.graphics1.Graphics"] = kha_graphics1_Graphics;
kha_graphics1_Graphics.__name__ = ["kha","graphics1","Graphics"];
kha_graphics1_Graphics.prototype = {
	__class__: kha_graphics1_Graphics
};
var kha_graphics2_Graphics = function() {
	this.transformations = [];
	this.transformations.push(new kha_math_FastMatrix3(1,0,0,0,1,0,0,0,1));
	this.opacities = [];
	this.opacities.push(1);
	this.myFontSize = 12;
	this.myFontGlyphs = [];
	var _g = 32;
	while(_g < 256) {
		var i = _g++;
		this.myFontGlyphs.push(i);
	}
	this.pipe = null;
};
$hxClasses["kha.graphics2.Graphics"] = kha_graphics2_Graphics;
kha_graphics2_Graphics.__name__ = ["kha","graphics2","Graphics"];
kha_graphics2_Graphics.prototype = {
	begin: function(clear,clearColor) {
		if(clear == null) {
			clear = true;
		}
	}
	,end: function() {
	}
	,flush: function() {
	}
	,clear: function(color) {
	}
	,drawImage: function(img,x,y) {
		this.drawSubImage(img,x,y,0,0,img.get_width(),img.get_height());
	}
	,drawSubImage: function(img,x,y,sx,sy,sw,sh) {
		this.drawScaledSubImage(img,sx,sy,sw,sh,x,y,sw,sh);
	}
	,drawScaledImage: function(img,dx,dy,dw,dh) {
		this.drawScaledSubImage(img,0,0,img.get_width(),img.get_height(),dx,dy,dw,dh);
	}
	,drawScaledSubImage: function(image,sx,sy,sw,sh,dx,dy,dw,dh) {
	}
	,drawRect: function(x,y,width,height,strength) {
		if(strength == null) {
			strength = 1.0;
		}
	}
	,fillRect: function(x,y,width,height) {
	}
	,drawString: function(text,x,y) {
	}
	,drawLine: function(x1,y1,x2,y2,strength) {
		if(strength == null) {
			strength = 1.0;
		}
	}
	,drawVideo: function(video,x,y,width,height) {
	}
	,fillTriangle: function(x1,y1,x2,y2,x3,y3) {
	}
	,get_imageScaleQuality: function() {
		return kha_graphics2_ImageScaleQuality.Low;
	}
	,set_imageScaleQuality: function(value) {
		return kha_graphics2_ImageScaleQuality.High;
	}
	,get_mipmapScaleQuality: function() {
		return kha_graphics2_ImageScaleQuality.Low;
	}
	,set_mipmapScaleQuality: function(value) {
		return kha_graphics2_ImageScaleQuality.High;
	}
	,get_color: function() {
		return -16777216;
	}
	,set_color: function(color) {
		return -16777216;
	}
	,get_font: function() {
		return null;
	}
	,set_font: function(font) {
		return null;
	}
	,get_fontSize: function() {
		return this.myFontSize;
	}
	,set_fontSize: function(value) {
		return this.myFontSize = value;
	}
	,get_fontGlyphs: function() {
		return this.myFontGlyphs;
	}
	,set_fontGlyphs: function(value) {
		return this.myFontGlyphs = value;
	}
	,pushTransformation: function(transformation) {
		var trans = new kha_math_FastMatrix3(1,0,0,0,1,0,0,0,1);
		trans._00 = transformation._00;
		trans._10 = transformation._10;
		trans._20 = transformation._20;
		trans._01 = transformation._01;
		trans._11 = transformation._11;
		trans._21 = transformation._21;
		trans._02 = transformation._02;
		trans._12 = transformation._12;
		trans._22 = transformation._22;
		this.setTransformation(trans);
		this.transformations.push(trans);
	}
	,popTransformation: function() {
		var ret = this.transformations.pop();
		this.setTransformation(this.transformations[this.transformations.length - 1]);
		return ret;
	}
	,get_transformation: function() {
		return this.transformations[this.transformations.length - 1];
	}
	,set_transformation: function(transformation) {
		this.setTransformation(transformation);
		var _this = this.transformations[this.transformations.length - 1];
		_this._00 = transformation._00;
		_this._10 = transformation._10;
		_this._20 = transformation._20;
		_this._01 = transformation._01;
		_this._11 = transformation._11;
		_this._21 = transformation._21;
		_this._02 = transformation._02;
		_this._12 = transformation._12;
		_this._22 = transformation._22;
		return transformation;
	}
	,translation: function(tx,ty) {
		var _this__22;
		var _this__21;
		var _this__20;
		var _this__12;
		var _this__11;
		var _this__10;
		var _this__02;
		var _this__01;
		var _this__00 = 1;
		_this__10 = 0;
		_this__20 = tx;
		_this__01 = 0;
		_this__11 = 1;
		_this__21 = ty;
		_this__02 = 0;
		_this__12 = 0;
		_this__22 = 1;
		var m = this.transformations[this.transformations.length - 1];
		return new kha_math_FastMatrix3(_this__00 * m._00 + _this__10 * m._01 + _this__20 * m._02,_this__00 * m._10 + _this__10 * m._11 + _this__20 * m._12,_this__00 * m._20 + _this__10 * m._21 + _this__20 * m._22,_this__01 * m._00 + _this__11 * m._01 + _this__21 * m._02,_this__01 * m._10 + _this__11 * m._11 + _this__21 * m._12,_this__01 * m._20 + _this__11 * m._21 + _this__21 * m._22,_this__02 * m._00 + _this__12 * m._01 + _this__22 * m._02,_this__02 * m._10 + _this__12 * m._11 + _this__22 * m._12,_this__02 * m._20 + _this__12 * m._21 + _this__22 * m._22);
	}
	,translate: function(tx,ty) {
		var _this__22;
		var _this__21;
		var _this__20;
		var _this__12;
		var _this__11;
		var _this__10;
		var _this__02;
		var _this__01;
		var _this__00 = 1;
		_this__10 = 0;
		_this__20 = tx;
		_this__01 = 0;
		_this__11 = 1;
		_this__21 = ty;
		_this__02 = 0;
		_this__12 = 0;
		_this__22 = 1;
		var m = this.transformations[this.transformations.length - 1];
		var transformation = new kha_math_FastMatrix3(_this__00 * m._00 + _this__10 * m._01 + _this__20 * m._02,_this__00 * m._10 + _this__10 * m._11 + _this__20 * m._12,_this__00 * m._20 + _this__10 * m._21 + _this__20 * m._22,_this__01 * m._00 + _this__11 * m._01 + _this__21 * m._02,_this__01 * m._10 + _this__11 * m._11 + _this__21 * m._12,_this__01 * m._20 + _this__11 * m._21 + _this__21 * m._22,_this__02 * m._00 + _this__12 * m._01 + _this__22 * m._02,_this__02 * m._10 + _this__12 * m._11 + _this__22 * m._12,_this__02 * m._20 + _this__12 * m._21 + _this__22 * m._22);
		this.setTransformation(transformation);
		var _this = this.transformations[this.transformations.length - 1];
		_this._00 = transformation._00;
		_this._10 = transformation._10;
		_this._20 = transformation._20;
		_this._01 = transformation._01;
		_this._11 = transformation._11;
		_this._21 = transformation._21;
		_this._02 = transformation._02;
		_this._12 = transformation._12;
		_this._22 = transformation._22;
	}
	,pushTranslation: function(tx,ty) {
		var _this__22;
		var _this__21;
		var _this__20;
		var _this__12;
		var _this__11;
		var _this__10;
		var _this__02;
		var _this__01;
		var _this__00 = 1;
		_this__10 = 0;
		_this__20 = tx;
		_this__01 = 0;
		_this__11 = 1;
		_this__21 = ty;
		_this__02 = 0;
		_this__12 = 0;
		_this__22 = 1;
		var m = this.transformations[this.transformations.length - 1];
		this.pushTransformation(new kha_math_FastMatrix3(_this__00 * m._00 + _this__10 * m._01 + _this__20 * m._02,_this__00 * m._10 + _this__10 * m._11 + _this__20 * m._12,_this__00 * m._20 + _this__10 * m._21 + _this__20 * m._22,_this__01 * m._00 + _this__11 * m._01 + _this__21 * m._02,_this__01 * m._10 + _this__11 * m._11 + _this__21 * m._12,_this__01 * m._20 + _this__11 * m._21 + _this__21 * m._22,_this__02 * m._00 + _this__12 * m._01 + _this__22 * m._02,_this__02 * m._10 + _this__12 * m._11 + _this__22 * m._12,_this__02 * m._20 + _this__12 * m._21 + _this__22 * m._22));
	}
	,rotation: function(angle,centerx,centery) {
		var _this__22;
		var _this__21;
		var _this__20;
		var _this__12;
		var _this__11;
		var _this__10;
		var _this__02;
		var _this__01;
		var _this__00;
		var _this__221;
		var _this__211;
		var _this__201;
		var _this__121;
		var _this__111;
		var _this__101;
		var _this__021;
		var _this__011;
		var _this__001;
		var _this__222;
		var _this__212;
		var _this__202;
		var _this__122;
		var _this__112;
		var _this__102;
		var _this__022;
		var _this__012;
		var _this__002 = 1;
		_this__102 = 0;
		_this__202 = centerx;
		_this__012 = 0;
		_this__112 = 1;
		_this__212 = centery;
		_this__022 = 0;
		_this__122 = 0;
		_this__222 = 1;
		var m__22;
		var m__21;
		var m__20;
		var m__12;
		var m__11;
		var m__10;
		var m__02;
		var m__01;
		var m__00 = Math.cos(angle);
		m__10 = -Math.sin(angle);
		m__20 = 0;
		m__01 = Math.sin(angle);
		m__11 = Math.cos(angle);
		m__21 = 0;
		m__02 = 0;
		m__12 = 0;
		m__22 = 1;
		_this__001 = _this__002 * m__00 + _this__102 * m__01 + _this__202 * m__02;
		_this__101 = _this__002 * m__10 + _this__102 * m__11 + _this__202 * m__12;
		_this__201 = _this__002 * m__20 + _this__102 * m__21 + _this__202 * m__22;
		_this__011 = _this__012 * m__00 + _this__112 * m__01 + _this__212 * m__02;
		_this__111 = _this__012 * m__10 + _this__112 * m__11 + _this__212 * m__12;
		_this__211 = _this__012 * m__20 + _this__112 * m__21 + _this__212 * m__22;
		_this__021 = _this__022 * m__00 + _this__122 * m__01 + _this__222 * m__02;
		_this__121 = _this__022 * m__10 + _this__122 * m__11 + _this__222 * m__12;
		_this__221 = _this__022 * m__20 + _this__122 * m__21 + _this__222 * m__22;
		var m__221;
		var m__211;
		var m__201;
		var m__121;
		var m__111;
		var m__101;
		var m__021;
		var m__011;
		var m__001 = 1;
		m__101 = 0;
		m__201 = -centerx;
		m__011 = 0;
		m__111 = 1;
		m__211 = -centery;
		m__021 = 0;
		m__121 = 0;
		m__221 = 1;
		_this__00 = _this__001 * m__001 + _this__101 * m__011 + _this__201 * m__021;
		_this__10 = _this__001 * m__101 + _this__101 * m__111 + _this__201 * m__121;
		_this__20 = _this__001 * m__201 + _this__101 * m__211 + _this__201 * m__221;
		_this__01 = _this__011 * m__001 + _this__111 * m__011 + _this__211 * m__021;
		_this__11 = _this__011 * m__101 + _this__111 * m__111 + _this__211 * m__121;
		_this__21 = _this__011 * m__201 + _this__111 * m__211 + _this__211 * m__221;
		_this__02 = _this__021 * m__001 + _this__121 * m__011 + _this__221 * m__021;
		_this__12 = _this__021 * m__101 + _this__121 * m__111 + _this__221 * m__121;
		_this__22 = _this__021 * m__201 + _this__121 * m__211 + _this__221 * m__221;
		var m = this.transformations[this.transformations.length - 1];
		return new kha_math_FastMatrix3(_this__00 * m._00 + _this__10 * m._01 + _this__20 * m._02,_this__00 * m._10 + _this__10 * m._11 + _this__20 * m._12,_this__00 * m._20 + _this__10 * m._21 + _this__20 * m._22,_this__01 * m._00 + _this__11 * m._01 + _this__21 * m._02,_this__01 * m._10 + _this__11 * m._11 + _this__21 * m._12,_this__01 * m._20 + _this__11 * m._21 + _this__21 * m._22,_this__02 * m._00 + _this__12 * m._01 + _this__22 * m._02,_this__02 * m._10 + _this__12 * m._11 + _this__22 * m._12,_this__02 * m._20 + _this__12 * m._21 + _this__22 * m._22);
	}
	,rotate: function(angle,centerx,centery) {
		var temp__22;
		var temp__21;
		var temp__20;
		var temp__12;
		var temp__11;
		var temp__10;
		var temp__02;
		var temp__01;
		var temp__00;
		var _this__22;
		var _this__21;
		var _this__20;
		var _this__12;
		var _this__11;
		var _this__10;
		var _this__02;
		var _this__01;
		var _this__00;
		var _this__221;
		var _this__211;
		var _this__201;
		var _this__121;
		var _this__111;
		var _this__101;
		var _this__021;
		var _this__011;
		var _this__001;
		var _this__222;
		var _this__212;
		var _this__202;
		var _this__122;
		var _this__112;
		var _this__102;
		var _this__022;
		var _this__012;
		var _this__002 = 1;
		_this__102 = 0;
		_this__202 = centerx;
		_this__012 = 0;
		_this__112 = 1;
		_this__212 = centery;
		_this__022 = 0;
		_this__122 = 0;
		_this__222 = 1;
		var m__22;
		var m__21;
		var m__20;
		var m__12;
		var m__11;
		var m__10;
		var m__02;
		var m__01;
		var m__00 = Math.cos(angle);
		m__10 = -Math.sin(angle);
		m__20 = 0;
		m__01 = Math.sin(angle);
		m__11 = Math.cos(angle);
		m__21 = 0;
		m__02 = 0;
		m__12 = 0;
		m__22 = 1;
		_this__001 = _this__002 * m__00 + _this__102 * m__01 + _this__202 * m__02;
		_this__101 = _this__002 * m__10 + _this__102 * m__11 + _this__202 * m__12;
		_this__201 = _this__002 * m__20 + _this__102 * m__21 + _this__202 * m__22;
		_this__011 = _this__012 * m__00 + _this__112 * m__01 + _this__212 * m__02;
		_this__111 = _this__012 * m__10 + _this__112 * m__11 + _this__212 * m__12;
		_this__211 = _this__012 * m__20 + _this__112 * m__21 + _this__212 * m__22;
		_this__021 = _this__022 * m__00 + _this__122 * m__01 + _this__222 * m__02;
		_this__121 = _this__022 * m__10 + _this__122 * m__11 + _this__222 * m__12;
		_this__221 = _this__022 * m__20 + _this__122 * m__21 + _this__222 * m__22;
		var m__221;
		var m__211;
		var m__201;
		var m__121;
		var m__111;
		var m__101;
		var m__021;
		var m__011;
		var m__001 = 1;
		m__101 = 0;
		m__201 = -centerx;
		m__011 = 0;
		m__111 = 1;
		m__211 = -centery;
		m__021 = 0;
		m__121 = 0;
		m__221 = 1;
		_this__00 = _this__001 * m__001 + _this__101 * m__011 + _this__201 * m__021;
		_this__10 = _this__001 * m__101 + _this__101 * m__111 + _this__201 * m__121;
		_this__20 = _this__001 * m__201 + _this__101 * m__211 + _this__201 * m__221;
		_this__01 = _this__011 * m__001 + _this__111 * m__011 + _this__211 * m__021;
		_this__11 = _this__011 * m__101 + _this__111 * m__111 + _this__211 * m__121;
		_this__21 = _this__011 * m__201 + _this__111 * m__211 + _this__211 * m__221;
		_this__02 = _this__021 * m__001 + _this__121 * m__011 + _this__221 * m__021;
		_this__12 = _this__021 * m__101 + _this__121 * m__111 + _this__221 * m__121;
		_this__22 = _this__021 * m__201 + _this__121 * m__211 + _this__221 * m__221;
		var m = this.transformations[this.transformations.length - 1];
		temp__00 = _this__00 * m._00 + _this__10 * m._01 + _this__20 * m._02;
		temp__10 = _this__00 * m._10 + _this__10 * m._11 + _this__20 * m._12;
		temp__20 = _this__00 * m._20 + _this__10 * m._21 + _this__20 * m._22;
		temp__01 = _this__01 * m._00 + _this__11 * m._01 + _this__21 * m._02;
		temp__11 = _this__01 * m._10 + _this__11 * m._11 + _this__21 * m._12;
		temp__21 = _this__01 * m._20 + _this__11 * m._21 + _this__21 * m._22;
		temp__02 = _this__02 * m._00 + _this__12 * m._01 + _this__22 * m._02;
		temp__12 = _this__02 * m._10 + _this__12 * m._11 + _this__22 * m._12;
		temp__22 = _this__02 * m._20 + _this__12 * m._21 + _this__22 * m._22;
		this.transformations[this.transformations.length - 1]._00 = temp__00;
		this.transformations[this.transformations.length - 1]._01 = temp__01;
		this.transformations[this.transformations.length - 1]._02 = temp__02;
		this.transformations[this.transformations.length - 1]._10 = temp__10;
		this.transformations[this.transformations.length - 1]._11 = temp__11;
		this.transformations[this.transformations.length - 1]._12 = temp__12;
		this.transformations[this.transformations.length - 1]._20 = temp__20;
		this.transformations[this.transformations.length - 1]._21 = temp__21;
		this.transformations[this.transformations.length - 1]._22 = temp__22;
	}
	,pushRotation: function(angle,centerx,centery) {
		var _this__22;
		var _this__21;
		var _this__20;
		var _this__12;
		var _this__11;
		var _this__10;
		var _this__02;
		var _this__01;
		var _this__00;
		var _this__221;
		var _this__211;
		var _this__201;
		var _this__121;
		var _this__111;
		var _this__101;
		var _this__021;
		var _this__011;
		var _this__001;
		var _this__222;
		var _this__212;
		var _this__202;
		var _this__122;
		var _this__112;
		var _this__102;
		var _this__022;
		var _this__012;
		var _this__002 = 1;
		_this__102 = 0;
		_this__202 = centerx;
		_this__012 = 0;
		_this__112 = 1;
		_this__212 = centery;
		_this__022 = 0;
		_this__122 = 0;
		_this__222 = 1;
		var m__22;
		var m__21;
		var m__20;
		var m__12;
		var m__11;
		var m__10;
		var m__02;
		var m__01;
		var m__00 = Math.cos(angle);
		m__10 = -Math.sin(angle);
		m__20 = 0;
		m__01 = Math.sin(angle);
		m__11 = Math.cos(angle);
		m__21 = 0;
		m__02 = 0;
		m__12 = 0;
		m__22 = 1;
		_this__001 = _this__002 * m__00 + _this__102 * m__01 + _this__202 * m__02;
		_this__101 = _this__002 * m__10 + _this__102 * m__11 + _this__202 * m__12;
		_this__201 = _this__002 * m__20 + _this__102 * m__21 + _this__202 * m__22;
		_this__011 = _this__012 * m__00 + _this__112 * m__01 + _this__212 * m__02;
		_this__111 = _this__012 * m__10 + _this__112 * m__11 + _this__212 * m__12;
		_this__211 = _this__012 * m__20 + _this__112 * m__21 + _this__212 * m__22;
		_this__021 = _this__022 * m__00 + _this__122 * m__01 + _this__222 * m__02;
		_this__121 = _this__022 * m__10 + _this__122 * m__11 + _this__222 * m__12;
		_this__221 = _this__022 * m__20 + _this__122 * m__21 + _this__222 * m__22;
		var m__221;
		var m__211;
		var m__201;
		var m__121;
		var m__111;
		var m__101;
		var m__021;
		var m__011;
		var m__001 = 1;
		m__101 = 0;
		m__201 = -centerx;
		m__011 = 0;
		m__111 = 1;
		m__211 = -centery;
		m__021 = 0;
		m__121 = 0;
		m__221 = 1;
		_this__00 = _this__001 * m__001 + _this__101 * m__011 + _this__201 * m__021;
		_this__10 = _this__001 * m__101 + _this__101 * m__111 + _this__201 * m__121;
		_this__20 = _this__001 * m__201 + _this__101 * m__211 + _this__201 * m__221;
		_this__01 = _this__011 * m__001 + _this__111 * m__011 + _this__211 * m__021;
		_this__11 = _this__011 * m__101 + _this__111 * m__111 + _this__211 * m__121;
		_this__21 = _this__011 * m__201 + _this__111 * m__211 + _this__211 * m__221;
		_this__02 = _this__021 * m__001 + _this__121 * m__011 + _this__221 * m__021;
		_this__12 = _this__021 * m__101 + _this__121 * m__111 + _this__221 * m__121;
		_this__22 = _this__021 * m__201 + _this__121 * m__211 + _this__221 * m__221;
		var m = this.transformations[this.transformations.length - 1];
		this.pushTransformation(new kha_math_FastMatrix3(_this__00 * m._00 + _this__10 * m._01 + _this__20 * m._02,_this__00 * m._10 + _this__10 * m._11 + _this__20 * m._12,_this__00 * m._20 + _this__10 * m._21 + _this__20 * m._22,_this__01 * m._00 + _this__11 * m._01 + _this__21 * m._02,_this__01 * m._10 + _this__11 * m._11 + _this__21 * m._12,_this__01 * m._20 + _this__11 * m._21 + _this__21 * m._22,_this__02 * m._00 + _this__12 * m._01 + _this__22 * m._02,_this__02 * m._10 + _this__12 * m._11 + _this__22 * m._12,_this__02 * m._20 + _this__12 * m._21 + _this__22 * m._22));
	}
	,pushOpacity: function(opacity) {
		this.setOpacity(opacity);
		this.opacities.push(opacity);
	}
	,popOpacity: function() {
		var ret = this.opacities.pop();
		this.setOpacity(this.get_opacity());
		return ret;
	}
	,get_opacity: function() {
		return this.opacities[this.opacities.length - 1];
	}
	,set_opacity: function(opacity) {
		this.setOpacity(opacity);
		return this.opacities[this.opacities.length - 1] = opacity;
	}
	,scissor: function(x,y,width,height) {
	}
	,disableScissor: function() {
	}
	,get_pipeline: function() {
		return this.pipe;
	}
	,set_pipeline: function(pipeline) {
		this.setPipeline(pipeline);
		return this.pipe = pipeline;
	}
	,setTransformation: function(transformation) {
	}
	,setOpacity: function(opacity) {
	}
	,setPipeline: function(pipeline) {
	}
	,__class__: kha_graphics2_Graphics
	,__properties__: {set_pipeline:"set_pipeline",get_pipeline:"get_pipeline",set_opacity:"set_opacity",get_opacity:"get_opacity",set_transformation:"set_transformation",get_transformation:"get_transformation",set_fontGlyphs:"set_fontGlyphs",get_fontGlyphs:"get_fontGlyphs",set_fontSize:"set_fontSize",get_fontSize:"get_fontSize",set_font:"set_font",get_font:"get_font",set_color:"set_color",get_color:"get_color",set_mipmapScaleQuality:"set_mipmapScaleQuality",get_mipmapScaleQuality:"get_mipmapScaleQuality",set_imageScaleQuality:"set_imageScaleQuality",get_imageScaleQuality:"get_imageScaleQuality"}
};
var kha_graphics2_Graphics1 = function(canvas) {
	this.canvas = canvas;
};
$hxClasses["kha.graphics2.Graphics1"] = kha_graphics2_Graphics1;
kha_graphics2_Graphics1.__name__ = ["kha","graphics2","Graphics1"];
kha_graphics2_Graphics1.__interfaces__ = [kha_graphics1_Graphics];
kha_graphics2_Graphics1.prototype = {
	begin: function() {
		if(this.texture == null) {
			this.texture = kha_Image.create(this.canvas.get_width(),this.canvas.get_height(),kha_graphics4_TextureFormat.RGBA32,kha_graphics4_Usage.ReadableUsage);
		}
		this.pixels = this.texture.lock();
	}
	,end: function() {
		this.texture.unlock();
		this.canvas.get_g2().begin();
		this.canvas.get_g2().drawImage(this.texture,0,0);
		this.canvas.get_g2().end();
	}
	,setPixel: function(x,y,color) {
		this.pixels.setInt32(y * this.texture.get_realWidth() * 4 + x * 4,kha__$Color_Color_$Impl_$.fromBytes(color & 255,(color & 65280) >>> 8,(color & 16711680) >>> 16,color >>> 24));
	}
	,__class__: kha_graphics2_Graphics1
};
var kha_graphics2_ImageScaleQuality = $hxClasses["kha.graphics2.ImageScaleQuality"] = { __ename__ : true, __constructs__ : ["Low","High"] };
kha_graphics2_ImageScaleQuality.Low = ["Low",0];
kha_graphics2_ImageScaleQuality.Low.toString = $estr;
kha_graphics2_ImageScaleQuality.Low.__enum__ = kha_graphics2_ImageScaleQuality;
kha_graphics2_ImageScaleQuality.High = ["High",1];
kha_graphics2_ImageScaleQuality.High.toString = $estr;
kha_graphics2_ImageScaleQuality.High.__enum__ = kha_graphics2_ImageScaleQuality;
var kha_graphics2_truetype_VectorOfIntPointer = function() {
};
$hxClasses["kha.graphics2.truetype.VectorOfIntPointer"] = kha_graphics2_truetype_VectorOfIntPointer;
kha_graphics2_truetype_VectorOfIntPointer.__name__ = ["kha","graphics2","truetype","VectorOfIntPointer"];
kha_graphics2_truetype_VectorOfIntPointer.prototype = {
	__class__: kha_graphics2_truetype_VectorOfIntPointer
};
var kha_graphics2_truetype_Stbtt_$temp_$rect = function() {
};
$hxClasses["kha.graphics2.truetype.Stbtt_temp_rect"] = kha_graphics2_truetype_Stbtt_$temp_$rect;
kha_graphics2_truetype_Stbtt_$temp_$rect.__name__ = ["kha","graphics2","truetype","Stbtt_temp_rect"];
kha_graphics2_truetype_Stbtt_$temp_$rect.prototype = {
	__class__: kha_graphics2_truetype_Stbtt_$temp_$rect
};
var kha_graphics2_truetype_Stbtt_$temp_$glyph_$h_$metrics = function() {
};
$hxClasses["kha.graphics2.truetype.Stbtt_temp_glyph_h_metrics"] = kha_graphics2_truetype_Stbtt_$temp_$glyph_$h_$metrics;
kha_graphics2_truetype_Stbtt_$temp_$glyph_$h_$metrics.__name__ = ["kha","graphics2","truetype","Stbtt_temp_glyph_h_metrics"];
kha_graphics2_truetype_Stbtt_$temp_$glyph_$h_$metrics.prototype = {
	__class__: kha_graphics2_truetype_Stbtt_$temp_$glyph_$h_$metrics
};
var kha_graphics2_truetype_Stbtt_$temp_$font_$v_$metrics = function() {
};
$hxClasses["kha.graphics2.truetype.Stbtt_temp_font_v_metrics"] = kha_graphics2_truetype_Stbtt_$temp_$font_$v_$metrics;
kha_graphics2_truetype_Stbtt_$temp_$font_$v_$metrics.__name__ = ["kha","graphics2","truetype","Stbtt_temp_font_v_metrics"];
kha_graphics2_truetype_Stbtt_$temp_$font_$v_$metrics.prototype = {
	__class__: kha_graphics2_truetype_Stbtt_$temp_$font_$v_$metrics
};
var kha_graphics2_truetype_Stbtt_$temp_$region = function() {
};
$hxClasses["kha.graphics2.truetype.Stbtt_temp_region"] = kha_graphics2_truetype_Stbtt_$temp_$region;
kha_graphics2_truetype_Stbtt_$temp_$region.__name__ = ["kha","graphics2","truetype","Stbtt_temp_region"];
kha_graphics2_truetype_Stbtt_$temp_$region.prototype = {
	__class__: kha_graphics2_truetype_Stbtt_$temp_$region
};
var kha_graphics2_truetype_Stbtt_$bakedchar = function() {
};
$hxClasses["kha.graphics2.truetype.Stbtt_bakedchar"] = kha_graphics2_truetype_Stbtt_$bakedchar;
kha_graphics2_truetype_Stbtt_$bakedchar.__name__ = ["kha","graphics2","truetype","Stbtt_bakedchar"];
kha_graphics2_truetype_Stbtt_$bakedchar.prototype = {
	__class__: kha_graphics2_truetype_Stbtt_$bakedchar
};
var kha_graphics2_truetype_Stbtt_$aligned_$quad = function() { };
$hxClasses["kha.graphics2.truetype.Stbtt_aligned_quad"] = kha_graphics2_truetype_Stbtt_$aligned_$quad;
kha_graphics2_truetype_Stbtt_$aligned_$quad.__name__ = ["kha","graphics2","truetype","Stbtt_aligned_quad"];
kha_graphics2_truetype_Stbtt_$aligned_$quad.prototype = {
	__class__: kha_graphics2_truetype_Stbtt_$aligned_$quad
};
var kha_graphics2_truetype_Stbtt_$packedchar = function() { };
$hxClasses["kha.graphics2.truetype.Stbtt_packedchar"] = kha_graphics2_truetype_Stbtt_$packedchar;
kha_graphics2_truetype_Stbtt_$packedchar.__name__ = ["kha","graphics2","truetype","Stbtt_packedchar"];
kha_graphics2_truetype_Stbtt_$packedchar.prototype = {
	__class__: kha_graphics2_truetype_Stbtt_$packedchar
};
var kha_graphics2_truetype_Stbtt_$pack_$range = function() { };
$hxClasses["kha.graphics2.truetype.Stbtt_pack_range"] = kha_graphics2_truetype_Stbtt_$pack_$range;
kha_graphics2_truetype_Stbtt_$pack_$range.__name__ = ["kha","graphics2","truetype","Stbtt_pack_range"];
kha_graphics2_truetype_Stbtt_$pack_$range.prototype = {
	__class__: kha_graphics2_truetype_Stbtt_$pack_$range
};
var kha_graphics2_truetype_Stbtt_$pack_$context = function() { };
$hxClasses["kha.graphics2.truetype.Stbtt_pack_context"] = kha_graphics2_truetype_Stbtt_$pack_$context;
kha_graphics2_truetype_Stbtt_$pack_$context.__name__ = ["kha","graphics2","truetype","Stbtt_pack_context"];
kha_graphics2_truetype_Stbtt_$pack_$context.prototype = {
	__class__: kha_graphics2_truetype_Stbtt_$pack_$context
};
var kha_graphics2_truetype_Stbtt_$fontinfo = function() {
};
$hxClasses["kha.graphics2.truetype.Stbtt_fontinfo"] = kha_graphics2_truetype_Stbtt_$fontinfo;
kha_graphics2_truetype_Stbtt_$fontinfo.__name__ = ["kha","graphics2","truetype","Stbtt_fontinfo"];
kha_graphics2_truetype_Stbtt_$fontinfo.prototype = {
	__class__: kha_graphics2_truetype_Stbtt_$fontinfo
};
var kha_graphics2_truetype_Stbtt_$vertex = function() {
};
$hxClasses["kha.graphics2.truetype.Stbtt_vertex"] = kha_graphics2_truetype_Stbtt_$vertex;
kha_graphics2_truetype_Stbtt_$vertex.__name__ = ["kha","graphics2","truetype","Stbtt_vertex"];
kha_graphics2_truetype_Stbtt_$vertex.prototype = {
	__class__: kha_graphics2_truetype_Stbtt_$vertex
};
var kha_graphics2_truetype_Stbtt_$_$bitmap = function() {
};
$hxClasses["kha.graphics2.truetype.Stbtt__bitmap"] = kha_graphics2_truetype_Stbtt_$_$bitmap;
kha_graphics2_truetype_Stbtt_$_$bitmap.__name__ = ["kha","graphics2","truetype","Stbtt__bitmap"];
kha_graphics2_truetype_Stbtt_$_$bitmap.prototype = {
	__class__: kha_graphics2_truetype_Stbtt_$_$bitmap
};
var kha_graphics2_truetype_Stbtt_$_$edge = function() {
};
$hxClasses["kha.graphics2.truetype.Stbtt__edge"] = kha_graphics2_truetype_Stbtt_$_$edge;
kha_graphics2_truetype_Stbtt_$_$edge.__name__ = ["kha","graphics2","truetype","Stbtt__edge"];
kha_graphics2_truetype_Stbtt_$_$edge.prototype = {
	__class__: kha_graphics2_truetype_Stbtt_$_$edge
};
var kha_graphics2_truetype_Stbtt_$_$active_$edge = function() {
};
$hxClasses["kha.graphics2.truetype.Stbtt__active_edge"] = kha_graphics2_truetype_Stbtt_$_$active_$edge;
kha_graphics2_truetype_Stbtt_$_$active_$edge.__name__ = ["kha","graphics2","truetype","Stbtt__active_edge"];
kha_graphics2_truetype_Stbtt_$_$active_$edge.prototype = {
	__class__: kha_graphics2_truetype_Stbtt_$_$active_$edge
};
var kha_graphics2_truetype_Stbtt_$_$point = function() {
};
$hxClasses["kha.graphics2.truetype.Stbtt__point"] = kha_graphics2_truetype_Stbtt_$_$point;
kha_graphics2_truetype_Stbtt_$_$point.__name__ = ["kha","graphics2","truetype","Stbtt__point"];
kha_graphics2_truetype_Stbtt_$_$point.prototype = {
	__class__: kha_graphics2_truetype_Stbtt_$_$point
};
var kha_graphics2_truetype_StbTruetype = function() { };
$hxClasses["kha.graphics2.truetype.StbTruetype"] = kha_graphics2_truetype_StbTruetype;
kha_graphics2_truetype_StbTruetype.__name__ = ["kha","graphics2","truetype","StbTruetype"];
kha_graphics2_truetype_StbTruetype.STBTT_assert = function(value) {
	if(!value) {
		throw new js__$Boot_HaxeError("Error");
	}
};
kha_graphics2_truetype_StbTruetype.STBTT_POINT_SIZE = function(x) {
	return -x;
};
kha_graphics2_truetype_StbTruetype.ttBYTE = function(p,pos) {
	if(pos == null) {
		pos = 0;
	}
	return p.readU8(pos);
};
kha_graphics2_truetype_StbTruetype.ttCHAR = function(p,pos) {
	if(pos == null) {
		pos = 0;
	}
	var n = p.readU8(pos);
	if(n >= 128) {
		return n - 256;
	}
	return n;
};
kha_graphics2_truetype_StbTruetype.ttUSHORT = function(p,pos) {
	if(pos == null) {
		pos = 0;
	}
	var ch1 = p.readU8(pos);
	var ch2 = p.readU8(pos + 1);
	return ch2 | ch1 << 8;
};
kha_graphics2_truetype_StbTruetype.ttSHORT = function(p,pos) {
	if(pos == null) {
		pos = 0;
	}
	var ch1 = p.readU8(pos);
	var ch2 = p.readU8(pos + 1);
	var n = ch2 | ch1 << 8;
	if((n & 32768) != 0) {
		return n - 65536;
	}
	return n;
};
kha_graphics2_truetype_StbTruetype.ttULONG = function(p,pos) {
	if(pos == null) {
		pos = 0;
	}
	var ch1 = p.readU8(pos);
	var ch2 = p.readU8(pos + 1);
	var ch3 = p.readU8(pos + 2);
	var ch4 = p.readU8(pos + 3);
	return ch4 | ch3 << 8 | ch2 << 16 | ch1 << 24;
};
kha_graphics2_truetype_StbTruetype.ttLONG = function(p,pos) {
	if(pos == null) {
		pos = 0;
	}
	var ch1 = p.readU8(pos);
	var ch2 = p.readU8(pos + 1);
	var ch3 = p.readU8(pos + 2);
	var ch4 = p.readU8(pos + 3);
	return ch4 | ch3 << 8 | ch2 << 16 | ch1 << 24;
};
kha_graphics2_truetype_StbTruetype.ttFixed = function(p,pos) {
	if(pos == null) {
		pos = 0;
	}
	var ch1 = p.readU8(pos);
	var ch2 = p.readU8(pos + 1);
	var ch3 = p.readU8(pos + 2);
	var ch4 = p.readU8(pos + 3);
	return ch4 | ch3 << 8 | ch2 << 16 | ch1 << 24;
};
kha_graphics2_truetype_StbTruetype.stbtt_tag4 = function(p,pos,c0,c1,c2,c3) {
	if(p.readU8(pos) == c0 && p.readU8(pos + 1) == c1 && p.readU8(pos + 2) == c2) {
		return p.readU8(pos + 3) == c3;
	} else {
		return false;
	}
};
kha_graphics2_truetype_StbTruetype.stbtt_tag = function(p,pos,str) {
	var c0 = HxOverrides.cca(str,0);
	var c1 = HxOverrides.cca(str,1);
	var c2 = HxOverrides.cca(str,2);
	var c3 = HxOverrides.cca(str,3);
	if(p.readU8(pos) == c0 && p.readU8(pos + 1) == c1 && p.readU8(pos + 2) == c2) {
		return p.readU8(pos + 3) == c3;
	} else {
		return false;
	}
};
kha_graphics2_truetype_StbTruetype.stbtt__isfont = function(font) {
	var c0 = HxOverrides.cca("1",0);
	if(font.readU8(0) == c0 && font.readU8(1) == 0 && font.readU8(2) == 0 && font.readU8(3) == 0) {
		return true;
	}
	var c01 = HxOverrides.cca("typ1",0);
	var c1 = HxOverrides.cca("typ1",1);
	var c2 = HxOverrides.cca("typ1",2);
	var c3 = HxOverrides.cca("typ1",3);
	if(font.readU8(0) == c01 && font.readU8(1) == c1 && font.readU8(2) == c2 && font.readU8(3) == c3) {
		return true;
	}
	var c02 = HxOverrides.cca("OTTO",0);
	var c11 = HxOverrides.cca("OTTO",1);
	var c21 = HxOverrides.cca("OTTO",2);
	var c31 = HxOverrides.cca("OTTO",3);
	if(font.readU8(0) == c02 && font.readU8(1) == c11 && font.readU8(2) == c21 && font.readU8(3) == c31) {
		return true;
	}
	if(font.readU8(0) == 0 && font.readU8(1) == 1 && font.readU8(2) == 0 && font.readU8(3) == 0) {
		return true;
	}
	return false;
};
kha_graphics2_truetype_StbTruetype.stbtt__find_table = function(data,fontstart,tag) {
	var pos = fontstart + 4;
	var ch1 = data.readU8(pos);
	var ch2 = data.readU8(pos + 1);
	var num_tables = ch2 | ch1 << 8;
	var tabledir = fontstart + 12;
	var _g1 = 0;
	var _g = num_tables;
	while(_g1 < _g) {
		var i = _g1++;
		var loc = tabledir + 16 * i;
		var c0 = HxOverrides.cca(tag,0);
		var c1 = HxOverrides.cca(tag,1);
		var c2 = HxOverrides.cca(tag,2);
		var c3 = HxOverrides.cca(tag,3);
		if(data.readU8(loc) == c0 && data.readU8(loc + 1) == c1 && data.readU8(loc + 2) == c2 && data.readU8(loc + 3) == c3) {
			var pos1 = loc + 8;
			var ch11 = data.readU8(pos1);
			var ch21 = data.readU8(pos1 + 1);
			var ch3 = data.readU8(pos1 + 2);
			var ch4 = data.readU8(pos1 + 3);
			return ch4 | ch3 << 8 | ch21 << 16 | ch11 << 24;
		}
	}
	return 0;
};
kha_graphics2_truetype_StbTruetype.stbtt_GetFontOffsetForIndex = function(font_collection,index) {
	if(kha_graphics2_truetype_StbTruetype.stbtt__isfont(font_collection)) {
		if(index == 0) {
			return 0;
		} else {
			return -1;
		}
	}
	var c0 = HxOverrides.cca("ttcf",0);
	var c1 = HxOverrides.cca("ttcf",1);
	var c2 = HxOverrides.cca("ttcf",2);
	var c3 = HxOverrides.cca("ttcf",3);
	if(font_collection.readU8(0) == c0 && font_collection.readU8(1) == c1 && font_collection.readU8(2) == c2 && font_collection.readU8(3) == c3) {
		var tmp;
		var ch1 = font_collection.readU8(4);
		var ch2 = font_collection.readU8(5);
		var ch3 = font_collection.readU8(6);
		var ch4 = font_collection.readU8(7);
		if((ch4 | ch3 << 8 | ch2 << 16 | ch1 << 24) != 65536) {
			var ch11 = font_collection.readU8(4);
			var ch21 = font_collection.readU8(5);
			var ch31 = font_collection.readU8(6);
			var ch41 = font_collection.readU8(7);
			tmp = (ch41 | ch31 << 8 | ch21 << 16 | ch11 << 24) == 131072;
		} else {
			tmp = true;
		}
		if(tmp) {
			var ch12 = font_collection.readU8(8);
			var ch22 = font_collection.readU8(9);
			var ch32 = font_collection.readU8(10);
			var ch42 = font_collection.readU8(11);
			var n = ch42 | ch32 << 8 | ch22 << 16 | ch12 << 24;
			if(index >= n) {
				return -1;
			}
			var pos = 12 + index * 4;
			var ch13 = font_collection.readU8(pos);
			var ch23 = font_collection.readU8(pos + 1);
			var ch33 = font_collection.readU8(pos + 2);
			var ch43 = font_collection.readU8(pos + 3);
			return ch43 | ch33 << 8 | ch23 << 16 | ch13 << 24;
		}
	}
	return -1;
};
kha_graphics2_truetype_StbTruetype.stbtt_InitFont = function(info,data,fontstart) {
	var cmap;
	var t;
	var numTables;
	info.data = data;
	info.fontstart = fontstart;
	cmap = kha_graphics2_truetype_StbTruetype.stbtt__find_table(data,fontstart,"cmap");
	info.loca = kha_graphics2_truetype_StbTruetype.stbtt__find_table(data,fontstart,"loca");
	info.head = kha_graphics2_truetype_StbTruetype.stbtt__find_table(data,fontstart,"head");
	info.glyf = kha_graphics2_truetype_StbTruetype.stbtt__find_table(data,fontstart,"glyf");
	info.hhea = kha_graphics2_truetype_StbTruetype.stbtt__find_table(data,fontstart,"hhea");
	info.hmtx = kha_graphics2_truetype_StbTruetype.stbtt__find_table(data,fontstart,"hmtx");
	info.kern = kha_graphics2_truetype_StbTruetype.stbtt__find_table(data,fontstart,"kern");
	if(cmap == 0 || info.loca == 0 || info.head == 0 || info.glyf == 0 || info.hhea == 0 || info.hmtx == 0) {
		return false;
	}
	t = kha_graphics2_truetype_StbTruetype.stbtt__find_table(data,fontstart,"maxp");
	if(t != 0) {
		var pos = t + 4;
		var ch1 = data.readU8(pos);
		var ch2 = data.readU8(pos + 1);
		info.numGlyphs = ch2 | ch1 << 8;
	} else {
		info.numGlyphs = 65535;
	}
	var pos1 = cmap + 2;
	var ch11 = data.readU8(pos1);
	var ch21 = data.readU8(pos1 + 1);
	numTables = ch21 | ch11 << 8;
	info.index_map = 0;
	var _g1 = 0;
	var _g = numTables;
	while(_g1 < _g) {
		var i = _g1++;
		var encoding_record = cmap + 4 + 8 * i;
		var ch12 = data.readU8(encoding_record);
		var ch22 = data.readU8(encoding_record + 1);
		var _g2 = ch22 | ch12 << 8;
		switch(_g2) {
		case 0:
			var pos2 = encoding_record + 4;
			var ch13 = data.readU8(pos2);
			var ch23 = data.readU8(pos2 + 1);
			var ch3 = data.readU8(pos2 + 2);
			var ch4 = data.readU8(pos2 + 3);
			info.index_map = cmap + (ch4 | ch3 << 8 | ch23 << 16 | ch13 << 24);
			break;
		case 3:
			var pos3 = encoding_record + 2;
			var ch14 = data.readU8(pos3);
			var ch24 = data.readU8(pos3 + 1);
			var _g21 = ch24 | ch14 << 8;
			switch(_g21) {
			case 1:case 10:
				var pos4 = encoding_record + 4;
				var ch15 = data.readU8(pos4);
				var ch25 = data.readU8(pos4 + 1);
				var ch31 = data.readU8(pos4 + 2);
				var ch41 = data.readU8(pos4 + 3);
				info.index_map = cmap + (ch41 | ch31 << 8 | ch25 << 16 | ch15 << 24);
				break;
			}
			break;
		}
	}
	if(info.index_map == 0) {
		return false;
	}
	var pos5 = info.head + 50;
	var ch16 = data.readU8(pos5);
	var ch26 = data.readU8(pos5 + 1);
	info.indexToLocFormat = ch26 | ch16 << 8;
	return true;
};
kha_graphics2_truetype_StbTruetype.stbtt_FindGlyphIndex = function(info,unicode_codepoint) {
	var data = info.data;
	var index_map = info.index_map;
	var ch1 = data.readU8(index_map);
	var ch2 = data.readU8(index_map + 1);
	var format = ch2 | ch1 << 8;
	if(format == 0) {
		var pos = index_map + 2;
		var ch11 = data.readU8(pos);
		var ch21 = data.readU8(pos + 1);
		var bytes = ch21 | ch11 << 8;
		if(unicode_codepoint < bytes - 6) {
			return data.readU8(index_map + 6 + unicode_codepoint);
		}
		return 0;
	} else if(format == 6) {
		var pos1 = index_map + 6;
		var ch12 = data.readU8(pos1);
		var ch22 = data.readU8(pos1 + 1);
		var first = ch22 | ch12 << 8;
		var pos2 = index_map + 8;
		var ch13 = data.readU8(pos2);
		var ch23 = data.readU8(pos2 + 1);
		var count = ch23 | ch13 << 8;
		if(unicode_codepoint >= first && unicode_codepoint < first + count) {
			var pos3 = index_map + 10 + (unicode_codepoint - first) * 2;
			var ch14 = data.readU8(pos3);
			var ch24 = data.readU8(pos3 + 1);
			return ch24 | ch14 << 8;
		}
		return 0;
	} else if(format == 2) {
		throw new js__$Boot_HaxeError("Error");
	} else if(format == 4) {
		var pos4 = index_map + 6;
		var ch15 = data.readU8(pos4);
		var ch25 = data.readU8(pos4 + 1);
		var segcount = (ch25 | ch15 << 8) >> 1;
		var pos5 = index_map + 8;
		var ch16 = data.readU8(pos5);
		var ch26 = data.readU8(pos5 + 1);
		var searchRange = (ch26 | ch16 << 8) >> 1;
		var pos6 = index_map + 10;
		var ch17 = data.readU8(pos6);
		var ch27 = data.readU8(pos6 + 1);
		var entrySelector = ch27 | ch17 << 8;
		var pos7 = index_map + 12;
		var ch18 = data.readU8(pos7);
		var ch28 = data.readU8(pos7 + 1);
		var rangeShift = (ch28 | ch18 << 8) >> 1;
		var endCount = index_map + 14;
		var search = endCount;
		if(unicode_codepoint > 65535) {
			return 0;
		}
		var pos8 = search + rangeShift * 2;
		var ch19 = data.readU8(pos8);
		var ch29 = data.readU8(pos8 + 1);
		if(unicode_codepoint >= (ch29 | ch19 << 8)) {
			search += rangeShift * 2;
		}
		search -= 2;
		while(entrySelector != 0) {
			var end;
			searchRange >>= 1;
			var pos9 = search + searchRange * 2;
			var ch110 = data.readU8(pos9);
			var ch210 = data.readU8(pos9 + 1);
			end = ch210 | ch110 << 8;
			if(unicode_codepoint > end) {
				search += searchRange * 2;
			}
			--entrySelector;
		}
		search += 2;
		var offset;
		var start;
		var item = search - endCount >> 1;
		var pos10 = endCount + 2 * item;
		var ch111 = data.readU8(pos10);
		var ch211 = data.readU8(pos10 + 1);
		if(unicode_codepoint > (ch211 | ch111 << 8)) {
			throw new js__$Boot_HaxeError("Error");
		}
		var pos11 = index_map + 14 + segcount * 2 + 2 + 2 * item;
		var ch112 = data.readU8(pos11);
		var ch212 = data.readU8(pos11 + 1);
		start = ch212 | ch112 << 8;
		if(unicode_codepoint < start) {
			return 0;
		}
		var pos12 = index_map + 14 + segcount * 6 + 2 + 2 * item;
		var ch113 = data.readU8(pos12);
		var ch213 = data.readU8(pos12 + 1);
		offset = ch213 | ch113 << 8;
		if(offset == 0) {
			var pos13 = index_map + 14 + segcount * 4 + 2 + 2 * item;
			var ch114 = data.readU8(pos13);
			var ch214 = data.readU8(pos13 + 1);
			var n = ch214 | ch114 << 8;
			return unicode_codepoint + ((n & 32768) != 0 ? n - 65536 : n);
		}
		var pos14 = offset + (unicode_codepoint - start) * 2 + index_map + 14 + segcount * 6 + 2 + 2 * item;
		var ch115 = data.readU8(pos14);
		var ch215 = data.readU8(pos14 + 1);
		return ch215 | ch115 << 8;
	} else if(format == 12 || format == 13) {
		var pos15 = index_map + 12;
		var ch116 = data.readU8(pos15);
		var ch216 = data.readU8(pos15 + 1);
		var ch3 = data.readU8(pos15 + 2);
		var ch4 = data.readU8(pos15 + 3);
		var ngroups = ch4 | ch3 << 8 | ch216 << 16 | ch116 << 24;
		var low;
		var high;
		low = 0;
		high = ngroups;
		while(low < high) {
			var mid = low + (high - low >> 1);
			var pos16 = index_map + 16 + mid * 12;
			var ch117 = data.readU8(pos16);
			var ch217 = data.readU8(pos16 + 1);
			var ch31 = data.readU8(pos16 + 2);
			var ch41 = data.readU8(pos16 + 3);
			var start_char = ch41 | ch31 << 8 | ch217 << 16 | ch117 << 24;
			var pos17 = index_map + 16 + mid * 12 + 4;
			var ch118 = data.readU8(pos17);
			var ch218 = data.readU8(pos17 + 1);
			var ch32 = data.readU8(pos17 + 2);
			var ch42 = data.readU8(pos17 + 3);
			var end_char = ch42 | ch32 << 8 | ch218 << 16 | ch118 << 24;
			if(unicode_codepoint < start_char) {
				high = mid;
			} else if(unicode_codepoint > end_char) {
				low = mid + 1;
			} else {
				var pos18 = index_map + 16 + mid * 12 + 8;
				var ch119 = data.readU8(pos18);
				var ch219 = data.readU8(pos18 + 1);
				var ch33 = data.readU8(pos18 + 2);
				var ch43 = data.readU8(pos18 + 3);
				var start_glyph = ch43 | ch33 << 8 | ch219 << 16 | ch119 << 24;
				if(format == 12) {
					return start_glyph + unicode_codepoint - start_char;
				} else {
					return start_glyph;
				}
			}
		}
		return 0;
	}
	throw new js__$Boot_HaxeError("Error");
};
kha_graphics2_truetype_StbTruetype.stbtt_GetCodepointShape = function(info,unicode_codepoint) {
	return kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphShape(info,kha_graphics2_truetype_StbTruetype.stbtt_FindGlyphIndex(info,unicode_codepoint));
};
kha_graphics2_truetype_StbTruetype.stbtt_setvertex = function(v,type,x,y,cx,cy) {
	v.type = type;
	v.x = x;
	v.y = y;
	v.cx = cx;
	v.cy = cy;
};
kha_graphics2_truetype_StbTruetype.stbtt__GetGlyfOffset = function(info,glyph_index) {
	var g1;
	var g2;
	if(glyph_index >= info.numGlyphs) {
		return -1;
	}
	if(info.indexToLocFormat >= 2) {
		return -1;
	}
	if(info.indexToLocFormat == 0) {
		var info1 = info.glyf;
		var p = info.data;
		var pos = info.loca + glyph_index * 2;
		var ch1 = p.readU8(pos);
		var ch2 = p.readU8(pos + 1);
		g1 = info1 + (ch2 | ch1 << 8) * 2;
		var info2 = info.glyf;
		var p1 = info.data;
		var pos1 = info.loca + glyph_index * 2 + 2;
		var ch11 = p1.readU8(pos1);
		var ch21 = p1.readU8(pos1 + 1);
		g2 = info2 + (ch21 | ch11 << 8) * 2;
	} else {
		var info3 = info.glyf;
		var p2 = info.data;
		var pos2 = info.loca + glyph_index * 4;
		var ch12 = p2.readU8(pos2);
		var ch22 = p2.readU8(pos2 + 1);
		var ch3 = p2.readU8(pos2 + 2);
		var ch4 = p2.readU8(pos2 + 3);
		g1 = info3 + (ch4 | ch3 << 8 | ch22 << 16 | ch12 << 24);
		var info4 = info.glyf;
		var p3 = info.data;
		var pos3 = info.loca + glyph_index * 4 + 4;
		var ch13 = p3.readU8(pos3);
		var ch23 = p3.readU8(pos3 + 1);
		var ch31 = p3.readU8(pos3 + 2);
		var ch41 = p3.readU8(pos3 + 3);
		g2 = info4 + (ch41 | ch31 << 8 | ch23 << 16 | ch13 << 24);
	}
	if(g1 == g2) {
		return -1;
	} else {
		return g1;
	}
};
kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphBox = function(info,glyph_index,rect) {
	var g = kha_graphics2_truetype_StbTruetype.stbtt__GetGlyfOffset(info,glyph_index);
	if(g < 0) {
		return false;
	}
	var p = info.data;
	var pos = g + 2;
	var ch1 = p.readU8(pos);
	var ch2 = p.readU8(pos + 1);
	var n = ch2 | ch1 << 8;
	rect.x0 = (n & 32768) != 0 ? n - 65536 : n;
	var p1 = info.data;
	var pos1 = g + 4;
	var ch11 = p1.readU8(pos1);
	var ch21 = p1.readU8(pos1 + 1);
	var n1 = ch21 | ch11 << 8;
	rect.y0 = (n1 & 32768) != 0 ? n1 - 65536 : n1;
	var p2 = info.data;
	var pos2 = g + 6;
	var ch12 = p2.readU8(pos2);
	var ch22 = p2.readU8(pos2 + 1);
	var n2 = ch22 | ch12 << 8;
	rect.x1 = (n2 & 32768) != 0 ? n2 - 65536 : n2;
	var p3 = info.data;
	var pos3 = g + 8;
	var ch13 = p3.readU8(pos3);
	var ch23 = p3.readU8(pos3 + 1);
	var n3 = ch23 | ch13 << 8;
	rect.y1 = (n3 & 32768) != 0 ? n3 - 65536 : n3;
	return true;
};
kha_graphics2_truetype_StbTruetype.stbtt_GetCodepointBox = function(info,codepoint,rect) {
	return kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphBox(info,kha_graphics2_truetype_StbTruetype.stbtt_FindGlyphIndex(info,codepoint),rect);
};
kha_graphics2_truetype_StbTruetype.stbtt_IsGlyphEmpty = function(info,glyph_index) {
	var numberOfContours;
	var g = kha_graphics2_truetype_StbTruetype.stbtt__GetGlyfOffset(info,glyph_index);
	if(g < 0) {
		return true;
	}
	var p = info.data;
	var ch1 = p.readU8(g);
	var ch2 = p.readU8(g + 1);
	var n = ch2 | ch1 << 8;
	if((n & 32768) != 0) {
		numberOfContours = n - 65536;
	} else {
		numberOfContours = n;
	}
	return numberOfContours == 0;
};
kha_graphics2_truetype_StbTruetype.stbtt__close_shape = function(vertices,num_vertices,was_off,start_off,sx,sy,scx,scy,cx,cy) {
	if(start_off) {
		if(was_off) {
			kha_graphics2_truetype_StbTruetype.stbtt_setvertex(vertices[num_vertices++],3,cx + scx >> 1,cy + scy >> 1,cx,cy);
		}
		kha_graphics2_truetype_StbTruetype.stbtt_setvertex(vertices[num_vertices++],3,sx,sy,scx,scy);
	} else if(was_off) {
		kha_graphics2_truetype_StbTruetype.stbtt_setvertex(vertices[num_vertices++],3,sx,sy,cx,cy);
	} else {
		kha_graphics2_truetype_StbTruetype.stbtt_setvertex(vertices[num_vertices++],2,sx,sy,0,0);
	}
	return num_vertices;
};
kha_graphics2_truetype_StbTruetype.copyVertices = function(from,to,offset,count) {
	var _g1 = 0;
	var _g = count;
	while(_g1 < _g) {
		var i = _g1++;
		to[offset + i] = from[i];
	}
};
kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphShape = function(info,glyph_index) {
	var numberOfContours;
	var endPtsOfContours;
	var data = info.data;
	var vertices = null;
	var num_vertices = 0;
	var g = kha_graphics2_truetype_StbTruetype.stbtt__GetGlyfOffset(info,glyph_index);
	if(g < 0) {
		return null;
	}
	var ch1 = data.readU8(g);
	var ch2 = data.readU8(g + 1);
	var n = ch2 | ch1 << 8;
	if((n & 32768) != 0) {
		numberOfContours = n - 65536;
	} else {
		numberOfContours = n;
	}
	if(numberOfContours > 0) {
		var flags = 0;
		var flagcount;
		var ins;
		var j = 0;
		var m;
		var n1;
		var next_move = 0;
		var off = 0;
		var was_off = false;
		var start_off = false;
		var x;
		var y;
		var cx;
		var cy;
		var sx;
		var sy;
		var scx;
		var scy;
		var points;
		var pointsIndex = 0;
		endPtsOfContours = data.sub(g + 10,data.get_length() - (g + 10));
		var pos = g + 10 + numberOfContours * 2;
		var ch11 = data.readU8(pos);
		var ch21 = data.readU8(pos + 1);
		ins = ch21 | ch11 << 8;
		points = data.sub(g + 10 + numberOfContours * 2 + 2 + ins,data.get_length() - (g + 10 + numberOfContours * 2 + 2 + ins));
		var pos1 = numberOfContours * 2 - 2;
		var ch12 = endPtsOfContours.readU8(pos1);
		var ch22 = endPtsOfContours.readU8(pos1 + 1);
		n1 = 1 + (ch22 | ch12 << 8);
		m = n1 + 2 * numberOfContours;
		var this1 = new Array(m);
		vertices = this1;
		if(vertices == null) {
			return null;
		} else {
			var _g1 = 0;
			var _g = vertices.length;
			while(_g1 < _g) {
				var i = _g1++;
				vertices[i] = new kha_graphics2_truetype_Stbtt_$vertex();
			}
		}
		next_move = 0;
		flagcount = 0;
		off = m - n1;
		var _g11 = 0;
		var _g2 = n1;
		while(_g11 < _g2) {
			var i1 = _g11++;
			if(flagcount == 0) {
				flags = points.readU8(pointsIndex++);
				if((flags & 8) != 0) {
					flagcount = points.readU8(pointsIndex++);
				}
			} else {
				--flagcount;
			}
			vertices[off + i1].type = flags;
		}
		x = 0;
		var _g12 = 0;
		var _g3 = n1;
		while(_g12 < _g3) {
			var i2 = _g12++;
			flags = vertices[off + i2].type;
			if((flags & 2) != 0) {
				var dx = points.readU8(pointsIndex++);
				x += (flags & 16) != 0 ? dx : -dx;
			} else if((flags & 16) == 0) {
				var value;
				var ch13 = points.readU8(pointsIndex);
				var ch23 = points.readU8(pointsIndex + 1);
				var n2 = ch23 | ch13 << 8;
				if((n2 & 32768) != 0) {
					value = n2 - 65536;
				} else {
					value = n2;
				}
				x += value;
				pointsIndex += 2;
			}
			vertices[off + i2].x = x;
		}
		y = 0;
		var _g13 = 0;
		var _g4 = n1;
		while(_g13 < _g4) {
			var i3 = _g13++;
			flags = vertices[off + i3].type;
			if((flags & 4) != 0) {
				var dy = points.readU8(pointsIndex++);
				y += (flags & 32) != 0 ? dy : -dy;
			} else if((flags & 32) == 0) {
				var value1;
				var ch14 = points.readU8(pointsIndex);
				var ch24 = points.readU8(pointsIndex + 1);
				var n3 = ch24 | ch14 << 8;
				if((n3 & 32768) != 0) {
					value1 = n3 - 65536;
				} else {
					value1 = n3;
				}
				y += value1;
				pointsIndex += 2;
			}
			vertices[off + i3].y = y;
		}
		num_vertices = 0;
		scy = 0;
		scx = scy;
		cy = scx;
		cx = cy;
		sy = cx;
		sx = sy;
		var i4 = 0;
		while(i4 < n1) {
			flags = vertices[off + i4].type;
			x = vertices[off + i4].x;
			y = vertices[off + i4].y;
			if(next_move == i4) {
				if(i4 != 0) {
					num_vertices = kha_graphics2_truetype_StbTruetype.stbtt__close_shape(vertices,num_vertices,was_off,start_off,sx,sy,scx,scy,cx,cy);
				}
				start_off = (flags & 1) == 0;
				if(start_off) {
					scx = x;
					scy = y;
					if((vertices[off + i4 + 1].type & 1) == 0) {
						sx = x + vertices[off + i4 + 1].x >> 1;
						sy = y + vertices[off + i4 + 1].y >> 1;
					} else {
						sx = vertices[off + i4 + 1].x;
						sy = vertices[off + i4 + 1].y;
						++i4;
					}
				} else {
					sx = x;
					sy = y;
				}
				kha_graphics2_truetype_StbTruetype.stbtt_setvertex(vertices[num_vertices++],1,sx,sy,0,0);
				was_off = false;
				var pos2 = j * 2;
				var ch15 = endPtsOfContours.readU8(pos2);
				var ch25 = endPtsOfContours.readU8(pos2 + 1);
				next_move = 1 + (ch25 | ch15 << 8);
				++j;
			} else if((flags & 1) == 0) {
				if(was_off) {
					kha_graphics2_truetype_StbTruetype.stbtt_setvertex(vertices[num_vertices++],3,cx + x >> 1,cy + y >> 1,cx,cy);
				}
				cx = x;
				cy = y;
				was_off = true;
			} else {
				if(was_off) {
					kha_graphics2_truetype_StbTruetype.stbtt_setvertex(vertices[num_vertices++],3,x,y,cx,cy);
				} else {
					kha_graphics2_truetype_StbTruetype.stbtt_setvertex(vertices[num_vertices++],2,x,y,0,0);
				}
				was_off = false;
			}
			++i4;
		}
		num_vertices = kha_graphics2_truetype_StbTruetype.stbtt__close_shape(vertices,num_vertices,was_off,start_off,sx,sy,scx,scy,cx,cy);
	} else if(numberOfContours == -1) {
		var more = 1;
		var comp = data.sub(g + 10,data.get_length() - (g + 10));
		var compIndex = 0;
		num_vertices = 0;
		vertices = null;
		while(more != 0) {
			var flags1;
			var gidx;
			var comp_num_verts = 0;
			var i5;
			var comp_verts = null;
			var tmp = null;
			var mtx0 = 1;
			var mtx1 = 0;
			var mtx2 = 0;
			var mtx3 = 1;
			var mtx4 = 0;
			var mtx5 = 0;
			var m1;
			var n4;
			var ch16 = comp.readU8(compIndex);
			var ch26 = comp.readU8(compIndex + 1);
			var n5 = ch26 | ch16 << 8;
			if((n5 & 32768) != 0) {
				flags1 = n5 - 65536;
			} else {
				flags1 = n5;
			}
			compIndex += 2;
			var ch17 = comp.readU8(compIndex);
			var ch27 = comp.readU8(compIndex + 1);
			var n6 = ch27 | ch17 << 8;
			if((n6 & 32768) != 0) {
				gidx = n6 - 65536;
			} else {
				gidx = n6;
			}
			compIndex += 2;
			if((flags1 & 2) != 0) {
				if((flags1 & 1) != 0) {
					var ch18 = comp.readU8(compIndex);
					var ch28 = comp.readU8(compIndex + 1);
					var n7 = ch28 | ch18 << 8;
					if((n7 & 32768) != 0) {
						mtx4 = n7 - 65536;
					} else {
						mtx4 = n7;
					}
					compIndex += 2;
					var ch19 = comp.readU8(compIndex);
					var ch29 = comp.readU8(compIndex + 1);
					var n8 = ch29 | ch19 << 8;
					if((n8 & 32768) != 0) {
						mtx5 = n8 - 65536;
					} else {
						mtx5 = n8;
					}
					compIndex += 2;
				} else {
					var n9 = comp.readU8(compIndex);
					if(n9 >= 128) {
						mtx4 = n9 - 256;
					} else {
						mtx4 = n9;
					}
					++compIndex;
					var n10 = comp.readU8(compIndex);
					if(n10 >= 128) {
						mtx5 = n10 - 256;
					} else {
						mtx5 = n10;
					}
					++compIndex;
				}
			} else {
				throw new js__$Boot_HaxeError("Error");
			}
			if((flags1 & 8) != 0) {
				var ch110 = comp.readU8(compIndex);
				var ch210 = comp.readU8(compIndex + 1);
				var n11 = ch210 | ch110 << 8;
				mtx3 = ((n11 & 32768) != 0 ? n11 - 65536 : n11) / 16384.0;
				mtx0 = mtx3;
				compIndex += 2;
				mtx2 = 0;
				mtx1 = mtx2;
			} else if((flags1 & 64) != 0) {
				var ch111 = comp.readU8(compIndex);
				var ch211 = comp.readU8(compIndex + 1);
				var n12 = ch211 | ch111 << 8;
				mtx0 = ((n12 & 32768) != 0 ? n12 - 65536 : n12) / 16384.0;
				compIndex += 2;
				mtx2 = 0;
				mtx1 = mtx2;
				var ch112 = comp.readU8(compIndex);
				var ch212 = comp.readU8(compIndex + 1);
				var n13 = ch212 | ch112 << 8;
				mtx3 = ((n13 & 32768) != 0 ? n13 - 65536 : n13) / 16384.0;
				compIndex += 2;
			} else if((flags1 & 128) != 0) {
				var ch113 = comp.readU8(compIndex);
				var ch213 = comp.readU8(compIndex + 1);
				var n14 = ch213 | ch113 << 8;
				mtx0 = ((n14 & 32768) != 0 ? n14 - 65536 : n14) / 16384.0;
				compIndex += 2;
				var ch114 = comp.readU8(compIndex);
				var ch214 = comp.readU8(compIndex + 1);
				var n15 = ch214 | ch114 << 8;
				mtx1 = ((n15 & 32768) != 0 ? n15 - 65536 : n15) / 16384.0;
				compIndex += 2;
				var ch115 = comp.readU8(compIndex);
				var ch215 = comp.readU8(compIndex + 1);
				var n16 = ch215 | ch115 << 8;
				mtx2 = ((n16 & 32768) != 0 ? n16 - 65536 : n16) / 16384.0;
				compIndex += 2;
				var ch116 = comp.readU8(compIndex);
				var ch216 = comp.readU8(compIndex + 1);
				var n17 = ch216 | ch116 << 8;
				mtx3 = ((n17 & 32768) != 0 ? n17 - 65536 : n17) / 16384.0;
				compIndex += 2;
			}
			m1 = Math.sqrt(mtx0 * mtx0 + mtx1 * mtx1);
			n4 = Math.sqrt(mtx2 * mtx2 + mtx3 * mtx3);
			comp_verts = kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphShape(info,gidx);
			if(comp_verts == null) {
				comp_num_verts = 0;
			} else {
				comp_num_verts = comp_verts.length;
			}
			if(comp_num_verts > 0) {
				var _g14 = 0;
				var _g5 = comp_num_verts;
				while(_g14 < _g5) {
					var i6 = _g14++;
					var v = comp_verts[i6];
					var x1;
					var y1;
					x1 = v.x;
					y1 = v.y;
					v.x = m1 * (mtx0 * x1 + mtx2 * y1 + mtx4) | 0;
					v.y = n4 * (mtx1 * x1 + mtx3 * y1 + mtx5) | 0;
					x1 = v.cx;
					y1 = v.cy;
					v.cx = m1 * (mtx0 * x1 + mtx2 * y1 + mtx4) | 0;
					v.cy = n4 * (mtx1 * x1 + mtx3 * y1 + mtx5) | 0;
				}
				var this2 = new Array(num_vertices + comp_num_verts);
				tmp = this2;
				if(tmp == null) {
					return null;
				}
				if(num_vertices > 0) {
					kha_graphics2_truetype_StbTruetype.copyVertices(vertices,tmp,0,num_vertices);
				}
				kha_graphics2_truetype_StbTruetype.copyVertices(comp_verts,tmp,num_vertices,comp_num_verts);
				vertices = tmp;
				num_vertices += comp_num_verts;
			}
			more = flags1 & 32;
		}
	} else if(numberOfContours < 0) {
		throw new js__$Boot_HaxeError("Error");
	}
	if(vertices == null) {
		return null;
	}
	if(vertices.length < num_vertices) {
		throw new js__$Boot_HaxeError("Error");
	}
	if(num_vertices < vertices.length) {
		var this3 = new Array(num_vertices);
		var tmp1 = this3;
		kha_graphics2_truetype_StbTruetype.copyVertices(vertices,tmp1,0,num_vertices);
		return tmp1;
	} else {
		return vertices;
	}
};
kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphHMetrics = function(info,glyph_index) {
	var p = info.data;
	var pos = info.hhea + 34;
	var ch1 = p.readU8(pos);
	var ch2 = p.readU8(pos + 1);
	var numOfLongHorMetrics = ch2 | ch1 << 8;
	var metrics = new kha_graphics2_truetype_Stbtt_$temp_$glyph_$h_$metrics();
	if(glyph_index < numOfLongHorMetrics) {
		var p1 = info.data;
		var pos1 = info.hmtx + 4 * glyph_index;
		var ch11 = p1.readU8(pos1);
		var ch21 = p1.readU8(pos1 + 1);
		var n = ch21 | ch11 << 8;
		metrics.advanceWidth = (n & 32768) != 0 ? n - 65536 : n;
		var p2 = info.data;
		var pos2 = info.hmtx + 4 * glyph_index + 2;
		var ch12 = p2.readU8(pos2);
		var ch22 = p2.readU8(pos2 + 1);
		var n1 = ch22 | ch12 << 8;
		metrics.leftSideBearing = (n1 & 32768) != 0 ? n1 - 65536 : n1;
	} else {
		var p3 = info.data;
		var pos3 = info.hmtx + 4 * (numOfLongHorMetrics - 1);
		var ch13 = p3.readU8(pos3);
		var ch23 = p3.readU8(pos3 + 1);
		var n2 = ch23 | ch13 << 8;
		metrics.advanceWidth = (n2 & 32768) != 0 ? n2 - 65536 : n2;
		var p4 = info.data;
		var pos4 = info.hmtx + 4 * numOfLongHorMetrics + 2 * (glyph_index - numOfLongHorMetrics);
		var ch14 = p4.readU8(pos4);
		var ch24 = p4.readU8(pos4 + 1);
		var n3 = ch24 | ch14 << 8;
		metrics.leftSideBearing = (n3 & 32768) != 0 ? n3 - 65536 : n3;
	}
	return metrics;
};
kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphKernAdvance = function(info,glyph1,glyph2) {
	var data = info.data.sub(info.kern,info.data.get_length() - info.kern);
	var needle;
	var straw;
	var l;
	var r;
	var m;
	if(info.kern == 0) {
		return 0;
	}
	var ch1 = data.readU8(2);
	var ch2 = data.readU8(3);
	if((ch2 | ch1 << 8) < 1) {
		return 0;
	}
	var ch11 = data.readU8(8);
	var ch21 = data.readU8(9);
	if((ch21 | ch11 << 8) != 1) {
		return 0;
	}
	l = 0;
	var ch12 = data.readU8(10);
	var ch22 = data.readU8(11);
	r = (ch22 | ch12 << 8) - 1;
	needle = glyph1 << 16 | glyph2;
	while(l <= r) {
		m = l + r >> 1;
		var pos = 18 + m * 6;
		var ch13 = data.readU8(pos);
		var ch23 = data.readU8(pos + 1);
		var ch3 = data.readU8(pos + 2);
		var ch4 = data.readU8(pos + 3);
		straw = ch4 | ch3 << 8 | ch23 << 16 | ch13 << 24;
		if(needle < straw) {
			r = m - 1;
		} else if(needle > straw) {
			l = m + 1;
		} else {
			var pos1 = 22 + m * 6;
			var ch14 = data.readU8(pos1);
			var ch24 = data.readU8(pos1 + 1);
			var n = ch24 | ch14 << 8;
			if((n & 32768) != 0) {
				return n - 65536;
			} else {
				return n;
			}
		}
	}
	return 0;
};
kha_graphics2_truetype_StbTruetype.stbtt_GetCodepointKernAdvance = function(info,ch1,ch2) {
	if(info.kern == 0) {
		return 0;
	}
	return kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphKernAdvance(info,kha_graphics2_truetype_StbTruetype.stbtt_FindGlyphIndex(info,ch1),kha_graphics2_truetype_StbTruetype.stbtt_FindGlyphIndex(info,ch2));
};
kha_graphics2_truetype_StbTruetype.stbtt_GetCodepointHMetrics = function(info,codepoint) {
	return kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphHMetrics(info,kha_graphics2_truetype_StbTruetype.stbtt_FindGlyphIndex(info,codepoint));
};
kha_graphics2_truetype_StbTruetype.stbtt_GetFontVMetrics = function(info) {
	var metrics = new kha_graphics2_truetype_Stbtt_$temp_$font_$v_$metrics();
	var p = info.data;
	var pos = info.hhea + 4;
	var ch1 = p.readU8(pos);
	var ch2 = p.readU8(pos + 1);
	var n = ch2 | ch1 << 8;
	metrics.ascent = (n & 32768) != 0 ? n - 65536 : n;
	var p1 = info.data;
	var pos1 = info.hhea + 6;
	var ch11 = p1.readU8(pos1);
	var ch21 = p1.readU8(pos1 + 1);
	var n1 = ch21 | ch11 << 8;
	metrics.descent = (n1 & 32768) != 0 ? n1 - 65536 : n1;
	var p2 = info.data;
	var pos2 = info.hhea + 8;
	var ch12 = p2.readU8(pos2);
	var ch22 = p2.readU8(pos2 + 1);
	var n2 = ch22 | ch12 << 8;
	metrics.lineGap = (n2 & 32768) != 0 ? n2 - 65536 : n2;
	return metrics;
};
kha_graphics2_truetype_StbTruetype.stbtt_GetFontBoundingBox = function(info) {
	var rect = new kha_graphics2_truetype_Stbtt_$temp_$rect();
	var p = info.data;
	var pos = info.head + 36;
	var ch1 = p.readU8(pos);
	var ch2 = p.readU8(pos + 1);
	var n = ch2 | ch1 << 8;
	rect.x0 = (n & 32768) != 0 ? n - 65536 : n;
	var p1 = info.data;
	var pos1 = info.head + 38;
	var ch11 = p1.readU8(pos1);
	var ch21 = p1.readU8(pos1 + 1);
	var n1 = ch21 | ch11 << 8;
	rect.y0 = (n1 & 32768) != 0 ? n1 - 65536 : n1;
	var p2 = info.data;
	var pos2 = info.head + 40;
	var ch12 = p2.readU8(pos2);
	var ch22 = p2.readU8(pos2 + 1);
	var n2 = ch22 | ch12 << 8;
	rect.x1 = (n2 & 32768) != 0 ? n2 - 65536 : n2;
	var p3 = info.data;
	var pos3 = info.head + 42;
	var ch13 = p3.readU8(pos3);
	var ch23 = p3.readU8(pos3 + 1);
	var n3 = ch23 | ch13 << 8;
	rect.y1 = (n3 & 32768) != 0 ? n3 - 65536 : n3;
	return rect;
};
kha_graphics2_truetype_StbTruetype.stbtt_ScaleForPixelHeight = function(info,height) {
	var p = info.data;
	var pos = info.hhea + 4;
	var ch1 = p.readU8(pos);
	var ch2 = p.readU8(pos + 1);
	var n = ch2 | ch1 << 8;
	var p1 = info.data;
	var pos1 = info.hhea + 6;
	var ch11 = p1.readU8(pos1);
	var ch21 = p1.readU8(pos1 + 1);
	var n1 = ch21 | ch11 << 8;
	var fheight = ((n & 32768) != 0 ? n - 65536 : n) - ((n1 & 32768) != 0 ? n1 - 65536 : n1);
	return height / fheight;
};
kha_graphics2_truetype_StbTruetype.stbtt_ScaleForMappingEmToPixels = function(info,pixels) {
	var p = info.data;
	var pos = info.head + 18;
	var ch1 = p.readU8(pos);
	var ch2 = p.readU8(pos + 1);
	var unitsPerEm = ch2 | ch1 << 8;
	return pixels / unitsPerEm;
};
kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphBitmapBoxSubpixel = function(font,glyph,scale_x,scale_y,shift_x,shift_y) {
	var rect = new kha_graphics2_truetype_Stbtt_$temp_$rect();
	if(!kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphBox(font,glyph,rect)) {
		rect.x0 = 0;
		rect.y0 = 0;
		rect.x1 = 0;
		rect.y1 = 0;
	} else {
		var x0 = rect.x0;
		var x1 = rect.x1;
		var y0 = rect.y0;
		var y1 = rect.y1;
		rect.x0 = Math.floor(x0 * scale_x + shift_x);
		rect.y0 = Math.floor(-y1 * scale_y + shift_y);
		rect.x1 = Math.ceil(x1 * scale_x + shift_x);
		rect.y1 = Math.ceil(-y0 * scale_y + shift_y);
	}
	return rect;
};
kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphBitmapBox = function(font,glyph,scale_x,scale_y) {
	return kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphBitmapBoxSubpixel(font,glyph,scale_x,scale_y,0.0,0.0);
};
kha_graphics2_truetype_StbTruetype.stbtt_GetCodepointBitmapBoxSubpixel = function(font,codepoint,scale_x,scale_y,shift_x,shift_y) {
	return kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphBitmapBoxSubpixel(font,kha_graphics2_truetype_StbTruetype.stbtt_FindGlyphIndex(font,codepoint),scale_x,scale_y,shift_x,shift_y);
};
kha_graphics2_truetype_StbTruetype.stbtt_GetCodepointBitmapBox = function(font,codepoint,scale_x,scale_y) {
	return kha_graphics2_truetype_StbTruetype.stbtt_GetCodepointBitmapBoxSubpixel(font,codepoint,scale_x,scale_y,0.0,0.0);
};
kha_graphics2_truetype_StbTruetype.stbtt__new_active = function(e,eIndex,off_x,start_point) {
	var z = new kha_graphics2_truetype_Stbtt_$_$active_$edge();
	var dxdy = (e[eIndex].x1 - e[eIndex].x0) / (e[eIndex].y1 - e[eIndex].y0);
	if(z == null) {
		return z;
	}
	z.fdx = dxdy;
	z.fdy = dxdy != 0.0 ? 1.0 / dxdy : 0.0;
	z.fx = e[eIndex].x0 + dxdy * (start_point - e[eIndex].y0);
	z.fx -= off_x;
	z.direction = e[eIndex].invert ? 1.0 : -1.0;
	z.sy = e[eIndex].y0;
	z.ey = e[eIndex].y1;
	z.next = null;
	return z;
};
kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge = function(scanline,scanlineIndex,x,e,x0,y0,x1,y1) {
	if(y0 == y1) {
		return;
	}
	if(!(y0 < y1)) {
		throw new js__$Boot_HaxeError("Error");
	}
	if(!(e.sy <= e.ey)) {
		throw new js__$Boot_HaxeError("Error");
	}
	if(y0 > e.ey) {
		return;
	}
	if(y1 < e.sy) {
		return;
	}
	if(y0 < e.sy) {
		x0 += (x1 - x0) * (e.sy - y0) / (y1 - y0);
		y0 = e.sy;
	}
	if(y1 > e.ey) {
		x1 += (x1 - x0) * (e.ey - y1) / (y1 - y0);
		y1 = e.ey;
	}
	if(x0 == x) {
		if(!(x1 <= x + 1)) {
			throw new js__$Boot_HaxeError("Error");
		}
	} else if(x0 == x + 1) {
		if(!(x1 >= x)) {
			throw new js__$Boot_HaxeError("Error");
		}
	} else if(x0 <= x) {
		if(!(x1 <= x)) {
			throw new js__$Boot_HaxeError("Error");
		}
	} else if(x0 >= x + 1) {
		if(!(x1 >= x + 1)) {
			throw new js__$Boot_HaxeError("Error");
		}
	} else if(!(x1 >= x && x1 <= x + 1)) {
		throw new js__$Boot_HaxeError("Error");
	}
	if(x0 <= x && x1 <= x) {
		var _g = scanlineIndex + x;
		var _g1 = scanline;
		_g1[_g] = _g1[_g] + e.direction * (y1 - y0);
	} else if(!(x0 >= x + 1 && x1 >= x + 1)) {
		if(!(x0 >= x && x0 <= x + 1 && x1 >= x && x1 <= x + 1)) {
			throw new js__$Boot_HaxeError("Error");
		}
		var _g2 = scanlineIndex + x;
		var _g11 = scanline;
		_g11[_g2] = _g11[_g2] + e.direction * (y1 - y0) * (1 - (x0 - x + (x1 - x)) / 2);
	}
};
kha_graphics2_truetype_StbTruetype.stbtt__fill_active_edges_new = function(scanline,scanline_fill,scanline_fillIndex,len,e,y_top) {
	var y_bottom = y_top + 1;
	while(e != null) {
		if(!(e.ey >= y_top)) {
			throw new js__$Boot_HaxeError("Error");
		}
		if(e.fdx == 0) {
			var x0 = e.fx;
			if(x0 < len) {
				if(x0 >= 0) {
					kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x0 | 0,e,x0,y_top,x0,y_bottom);
					kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline_fill,scanline_fillIndex - 1,x0 + 1 | 0,e,x0,y_top,x0,y_bottom);
				} else {
					kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline_fill,scanline_fillIndex - 1,0,e,x0,y_top,x0,y_bottom);
				}
			}
		} else {
			var x01 = e.fx;
			var dx = e.fdx;
			var xb = x01 + dx;
			var x_top;
			var x_bottom;
			var sy0;
			var sy1;
			var dy = e.fdy;
			if(!(e.sy <= y_bottom && e.ey >= y_top)) {
				throw new js__$Boot_HaxeError("Error");
			}
			if(e.sy > y_top) {
				x_top = x01 + dx * (e.sy - y_top);
				sy0 = e.sy;
			} else {
				x_top = x01;
				sy0 = y_top;
			}
			if(e.ey < y_bottom) {
				x_bottom = x01 + dx * (e.ey - y_top);
				sy1 = e.ey;
			} else {
				x_bottom = xb;
				sy1 = y_bottom;
			}
			if(x_top >= 0 && x_bottom >= 0 && x_top < len && x_bottom < len) {
				if((x_top | 0) == (x_bottom | 0)) {
					var height;
					var x = x_top | 0;
					height = sy1 - sy0;
					if(!(x >= 0 && x < len)) {
						throw new js__$Boot_HaxeError("Error");
					}
					var _g = x;
					var _g1 = scanline;
					_g1[_g] = _g1[_g] + e.direction * (1 - (x_top - x + (x_bottom - x)) / 2) * height;
					var _g2 = scanline_fillIndex + x;
					var _g11 = scanline_fill;
					_g11[_g2] = _g11[_g2] + e.direction * height;
				} else {
					var x1;
					var x11;
					var x2;
					var y_crossing;
					var step;
					var sign;
					var area;
					if(x_top > x_bottom) {
						var t;
						sy0 = y_bottom - (sy0 - y_top);
						sy1 = y_bottom - (sy1 - y_top);
						t = sy0;
						sy0 = sy1;
						sy1 = t;
						t = x_bottom;
						x_bottom = x_top;
						x_top = t;
						dx = -dx;
						dy = -dy;
						t = x01;
						x01 = xb;
						xb = t;
					}
					x11 = x_top | 0;
					x2 = x_bottom | 0;
					y_crossing = (x11 + 1 - x01) * dy + y_top;
					sign = e.direction;
					area = sign * (y_crossing - sy0);
					var _g3 = x11;
					var _g12 = scanline;
					_g12[_g3] = _g12[_g3] + area * (1 - (x_top - x11 + (x11 + 1 - x11)) / 2);
					step = sign * dy;
					var _g13 = x11 + 1;
					var _g4 = x2;
					while(_g13 < _g4) {
						var x3 = _g13++;
						var _g21 = x3;
						var _g31 = scanline;
						_g31[_g21] = _g31[_g21] + (area + step / 2);
						area += step;
					}
					y_crossing += dy * (x2 - (x11 + 1));
					if(!(Math.abs(area) <= 1.01)) {
						throw new js__$Boot_HaxeError("Error");
					}
					var _g5 = x2;
					var _g14 = scanline;
					_g14[_g5] = _g14[_g5] + (area + sign * (1 - (x2 - x2 + (x_bottom - x2)) / 2) * (sy1 - y_crossing));
					var _g6 = scanline_fillIndex + x2;
					var _g15 = scanline_fill;
					_g15[_g6] = _g15[_g6] + sign * (sy1 - sy0);
				}
			} else {
				var _g16 = 0;
				var _g7 = len;
				while(_g16 < _g7) {
					var x4 = _g16++;
					var y0 = y_top;
					var x12 = x4;
					var x21 = x4 + 1;
					var x31 = xb;
					var y3 = y_bottom;
					var y1;
					var y2;
					y1 = (x4 - x01) / dx + y_top;
					y2 = (x4 + 1 - x01) / dx + y_top;
					if(x01 < x12 && x31 > x21) {
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x01,y0,x12,y1);
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x12,y1,x21,y2);
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x21,y2,x31,y3);
					} else if(x31 < x12 && x01 > x21) {
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x01,y0,x21,y2);
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x21,y2,x12,y1);
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x12,y1,x31,y3);
					} else if(x01 < x12 && x31 > x12) {
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x01,y0,x12,y1);
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x12,y1,x31,y3);
					} else if(x31 < x12 && x01 > x12) {
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x01,y0,x12,y1);
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x12,y1,x31,y3);
					} else if(x01 < x21 && x31 > x21) {
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x01,y0,x21,y2);
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x21,y2,x31,y3);
					} else if(x31 < x21 && x01 > x21) {
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x01,y0,x21,y2);
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x21,y2,x31,y3);
					} else {
						kha_graphics2_truetype_StbTruetype.stbtt__handle_clipped_edge(scanline,0,x4,e,x01,y0,x31,y3);
					}
				}
			}
		}
		e = e.next;
	}
};
kha_graphics2_truetype_StbTruetype.stbtt__rasterize_sorted_edges = function(result,e,n,vsubsample,off_x,off_y) {
	var active = null;
	var y;
	var j = 0;
	var i;
	var scanline;
	var scanline2;
	var scanline2Index = 0;
	var eIndex = 0;
	if(result.w > 64) {
		var length = result.w * 2 + 1;
		var this1 = new Array(length);
		scanline = this1;
	} else {
		var this2 = new Array(129);
		scanline = this2;
	}
	scanline2 = scanline;
	scanline2Index = result.w;
	y = off_y;
	e[eIndex + n].y0 = off_y + result.h + 1;
	while(j < result.h) {
		var scan_y_top = y + 0.0;
		var scan_y_bottom = y + 1.0;
		var step_value;
		var step_parent;
		step_value = active;
		step_parent = null;
		var _g1 = 0;
		var _g = result.w;
		while(_g1 < _g) {
			var i1 = _g1++;
			scanline[i1] = 0;
		}
		var _g11 = 0;
		var _g2 = result.w + 1;
		while(_g11 < _g2) {
			var i2 = _g11++;
			scanline2[scanline2Index + i2] = 0;
		}
		while(step_value != null) {
			var z = step_value;
			if(z.ey <= scan_y_top) {
				if(step_parent == null) {
					active = z.next;
					step_value = z.next;
				} else {
					step_parent.next = z.next;
					step_value = z.next;
				}
				if(z.direction == 0) {
					throw new js__$Boot_HaxeError("Error");
				}
				z.direction = 0;
			} else {
				step_parent = step_value;
				step_value = step_value.next;
			}
		}
		while(e[eIndex].y0 <= scan_y_bottom) {
			if(e[eIndex].y0 != e[eIndex].y1) {
				var z1 = kha_graphics2_truetype_StbTruetype.stbtt__new_active(e,eIndex,off_x,scan_y_top);
				if(!(z1.ey >= scan_y_top)) {
					throw new js__$Boot_HaxeError("Error");
				}
				z1.next = active;
				active = z1;
			}
			++eIndex;
		}
		if(active != null) {
			kha_graphics2_truetype_StbTruetype.stbtt__fill_active_edges_new(scanline,scanline2,scanline2Index + 1,result.w,active,scan_y_top);
		}
		var sum = 0;
		var _g12 = 0;
		var _g3 = result.w;
		while(_g12 < _g3) {
			var i3 = _g12++;
			var k;
			var m;
			sum += scanline2[scanline2Index + i3];
			k = scanline[i3] + sum;
			k = Math.abs(k) * 255.0 + 0.5;
			m = k | 0;
			if(m > 255) {
				m = 255;
			}
			result.pixels.writeU8(result.pixels_offset + j * result.stride + i3,m);
		}
		step_parent = null;
		step_value = active;
		while(step_value != null) {
			var z2 = step_value;
			z2.fx += z2.fdx;
			step_parent = step_value;
			step_value = step_value.next;
		}
		++y;
		++j;
	}
};
kha_graphics2_truetype_StbTruetype.STBTT__COMPARE = function(a,b) {
	return a.y0 < b.y0;
};
kha_graphics2_truetype_StbTruetype.stbtt__sort_edges_ins_sort = function(p,n) {
	var i;
	var j;
	var _g1 = 1;
	var _g = n;
	while(_g1 < _g) {
		var i1 = _g1++;
		var t = p[i1];
		var a = t;
		j = i1;
		while(j > 0) {
			var b = p[j - 1];
			var c = kha_graphics2_truetype_StbTruetype.STBTT__COMPARE(a,b);
			if(!c) {
				break;
			}
			p[j] = p[j - 1];
			--j;
		}
		if(i1 != j) {
			p[j] = t;
		}
	}
};
kha_graphics2_truetype_StbTruetype.stbtt__sort_edges_quicksort = function(p,pIndex,n) {
	while(n > 12) {
		var t;
		var c01;
		var c12;
		var c;
		var m;
		var i;
		var j;
		m = n >> 1;
		c01 = kha_graphics2_truetype_StbTruetype.STBTT__COMPARE(p[pIndex],p[pIndex + m]);
		c12 = kha_graphics2_truetype_StbTruetype.STBTT__COMPARE(p[pIndex + m],p[pIndex + n - 1]);
		if(c01 != c12) {
			var z;
			c = kha_graphics2_truetype_StbTruetype.STBTT__COMPARE(p[pIndex],p[pIndex + n - 1]);
			if(c == c12) {
				z = 0;
			} else {
				z = n - 1;
			}
			t = p[pIndex + z];
			p[pIndex + z] = p[pIndex + m];
			p[pIndex + m] = t;
		}
		t = p[pIndex];
		p[pIndex] = p[pIndex + m];
		p[pIndex + m] = t;
		i = 1;
		j = n - 1;
		while(true) {
			while(kha_graphics2_truetype_StbTruetype.STBTT__COMPARE(p[pIndex + i],p[pIndex])) ++i;
			while(kha_graphics2_truetype_StbTruetype.STBTT__COMPARE(p[pIndex],p[pIndex + j])) --j;
			if(i >= j) {
				break;
			}
			t = p[pIndex + i];
			p[pIndex + i] = p[pIndex + j];
			p[pIndex + j] = t;
			++i;
			--j;
		}
		if(j < n - i) {
			kha_graphics2_truetype_StbTruetype.stbtt__sort_edges_quicksort(p,pIndex,j);
			pIndex += i;
			n -= i;
		} else {
			kha_graphics2_truetype_StbTruetype.stbtt__sort_edges_quicksort(p,pIndex + i,n - i);
			n = j;
		}
	}
};
kha_graphics2_truetype_StbTruetype.stbtt__sort_edges = function(p,n) {
	kha_graphics2_truetype_StbTruetype.stbtt__sort_edges_quicksort(p,0,n);
	kha_graphics2_truetype_StbTruetype.stbtt__sort_edges_ins_sort(p,n);
};
kha_graphics2_truetype_StbTruetype.stbtt__rasterize = function(result,pts,wcount,windings,scale_x,scale_y,shift_x,shift_y,off_x,off_y,invert) {
	var y_scale_inv = invert ? -scale_y : scale_y;
	var e;
	var n;
	var i;
	var j;
	var k;
	var m;
	var vsubsample = 1;
	var ptsIndex = 0;
	n = 0;
	var _g1 = 0;
	var _g = windings;
	while(_g1 < _g) {
		var i1 = _g1++;
		n += wcount[i1];
	}
	var this1 = new Array(n + 1);
	e = this1;
	if(e == null) {
		return;
	} else {
		var _g11 = 0;
		var _g2 = e.length;
		while(_g11 < _g2) {
			var i2 = _g11++;
			e[i2] = new kha_graphics2_truetype_Stbtt_$_$edge();
		}
	}
	n = 0;
	m = 0;
	var _g12 = 0;
	var _g3 = windings;
	while(_g12 < _g3) {
		var i3 = _g12++;
		var p = pts;
		var pIndex = ptsIndex + m;
		m += wcount[i3];
		j = wcount[i3] - 1;
		var _g31 = 0;
		var _g21 = wcount[i3];
		while(_g31 < _g21) {
			var k1 = _g31++;
			var a = k1;
			var b = j;
			if(p[pIndex + j].y == p[pIndex + k1].y) {
				j = k1;
				continue;
			}
			e[n].invert = false;
			if(invert ? p[pIndex + j].y > p[pIndex + k1].y : p[pIndex + j].y < p[pIndex + k1].y) {
				e[n].invert = true;
				a = j;
				b = k1;
			}
			e[n].x0 = p[pIndex + a].x * scale_x + shift_x;
			e[n].y0 = (p[pIndex + a].y * y_scale_inv + shift_y) * vsubsample;
			e[n].x1 = p[pIndex + b].x * scale_x + shift_x;
			e[n].y1 = (p[pIndex + b].y * y_scale_inv + shift_y) * vsubsample;
			++n;
			j = k1;
		}
	}
	kha_graphics2_truetype_StbTruetype.stbtt__sort_edges(e,n);
	kha_graphics2_truetype_StbTruetype.stbtt__rasterize_sorted_edges(result,e,n,vsubsample,off_x,off_y);
};
kha_graphics2_truetype_StbTruetype.stbtt__add_point = function(points,n,x,y) {
	if(points == null) {
		return;
	}
	points[n].x = x;
	points[n].y = y;
};
kha_graphics2_truetype_StbTruetype.stbtt__tesselate_curve = function(points,num_points,x0,y0,x1,y1,x2,y2,objspace_flatness_squared,n) {
	var mx = (x0 + 2 * x1 + x2) / 4;
	var my = (y0 + 2 * y1 + y2) / 4;
	var dx = (x0 + x2) / 2 - mx;
	var dy = (y0 + y2) / 2 - my;
	if(n > 16) {
		return 1;
	}
	if(dx * dx + dy * dy > objspace_flatness_squared) {
		kha_graphics2_truetype_StbTruetype.stbtt__tesselate_curve(points,num_points,x0,y0,(x0 + x1) / 2.0,(y0 + y1) / 2.0,mx,my,objspace_flatness_squared,n + 1);
		kha_graphics2_truetype_StbTruetype.stbtt__tesselate_curve(points,num_points,mx,my,(x1 + x2) / 2.0,(y1 + y2) / 2.0,x2,y2,objspace_flatness_squared,n + 1);
	} else {
		kha_graphics2_truetype_StbTruetype.stbtt__add_point(points,num_points.value,x2,y2);
		num_points.value += 1;
	}
	return 1;
};
kha_graphics2_truetype_StbTruetype.stbtt_FlattenCurves = function(vertices,num_verts,objspace_flatness,contour_lengths,num_contours) {
	var points = null;
	var num_points = 0;
	var objspace_flatness_squared = objspace_flatness * objspace_flatness;
	var i;
	var n = 0;
	var start = 0;
	var pass;
	var _g1 = 0;
	var _g = num_verts;
	while(_g1 < _g) {
		var i1 = _g1++;
		if(vertices[i1].type == 1) {
			++n;
		}
	}
	num_contours.value = n;
	if(n == 0) {
		return null;
	}
	var this1 = new Array(n);
	contour_lengths.value = this1;
	if(contour_lengths.value == null) {
		num_contours.value = 0;
		return null;
	}
	var _g2 = 0;
	while(_g2 < 2) {
		var pass1 = _g2++;
		var x = 0;
		var y = 0;
		if(pass1 == 1) {
			var this2 = new Array(num_points);
			points = this2;
			if(points == null) {
				contour_lengths.value = null;
				num_contours.value = 0;
				return null;
			} else {
				var _g21 = 0;
				var _g11 = points.length;
				while(_g21 < _g11) {
					var i2 = _g21++;
					points[i2] = new kha_graphics2_truetype_Stbtt_$_$point();
				}
			}
		}
		num_points = 0;
		n = -1;
		var _g22 = 0;
		var _g12 = num_verts;
		while(_g22 < _g12) {
			var i3 = _g22++;
			var _g3 = vertices[i3].type;
			switch(_g3) {
			case 1:
				if(n >= 0) {
					contour_lengths.value[n] = num_points - start;
				}
				++n;
				start = num_points;
				x = vertices[i3].x;
				y = vertices[i3].y;
				kha_graphics2_truetype_StbTruetype.stbtt__add_point(points,num_points++,x,y);
				break;
			case 2:
				x = vertices[i3].x;
				y = vertices[i3].y;
				kha_graphics2_truetype_StbTruetype.stbtt__add_point(points,num_points++,x,y);
				break;
			case 3:
				var num_points_reference = { value : num_points};
				kha_graphics2_truetype_StbTruetype.stbtt__tesselate_curve(points,num_points_reference,x,y,vertices[i3].cx,vertices[i3].cy,vertices[i3].x,vertices[i3].y,objspace_flatness_squared,0);
				num_points = num_points_reference.value;
				x = vertices[i3].x;
				y = vertices[i3].y;
				break;
			}
		}
		contour_lengths.value[n] = num_points - start;
	}
	return points;
};
kha_graphics2_truetype_StbTruetype.stbtt_Rasterize = function(result,flatness_in_pixels,vertices,num_verts,scale_x,scale_y,shift_x,shift_y,x_off,y_off,invert) {
	var scale = scale_x > scale_y ? scale_y : scale_x;
	var winding_count = 0;
	var winding_lengths = null;
	var winding_count_reference = { value : winding_count};
	var winding_lengths_reference = new kha_graphics2_truetype_VectorOfIntPointer();
	var windings = kha_graphics2_truetype_StbTruetype.stbtt_FlattenCurves(vertices,num_verts,flatness_in_pixels / scale,winding_lengths_reference,winding_count_reference);
	winding_count = winding_count_reference.value;
	winding_lengths = winding_lengths_reference.value;
	if(windings != null) {
		kha_graphics2_truetype_StbTruetype.stbtt__rasterize(result,windings,winding_lengths,winding_count,scale_x,scale_y,shift_x,shift_y,x_off,y_off,invert);
	}
};
kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphBitmapSubpixel = function(info,scale_x,scale_y,shift_x,shift_y,glyph,region) {
	var ix0;
	var iy0;
	var ix1;
	var iy1;
	var gbm = new kha_graphics2_truetype_Stbtt_$_$bitmap();
	var vertices = kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphShape(info,glyph);
	var num_verts = vertices.length;
	if(scale_x == 0) {
		scale_x = scale_y;
	}
	if(scale_y == 0) {
		if(scale_x == 0) {
			return null;
		}
		scale_y = scale_x;
	}
	var rect = kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphBitmapBoxSubpixel(info,glyph,scale_x,scale_y,shift_x,shift_y);
	ix0 = rect.x0;
	iy0 = rect.y0;
	ix1 = rect.x1;
	iy1 = rect.y1;
	gbm.w = ix1 - ix0;
	gbm.h = iy1 - iy0;
	gbm.pixels = null;
	region.width = gbm.w;
	region.height = gbm.h;
	region.xoff = ix0;
	region.yoff = iy0;
	if(gbm.w != 0 && gbm.h != 0) {
		gbm.pixels = kha_internal_BytesBlob.alloc(gbm.w * gbm.h);
		if(gbm.pixels != null) {
			gbm.stride = gbm.w;
			kha_graphics2_truetype_StbTruetype.stbtt_Rasterize(gbm,0.35,vertices,num_verts,scale_x,scale_y,shift_x,shift_y,ix0,iy0,true);
		}
	}
	return gbm.pixels;
};
kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphBitmap = function(info,scale_x,scale_y,glyph,region) {
	return kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphBitmapSubpixel(info,scale_x,scale_y,0.0,0.0,glyph,region);
};
kha_graphics2_truetype_StbTruetype.stbtt_MakeGlyphBitmapSubpixel = function(info,output,output_offset,out_w,out_h,out_stride,scale_x,scale_y,shift_x,shift_y,glyph) {
	var ix0 = 0;
	var iy0 = 0;
	var vertices = kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphShape(info,glyph);
	var num_verts = vertices == null ? 0 : vertices.length;
	var gbm = new kha_graphics2_truetype_Stbtt_$_$bitmap();
	var rect = kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphBitmapBoxSubpixel(info,glyph,scale_x,scale_y,shift_x,shift_y);
	ix0 = rect.x0;
	iy0 = rect.y0;
	gbm.pixels = output;
	gbm.pixels_offset = output_offset;
	gbm.w = out_w;
	gbm.h = out_h;
	gbm.stride = out_stride;
	if(gbm.w != 0 && gbm.h != 0) {
		kha_graphics2_truetype_StbTruetype.stbtt_Rasterize(gbm,0.35,vertices,num_verts,scale_x,scale_y,shift_x,shift_y,ix0,iy0,true);
	}
};
kha_graphics2_truetype_StbTruetype.stbtt_MakeGlyphBitmap = function(info,output,output_offset,out_w,out_h,out_stride,scale_x,scale_y,glyph) {
	kha_graphics2_truetype_StbTruetype.stbtt_MakeGlyphBitmapSubpixel(info,output,output_offset,out_w,out_h,out_stride,scale_x,scale_y,0.0,0.0,glyph);
};
kha_graphics2_truetype_StbTruetype.stbtt_GetCodepointBitmapSubpixel = function(info,scale_x,scale_y,shift_x,shift_y,codepoint,region) {
	return kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphBitmapSubpixel(info,scale_x,scale_y,shift_x,shift_y,kha_graphics2_truetype_StbTruetype.stbtt_FindGlyphIndex(info,codepoint),region);
};
kha_graphics2_truetype_StbTruetype.stbtt_MakeCodepointBitmapSubpixel = function(info,output,output_offset,out_w,out_h,out_stride,scale_x,scale_y,shift_x,shift_y,codepoint) {
	kha_graphics2_truetype_StbTruetype.stbtt_MakeGlyphBitmapSubpixel(info,output,output_offset,out_w,out_h,out_stride,scale_x,scale_y,shift_x,shift_y,kha_graphics2_truetype_StbTruetype.stbtt_FindGlyphIndex(info,codepoint));
};
kha_graphics2_truetype_StbTruetype.stbtt_GetCodepointBitmap = function(info,scale_x,scale_y,codepoint,region) {
	return kha_graphics2_truetype_StbTruetype.stbtt_GetCodepointBitmapSubpixel(info,scale_x,scale_y,0.0,0.0,codepoint,region);
};
kha_graphics2_truetype_StbTruetype.stbtt_MakeCodepointBitmap = function(info,output,output_offset,out_w,out_h,out_stride,scale_x,scale_y,codepoint) {
	kha_graphics2_truetype_StbTruetype.stbtt_MakeCodepointBitmapSubpixel(info,output,output_offset,out_w,out_h,out_stride,scale_x,scale_y,0.0,0.0,codepoint);
};
kha_graphics2_truetype_StbTruetype.stbtt_BakeFontBitmap = function(data,offset,pixel_height,pixels,pw,ph,chars,chardata) {
	var scale;
	var x;
	var y;
	var bottom_y;
	var f = new kha_graphics2_truetype_Stbtt_$fontinfo();
	if(!kha_graphics2_truetype_StbTruetype.stbtt_InitFont(f,data,offset)) {
		return -1;
	}
	var _g1 = 0;
	var _g = pw * ph;
	while(_g1 < _g) {
		var i = _g1++;
		pixels.writeU8(i,0);
	}
	y = 1;
	x = y;
	bottom_y = 1;
	scale = kha_graphics2_truetype_StbTruetype.stbtt_ScaleForPixelHeight(f,pixel_height);
	var i1 = 0;
	var _g2 = 0;
	while(_g2 < chars.length) {
		var index = chars[_g2];
		++_g2;
		var advance;
		var lsb;
		var x0;
		var y0;
		var x1;
		var y1;
		var gw;
		var gh;
		var g = kha_graphics2_truetype_StbTruetype.stbtt_FindGlyphIndex(f,index);
		var metrics = kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphHMetrics(f,g);
		advance = metrics.advanceWidth;
		lsb = metrics.leftSideBearing;
		var rect = kha_graphics2_truetype_StbTruetype.stbtt_GetGlyphBitmapBox(f,g,scale,scale);
		x0 = rect.x0;
		y0 = rect.y0;
		x1 = rect.x1;
		y1 = rect.y1;
		gw = x1 - x0;
		gh = y1 - y0;
		if(x + gw + 1 >= pw) {
			y = bottom_y;
			x = 1;
		}
		if(y + gh + 1 >= ph) {
			return -i1;
		}
		if(x + gw >= pw) {
			throw new js__$Boot_HaxeError("Error");
		}
		if(y + gh >= ph) {
			throw new js__$Boot_HaxeError("Error");
		}
		kha_graphics2_truetype_StbTruetype.stbtt_MakeGlyphBitmap(f,pixels,x + y * pw,gw,gh,pw,scale,scale,g);
		chardata[i1].x0 = x;
		chardata[i1].y0 = y;
		chardata[i1].x1 = x + gw;
		chardata[i1].y1 = y + gh;
		chardata[i1].xadvance = scale * advance;
		chardata[i1].xoff = x0;
		chardata[i1].yoff = y0;
		x = x + gw + 1;
		if(y + gh + 1 > bottom_y) {
			bottom_y = y + gh + 1;
		}
		++i1;
	}
	return bottom_y;
};
kha_graphics2_truetype_StbTruetype.stbtt_GetBakedQuad = function(chardata,pw,ph,char_index,xpos,ypos,q,opengl_fillrule) {
	var d3d_bias = opengl_fillrule ? 0 : -0.5;
	var ipw = 1.0 / pw;
	var iph = 1.0 / ph;
	var b = chardata[char_index];
	var round_x = Math.floor(xpos.value + b.xoff + 0.5);
	var round_y = Math.floor(ypos.value + b.yoff + 0.5);
	q.x0 = round_x + d3d_bias;
	q.y0 = round_y + d3d_bias;
	q.x1 = round_x + b.x1 - b.x0 + d3d_bias;
	q.y1 = round_y + b.y1 - b.y0 + d3d_bias;
	q.s0 = b.x0 * ipw;
	q.t0 = b.y0 * iph;
	q.s1 = b.x1 * ipw;
	q.t1 = b.y1 * iph;
	xpos.value += b.xadvance;
};
var kha_graphics4_BlendingFactor = $hxClasses["kha.graphics4.BlendingFactor"] = { __ename__ : true, __constructs__ : ["Undefined","BlendOne","BlendZero","SourceAlpha","DestinationAlpha","InverseSourceAlpha","InverseDestinationAlpha","SourceColor","DestinationColor","InverseSourceColor","InverseDestinationColor"] };
kha_graphics4_BlendingFactor.Undefined = ["Undefined",0];
kha_graphics4_BlendingFactor.Undefined.toString = $estr;
kha_graphics4_BlendingFactor.Undefined.__enum__ = kha_graphics4_BlendingFactor;
kha_graphics4_BlendingFactor.BlendOne = ["BlendOne",1];
kha_graphics4_BlendingFactor.BlendOne.toString = $estr;
kha_graphics4_BlendingFactor.BlendOne.__enum__ = kha_graphics4_BlendingFactor;
kha_graphics4_BlendingFactor.BlendZero = ["BlendZero",2];
kha_graphics4_BlendingFactor.BlendZero.toString = $estr;
kha_graphics4_BlendingFactor.BlendZero.__enum__ = kha_graphics4_BlendingFactor;
kha_graphics4_BlendingFactor.SourceAlpha = ["SourceAlpha",3];
kha_graphics4_BlendingFactor.SourceAlpha.toString = $estr;
kha_graphics4_BlendingFactor.SourceAlpha.__enum__ = kha_graphics4_BlendingFactor;
kha_graphics4_BlendingFactor.DestinationAlpha = ["DestinationAlpha",4];
kha_graphics4_BlendingFactor.DestinationAlpha.toString = $estr;
kha_graphics4_BlendingFactor.DestinationAlpha.__enum__ = kha_graphics4_BlendingFactor;
kha_graphics4_BlendingFactor.InverseSourceAlpha = ["InverseSourceAlpha",5];
kha_graphics4_BlendingFactor.InverseSourceAlpha.toString = $estr;
kha_graphics4_BlendingFactor.InverseSourceAlpha.__enum__ = kha_graphics4_BlendingFactor;
kha_graphics4_BlendingFactor.InverseDestinationAlpha = ["InverseDestinationAlpha",6];
kha_graphics4_BlendingFactor.InverseDestinationAlpha.toString = $estr;
kha_graphics4_BlendingFactor.InverseDestinationAlpha.__enum__ = kha_graphics4_BlendingFactor;
kha_graphics4_BlendingFactor.SourceColor = ["SourceColor",7];
kha_graphics4_BlendingFactor.SourceColor.toString = $estr;
kha_graphics4_BlendingFactor.SourceColor.__enum__ = kha_graphics4_BlendingFactor;
kha_graphics4_BlendingFactor.DestinationColor = ["DestinationColor",8];
kha_graphics4_BlendingFactor.DestinationColor.toString = $estr;
kha_graphics4_BlendingFactor.DestinationColor.__enum__ = kha_graphics4_BlendingFactor;
kha_graphics4_BlendingFactor.InverseSourceColor = ["InverseSourceColor",9];
kha_graphics4_BlendingFactor.InverseSourceColor.toString = $estr;
kha_graphics4_BlendingFactor.InverseSourceColor.__enum__ = kha_graphics4_BlendingFactor;
kha_graphics4_BlendingFactor.InverseDestinationColor = ["InverseDestinationColor",10];
kha_graphics4_BlendingFactor.InverseDestinationColor.toString = $estr;
kha_graphics4_BlendingFactor.InverseDestinationColor.__enum__ = kha_graphics4_BlendingFactor;
var kha_graphics4_BlendingOperation = $hxClasses["kha.graphics4.BlendingOperation"] = { __ename__ : true, __constructs__ : ["Add","Subtract","ReverseSubtract","Min","Max"] };
kha_graphics4_BlendingOperation.Add = ["Add",0];
kha_graphics4_BlendingOperation.Add.toString = $estr;
kha_graphics4_BlendingOperation.Add.__enum__ = kha_graphics4_BlendingOperation;
kha_graphics4_BlendingOperation.Subtract = ["Subtract",1];
kha_graphics4_BlendingOperation.Subtract.toString = $estr;
kha_graphics4_BlendingOperation.Subtract.__enum__ = kha_graphics4_BlendingOperation;
kha_graphics4_BlendingOperation.ReverseSubtract = ["ReverseSubtract",2];
kha_graphics4_BlendingOperation.ReverseSubtract.toString = $estr;
kha_graphics4_BlendingOperation.ReverseSubtract.__enum__ = kha_graphics4_BlendingOperation;
kha_graphics4_BlendingOperation.Min = ["Min",3];
kha_graphics4_BlendingOperation.Min.toString = $estr;
kha_graphics4_BlendingOperation.Min.__enum__ = kha_graphics4_BlendingOperation;
kha_graphics4_BlendingOperation.Max = ["Max",4];
kha_graphics4_BlendingOperation.Max.toString = $estr;
kha_graphics4_BlendingOperation.Max.__enum__ = kha_graphics4_BlendingOperation;
var kha_graphics4_CompareMode = $hxClasses["kha.graphics4.CompareMode"] = { __ename__ : true, __constructs__ : ["Always","Never","Equal","NotEqual","Less","LessEqual","Greater","GreaterEqual"] };
kha_graphics4_CompareMode.Always = ["Always",0];
kha_graphics4_CompareMode.Always.toString = $estr;
kha_graphics4_CompareMode.Always.__enum__ = kha_graphics4_CompareMode;
kha_graphics4_CompareMode.Never = ["Never",1];
kha_graphics4_CompareMode.Never.toString = $estr;
kha_graphics4_CompareMode.Never.__enum__ = kha_graphics4_CompareMode;
kha_graphics4_CompareMode.Equal = ["Equal",2];
kha_graphics4_CompareMode.Equal.toString = $estr;
kha_graphics4_CompareMode.Equal.__enum__ = kha_graphics4_CompareMode;
kha_graphics4_CompareMode.NotEqual = ["NotEqual",3];
kha_graphics4_CompareMode.NotEqual.toString = $estr;
kha_graphics4_CompareMode.NotEqual.__enum__ = kha_graphics4_CompareMode;
kha_graphics4_CompareMode.Less = ["Less",4];
kha_graphics4_CompareMode.Less.toString = $estr;
kha_graphics4_CompareMode.Less.__enum__ = kha_graphics4_CompareMode;
kha_graphics4_CompareMode.LessEqual = ["LessEqual",5];
kha_graphics4_CompareMode.LessEqual.toString = $estr;
kha_graphics4_CompareMode.LessEqual.__enum__ = kha_graphics4_CompareMode;
kha_graphics4_CompareMode.Greater = ["Greater",6];
kha_graphics4_CompareMode.Greater.toString = $estr;
kha_graphics4_CompareMode.Greater.__enum__ = kha_graphics4_CompareMode;
kha_graphics4_CompareMode.GreaterEqual = ["GreaterEqual",7];
kha_graphics4_CompareMode.GreaterEqual.toString = $estr;
kha_graphics4_CompareMode.GreaterEqual.__enum__ = kha_graphics4_CompareMode;
var kha_graphics4_ConstantLocation = function() { };
$hxClasses["kha.graphics4.ConstantLocation"] = kha_graphics4_ConstantLocation;
kha_graphics4_ConstantLocation.__name__ = ["kha","graphics4","ConstantLocation"];
var kha_graphics4_CubeMap = function(size,format,renderTarget,depthStencilFormat) {
	this.isDepthAttachment = false;
	this.depthTexture = null;
	this.texture = null;
	this.frameBuffer = null;
	this.myWidth = size;
	this.myHeight = size;
	this.format = format;
	this.renderTarget = renderTarget;
	this.depthStencilFormat = depthStencilFormat;
	if(renderTarget) {
		this.createTexture();
	}
};
$hxClasses["kha.graphics4.CubeMap"] = kha_graphics4_CubeMap;
kha_graphics4_CubeMap.__name__ = ["kha","graphics4","CubeMap"];
kha_graphics4_CubeMap.__interfaces__ = [kha_Resource,kha_Canvas];
kha_graphics4_CubeMap.createRenderTarget = function(size,format,depthStencil,contextId) {
	if(contextId == null) {
		contextId = 0;
	}
	if(format == null) {
		format = kha_graphics4_TextureFormat.RGBA32;
	}
	if(depthStencil == null) {
		depthStencil = 0;
	}
	return new kha_graphics4_CubeMap(size,format,true,depthStencil);
};
kha_graphics4_CubeMap.prototype = {
	createTexture: function() {
		if(kha_SystemImpl.gl == null) {
			return;
		}
		this.texture = kha_SystemImpl.gl.createTexture();
		kha_SystemImpl.gl.bindTexture(34067,this.texture);
		kha_SystemImpl.gl.texParameteri(34067,10240,9729);
		kha_SystemImpl.gl.texParameteri(34067,10241,9729);
		kha_SystemImpl.gl.texParameteri(34067,10242,33071);
		kha_SystemImpl.gl.texParameteri(34067,10243,33071);
		if(this.renderTarget) {
			this.frameBuffer = kha_SystemImpl.gl.createFramebuffer();
			kha_SystemImpl.gl.bindFramebuffer(36160,this.frameBuffer);
			var _g = this.format;
			switch(_g[1]) {
			case 0:
				var _g1 = 0;
				while(_g1 < 6) {
					var i = _g1++;
					kha_SystemImpl.gl.texImage2D(34069 + i,0,6408,this.myWidth,this.myHeight,0,6408,5121,null);
				}
				break;
			case 2:
				var _g2 = 0;
				while(_g2 < 6) {
					var i1 = _g2++;
					kha_SystemImpl.gl.texImage2D(34069 + i1,0,6408,this.myWidth,this.myHeight,0,6408,5126,null);
				}
				break;
			case 3:
				var _g3 = 0;
				while(_g3 < 6) {
					var i2 = _g3++;
					kha_SystemImpl.gl.texImage2D(34069 + i2,0,6402,this.myWidth,this.myHeight,0,6402,5123,null);
				}
				break;
			case 4:
				var _g4 = 0;
				while(_g4 < 6) {
					var i3 = _g4++;
					kha_SystemImpl.gl.texImage2D(34069 + i3,0,6408,this.myWidth,this.myHeight,0,6408,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,null);
				}
				break;
			case 5:
				var _g5 = 0;
				while(_g5 < 6) {
					var i4 = _g5++;
					kha_SystemImpl.gl.texImage2D(34069 + i4,0,6406,this.myWidth,this.myHeight,0,6406,5126,null);
				}
				break;
			case 6:
				var _g6 = 0;
				while(_g6 < 6) {
					var i5 = _g6++;
					kha_SystemImpl.gl.texImage2D(34069 + i5,0,6406,this.myWidth,this.myHeight,0,6406,kha_SystemImpl.halfFloat.HALF_FLOAT_OES,null);
				}
				break;
			default:
				var _g7 = 0;
				while(_g7 < 6) {
					var i6 = _g7++;
					kha_SystemImpl.gl.texImage2D(34069 + i6,0,6408,this.myWidth,this.myHeight,0,6408,5121,null);
				}
			}
			if(this.format == kha_graphics4_TextureFormat.DEPTH16) {
				this.isDepthAttachment = true;
				if(navigator.appVersion.indexOf("Win") == -1) {
					var colortex = kha_SystemImpl.gl.createTexture();
					kha_SystemImpl.gl.bindTexture(34067,colortex);
					var _g11 = 0;
					while(_g11 < 6) {
						var i7 = _g11++;
						kha_SystemImpl.gl.texImage2D(34069 + i7,0,6408,this.myWidth,this.myHeight,0,6408,5121,null);
						kha_SystemImpl.gl.framebufferTexture2D(36160,36064,34069 + i7,colortex,0);
					}
					kha_SystemImpl.gl.bindTexture(34067,this.texture);
				}
			}
			this.initDepthStencilBuffer(this.depthStencilFormat);
			kha_SystemImpl.gl.bindFramebuffer(36160,null);
		}
		kha_SystemImpl.gl.bindTexture(34067,null);
	}
	,initDepthStencilBuffer: function(depthStencilFormat) {
		switch(depthStencilFormat) {
		case 0:
			break;
		case 1:case 5:
			this.depthTexture = kha_SystemImpl.gl.createTexture();
			kha_SystemImpl.gl.bindTexture(34067,this.depthTexture);
			var format = depthStencilFormat == 5 ? 33189 : 6402;
			kha_SystemImpl.gl.texImage2D(34067,0,format,this.myWidth,this.myHeight,0,6402,5125,null);
			kha_SystemImpl.gl.texParameteri(34067,10240,9728);
			kha_SystemImpl.gl.texParameteri(34067,10241,9728);
			kha_SystemImpl.gl.texParameteri(34067,10242,33071);
			kha_SystemImpl.gl.texParameteri(34067,10243,33071);
			kha_SystemImpl.gl.bindFramebuffer(36160,this.frameBuffer);
			kha_SystemImpl.gl.framebufferTexture2D(36160,36096,34067,this.depthTexture,0);
			break;
		case 2:case 3:case 4:
			this.depthTexture = kha_SystemImpl.gl.createTexture();
			kha_SystemImpl.gl.bindTexture(34067,this.depthTexture);
			kha_SystemImpl.gl.texImage2D(34067,0,34041,this.myWidth,this.myHeight,0,34041,kha_SystemImpl.depthTexture.UNSIGNED_INT_24_8_WEBGL,null);
			kha_SystemImpl.gl.texParameteri(34067,10240,9728);
			kha_SystemImpl.gl.texParameteri(34067,10241,9728);
			kha_SystemImpl.gl.texParameteri(34067,10242,33071);
			kha_SystemImpl.gl.texParameteri(34067,10243,33071);
			kha_SystemImpl.gl.bindFramebuffer(36160,this.frameBuffer);
			kha_SystemImpl.gl.framebufferTexture2D(36160,33306,34067,this.depthTexture,0);
			break;
		}
	}
	,set: function(stage) {
		kha_SystemImpl.gl.activeTexture(33984 + stage);
		kha_SystemImpl.gl.bindTexture(34067,this.texture);
	}
	,setDepth: function(stage) {
		kha_SystemImpl.gl.activeTexture(33984 + stage);
		kha_SystemImpl.gl.bindTexture(34067,this.depthTexture);
	}
	,unload: function() {
	}
	,lock: function(level) {
		if(level == null) {
			level = 0;
		}
		return null;
	}
	,unlock: function() {
	}
	,get_width: function() {
		return this.myWidth;
	}
	,get_height: function() {
		return this.myHeight;
	}
	,get_g1: function() {
		return null;
	}
	,get_g2: function() {
		return null;
	}
	,get_g4: function() {
		if(this.graphics4 == null) {
			this.graphics4 = new kha_js_graphics4_Graphics(this);
		}
		return this.graphics4;
	}
	,__class__: kha_graphics4_CubeMap
	,__properties__: {get_g4:"get_g4",get_g2:"get_g2",get_g1:"get_g1",get_height:"get_height",get_width:"get_width"}
};
var kha_graphics4_CullMode = $hxClasses["kha.graphics4.CullMode"] = { __ename__ : true, __constructs__ : ["Clockwise","CounterClockwise","None"] };
kha_graphics4_CullMode.Clockwise = ["Clockwise",0];
kha_graphics4_CullMode.Clockwise.toString = $estr;
kha_graphics4_CullMode.Clockwise.__enum__ = kha_graphics4_CullMode;
kha_graphics4_CullMode.CounterClockwise = ["CounterClockwise",1];
kha_graphics4_CullMode.CounterClockwise.toString = $estr;
kha_graphics4_CullMode.CounterClockwise.__enum__ = kha_graphics4_CullMode;
kha_graphics4_CullMode.None = ["None",2];
kha_graphics4_CullMode.None.toString = $estr;
kha_graphics4_CullMode.None.__enum__ = kha_graphics4_CullMode;
var kha_graphics4_FragmentShader = function(sources,files) {
	this.sources = [];
	var _g = 0;
	while(_g < sources.length) {
		var source = sources[_g];
		++_g;
		this.sources.push(source.toString());
	}
	this.type = 35632;
	this.shader = null;
	this.files = files;
};
$hxClasses["kha.graphics4.FragmentShader"] = kha_graphics4_FragmentShader;
kha_graphics4_FragmentShader.__name__ = ["kha","graphics4","FragmentShader"];
kha_graphics4_FragmentShader.fromSource = function(source) {
	var shader = new kha_graphics4_FragmentShader([],["runtime-string"]);
	shader.sources.push(source);
	return shader;
};
kha_graphics4_FragmentShader.prototype = {
	'delete': function() {
		kha_SystemImpl.gl.deleteShader(this.shader);
		this.shader = null;
		this.sources = null;
	}
	,__class__: kha_graphics4_FragmentShader
};
var kha_graphics4_GeometryShader = function(source) {
};
$hxClasses["kha.graphics4.GeometryShader"] = kha_graphics4_GeometryShader;
kha_graphics4_GeometryShader.__name__ = ["kha","graphics4","GeometryShader"];
kha_graphics4_GeometryShader.prototype = {
	'delete': function() {
	}
	,__class__: kha_graphics4_GeometryShader
};
var kha_graphics4_Graphics = function() { };
$hxClasses["kha.graphics4.Graphics"] = kha_graphics4_Graphics;
kha_graphics4_Graphics.__name__ = ["kha","graphics4","Graphics"];
kha_graphics4_Graphics.prototype = {
	__class__: kha_graphics4_Graphics
};
var kha_graphics4_ImageShaderPainter = function(g4) {
	this.destinationBlend = kha_graphics4_BlendingFactor.Undefined;
	this.sourceBlend = kha_graphics4_BlendingFactor.Undefined;
	this.myPipeline = null;
	this.bilinearMipmaps = false;
	this.bilinear = false;
	this.g = g4;
	this.bufferIndex = 0;
	kha_graphics4_ImageShaderPainter.initShaders();
	this.initBuffers();
	this.projectionLocation = kha_graphics4_ImageShaderPainter.shaderPipeline.getConstantLocation("projectionMatrix");
	this.textureLocation = kha_graphics4_ImageShaderPainter.shaderPipeline.getTextureUnit("tex");
};
$hxClasses["kha.graphics4.ImageShaderPainter"] = kha_graphics4_ImageShaderPainter;
kha_graphics4_ImageShaderPainter.__name__ = ["kha","graphics4","ImageShaderPainter"];
kha_graphics4_ImageShaderPainter.initShaders = function() {
	if(kha_graphics4_ImageShaderPainter.shaderPipeline != null) {
		return;
	}
	kha_graphics4_ImageShaderPainter.shaderPipeline = new kha_graphics4_PipelineState();
	kha_graphics4_ImageShaderPainter.shaderPipeline.fragmentShader = kha_Shaders.painter_image_frag;
	kha_graphics4_ImageShaderPainter.shaderPipeline.vertexShader = kha_Shaders.painter_image_vert;
	kha_graphics4_ImageShaderPainter.structure = new kha_graphics4_VertexStructure();
	kha_graphics4_ImageShaderPainter.structure.add("vertexPosition",kha_graphics4_VertexData.Float3);
	kha_graphics4_ImageShaderPainter.structure.add("texPosition",kha_graphics4_VertexData.Float2);
	kha_graphics4_ImageShaderPainter.structure.add("vertexColor",kha_graphics4_VertexData.Float4);
	kha_graphics4_ImageShaderPainter.shaderPipeline.inputLayout = [kha_graphics4_ImageShaderPainter.structure];
	kha_graphics4_ImageShaderPainter.shaderPipeline.blendSource = kha_graphics4_BlendingFactor.BlendOne;
	kha_graphics4_ImageShaderPainter.shaderPipeline.blendDestination = kha_graphics4_BlendingFactor.InverseSourceAlpha;
	kha_graphics4_ImageShaderPainter.shaderPipeline.alphaBlendSource = kha_graphics4_BlendingFactor.SourceAlpha;
	kha_graphics4_ImageShaderPainter.shaderPipeline.alphaBlendDestination = kha_graphics4_BlendingFactor.InverseSourceAlpha;
	kha_graphics4_ImageShaderPainter.shaderPipeline.compile();
};
kha_graphics4_ImageShaderPainter.prototype = {
	get_pipeline: function() {
		return this.myPipeline;
	}
	,set_pipeline: function(pipe) {
		if(pipe == null) {
			this.projectionLocation = kha_graphics4_ImageShaderPainter.shaderPipeline.getConstantLocation("projectionMatrix");
			this.textureLocation = kha_graphics4_ImageShaderPainter.shaderPipeline.getTextureUnit("tex");
		} else {
			this.projectionLocation = pipe.getConstantLocation("projectionMatrix");
			this.textureLocation = pipe.getTextureUnit("tex");
		}
		return this.myPipeline = pipe;
	}
	,setProjection: function(projectionMatrix) {
		this.projectionMatrix = projectionMatrix;
	}
	,initBuffers: function() {
		this.rectVertexBuffer = new kha_graphics4_VertexBuffer(kha_graphics4_ImageShaderPainter.bufferSize * 4,kha_graphics4_ImageShaderPainter.structure,kha_graphics4_Usage.DynamicUsage);
		this.rectVertices = this.rectVertexBuffer.lock();
		this.indexBuffer = new kha_graphics4_IndexBuffer(kha_graphics4_ImageShaderPainter.bufferSize * 3 * 2,kha_graphics4_Usage.StaticUsage);
		var indices = this.indexBuffer.lock();
		var _g1 = 0;
		var _g = kha_graphics4_ImageShaderPainter.bufferSize;
		while(_g1 < _g) {
			var i = _g1++;
			indices[i * 3 * 2] = i * 4;
			indices[i * 3 * 2 + 1] = i * 4 + 1;
			indices[i * 3 * 2 + 2] = i * 4 + 2;
			indices[i * 3 * 2 + 3] = i * 4;
			indices[i * 3 * 2 + 4] = i * 4 + 2;
			indices[i * 3 * 2 + 5] = i * 4 + 3;
		}
		this.indexBuffer.unlock();
	}
	,setRectVertices: function(bottomleftx,bottomlefty,topleftx,toplefty,toprightx,toprighty,bottomrightx,bottomrighty) {
		var baseIndex = this.bufferIndex * kha_graphics4_ImageShaderPainter.vertexSize * 4;
		this.rectVertices[baseIndex] = bottomleftx;
		this.rectVertices[baseIndex + 1] = bottomlefty;
		this.rectVertices[baseIndex + 2] = -5.0;
		this.rectVertices[baseIndex + 9] = topleftx;
		this.rectVertices[baseIndex + 10] = toplefty;
		this.rectVertices[baseIndex + 11] = -5.0;
		this.rectVertices[baseIndex + 18] = toprightx;
		this.rectVertices[baseIndex + 19] = toprighty;
		this.rectVertices[baseIndex + 20] = -5.0;
		this.rectVertices[baseIndex + 27] = bottomrightx;
		this.rectVertices[baseIndex + 28] = bottomrighty;
		this.rectVertices[baseIndex + 29] = -5.0;
	}
	,setRectTexCoords: function(left,top,right,bottom) {
		var baseIndex = this.bufferIndex * kha_graphics4_ImageShaderPainter.vertexSize * 4;
		this.rectVertices[baseIndex + 3] = left;
		this.rectVertices[baseIndex + 4] = bottom;
		this.rectVertices[baseIndex + 12] = left;
		this.rectVertices[baseIndex + 13] = top;
		this.rectVertices[baseIndex + 21] = right;
		this.rectVertices[baseIndex + 22] = top;
		this.rectVertices[baseIndex + 30] = right;
		this.rectVertices[baseIndex + 31] = bottom;
	}
	,setRectColor: function(r,g,b,a) {
		var baseIndex = this.bufferIndex * kha_graphics4_ImageShaderPainter.vertexSize * 4;
		this.rectVertices[baseIndex + 5] = r;
		this.rectVertices[baseIndex + 6] = g;
		this.rectVertices[baseIndex + 7] = b;
		this.rectVertices[baseIndex + 8] = a;
		this.rectVertices[baseIndex + 14] = r;
		this.rectVertices[baseIndex + 15] = g;
		this.rectVertices[baseIndex + 16] = b;
		this.rectVertices[baseIndex + 17] = a;
		this.rectVertices[baseIndex + 23] = r;
		this.rectVertices[baseIndex + 24] = g;
		this.rectVertices[baseIndex + 25] = b;
		this.rectVertices[baseIndex + 26] = a;
		this.rectVertices[baseIndex + 32] = r;
		this.rectVertices[baseIndex + 33] = g;
		this.rectVertices[baseIndex + 34] = b;
		this.rectVertices[baseIndex + 35] = a;
	}
	,drawBuffer: function() {
		this.rectVertexBuffer.unlock();
		this.g.setVertexBuffer(this.rectVertexBuffer);
		this.g.setIndexBuffer(this.indexBuffer);
		this.g.setPipeline(this.get_pipeline() == null ? kha_graphics4_ImageShaderPainter.shaderPipeline : this.get_pipeline());
		this.g.setTexture(this.textureLocation,this.lastTexture);
		this.g.setTextureParameters(this.textureLocation,kha_graphics4_TextureAddressing.Clamp,kha_graphics4_TextureAddressing.Clamp,this.bilinear ? kha_graphics4_TextureFilter.LinearFilter : kha_graphics4_TextureFilter.PointFilter,this.bilinear ? kha_graphics4_TextureFilter.LinearFilter : kha_graphics4_TextureFilter.PointFilter,this.bilinearMipmaps ? kha_graphics4_MipMapFilter.LinearMipFilter : kha_graphics4_MipMapFilter.NoMipFilter);
		this.g.setMatrix(this.projectionLocation,this.projectionMatrix);
		this.g.drawIndexedVertices(0,this.bufferIndex * 2 * 3);
		this.g.setTexture(this.textureLocation,null);
		this.bufferIndex = 0;
		this.rectVertices = this.rectVertexBuffer.lock();
	}
	,setBilinearFilter: function(bilinear) {
		this.end();
		this.bilinear = bilinear;
	}
	,setBilinearMipmapFilter: function(bilinear) {
		this.end();
		this.bilinearMipmaps = bilinear;
	}
	,drawImage: function(img,bottomleftx,bottomlefty,topleftx,toplefty,toprightx,toprighty,bottomrightx,bottomrighty,opacity,color) {
		var tex = img;
		if(this.bufferIndex + 1 >= kha_graphics4_ImageShaderPainter.bufferSize || this.lastTexture != null && tex != this.lastTexture) {
			this.drawBuffer();
		}
		var r = ((color & 16711680) >>> 16) * 0.00392156862745098;
		var g = ((color & 65280) >>> 8) * 0.00392156862745098;
		var b = (color & 255) * 0.00392156862745098;
		var a = (color >>> 24) * 0.00392156862745098 * opacity;
		var baseIndex = this.bufferIndex * kha_graphics4_ImageShaderPainter.vertexSize * 4;
		this.rectVertices[baseIndex + 5] = r;
		this.rectVertices[baseIndex + 6] = g;
		this.rectVertices[baseIndex + 7] = b;
		this.rectVertices[baseIndex + 8] = a;
		this.rectVertices[baseIndex + 14] = r;
		this.rectVertices[baseIndex + 15] = g;
		this.rectVertices[baseIndex + 16] = b;
		this.rectVertices[baseIndex + 17] = a;
		this.rectVertices[baseIndex + 23] = r;
		this.rectVertices[baseIndex + 24] = g;
		this.rectVertices[baseIndex + 25] = b;
		this.rectVertices[baseIndex + 26] = a;
		this.rectVertices[baseIndex + 32] = r;
		this.rectVertices[baseIndex + 33] = g;
		this.rectVertices[baseIndex + 34] = b;
		this.rectVertices[baseIndex + 35] = a;
		var right = tex.get_width() / tex.get_realWidth();
		var bottom = tex.get_height() / tex.get_realHeight();
		var baseIndex1 = this.bufferIndex * kha_graphics4_ImageShaderPainter.vertexSize * 4;
		this.rectVertices[baseIndex1 + 3] = 0;
		this.rectVertices[baseIndex1 + 4] = bottom;
		this.rectVertices[baseIndex1 + 12] = 0;
		this.rectVertices[baseIndex1 + 13] = 0;
		this.rectVertices[baseIndex1 + 21] = right;
		this.rectVertices[baseIndex1 + 22] = 0;
		this.rectVertices[baseIndex1 + 30] = right;
		this.rectVertices[baseIndex1 + 31] = bottom;
		var baseIndex2 = this.bufferIndex * kha_graphics4_ImageShaderPainter.vertexSize * 4;
		this.rectVertices[baseIndex2] = bottomleftx;
		this.rectVertices[baseIndex2 + 1] = bottomlefty;
		this.rectVertices[baseIndex2 + 2] = -5.0;
		this.rectVertices[baseIndex2 + 9] = topleftx;
		this.rectVertices[baseIndex2 + 10] = toplefty;
		this.rectVertices[baseIndex2 + 11] = -5.0;
		this.rectVertices[baseIndex2 + 18] = toprightx;
		this.rectVertices[baseIndex2 + 19] = toprighty;
		this.rectVertices[baseIndex2 + 20] = -5.0;
		this.rectVertices[baseIndex2 + 27] = bottomrightx;
		this.rectVertices[baseIndex2 + 28] = bottomrighty;
		this.rectVertices[baseIndex2 + 29] = -5.0;
		++this.bufferIndex;
		this.lastTexture = tex;
	}
	,drawImage2: function(img,sx,sy,sw,sh,bottomleftx,bottomlefty,topleftx,toplefty,toprightx,toprighty,bottomrightx,bottomrighty,opacity,color) {
		var tex = img;
		if(this.bufferIndex + 1 >= kha_graphics4_ImageShaderPainter.bufferSize || this.lastTexture != null && tex != this.lastTexture) {
			this.drawBuffer();
		}
		var left = sx / tex.get_realWidth();
		var top = sy / tex.get_realHeight();
		var right = (sx + sw) / tex.get_realWidth();
		var bottom = (sy + sh) / tex.get_realHeight();
		var baseIndex = this.bufferIndex * kha_graphics4_ImageShaderPainter.vertexSize * 4;
		this.rectVertices[baseIndex + 3] = left;
		this.rectVertices[baseIndex + 4] = bottom;
		this.rectVertices[baseIndex + 12] = left;
		this.rectVertices[baseIndex + 13] = top;
		this.rectVertices[baseIndex + 21] = right;
		this.rectVertices[baseIndex + 22] = top;
		this.rectVertices[baseIndex + 30] = right;
		this.rectVertices[baseIndex + 31] = bottom;
		var r = ((color & 16711680) >>> 16) * 0.00392156862745098;
		var g = ((color & 65280) >>> 8) * 0.00392156862745098;
		var b = (color & 255) * 0.00392156862745098;
		var a = (color >>> 24) * 0.00392156862745098 * opacity;
		var baseIndex1 = this.bufferIndex * kha_graphics4_ImageShaderPainter.vertexSize * 4;
		this.rectVertices[baseIndex1 + 5] = r;
		this.rectVertices[baseIndex1 + 6] = g;
		this.rectVertices[baseIndex1 + 7] = b;
		this.rectVertices[baseIndex1 + 8] = a;
		this.rectVertices[baseIndex1 + 14] = r;
		this.rectVertices[baseIndex1 + 15] = g;
		this.rectVertices[baseIndex1 + 16] = b;
		this.rectVertices[baseIndex1 + 17] = a;
		this.rectVertices[baseIndex1 + 23] = r;
		this.rectVertices[baseIndex1 + 24] = g;
		this.rectVertices[baseIndex1 + 25] = b;
		this.rectVertices[baseIndex1 + 26] = a;
		this.rectVertices[baseIndex1 + 32] = r;
		this.rectVertices[baseIndex1 + 33] = g;
		this.rectVertices[baseIndex1 + 34] = b;
		this.rectVertices[baseIndex1 + 35] = a;
		var baseIndex2 = this.bufferIndex * kha_graphics4_ImageShaderPainter.vertexSize * 4;
		this.rectVertices[baseIndex2] = bottomleftx;
		this.rectVertices[baseIndex2 + 1] = bottomlefty;
		this.rectVertices[baseIndex2 + 2] = -5.0;
		this.rectVertices[baseIndex2 + 9] = topleftx;
		this.rectVertices[baseIndex2 + 10] = toplefty;
		this.rectVertices[baseIndex2 + 11] = -5.0;
		this.rectVertices[baseIndex2 + 18] = toprightx;
		this.rectVertices[baseIndex2 + 19] = toprighty;
		this.rectVertices[baseIndex2 + 20] = -5.0;
		this.rectVertices[baseIndex2 + 27] = bottomrightx;
		this.rectVertices[baseIndex2 + 28] = bottomrighty;
		this.rectVertices[baseIndex2 + 29] = -5.0;
		++this.bufferIndex;
		this.lastTexture = tex;
	}
	,drawImageScale: function(img,sx,sy,sw,sh,left,top,right,bottom,opacity,color) {
		var tex = img;
		if(this.bufferIndex + 1 >= kha_graphics4_ImageShaderPainter.bufferSize || this.lastTexture != null && tex != this.lastTexture) {
			this.drawBuffer();
		}
		var left1 = sx / tex.get_realWidth();
		var top1 = sy / tex.get_realHeight();
		var right1 = (sx + sw) / tex.get_realWidth();
		var bottom1 = (sy + sh) / tex.get_realHeight();
		var baseIndex = this.bufferIndex * kha_graphics4_ImageShaderPainter.vertexSize * 4;
		this.rectVertices[baseIndex + 3] = left1;
		this.rectVertices[baseIndex + 4] = bottom1;
		this.rectVertices[baseIndex + 12] = left1;
		this.rectVertices[baseIndex + 13] = top1;
		this.rectVertices[baseIndex + 21] = right1;
		this.rectVertices[baseIndex + 22] = top1;
		this.rectVertices[baseIndex + 30] = right1;
		this.rectVertices[baseIndex + 31] = bottom1;
		var r = ((color & 16711680) >>> 16) * 0.00392156862745098;
		var g = ((color & 65280) >>> 8) * 0.00392156862745098;
		var b = (color & 255) * 0.00392156862745098;
		var baseIndex1 = this.bufferIndex * kha_graphics4_ImageShaderPainter.vertexSize * 4;
		this.rectVertices[baseIndex1 + 5] = r;
		this.rectVertices[baseIndex1 + 6] = g;
		this.rectVertices[baseIndex1 + 7] = b;
		this.rectVertices[baseIndex1 + 8] = opacity;
		this.rectVertices[baseIndex1 + 14] = r;
		this.rectVertices[baseIndex1 + 15] = g;
		this.rectVertices[baseIndex1 + 16] = b;
		this.rectVertices[baseIndex1 + 17] = opacity;
		this.rectVertices[baseIndex1 + 23] = r;
		this.rectVertices[baseIndex1 + 24] = g;
		this.rectVertices[baseIndex1 + 25] = b;
		this.rectVertices[baseIndex1 + 26] = opacity;
		this.rectVertices[baseIndex1 + 32] = r;
		this.rectVertices[baseIndex1 + 33] = g;
		this.rectVertices[baseIndex1 + 34] = b;
		this.rectVertices[baseIndex1 + 35] = opacity;
		var baseIndex2 = this.bufferIndex * kha_graphics4_ImageShaderPainter.vertexSize * 4;
		this.rectVertices[baseIndex2] = left;
		this.rectVertices[baseIndex2 + 1] = bottom;
		this.rectVertices[baseIndex2 + 2] = -5.0;
		this.rectVertices[baseIndex2 + 9] = left;
		this.rectVertices[baseIndex2 + 10] = top;
		this.rectVertices[baseIndex2 + 11] = -5.0;
		this.rectVertices[baseIndex2 + 18] = right;
		this.rectVertices[baseIndex2 + 19] = top;
		this.rectVertices[baseIndex2 + 20] = -5.0;
		this.rectVertices[baseIndex2 + 27] = right;
		this.rectVertices[baseIndex2 + 28] = bottom;
		this.rectVertices[baseIndex2 + 29] = -5.0;
		++this.bufferIndex;
		this.lastTexture = tex;
	}
	,end: function() {
		if(this.bufferIndex > 0) {
			this.drawBuffer();
		}
		this.lastTexture = null;
	}
	,__class__: kha_graphics4_ImageShaderPainter
	,__properties__: {set_pipeline:"set_pipeline",get_pipeline:"get_pipeline"}
};
var kha_graphics4_ColoredShaderPainter = function(g4) {
	this.destinationBlend = kha_graphics4_BlendingFactor.Undefined;
	this.sourceBlend = kha_graphics4_BlendingFactor.Undefined;
	this.myPipeline = null;
	this.g = g4;
	this.bufferIndex = 0;
	this.triangleBufferIndex = 0;
	kha_graphics4_ColoredShaderPainter.initShaders();
	this.initBuffers();
	this.projectionLocation = kha_graphics4_ColoredShaderPainter.shaderPipeline.getConstantLocation("projectionMatrix");
};
$hxClasses["kha.graphics4.ColoredShaderPainter"] = kha_graphics4_ColoredShaderPainter;
kha_graphics4_ColoredShaderPainter.__name__ = ["kha","graphics4","ColoredShaderPainter"];
kha_graphics4_ColoredShaderPainter.initShaders = function() {
	if(kha_graphics4_ColoredShaderPainter.shaderPipeline != null) {
		return;
	}
	kha_graphics4_ColoredShaderPainter.shaderPipeline = new kha_graphics4_PipelineState();
	kha_graphics4_ColoredShaderPainter.shaderPipeline.fragmentShader = kha_Shaders.painter_colored_frag;
	kha_graphics4_ColoredShaderPainter.shaderPipeline.vertexShader = kha_Shaders.painter_colored_vert;
	kha_graphics4_ColoredShaderPainter.structure = new kha_graphics4_VertexStructure();
	kha_graphics4_ColoredShaderPainter.structure.add("vertexPosition",kha_graphics4_VertexData.Float3);
	kha_graphics4_ColoredShaderPainter.structure.add("vertexColor",kha_graphics4_VertexData.Float4);
	kha_graphics4_ColoredShaderPainter.shaderPipeline.inputLayout = [kha_graphics4_ColoredShaderPainter.structure];
	kha_graphics4_ColoredShaderPainter.shaderPipeline.blendSource = kha_graphics4_BlendingFactor.SourceAlpha;
	kha_graphics4_ColoredShaderPainter.shaderPipeline.blendDestination = kha_graphics4_BlendingFactor.InverseSourceAlpha;
	kha_graphics4_ColoredShaderPainter.shaderPipeline.alphaBlendSource = kha_graphics4_BlendingFactor.SourceAlpha;
	kha_graphics4_ColoredShaderPainter.shaderPipeline.alphaBlendDestination = kha_graphics4_BlendingFactor.InverseSourceAlpha;
	kha_graphics4_ColoredShaderPainter.shaderPipeline.compile();
};
kha_graphics4_ColoredShaderPainter.prototype = {
	get_pipeline: function() {
		return this.myPipeline;
	}
	,set_pipeline: function(pipe) {
		if(pipe == null) {
			this.projectionLocation = kha_graphics4_ColoredShaderPainter.shaderPipeline.getConstantLocation("projectionMatrix");
		} else {
			this.projectionLocation = pipe.getConstantLocation("projectionMatrix");
		}
		return this.myPipeline = pipe;
	}
	,setProjection: function(projectionMatrix) {
		this.projectionMatrix = projectionMatrix;
	}
	,initBuffers: function() {
		this.rectVertexBuffer = new kha_graphics4_VertexBuffer(kha_graphics4_ColoredShaderPainter.bufferSize * 4,kha_graphics4_ColoredShaderPainter.structure,kha_graphics4_Usage.DynamicUsage);
		this.rectVertices = this.rectVertexBuffer.lock();
		this.indexBuffer = new kha_graphics4_IndexBuffer(kha_graphics4_ColoredShaderPainter.bufferSize * 3 * 2,kha_graphics4_Usage.StaticUsage);
		var indices = this.indexBuffer.lock();
		var _g1 = 0;
		var _g = kha_graphics4_ColoredShaderPainter.bufferSize;
		while(_g1 < _g) {
			var i = _g1++;
			indices[i * 3 * 2] = i * 4;
			indices[i * 3 * 2 + 1] = i * 4 + 1;
			indices[i * 3 * 2 + 2] = i * 4 + 2;
			indices[i * 3 * 2 + 3] = i * 4;
			indices[i * 3 * 2 + 4] = i * 4 + 2;
			indices[i * 3 * 2 + 5] = i * 4 + 3;
		}
		this.indexBuffer.unlock();
		this.triangleVertexBuffer = new kha_graphics4_VertexBuffer(kha_graphics4_ColoredShaderPainter.triangleBufferSize * 3,kha_graphics4_ColoredShaderPainter.structure,kha_graphics4_Usage.DynamicUsage);
		this.triangleVertices = this.triangleVertexBuffer.lock();
		this.triangleIndexBuffer = new kha_graphics4_IndexBuffer(kha_graphics4_ColoredShaderPainter.triangleBufferSize * 3,kha_graphics4_Usage.StaticUsage);
		var triIndices = this.triangleIndexBuffer.lock();
		var _g11 = 0;
		var _g2 = kha_graphics4_ColoredShaderPainter.bufferSize;
		while(_g11 < _g2) {
			var i1 = _g11++;
			triIndices[i1 * 3] = i1 * 3;
			triIndices[i1 * 3 + 1] = i1 * 3 + 1;
			triIndices[i1 * 3 + 2] = i1 * 3 + 2;
		}
		this.triangleIndexBuffer.unlock();
	}
	,setRectVertices: function(bottomleftx,bottomlefty,topleftx,toplefty,toprightx,toprighty,bottomrightx,bottomrighty) {
		var baseIndex = this.bufferIndex * 7 * 4;
		this.rectVertices[baseIndex] = bottomleftx;
		this.rectVertices[baseIndex + 1] = bottomlefty;
		this.rectVertices[baseIndex + 2] = -5.0;
		this.rectVertices[baseIndex + 7] = topleftx;
		this.rectVertices[baseIndex + 8] = toplefty;
		this.rectVertices[baseIndex + 9] = -5.0;
		this.rectVertices[baseIndex + 14] = toprightx;
		this.rectVertices[baseIndex + 15] = toprighty;
		this.rectVertices[baseIndex + 16] = -5.0;
		this.rectVertices[baseIndex + 21] = bottomrightx;
		this.rectVertices[baseIndex + 22] = bottomrighty;
		this.rectVertices[baseIndex + 23] = -5.0;
	}
	,setRectColors: function(opacity,color) {
		var baseIndex = this.bufferIndex * 7 * 4;
		var a = opacity * ((color >>> 24) * 0.00392156862745098);
		this.rectVertices[baseIndex + 3] = ((color & 16711680) >>> 16) * 0.00392156862745098;
		this.rectVertices[baseIndex + 4] = ((color & 65280) >>> 8) * 0.00392156862745098;
		this.rectVertices[baseIndex + 5] = (color & 255) * 0.00392156862745098;
		this.rectVertices[baseIndex + 6] = a;
		this.rectVertices[baseIndex + 10] = ((color & 16711680) >>> 16) * 0.00392156862745098;
		this.rectVertices[baseIndex + 11] = ((color & 65280) >>> 8) * 0.00392156862745098;
		this.rectVertices[baseIndex + 12] = (color & 255) * 0.00392156862745098;
		this.rectVertices[baseIndex + 13] = a;
		this.rectVertices[baseIndex + 17] = ((color & 16711680) >>> 16) * 0.00392156862745098;
		this.rectVertices[baseIndex + 18] = ((color & 65280) >>> 8) * 0.00392156862745098;
		this.rectVertices[baseIndex + 19] = (color & 255) * 0.00392156862745098;
		this.rectVertices[baseIndex + 20] = a;
		this.rectVertices[baseIndex + 24] = ((color & 16711680) >>> 16) * 0.00392156862745098;
		this.rectVertices[baseIndex + 25] = ((color & 65280) >>> 8) * 0.00392156862745098;
		this.rectVertices[baseIndex + 26] = (color & 255) * 0.00392156862745098;
		this.rectVertices[baseIndex + 27] = a;
	}
	,setTriVertices: function(x1,y1,x2,y2,x3,y3) {
		var baseIndex = this.triangleBufferIndex * 7 * 3;
		this.triangleVertices[baseIndex] = x1;
		this.triangleVertices[baseIndex + 1] = y1;
		this.triangleVertices[baseIndex + 2] = -5.0;
		this.triangleVertices[baseIndex + 7] = x2;
		this.triangleVertices[baseIndex + 8] = y2;
		this.triangleVertices[baseIndex + 9] = -5.0;
		this.triangleVertices[baseIndex + 14] = x3;
		this.triangleVertices[baseIndex + 15] = y3;
		this.triangleVertices[baseIndex + 16] = -5.0;
	}
	,setTriColors: function(opacity,color) {
		var baseIndex = this.triangleBufferIndex * 7 * 3;
		var a = opacity * ((color >>> 24) * 0.00392156862745098);
		this.triangleVertices[baseIndex + 3] = ((color & 16711680) >>> 16) * 0.00392156862745098;
		this.triangleVertices[baseIndex + 4] = ((color & 65280) >>> 8) * 0.00392156862745098;
		this.triangleVertices[baseIndex + 5] = (color & 255) * 0.00392156862745098;
		this.triangleVertices[baseIndex + 6] = a;
		this.triangleVertices[baseIndex + 10] = ((color & 16711680) >>> 16) * 0.00392156862745098;
		this.triangleVertices[baseIndex + 11] = ((color & 65280) >>> 8) * 0.00392156862745098;
		this.triangleVertices[baseIndex + 12] = (color & 255) * 0.00392156862745098;
		this.triangleVertices[baseIndex + 13] = a;
		this.triangleVertices[baseIndex + 17] = ((color & 16711680) >>> 16) * 0.00392156862745098;
		this.triangleVertices[baseIndex + 18] = ((color & 65280) >>> 8) * 0.00392156862745098;
		this.triangleVertices[baseIndex + 19] = (color & 255) * 0.00392156862745098;
		this.triangleVertices[baseIndex + 20] = a;
	}
	,drawBuffer: function(trisDone) {
		if(!trisDone) {
			if(this.triangleBufferIndex > 0) {
				this.drawTriBuffer(true);
			}
		}
		this.rectVertexBuffer.unlock();
		this.g.setVertexBuffer(this.rectVertexBuffer);
		this.g.setIndexBuffer(this.indexBuffer);
		this.g.setPipeline(this.get_pipeline() == null ? kha_graphics4_ColoredShaderPainter.shaderPipeline : this.get_pipeline());
		this.g.setMatrix(this.projectionLocation,this.projectionMatrix);
		this.g.drawIndexedVertices(0,this.bufferIndex * 2 * 3);
		this.bufferIndex = 0;
		this.rectVertices = this.rectVertexBuffer.lock();
	}
	,drawTriBuffer: function(rectsDone) {
		if(!rectsDone) {
			if(this.bufferIndex > 0) {
				this.drawBuffer(true);
			}
		}
		this.triangleVertexBuffer.unlock();
		this.g.setVertexBuffer(this.triangleVertexBuffer);
		this.g.setIndexBuffer(this.triangleIndexBuffer);
		this.g.setPipeline(this.get_pipeline() == null ? kha_graphics4_ColoredShaderPainter.shaderPipeline : this.get_pipeline());
		this.g.setMatrix(this.projectionLocation,this.projectionMatrix);
		this.g.drawIndexedVertices(0,this.triangleBufferIndex * 3);
		this.triangleBufferIndex = 0;
		this.triangleVertices = this.triangleVertexBuffer.lock();
	}
	,fillRect: function(opacity,color,bottomleftx,bottomlefty,topleftx,toplefty,toprightx,toprighty,bottomrightx,bottomrighty) {
		if(this.triangleBufferIndex > 0) {
			this.drawTriBuffer(true);
		}
		if(this.bufferIndex + 1 >= kha_graphics4_ColoredShaderPainter.bufferSize) {
			this.drawBuffer(false);
		}
		this.setRectColors(opacity,color);
		this.setRectVertices(bottomleftx,bottomlefty,topleftx,toplefty,toprightx,toprighty,bottomrightx,bottomrighty);
		++this.bufferIndex;
	}
	,fillTriangle: function(opacity,color,x1,y1,x2,y2,x3,y3) {
		if(this.bufferIndex > 0) {
			this.drawBuffer(true);
		}
		if(this.triangleBufferIndex + 1 >= kha_graphics4_ColoredShaderPainter.triangleBufferSize) {
			this.drawTriBuffer(false);
		}
		this.setTriColors(opacity,color);
		this.setTriVertices(x1,y1,x2,y2,x3,y3);
		++this.triangleBufferIndex;
	}
	,endTris: function(rectsDone) {
		if(this.triangleBufferIndex > 0) {
			this.drawTriBuffer(rectsDone);
		}
	}
	,endRects: function(trisDone) {
		if(this.bufferIndex > 0) {
			this.drawBuffer(trisDone);
		}
	}
	,end: function() {
		if(this.triangleBufferIndex > 0) {
			this.drawTriBuffer(false);
		}
		if(this.bufferIndex > 0) {
			this.drawBuffer(false);
		}
	}
	,__class__: kha_graphics4_ColoredShaderPainter
	,__properties__: {set_pipeline:"set_pipeline",get_pipeline:"get_pipeline"}
};
var kha_graphics4_TextShaderPainter = function(g4) {
	this.destinationBlend = kha_graphics4_BlendingFactor.Undefined;
	this.sourceBlend = kha_graphics4_BlendingFactor.Undefined;
	this.bilinear = false;
	this.myPipeline = null;
	this.g = g4;
	this.bufferIndex = 0;
	kha_graphics4_TextShaderPainter.initShaders();
	this.initBuffers();
	this.projectionLocation = kha_graphics4_TextShaderPainter.shaderPipeline.getConstantLocation("projectionMatrix");
	this.textureLocation = kha_graphics4_TextShaderPainter.shaderPipeline.getTextureUnit("tex");
};
$hxClasses["kha.graphics4.TextShaderPainter"] = kha_graphics4_TextShaderPainter;
kha_graphics4_TextShaderPainter.__name__ = ["kha","graphics4","TextShaderPainter"];
kha_graphics4_TextShaderPainter.initShaders = function() {
	if(kha_graphics4_TextShaderPainter.shaderPipeline != null) {
		return;
	}
	kha_graphics4_TextShaderPainter.shaderPipeline = new kha_graphics4_PipelineState();
	kha_graphics4_TextShaderPainter.shaderPipeline.fragmentShader = kha_Shaders.painter_text_frag;
	kha_graphics4_TextShaderPainter.shaderPipeline.vertexShader = kha_Shaders.painter_text_vert;
	kha_graphics4_TextShaderPainter.structure = new kha_graphics4_VertexStructure();
	kha_graphics4_TextShaderPainter.structure.add("vertexPosition",kha_graphics4_VertexData.Float3);
	kha_graphics4_TextShaderPainter.structure.add("texPosition",kha_graphics4_VertexData.Float2);
	kha_graphics4_TextShaderPainter.structure.add("vertexColor",kha_graphics4_VertexData.Float4);
	kha_graphics4_TextShaderPainter.shaderPipeline.inputLayout = [kha_graphics4_TextShaderPainter.structure];
	kha_graphics4_TextShaderPainter.shaderPipeline.blendSource = kha_graphics4_BlendingFactor.SourceAlpha;
	kha_graphics4_TextShaderPainter.shaderPipeline.blendDestination = kha_graphics4_BlendingFactor.InverseSourceAlpha;
	kha_graphics4_TextShaderPainter.shaderPipeline.alphaBlendSource = kha_graphics4_BlendingFactor.SourceAlpha;
	kha_graphics4_TextShaderPainter.shaderPipeline.alphaBlendDestination = kha_graphics4_BlendingFactor.InverseSourceAlpha;
	kha_graphics4_TextShaderPainter.shaderPipeline.compile();
};
kha_graphics4_TextShaderPainter.findIndex = function(charcode,fontGlyphs) {
	var _g1 = 0;
	var _g = fontGlyphs.length;
	while(_g1 < _g) {
		var i = _g1++;
		if(fontGlyphs[i] == charcode) {
			return i;
		}
	}
	return 0;
};
kha_graphics4_TextShaderPainter.prototype = {
	get_pipeline: function() {
		return this.myPipeline;
	}
	,set_pipeline: function(pipe) {
		if(pipe == null) {
			this.projectionLocation = kha_graphics4_TextShaderPainter.shaderPipeline.getConstantLocation("projectionMatrix");
			this.textureLocation = kha_graphics4_TextShaderPainter.shaderPipeline.getTextureUnit("tex");
		} else {
			this.projectionLocation = pipe.getConstantLocation("projectionMatrix");
			this.textureLocation = pipe.getTextureUnit("tex");
		}
		return this.myPipeline = pipe;
	}
	,setProjection: function(projectionMatrix) {
		this.projectionMatrix = projectionMatrix;
	}
	,initBuffers: function() {
		this.rectVertexBuffer = new kha_graphics4_VertexBuffer(kha_graphics4_TextShaderPainter.bufferSize * 4,kha_graphics4_TextShaderPainter.structure,kha_graphics4_Usage.DynamicUsage);
		this.rectVertices = this.rectVertexBuffer.lock();
		this.indexBuffer = new kha_graphics4_IndexBuffer(kha_graphics4_TextShaderPainter.bufferSize * 3 * 2,kha_graphics4_Usage.StaticUsage);
		var indices = this.indexBuffer.lock();
		var _g1 = 0;
		var _g = kha_graphics4_TextShaderPainter.bufferSize;
		while(_g1 < _g) {
			var i = _g1++;
			indices[i * 3 * 2] = i * 4;
			indices[i * 3 * 2 + 1] = i * 4 + 1;
			indices[i * 3 * 2 + 2] = i * 4 + 2;
			indices[i * 3 * 2 + 3] = i * 4;
			indices[i * 3 * 2 + 4] = i * 4 + 2;
			indices[i * 3 * 2 + 5] = i * 4 + 3;
		}
		this.indexBuffer.unlock();
	}
	,setRectVertices: function(bottomleftx,bottomlefty,topleftx,toplefty,toprightx,toprighty,bottomrightx,bottomrighty) {
		var baseIndex = this.bufferIndex * 9 * 4;
		this.rectVertices[baseIndex] = bottomleftx;
		this.rectVertices[baseIndex + 1] = bottomlefty;
		this.rectVertices[baseIndex + 2] = -5.0;
		this.rectVertices[baseIndex + 9] = topleftx;
		this.rectVertices[baseIndex + 10] = toplefty;
		this.rectVertices[baseIndex + 11] = -5.0;
		this.rectVertices[baseIndex + 18] = toprightx;
		this.rectVertices[baseIndex + 19] = toprighty;
		this.rectVertices[baseIndex + 20] = -5.0;
		this.rectVertices[baseIndex + 27] = bottomrightx;
		this.rectVertices[baseIndex + 28] = bottomrighty;
		this.rectVertices[baseIndex + 29] = -5.0;
	}
	,setRectTexCoords: function(left,top,right,bottom) {
		var baseIndex = this.bufferIndex * 9 * 4;
		this.rectVertices[baseIndex + 3] = left;
		this.rectVertices[baseIndex + 4] = bottom;
		this.rectVertices[baseIndex + 12] = left;
		this.rectVertices[baseIndex + 13] = top;
		this.rectVertices[baseIndex + 21] = right;
		this.rectVertices[baseIndex + 22] = top;
		this.rectVertices[baseIndex + 30] = right;
		this.rectVertices[baseIndex + 31] = bottom;
	}
	,setRectColors: function(opacity,color) {
		var baseIndex = this.bufferIndex * 9 * 4;
		var a = opacity * ((color >>> 24) * 0.00392156862745098);
		this.rectVertices[baseIndex + 5] = ((color & 16711680) >>> 16) * 0.00392156862745098;
		this.rectVertices[baseIndex + 6] = ((color & 65280) >>> 8) * 0.00392156862745098;
		this.rectVertices[baseIndex + 7] = (color & 255) * 0.00392156862745098;
		this.rectVertices[baseIndex + 8] = a;
		this.rectVertices[baseIndex + 14] = ((color & 16711680) >>> 16) * 0.00392156862745098;
		this.rectVertices[baseIndex + 15] = ((color & 65280) >>> 8) * 0.00392156862745098;
		this.rectVertices[baseIndex + 16] = (color & 255) * 0.00392156862745098;
		this.rectVertices[baseIndex + 17] = a;
		this.rectVertices[baseIndex + 23] = ((color & 16711680) >>> 16) * 0.00392156862745098;
		this.rectVertices[baseIndex + 24] = ((color & 65280) >>> 8) * 0.00392156862745098;
		this.rectVertices[baseIndex + 25] = (color & 255) * 0.00392156862745098;
		this.rectVertices[baseIndex + 26] = a;
		this.rectVertices[baseIndex + 32] = ((color & 16711680) >>> 16) * 0.00392156862745098;
		this.rectVertices[baseIndex + 33] = ((color & 65280) >>> 8) * 0.00392156862745098;
		this.rectVertices[baseIndex + 34] = (color & 255) * 0.00392156862745098;
		this.rectVertices[baseIndex + 35] = a;
	}
	,drawBuffer: function() {
		this.rectVertexBuffer.unlock();
		this.g.setVertexBuffer(this.rectVertexBuffer);
		this.g.setIndexBuffer(this.indexBuffer);
		this.g.setPipeline(this.get_pipeline() == null ? kha_graphics4_TextShaderPainter.shaderPipeline : this.get_pipeline());
		this.g.setTexture(this.textureLocation,this.lastTexture);
		this.g.setMatrix(this.projectionLocation,this.projectionMatrix);
		this.g.setTextureParameters(this.textureLocation,kha_graphics4_TextureAddressing.Clamp,kha_graphics4_TextureAddressing.Clamp,this.bilinear ? kha_graphics4_TextureFilter.LinearFilter : kha_graphics4_TextureFilter.PointFilter,this.bilinear ? kha_graphics4_TextureFilter.LinearFilter : kha_graphics4_TextureFilter.PointFilter,kha_graphics4_MipMapFilter.NoMipFilter);
		this.g.drawIndexedVertices(0,this.bufferIndex * 2 * 3);
		this.g.setTexture(this.textureLocation,null);
		this.bufferIndex = 0;
		this.rectVertices = this.rectVertexBuffer.lock();
	}
	,setBilinearFilter: function(bilinear) {
		this.end();
		this.bilinear = bilinear;
	}
	,setFont: function(font) {
		this.font = js_Boot.__cast(font , kha_Kravur);
	}
	,startString: function(text) {
		this.text = text;
	}
	,charCodeAt: function(position) {
		return HxOverrides.cca(this.text,position);
	}
	,stringLength: function() {
		return this.text.length;
	}
	,endString: function() {
		this.text = null;
	}
	,drawString: function(text,opacity,color,x,y,transformation,fontGlyphs) {
		var font = this.font._get(this.fontSize,fontGlyphs);
		var tex = font.getTexture();
		if(this.lastTexture != null && tex != this.lastTexture) {
			this.drawBuffer();
		}
		this.lastTexture = tex;
		var xpos = x;
		var ypos = y;
		this.startString(text);
		var _g1 = 0;
		var _g = this.stringLength();
		while(_g1 < _g) {
			var i = _g1++;
			var q = font.getBakedQuad(kha_graphics4_TextShaderPainter.findIndex(this.charCodeAt(i),fontGlyphs),xpos,ypos);
			if(q != null) {
				if(this.bufferIndex + 1 >= kha_graphics4_TextShaderPainter.bufferSize) {
					this.drawBuffer();
				}
				this.setRectColors(opacity,color);
				this.setRectTexCoords(q.s0 * tex.get_width() / tex.get_realWidth(),q.t0 * tex.get_height() / tex.get_realHeight(),q.s1 * tex.get_width() / tex.get_realWidth(),q.t1 * tex.get_height() / tex.get_realHeight());
				var p0_y;
				var p0_x;
				var value_y;
				var value_x = q.x0;
				value_y = q.y1;
				var w = transformation._02 * value_x + transformation._12 * value_y + transformation._22;
				var x1 = (transformation._00 * value_x + transformation._10 * value_y + transformation._20) / w;
				var y1 = (transformation._01 * value_x + transformation._11 * value_y + transformation._21) / w;
				p0_x = x1;
				p0_y = y1;
				var p1_y;
				var p1_x;
				var value_y1;
				var value_x1 = q.x0;
				value_y1 = q.y0;
				var w1 = transformation._02 * value_x1 + transformation._12 * value_y1 + transformation._22;
				var x2 = (transformation._00 * value_x1 + transformation._10 * value_y1 + transformation._20) / w1;
				var y2 = (transformation._01 * value_x1 + transformation._11 * value_y1 + transformation._21) / w1;
				p1_x = x2;
				p1_y = y2;
				var p2_y;
				var p2_x;
				var value_y2;
				var value_x2 = q.x1;
				value_y2 = q.y0;
				var w2 = transformation._02 * value_x2 + transformation._12 * value_y2 + transformation._22;
				var x3 = (transformation._00 * value_x2 + transformation._10 * value_y2 + transformation._20) / w2;
				var y3 = (transformation._01 * value_x2 + transformation._11 * value_y2 + transformation._21) / w2;
				p2_x = x3;
				p2_y = y3;
				var p3_y;
				var p3_x;
				var value_y3;
				var value_x3 = q.x1;
				value_y3 = q.y1;
				var w3 = transformation._02 * value_x3 + transformation._12 * value_y3 + transformation._22;
				var x4 = (transformation._00 * value_x3 + transformation._10 * value_y3 + transformation._20) / w3;
				var y4 = (transformation._01 * value_x3 + transformation._11 * value_y3 + transformation._21) / w3;
				p3_x = x4;
				p3_y = y4;
				this.setRectVertices(p0_x,p0_y,p1_x,p1_y,p2_x,p2_y,p3_x,p3_y);
				xpos += q.xadvance;
				++this.bufferIndex;
			}
		}
		this.endString();
	}
	,end: function() {
		if(this.bufferIndex > 0) {
			this.drawBuffer();
		}
		this.lastTexture = null;
	}
	,__class__: kha_graphics4_TextShaderPainter
	,__properties__: {set_pipeline:"set_pipeline",get_pipeline:"get_pipeline"}
};
var kha_graphics4_Graphics2 = function(canvas) {
	this.myMipmapScaleQuality = kha_graphics2_ImageScaleQuality.High;
	this.myImageScaleQuality = kha_graphics2_ImageScaleQuality.High;
	kha_graphics2_Graphics.call(this);
	this.set_color(-1);
	this.canvas = canvas;
	this.g = canvas.get_g4();
	this.imagePainter = new kha_graphics4_ImageShaderPainter(this.g);
	this.coloredPainter = new kha_graphics4_ColoredShaderPainter(this.g);
	this.textPainter = new kha_graphics4_TextShaderPainter(this.g);
	this.textPainter.fontSize = this.get_fontSize();
	this.setProjection();
	if(kha_graphics4_Graphics2.videoPipeline == null) {
		kha_graphics4_Graphics2.videoPipeline = new kha_graphics4_PipelineState();
		kha_graphics4_Graphics2.videoPipeline.fragmentShader = kha_Shaders.painter_video_frag;
		kha_graphics4_Graphics2.videoPipeline.vertexShader = kha_Shaders.painter_video_vert;
		var structure = new kha_graphics4_VertexStructure();
		structure.add("vertexPosition",kha_graphics4_VertexData.Float3);
		structure.add("texPosition",kha_graphics4_VertexData.Float2);
		structure.add("vertexColor",kha_graphics4_VertexData.Float4);
		kha_graphics4_Graphics2.videoPipeline.inputLayout = [structure];
		kha_graphics4_Graphics2.videoPipeline.compile();
	}
};
$hxClasses["kha.graphics4.Graphics2"] = kha_graphics4_Graphics2;
kha_graphics4_Graphics2.__name__ = ["kha","graphics4","Graphics2"];
kha_graphics4_Graphics2.upperPowerOfTwo = function(v) {
	--v;
	v |= v >>> 1;
	v |= v >>> 2;
	v |= v >>> 4;
	v |= v >>> 8;
	v |= v >>> 16;
	return ++v;
};
kha_graphics4_Graphics2.__super__ = kha_graphics2_Graphics;
kha_graphics4_Graphics2.prototype = $extend(kha_graphics2_Graphics.prototype,{
	setProjection: function() {
		var width = this.canvas.get_width();
		var height = this.canvas.get_height();
		if(js_Boot.__instanceof(this.canvas,kha_Framebuffer)) {
			this.projectionMatrix = kha_math_FastMatrix4.orthogonalProjection(0,width,height,0,0.1,1000);
		} else {
			if(!kha_Image.get_nonPow2Supported()) {
				width = kha_graphics4_Graphics2.upperPowerOfTwo(width);
				height = kha_graphics4_Graphics2.upperPowerOfTwo(height);
			}
			if(this.g.renderTargetsInvertedY()) {
				this.projectionMatrix = kha_math_FastMatrix4.orthogonalProjection(0,width,0,height,0.1,1000);
			} else {
				this.projectionMatrix = kha_math_FastMatrix4.orthogonalProjection(0,width,height,0,0.1,1000);
			}
		}
		this.imagePainter.setProjection(this.projectionMatrix);
		this.coloredPainter.setProjection(this.projectionMatrix);
		this.textPainter.setProjection(this.projectionMatrix);
	}
	,drawImage: function(img,x,y) {
		var _this = this.coloredPainter;
		if(_this.triangleBufferIndex > 0) {
			_this.drawTriBuffer(false);
		}
		if(_this.bufferIndex > 0) {
			_this.drawBuffer(false);
		}
		this.textPainter.end();
		var xw = x + img.get_width();
		var yh = y + img.get_height();
		var p1_y;
		var p1_x;
		var _this1 = this.transformations[this.transformations.length - 1];
		var value_y;
		var value_x = x;
		value_y = yh;
		var w = _this1._02 * value_x + _this1._12 * value_y + _this1._22;
		var x1 = (_this1._00 * value_x + _this1._10 * value_y + _this1._20) / w;
		var y1 = (_this1._01 * value_x + _this1._11 * value_y + _this1._21) / w;
		p1_x = x1;
		p1_y = y1;
		var p2_y;
		var p2_x;
		var _this2 = this.transformations[this.transformations.length - 1];
		var value_y1;
		var value_x1 = x;
		value_y1 = y;
		var w1 = _this2._02 * value_x1 + _this2._12 * value_y1 + _this2._22;
		var x2 = (_this2._00 * value_x1 + _this2._10 * value_y1 + _this2._20) / w1;
		var y2 = (_this2._01 * value_x1 + _this2._11 * value_y1 + _this2._21) / w1;
		p2_x = x2;
		p2_y = y2;
		var p3_y;
		var p3_x;
		var _this3 = this.transformations[this.transformations.length - 1];
		var value_y2;
		var value_x2 = xw;
		value_y2 = y;
		var w2 = _this3._02 * value_x2 + _this3._12 * value_y2 + _this3._22;
		var x3 = (_this3._00 * value_x2 + _this3._10 * value_y2 + _this3._20) / w2;
		var y3 = (_this3._01 * value_x2 + _this3._11 * value_y2 + _this3._21) / w2;
		p3_x = x3;
		p3_y = y3;
		var p4_y;
		var p4_x;
		var _this4 = this.transformations[this.transformations.length - 1];
		var value_y3;
		var value_x3 = xw;
		value_y3 = yh;
		var w3 = _this4._02 * value_x3 + _this4._12 * value_y3 + _this4._22;
		var x4 = (_this4._00 * value_x3 + _this4._10 * value_y3 + _this4._20) / w3;
		var y4 = (_this4._01 * value_x3 + _this4._11 * value_y3 + _this4._21) / w3;
		p4_x = x4;
		p4_y = y4;
		var _this5 = this.imagePainter;
		var opacity = this.get_opacity();
		var color = this.get_color();
		var tex = img;
		if(_this5.bufferIndex + 1 >= kha_graphics4_ImageShaderPainter.bufferSize || _this5.lastTexture != null && tex != _this5.lastTexture) {
			_this5.drawBuffer();
		}
		var r = ((color & 16711680) >>> 16) * 0.00392156862745098;
		var g = ((color & 65280) >>> 8) * 0.00392156862745098;
		var b = (color & 255) * 0.00392156862745098;
		var a = (color >>> 24) * 0.00392156862745098 * opacity;
		var baseIndex = _this5.bufferIndex * kha_graphics4_ImageShaderPainter.vertexSize * 4;
		_this5.rectVertices[baseIndex + 5] = r;
		_this5.rectVertices[baseIndex + 6] = g;
		_this5.rectVertices[baseIndex + 7] = b;
		_this5.rectVertices[baseIndex + 8] = a;
		_this5.rectVertices[baseIndex + 14] = r;
		_this5.rectVertices[baseIndex + 15] = g;
		_this5.rectVertices[baseIndex + 16] = b;
		_this5.rectVertices[baseIndex + 17] = a;
		_this5.rectVertices[baseIndex + 23] = r;
		_this5.rectVertices[baseIndex + 24] = g;
		_this5.rectVertices[baseIndex + 25] = b;
		_this5.rectVertices[baseIndex + 26] = a;
		_this5.rectVertices[baseIndex + 32] = r;
		_this5.rectVertices[baseIndex + 33] = g;
		_this5.rectVertices[baseIndex + 34] = b;
		_this5.rectVertices[baseIndex + 35] = a;
		var right = tex.get_width() / tex.get_realWidth();
		var bottom = tex.get_height() / tex.get_realHeight();
		var baseIndex1 = _this5.bufferIndex * kha_graphics4_ImageShaderPainter.vertexSize * 4;
		_this5.rectVertices[baseIndex1 + 3] = 0;
		_this5.rectVertices[baseIndex1 + 4] = bottom;
		_this5.rectVertices[baseIndex1 + 12] = 0;
		_this5.rectVertices[baseIndex1 + 13] = 0;
		_this5.rectVertices[baseIndex1 + 21] = right;
		_this5.rectVertices[baseIndex1 + 22] = 0;
		_this5.rectVertices[baseIndex1 + 30] = right;
		_this5.rectVertices[baseIndex1 + 31] = bottom;
		var baseIndex2 = _this5.bufferIndex * kha_graphics4_ImageShaderPainter.vertexSize * 4;
		_this5.rectVertices[baseIndex2] = p1_x;
		_this5.rectVertices[baseIndex2 + 1] = p1_y;
		_this5.rectVertices[baseIndex2 + 2] = -5.0;
		_this5.rectVertices[baseIndex2 + 9] = p2_x;
		_this5.rectVertices[baseIndex2 + 10] = p2_y;
		_this5.rectVertices[baseIndex2 + 11] = -5.0;
		_this5.rectVertices[baseIndex2 + 18] = p3_x;
		_this5.rectVertices[baseIndex2 + 19] = p3_y;
		_this5.rectVertices[baseIndex2 + 20] = -5.0;
		_this5.rectVertices[baseIndex2 + 27] = p4_x;
		_this5.rectVertices[baseIndex2 + 28] = p4_y;
		_this5.rectVertices[baseIndex2 + 29] = -5.0;
		++_this5.bufferIndex;
		_this5.lastTexture = tex;
	}
	,drawScaledSubImage: function(img,sx,sy,sw,sh,dx,dy,dw,dh) {
		var _this = this.coloredPainter;
		if(_this.triangleBufferIndex > 0) {
			_this.drawTriBuffer(false);
		}
		if(_this.bufferIndex > 0) {
			_this.drawBuffer(false);
		}
		this.textPainter.end();
		var p1_y;
		var p1_x;
		var _this1 = this.transformations[this.transformations.length - 1];
		var value_y;
		var value_x = dx;
		value_y = dy + dh;
		var w = _this1._02 * value_x + _this1._12 * value_y + _this1._22;
		var x = (_this1._00 * value_x + _this1._10 * value_y + _this1._20) / w;
		var y = (_this1._01 * value_x + _this1._11 * value_y + _this1._21) / w;
		p1_x = x;
		p1_y = y;
		var p2_y;
		var p2_x;
		var _this2 = this.transformations[this.transformations.length - 1];
		var value_y1;
		var value_x1 = dx;
		value_y1 = dy;
		var w1 = _this2._02 * value_x1 + _this2._12 * value_y1 + _this2._22;
		var x1 = (_this2._00 * value_x1 + _this2._10 * value_y1 + _this2._20) / w1;
		var y1 = (_this2._01 * value_x1 + _this2._11 * value_y1 + _this2._21) / w1;
		p2_x = x1;
		p2_y = y1;
		var p3_y;
		var p3_x;
		var _this3 = this.transformations[this.transformations.length - 1];
		var value_y2;
		var value_x2 = dx + dw;
		value_y2 = dy;
		var w2 = _this3._02 * value_x2 + _this3._12 * value_y2 + _this3._22;
		var x2 = (_this3._00 * value_x2 + _this3._10 * value_y2 + _this3._20) / w2;
		var y2 = (_this3._01 * value_x2 + _this3._11 * value_y2 + _this3._21) / w2;
		p3_x = x2;
		p3_y = y2;
		var p4_y;
		var p4_x;
		var _this4 = this.transformations[this.transformations.length - 1];
		var value_y3;
		var value_x3 = dx + dw;
		value_y3 = dy + dh;
		var w3 = _this4._02 * value_x3 + _this4._12 * value_y3 + _this4._22;
		var x3 = (_this4._00 * value_x3 + _this4._10 * value_y3 + _this4._20) / w3;
		var y3 = (_this4._01 * value_x3 + _this4._11 * value_y3 + _this4._21) / w3;
		p4_x = x3;
		p4_y = y3;
		var _this5 = this.imagePainter;
		var opacity = this.get_opacity();
		var color = this.get_color();
		var tex = img;
		if(_this5.bufferIndex + 1 >= kha_graphics4_ImageShaderPainter.bufferSize || _this5.lastTexture != null && tex != _this5.lastTexture) {
			_this5.drawBuffer();
		}
		var left = sx / tex.get_realWidth();
		var top = sy / tex.get_realHeight();
		var right = (sx + sw) / tex.get_realWidth();
		var bottom = (sy + sh) / tex.get_realHeight();
		var baseIndex = _this5.bufferIndex * kha_graphics4_ImageShaderPainter.vertexSize * 4;
		_this5.rectVertices[baseIndex + 3] = left;
		_this5.rectVertices[baseIndex + 4] = bottom;
		_this5.rectVertices[baseIndex + 12] = left;
		_this5.rectVertices[baseIndex + 13] = top;
		_this5.rectVertices[baseIndex + 21] = right;
		_this5.rectVertices[baseIndex + 22] = top;
		_this5.rectVertices[baseIndex + 30] = right;
		_this5.rectVertices[baseIndex + 31] = bottom;
		var r = ((color & 16711680) >>> 16) * 0.00392156862745098;
		var g = ((color & 65280) >>> 8) * 0.00392156862745098;
		var b = (color & 255) * 0.00392156862745098;
		var a = (color >>> 24) * 0.00392156862745098 * opacity;
		var baseIndex1 = _this5.bufferIndex * kha_graphics4_ImageShaderPainter.vertexSize * 4;
		_this5.rectVertices[baseIndex1 + 5] = r;
		_this5.rectVertices[baseIndex1 + 6] = g;
		_this5.rectVertices[baseIndex1 + 7] = b;
		_this5.rectVertices[baseIndex1 + 8] = a;
		_this5.rectVertices[baseIndex1 + 14] = r;
		_this5.rectVertices[baseIndex1 + 15] = g;
		_this5.rectVertices[baseIndex1 + 16] = b;
		_this5.rectVertices[baseIndex1 + 17] = a;
		_this5.rectVertices[baseIndex1 + 23] = r;
		_this5.rectVertices[baseIndex1 + 24] = g;
		_this5.rectVertices[baseIndex1 + 25] = b;
		_this5.rectVertices[baseIndex1 + 26] = a;
		_this5.rectVertices[baseIndex1 + 32] = r;
		_this5.rectVertices[baseIndex1 + 33] = g;
		_this5.rectVertices[baseIndex1 + 34] = b;
		_this5.rectVertices[baseIndex1 + 35] = a;
		var baseIndex2 = _this5.bufferIndex * kha_graphics4_ImageShaderPainter.vertexSize * 4;
		_this5.rectVertices[baseIndex2] = p1_x;
		_this5.rectVertices[baseIndex2 + 1] = p1_y;
		_this5.rectVertices[baseIndex2 + 2] = -5.0;
		_this5.rectVertices[baseIndex2 + 9] = p2_x;
		_this5.rectVertices[baseIndex2 + 10] = p2_y;
		_this5.rectVertices[baseIndex2 + 11] = -5.0;
		_this5.rectVertices[baseIndex2 + 18] = p3_x;
		_this5.rectVertices[baseIndex2 + 19] = p3_y;
		_this5.rectVertices[baseIndex2 + 20] = -5.0;
		_this5.rectVertices[baseIndex2 + 27] = p4_x;
		_this5.rectVertices[baseIndex2 + 28] = p4_y;
		_this5.rectVertices[baseIndex2 + 29] = -5.0;
		++_this5.bufferIndex;
		_this5.lastTexture = tex;
	}
	,get_color: function() {
		return this.myColor;
	}
	,set_color: function(color) {
		return this.myColor = color;
	}
	,drawRect: function(x,y,width,height,strength) {
		if(strength == null) {
			strength = 1.0;
		}
		this.imagePainter.end();
		this.textPainter.end();
		var _this = this.transformations[this.transformations.length - 1];
		var value_y;
		var value_x = x - strength / 2;
		value_y = y + strength / 2;
		var w = _this._02 * value_x + _this._12 * value_y + _this._22;
		var x1 = (_this._00 * value_x + _this._10 * value_y + _this._20) / w;
		var y1 = (_this._01 * value_x + _this._11 * value_y + _this._21) / w;
		var p1 = new kha_math_FastVector2(x1,y1);
		var _this1 = this.transformations[this.transformations.length - 1];
		var value_y1;
		var value_x1 = x - strength / 2;
		value_y1 = y - strength / 2;
		var w1 = _this1._02 * value_x1 + _this1._12 * value_y1 + _this1._22;
		var x2 = (_this1._00 * value_x1 + _this1._10 * value_y1 + _this1._20) / w1;
		var y2 = (_this1._01 * value_x1 + _this1._11 * value_y1 + _this1._21) / w1;
		var p2 = new kha_math_FastVector2(x2,y2);
		var _this2 = this.transformations[this.transformations.length - 1];
		var value_y2;
		var value_x2 = x + width + strength / 2;
		value_y2 = y - strength / 2;
		var w2 = _this2._02 * value_x2 + _this2._12 * value_y2 + _this2._22;
		var x3 = (_this2._00 * value_x2 + _this2._10 * value_y2 + _this2._20) / w2;
		var y3 = (_this2._01 * value_x2 + _this2._11 * value_y2 + _this2._21) / w2;
		var p3 = new kha_math_FastVector2(x3,y3);
		var _this3 = this.transformations[this.transformations.length - 1];
		var value_y3;
		var value_x3 = x + width + strength / 2;
		value_y3 = y + strength / 2;
		var w3 = _this3._02 * value_x3 + _this3._12 * value_y3 + _this3._22;
		var x4 = (_this3._00 * value_x3 + _this3._10 * value_y3 + _this3._20) / w3;
		var y4 = (_this3._01 * value_x3 + _this3._11 * value_y3 + _this3._21) / w3;
		var p4 = new kha_math_FastVector2(x4,y4);
		this.coloredPainter.fillRect(this.get_opacity(),this.get_color(),p1.x,p1.y,p2.x,p2.y,p3.x,p3.y,p4.x,p4.y);
		var _this4 = this.transformations[this.transformations.length - 1];
		var value_y4;
		var value_x4 = x - strength / 2;
		value_y4 = y + height + strength / 2;
		var w4 = _this4._02 * value_x4 + _this4._12 * value_y4 + _this4._22;
		var x5 = (_this4._00 * value_x4 + _this4._10 * value_y4 + _this4._20) / w4;
		var y5 = (_this4._01 * value_x4 + _this4._11 * value_y4 + _this4._21) / w4;
		p1 = new kha_math_FastVector2(x5,y5);
		var _this5 = this.transformations[this.transformations.length - 1];
		var value_y5;
		var value_x5 = x + strength / 2;
		value_y5 = y - strength / 2;
		var w5 = _this5._02 * value_x5 + _this5._12 * value_y5 + _this5._22;
		var x6 = (_this5._00 * value_x5 + _this5._10 * value_y5 + _this5._20) / w5;
		var y6 = (_this5._01 * value_x5 + _this5._11 * value_y5 + _this5._21) / w5;
		p3 = new kha_math_FastVector2(x6,y6);
		var _this6 = this.transformations[this.transformations.length - 1];
		var value_y6;
		var value_x6 = x + strength / 2;
		value_y6 = y + height + strength / 2;
		var w6 = _this6._02 * value_x6 + _this6._12 * value_y6 + _this6._22;
		var x7 = (_this6._00 * value_x6 + _this6._10 * value_y6 + _this6._20) / w6;
		var y7 = (_this6._01 * value_x6 + _this6._11 * value_y6 + _this6._21) / w6;
		p4 = new kha_math_FastVector2(x7,y7);
		this.coloredPainter.fillRect(this.get_opacity(),this.get_color(),p1.x,p1.y,p2.x,p2.y,p3.x,p3.y,p4.x,p4.y);
		var _this7 = this.transformations[this.transformations.length - 1];
		var value_y7;
		var value_x7 = x - strength / 2;
		value_y7 = y + height - strength / 2;
		var w7 = _this7._02 * value_x7 + _this7._12 * value_y7 + _this7._22;
		var x8 = (_this7._00 * value_x7 + _this7._10 * value_y7 + _this7._20) / w7;
		var y8 = (_this7._01 * value_x7 + _this7._11 * value_y7 + _this7._21) / w7;
		p2 = new kha_math_FastVector2(x8,y8);
		var _this8 = this.transformations[this.transformations.length - 1];
		var value_y8;
		var value_x8 = x + width + strength / 2;
		value_y8 = y + height - strength / 2;
		var w8 = _this8._02 * value_x8 + _this8._12 * value_y8 + _this8._22;
		var x9 = (_this8._00 * value_x8 + _this8._10 * value_y8 + _this8._20) / w8;
		var y9 = (_this8._01 * value_x8 + _this8._11 * value_y8 + _this8._21) / w8;
		p3 = new kha_math_FastVector2(x9,y9);
		var _this9 = this.transformations[this.transformations.length - 1];
		var value_y9;
		var value_x9 = x + width + strength / 2;
		value_y9 = y + height + strength / 2;
		var w9 = _this9._02 * value_x9 + _this9._12 * value_y9 + _this9._22;
		var x10 = (_this9._00 * value_x9 + _this9._10 * value_y9 + _this9._20) / w9;
		var y10 = (_this9._01 * value_x9 + _this9._11 * value_y9 + _this9._21) / w9;
		p4 = new kha_math_FastVector2(x10,y10);
		this.coloredPainter.fillRect(this.get_opacity(),this.get_color(),p1.x,p1.y,p2.x,p2.y,p3.x,p3.y,p4.x,p4.y);
		var _this10 = this.transformations[this.transformations.length - 1];
		var value_y10;
		var value_x10 = x + width - strength / 2;
		value_y10 = y + height + strength / 2;
		var w10 = _this10._02 * value_x10 + _this10._12 * value_y10 + _this10._22;
		var x11 = (_this10._00 * value_x10 + _this10._10 * value_y10 + _this10._20) / w10;
		var y11 = (_this10._01 * value_x10 + _this10._11 * value_y10 + _this10._21) / w10;
		p1 = new kha_math_FastVector2(x11,y11);
		var _this11 = this.transformations[this.transformations.length - 1];
		var value_y11;
		var value_x11 = x + width - strength / 2;
		value_y11 = y - strength / 2;
		var w11 = _this11._02 * value_x11 + _this11._12 * value_y11 + _this11._22;
		var x12 = (_this11._00 * value_x11 + _this11._10 * value_y11 + _this11._20) / w11;
		var y12 = (_this11._01 * value_x11 + _this11._11 * value_y11 + _this11._21) / w11;
		p2 = new kha_math_FastVector2(x12,y12);
		var _this12 = this.transformations[this.transformations.length - 1];
		var value_y12;
		var value_x12 = x + width + strength / 2;
		value_y12 = y - strength / 2;
		var w12 = _this12._02 * value_x12 + _this12._12 * value_y12 + _this12._22;
		var x13 = (_this12._00 * value_x12 + _this12._10 * value_y12 + _this12._20) / w12;
		var y13 = (_this12._01 * value_x12 + _this12._11 * value_y12 + _this12._21) / w12;
		p3 = new kha_math_FastVector2(x13,y13);
		var _this13 = this.transformations[this.transformations.length - 1];
		var value_y13;
		var value_x13 = x + width + strength / 2;
		value_y13 = y + height + strength / 2;
		var w13 = _this13._02 * value_x13 + _this13._12 * value_y13 + _this13._22;
		var x14 = (_this13._00 * value_x13 + _this13._10 * value_y13 + _this13._20) / w13;
		var y14 = (_this13._01 * value_x13 + _this13._11 * value_y13 + _this13._21) / w13;
		p4 = new kha_math_FastVector2(x14,y14);
		this.coloredPainter.fillRect(this.get_opacity(),this.get_color(),p1.x,p1.y,p2.x,p2.y,p3.x,p3.y,p4.x,p4.y);
	}
	,fillRect: function(x,y,width,height) {
		this.imagePainter.end();
		this.textPainter.end();
		var p1_y;
		var p1_x;
		var _this = this.transformations[this.transformations.length - 1];
		var value_y;
		var value_x = x;
		value_y = y + height;
		var w = _this._02 * value_x + _this._12 * value_y + _this._22;
		var x1 = (_this._00 * value_x + _this._10 * value_y + _this._20) / w;
		var y1 = (_this._01 * value_x + _this._11 * value_y + _this._21) / w;
		p1_x = x1;
		p1_y = y1;
		var p2_y;
		var p2_x;
		var _this1 = this.transformations[this.transformations.length - 1];
		var value_y1;
		var value_x1 = x;
		value_y1 = y;
		var w1 = _this1._02 * value_x1 + _this1._12 * value_y1 + _this1._22;
		var x2 = (_this1._00 * value_x1 + _this1._10 * value_y1 + _this1._20) / w1;
		var y2 = (_this1._01 * value_x1 + _this1._11 * value_y1 + _this1._21) / w1;
		p2_x = x2;
		p2_y = y2;
		var p3_y;
		var p3_x;
		var _this2 = this.transformations[this.transformations.length - 1];
		var value_y2;
		var value_x2 = x + width;
		value_y2 = y;
		var w2 = _this2._02 * value_x2 + _this2._12 * value_y2 + _this2._22;
		var x3 = (_this2._00 * value_x2 + _this2._10 * value_y2 + _this2._20) / w2;
		var y3 = (_this2._01 * value_x2 + _this2._11 * value_y2 + _this2._21) / w2;
		p3_x = x3;
		p3_y = y3;
		var p4_y;
		var p4_x;
		var _this3 = this.transformations[this.transformations.length - 1];
		var value_y3;
		var value_x3 = x + width;
		value_y3 = y + height;
		var w3 = _this3._02 * value_x3 + _this3._12 * value_y3 + _this3._22;
		var x4 = (_this3._00 * value_x3 + _this3._10 * value_y3 + _this3._20) / w3;
		var y4 = (_this3._01 * value_x3 + _this3._11 * value_y3 + _this3._21) / w3;
		p4_x = x4;
		p4_y = y4;
		this.coloredPainter.fillRect(this.get_opacity(),this.get_color(),p1_x,p1_y,p2_x,p2_y,p3_x,p3_y,p4_x,p4_y);
	}
	,drawString: function(text,x,y) {
		this.imagePainter.end();
		var _this = this.coloredPainter;
		if(_this.triangleBufferIndex > 0) {
			_this.drawTriBuffer(false);
		}
		if(_this.bufferIndex > 0) {
			_this.drawBuffer(false);
		}
		this.textPainter.drawString(text,this.get_opacity(),this.get_color(),x,y,this.transformations[this.transformations.length - 1],this.get_fontGlyphs());
	}
	,get_font: function() {
		return this.myFont;
	}
	,set_font: function(font) {
		this.textPainter.setFont(font);
		return this.myFont = font;
	}
	,set_fontSize: function(value) {
		return kha_graphics2_Graphics.prototype.set_fontSize.call(this,this.textPainter.fontSize = value);
	}
	,drawLine: function(x1,y1,x2,y2,strength) {
		if(strength == null) {
			strength = 1.0;
		}
		this.imagePainter.end();
		this.textPainter.end();
		var vec;
		if(y2 == y1) {
			vec = new kha_math_FastVector2(0,-1);
		} else {
			vec = new kha_math_FastVector2(1,-(x2 - x1) / (y2 - y1));
		}
		vec.set_length(strength);
		var p1 = new kha_math_FastVector2(x1 + 0.5 * vec.x,y1 + 0.5 * vec.y);
		var p2 = new kha_math_FastVector2(x2 + 0.5 * vec.x,y2 + 0.5 * vec.y);
		var p3 = new kha_math_FastVector2(p1.x - vec.x,p1.y - vec.y);
		var p4 = new kha_math_FastVector2(p2.x - vec.x,p2.y - vec.y);
		var _this = this.transformations[this.transformations.length - 1];
		var w = _this._02 * p1.x + _this._12 * p1.y + _this._22;
		var x = (_this._00 * p1.x + _this._10 * p1.y + _this._20) / w;
		var y = (_this._01 * p1.x + _this._11 * p1.y + _this._21) / w;
		p1 = new kha_math_FastVector2(x,y);
		var _this1 = this.transformations[this.transformations.length - 1];
		var w1 = _this1._02 * p2.x + _this1._12 * p2.y + _this1._22;
		var x3 = (_this1._00 * p2.x + _this1._10 * p2.y + _this1._20) / w1;
		var y3 = (_this1._01 * p2.x + _this1._11 * p2.y + _this1._21) / w1;
		p2 = new kha_math_FastVector2(x3,y3);
		var _this2 = this.transformations[this.transformations.length - 1];
		var w2 = _this2._02 * p3.x + _this2._12 * p3.y + _this2._22;
		var x4 = (_this2._00 * p3.x + _this2._10 * p3.y + _this2._20) / w2;
		var y4 = (_this2._01 * p3.x + _this2._11 * p3.y + _this2._21) / w2;
		p3 = new kha_math_FastVector2(x4,y4);
		var _this3 = this.transformations[this.transformations.length - 1];
		var w3 = _this3._02 * p4.x + _this3._12 * p4.y + _this3._22;
		var x5 = (_this3._00 * p4.x + _this3._10 * p4.y + _this3._20) / w3;
		var y5 = (_this3._01 * p4.x + _this3._11 * p4.y + _this3._21) / w3;
		p4 = new kha_math_FastVector2(x5,y5);
		this.coloredPainter.fillTriangle(this.get_opacity(),this.get_color(),p1.x,p1.y,p2.x,p2.y,p3.x,p3.y);
		this.coloredPainter.fillTriangle(this.get_opacity(),this.get_color(),p3.x,p3.y,p2.x,p2.y,p4.x,p4.y);
	}
	,fillTriangle: function(x1,y1,x2,y2,x3,y3) {
		this.imagePainter.end();
		this.textPainter.end();
		var p1_y;
		var p1_x;
		var _this = this.transformations[this.transformations.length - 1];
		var value_y;
		var value_x = x1;
		value_y = y1;
		var w = _this._02 * value_x + _this._12 * value_y + _this._22;
		var x = (_this._00 * value_x + _this._10 * value_y + _this._20) / w;
		var y = (_this._01 * value_x + _this._11 * value_y + _this._21) / w;
		p1_x = x;
		p1_y = y;
		var p2_y;
		var p2_x;
		var _this1 = this.transformations[this.transformations.length - 1];
		var value_y1;
		var value_x1 = x2;
		value_y1 = y2;
		var w1 = _this1._02 * value_x1 + _this1._12 * value_y1 + _this1._22;
		var x4 = (_this1._00 * value_x1 + _this1._10 * value_y1 + _this1._20) / w1;
		var y4 = (_this1._01 * value_x1 + _this1._11 * value_y1 + _this1._21) / w1;
		p2_x = x4;
		p2_y = y4;
		var p3_y;
		var p3_x;
		var _this2 = this.transformations[this.transformations.length - 1];
		var value_y2;
		var value_x2 = x3;
		value_y2 = y3;
		var w2 = _this2._02 * value_x2 + _this2._12 * value_y2 + _this2._22;
		var x5 = (_this2._00 * value_x2 + _this2._10 * value_y2 + _this2._20) / w2;
		var y5 = (_this2._01 * value_x2 + _this2._11 * value_y2 + _this2._21) / w2;
		p3_x = x5;
		p3_y = y5;
		this.coloredPainter.fillTriangle(this.get_opacity(),this.get_color(),p1_x,p1_y,p2_x,p2_y,p3_x,p3_y);
	}
	,get_imageScaleQuality: function() {
		return this.myImageScaleQuality;
	}
	,set_imageScaleQuality: function(value) {
		this.imagePainter.setBilinearFilter(value == kha_graphics2_ImageScaleQuality.High);
		this.textPainter.setBilinearFilter(value == kha_graphics2_ImageScaleQuality.High);
		return this.myImageScaleQuality = value;
	}
	,get_mipmapScaleQuality: function() {
		return this.myMipmapScaleQuality;
	}
	,set_mipmapScaleQuality: function(value) {
		this.imagePainter.setBilinearMipmapFilter(value == kha_graphics2_ImageScaleQuality.High);
		return this.myMipmapScaleQuality = value;
	}
	,setPipeline: function(pipeline) {
		this.flush();
		this.imagePainter.set_pipeline(pipeline);
		this.coloredPainter.set_pipeline(pipeline);
		this.textPainter.set_pipeline(pipeline);
		if(pipeline != null) {
			this.g.setPipeline(pipeline);
		}
	}
	,scissor: function(x,y,width,height) {
		this.flush();
		this.g.scissor(x,y,width,height);
	}
	,disableScissor: function() {
		this.flush();
		this.g.disableScissor();
	}
	,begin: function(clear,clearColor) {
		if(clear == null) {
			clear = true;
		}
		this.g.begin();
		if(clear) {
			this.clear(clearColor);
		}
		this.setProjection();
	}
	,clear: function(color) {
		this.flush();
		this.g.clear(color == null ? -16777216 : color);
	}
	,flush: function() {
		this.imagePainter.end();
		this.textPainter.end();
		var _this = this.coloredPainter;
		if(_this.triangleBufferIndex > 0) {
			_this.drawTriBuffer(false);
		}
		if(_this.bufferIndex > 0) {
			_this.drawBuffer(false);
		}
	}
	,end: function() {
		this.flush();
		this.g.end();
	}
	,drawVideoInternal: function(video,x,y,width,height) {
	}
	,drawVideo: function(video,x,y,width,height) {
		this.setPipeline(kha_graphics4_Graphics2.videoPipeline);
		this.drawVideoInternal(video,x,y,width,height);
		this.setPipeline(null);
	}
	,__class__: kha_graphics4_Graphics2
});
var kha_graphics4_IndexBuffer = function(indexCount,usage,canRead) {
	if(canRead == null) {
		canRead = false;
	}
	this.usage = usage;
	this.mySize = indexCount;
	this.buffer = kha_SystemImpl.gl.createBuffer();
	this._data = [];
	this._data[indexCount - 1] = 0;
};
$hxClasses["kha.graphics4.IndexBuffer"] = kha_graphics4_IndexBuffer;
kha_graphics4_IndexBuffer.__name__ = ["kha","graphics4","IndexBuffer"];
kha_graphics4_IndexBuffer.prototype = {
	'delete': function() {
		this._data = null;
		kha_SystemImpl.gl.deleteBuffer(this.buffer);
	}
	,lock: function() {
		return this._data;
	}
	,unlock: function() {
		kha_SystemImpl.gl.bindBuffer(34963,this.buffer);
		var glData = kha_SystemImpl.elementIndexUint == null ? new Uint16Array(this._data) : new Uint32Array(this._data);
		kha_SystemImpl.gl.bufferData(34963,glData,this.usage == kha_graphics4_Usage.DynamicUsage ? 35048 : 35044);
	}
	,set: function() {
		kha_SystemImpl.gl.bindBuffer(34963,this.buffer);
	}
	,count: function() {
		return this.mySize;
	}
	,__class__: kha_graphics4_IndexBuffer
};
var kha_graphics4_MipMapFilter = $hxClasses["kha.graphics4.MipMapFilter"] = { __ename__ : true, __constructs__ : ["NoMipFilter","PointMipFilter","LinearMipFilter"] };
kha_graphics4_MipMapFilter.NoMipFilter = ["NoMipFilter",0];
kha_graphics4_MipMapFilter.NoMipFilter.toString = $estr;
kha_graphics4_MipMapFilter.NoMipFilter.__enum__ = kha_graphics4_MipMapFilter;
kha_graphics4_MipMapFilter.PointMipFilter = ["PointMipFilter",1];
kha_graphics4_MipMapFilter.PointMipFilter.toString = $estr;
kha_graphics4_MipMapFilter.PointMipFilter.__enum__ = kha_graphics4_MipMapFilter;
kha_graphics4_MipMapFilter.LinearMipFilter = ["LinearMipFilter",2];
kha_graphics4_MipMapFilter.LinearMipFilter.toString = $estr;
kha_graphics4_MipMapFilter.LinearMipFilter.__enum__ = kha_graphics4_MipMapFilter;
var kha_graphics4_PipelineStateBase = function() {
	this.inputLayout = null;
	this.vertexShader = null;
	this.fragmentShader = null;
	this.geometryShader = null;
	this.tessellationControlShader = null;
	this.tessellationEvaluationShader = null;
	this.cullMode = kha_graphics4_CullMode.None;
	this.depthWrite = false;
	this.depthMode = kha_graphics4_CompareMode.Always;
	this.stencilMode = kha_graphics4_CompareMode.Always;
	this.stencilBothPass = kha_graphics4_StencilAction.Keep;
	this.stencilDepthFail = kha_graphics4_StencilAction.Keep;
	this.stencilFail = kha_graphics4_StencilAction.Keep;
	this.stencilReferenceValue = 0;
	this.stencilReadMask = 255;
	this.stencilWriteMask = 255;
	this.blendSource = kha_graphics4_BlendingFactor.BlendOne;
	this.blendDestination = kha_graphics4_BlendingFactor.BlendZero;
	this.blendOperation = kha_graphics4_BlendingOperation.Add;
	this.alphaBlendSource = kha_graphics4_BlendingFactor.BlendOne;
	this.alphaBlendDestination = kha_graphics4_BlendingFactor.BlendZero;
	this.alphaBlendOperation = kha_graphics4_BlendingOperation.Add;
	this.colorWriteMaskRed = this.colorWriteMaskBlue = this.colorWriteMaskGreen = this.colorWriteMaskAlpha = true;
};
$hxClasses["kha.graphics4.PipelineStateBase"] = kha_graphics4_PipelineStateBase;
kha_graphics4_PipelineStateBase.__name__ = ["kha","graphics4","PipelineStateBase"];
kha_graphics4_PipelineStateBase.prototype = {
	set_colorWriteMask: function(value) {
		return this.colorWriteMaskRed = this.colorWriteMaskBlue = this.colorWriteMaskGreen = this.colorWriteMaskAlpha = value;
	}
	,__class__: kha_graphics4_PipelineStateBase
	,__properties__: {set_colorWriteMask:"set_colorWriteMask"}
};
var kha_graphics4_PipelineState = function() {
	kha_graphics4_PipelineStateBase.call(this);
	this.program = kha_SystemImpl.gl.createProgram();
	this.textures = [];
	this.textureValues = [];
};
$hxClasses["kha.graphics4.PipelineState"] = kha_graphics4_PipelineState;
kha_graphics4_PipelineState.__name__ = ["kha","graphics4","PipelineState"];
kha_graphics4_PipelineState.__super__ = kha_graphics4_PipelineStateBase;
kha_graphics4_PipelineState.prototype = $extend(kha_graphics4_PipelineStateBase.prototype,{
	'delete': function() {
		kha_SystemImpl.gl.deleteProgram(this.program);
	}
	,compile: function() {
		this.compileShader(this.vertexShader);
		this.compileShader(this.fragmentShader);
		kha_SystemImpl.gl.attachShader(this.program,this.vertexShader.shader);
		kha_SystemImpl.gl.attachShader(this.program,this.fragmentShader.shader);
		var index = 0;
		var _g = 0;
		var _g1 = this.inputLayout;
		while(_g < _g1.length) {
			var structure = _g1[_g];
			++_g;
			var _g2 = 0;
			var _g3 = structure.elements;
			while(_g2 < _g3.length) {
				var element = _g3[_g2];
				++_g2;
				kha_SystemImpl.gl.bindAttribLocation(this.program,index,element.name);
				if(element.data == kha_graphics4_VertexData.Float4x4) {
					index += 4;
				} else {
					++index;
				}
			}
		}
		kha_SystemImpl.gl.linkProgram(this.program);
		if(!kha_SystemImpl.gl.getProgramParameter(this.program,35714)) {
			throw new js__$Boot_HaxeError("Could not link the shader program:\n" + kha_SystemImpl.gl.getProgramInfoLog(this.program));
		}
	}
	,set: function() {
		kha_SystemImpl.gl.useProgram(this.program);
		var _g1 = 0;
		var _g = this.textureValues.length;
		while(_g1 < _g) {
			var index = _g1++;
			kha_SystemImpl.gl.uniform1i(this.textureValues[index],index);
		}
		kha_SystemImpl.gl.colorMask(this.colorWriteMaskRed,this.colorWriteMaskGreen,this.colorWriteMaskBlue,this.colorWriteMaskAlpha);
	}
	,compileShader: function(shader) {
		if(shader.shader != null) {
			return;
		}
		var s = kha_SystemImpl.gl.createShader(shader.type);
		var highp = kha_SystemImpl.gl.getShaderPrecisionFormat(35632,36338);
		var highpSupported = highp.precision != 0;
		var files = shader.files;
		var _g1 = 0;
		var _g = files.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(!highpSupported && files[i].indexOf("-relaxed") >= 0) {
				kha_SystemImpl.gl.shaderSource(s,shader.sources[i]);
				break;
			}
			if(highpSupported && files[i].indexOf("-relaxed") < 0) {
				kha_SystemImpl.gl.shaderSource(s,shader.sources[i]);
				break;
			}
		}
		kha_SystemImpl.gl.compileShader(s);
		if(!kha_SystemImpl.gl.getShaderParameter(s,35713)) {
			throw new js__$Boot_HaxeError("Could not compile shader:\n" + kha_SystemImpl.gl.getShaderInfoLog(s));
		}
		shader.shader = s;
	}
	,getConstantLocation: function(name) {
		var location = kha_SystemImpl.gl.getUniformLocation(this.program,name);
		var type = 5126;
		var count = kha_SystemImpl.gl.getProgramParameter(this.program,35718);
		var _g1 = 0;
		var _g = count;
		while(_g1 < _g) {
			var i = _g1++;
			var info = kha_SystemImpl.gl.getActiveUniform(this.program,i);
			if(info.name == name || info.name == name + "[0]") {
				type = info.type;
				break;
			}
		}
		return new kha_js_graphics4_ConstantLocation(location,type);
	}
	,getTextureUnit: function(name) {
		var index = this.findTexture(name);
		if(index < 0) {
			var location = kha_SystemImpl.gl.getUniformLocation(this.program,name);
			index = this.textures.length;
			this.textureValues.push(location);
			this.textures.push(name);
		}
		return new kha_js_graphics4_TextureUnit(index);
	}
	,findTexture: function(name) {
		var _g1 = 0;
		var _g = this.textures.length;
		while(_g1 < _g) {
			var index = _g1++;
			if(this.textures[index] == name) {
				return index;
			}
		}
		return -1;
	}
	,__class__: kha_graphics4_PipelineState
});
var kha_graphics4_StencilAction = $hxClasses["kha.graphics4.StencilAction"] = { __ename__ : true, __constructs__ : ["Keep","Zero","Replace","Increment","IncrementWrap","Decrement","DecrementWrap","Invert"] };
kha_graphics4_StencilAction.Keep = ["Keep",0];
kha_graphics4_StencilAction.Keep.toString = $estr;
kha_graphics4_StencilAction.Keep.__enum__ = kha_graphics4_StencilAction;
kha_graphics4_StencilAction.Zero = ["Zero",1];
kha_graphics4_StencilAction.Zero.toString = $estr;
kha_graphics4_StencilAction.Zero.__enum__ = kha_graphics4_StencilAction;
kha_graphics4_StencilAction.Replace = ["Replace",2];
kha_graphics4_StencilAction.Replace.toString = $estr;
kha_graphics4_StencilAction.Replace.__enum__ = kha_graphics4_StencilAction;
kha_graphics4_StencilAction.Increment = ["Increment",3];
kha_graphics4_StencilAction.Increment.toString = $estr;
kha_graphics4_StencilAction.Increment.__enum__ = kha_graphics4_StencilAction;
kha_graphics4_StencilAction.IncrementWrap = ["IncrementWrap",4];
kha_graphics4_StencilAction.IncrementWrap.toString = $estr;
kha_graphics4_StencilAction.IncrementWrap.__enum__ = kha_graphics4_StencilAction;
kha_graphics4_StencilAction.Decrement = ["Decrement",5];
kha_graphics4_StencilAction.Decrement.toString = $estr;
kha_graphics4_StencilAction.Decrement.__enum__ = kha_graphics4_StencilAction;
kha_graphics4_StencilAction.DecrementWrap = ["DecrementWrap",6];
kha_graphics4_StencilAction.DecrementWrap.toString = $estr;
kha_graphics4_StencilAction.DecrementWrap.__enum__ = kha_graphics4_StencilAction;
kha_graphics4_StencilAction.Invert = ["Invert",7];
kha_graphics4_StencilAction.Invert.toString = $estr;
kha_graphics4_StencilAction.Invert.__enum__ = kha_graphics4_StencilAction;
var kha_graphics4_TessellationControlShader = function(source,file) {
};
$hxClasses["kha.graphics4.TessellationControlShader"] = kha_graphics4_TessellationControlShader;
kha_graphics4_TessellationControlShader.__name__ = ["kha","graphics4","TessellationControlShader"];
kha_graphics4_TessellationControlShader.prototype = {
	'delete': function() {
	}
	,__class__: kha_graphics4_TessellationControlShader
};
var kha_graphics4_TessellationEvaluationShader = function(source,file) {
};
$hxClasses["kha.graphics4.TessellationEvaluationShader"] = kha_graphics4_TessellationEvaluationShader;
kha_graphics4_TessellationEvaluationShader.__name__ = ["kha","graphics4","TessellationEvaluationShader"];
kha_graphics4_TessellationEvaluationShader.prototype = {
	'delete': function() {
	}
	,__class__: kha_graphics4_TessellationEvaluationShader
};
var kha_graphics4_TexDir = $hxClasses["kha.graphics4.TexDir"] = { __ename__ : true, __constructs__ : ["U","V"] };
kha_graphics4_TexDir.U = ["U",0];
kha_graphics4_TexDir.U.toString = $estr;
kha_graphics4_TexDir.U.__enum__ = kha_graphics4_TexDir;
kha_graphics4_TexDir.V = ["V",1];
kha_graphics4_TexDir.V.toString = $estr;
kha_graphics4_TexDir.V.__enum__ = kha_graphics4_TexDir;
var kha_graphics4_TextureAddressing = $hxClasses["kha.graphics4.TextureAddressing"] = { __ename__ : true, __constructs__ : ["Repeat","Mirror","Clamp"] };
kha_graphics4_TextureAddressing.Repeat = ["Repeat",0];
kha_graphics4_TextureAddressing.Repeat.toString = $estr;
kha_graphics4_TextureAddressing.Repeat.__enum__ = kha_graphics4_TextureAddressing;
kha_graphics4_TextureAddressing.Mirror = ["Mirror",1];
kha_graphics4_TextureAddressing.Mirror.toString = $estr;
kha_graphics4_TextureAddressing.Mirror.__enum__ = kha_graphics4_TextureAddressing;
kha_graphics4_TextureAddressing.Clamp = ["Clamp",2];
kha_graphics4_TextureAddressing.Clamp.toString = $estr;
kha_graphics4_TextureAddressing.Clamp.__enum__ = kha_graphics4_TextureAddressing;
var kha_graphics4_TextureFilter = $hxClasses["kha.graphics4.TextureFilter"] = { __ename__ : true, __constructs__ : ["PointFilter","LinearFilter","AnisotropicFilter"] };
kha_graphics4_TextureFilter.PointFilter = ["PointFilter",0];
kha_graphics4_TextureFilter.PointFilter.toString = $estr;
kha_graphics4_TextureFilter.PointFilter.__enum__ = kha_graphics4_TextureFilter;
kha_graphics4_TextureFilter.LinearFilter = ["LinearFilter",1];
kha_graphics4_TextureFilter.LinearFilter.toString = $estr;
kha_graphics4_TextureFilter.LinearFilter.__enum__ = kha_graphics4_TextureFilter;
kha_graphics4_TextureFilter.AnisotropicFilter = ["AnisotropicFilter",2];
kha_graphics4_TextureFilter.AnisotropicFilter.toString = $estr;
kha_graphics4_TextureFilter.AnisotropicFilter.__enum__ = kha_graphics4_TextureFilter;
var kha_graphics4_TextureFormat = $hxClasses["kha.graphics4.TextureFormat"] = { __ename__ : true, __constructs__ : ["RGBA32","L8","RGBA128","DEPTH16","RGBA64","A32","A16"] };
kha_graphics4_TextureFormat.RGBA32 = ["RGBA32",0];
kha_graphics4_TextureFormat.RGBA32.toString = $estr;
kha_graphics4_TextureFormat.RGBA32.__enum__ = kha_graphics4_TextureFormat;
kha_graphics4_TextureFormat.L8 = ["L8",1];
kha_graphics4_TextureFormat.L8.toString = $estr;
kha_graphics4_TextureFormat.L8.__enum__ = kha_graphics4_TextureFormat;
kha_graphics4_TextureFormat.RGBA128 = ["RGBA128",2];
kha_graphics4_TextureFormat.RGBA128.toString = $estr;
kha_graphics4_TextureFormat.RGBA128.__enum__ = kha_graphics4_TextureFormat;
kha_graphics4_TextureFormat.DEPTH16 = ["DEPTH16",3];
kha_graphics4_TextureFormat.DEPTH16.toString = $estr;
kha_graphics4_TextureFormat.DEPTH16.__enum__ = kha_graphics4_TextureFormat;
kha_graphics4_TextureFormat.RGBA64 = ["RGBA64",4];
kha_graphics4_TextureFormat.RGBA64.toString = $estr;
kha_graphics4_TextureFormat.RGBA64.__enum__ = kha_graphics4_TextureFormat;
kha_graphics4_TextureFormat.A32 = ["A32",5];
kha_graphics4_TextureFormat.A32.toString = $estr;
kha_graphics4_TextureFormat.A32.__enum__ = kha_graphics4_TextureFormat;
kha_graphics4_TextureFormat.A16 = ["A16",6];
kha_graphics4_TextureFormat.A16.toString = $estr;
kha_graphics4_TextureFormat.A16.__enum__ = kha_graphics4_TextureFormat;
var kha_graphics4_TextureUnit = function() { };
$hxClasses["kha.graphics4.TextureUnit"] = kha_graphics4_TextureUnit;
kha_graphics4_TextureUnit.__name__ = ["kha","graphics4","TextureUnit"];
var kha_graphics4_Usage = $hxClasses["kha.graphics4.Usage"] = { __ename__ : true, __constructs__ : ["StaticUsage","DynamicUsage","ReadableUsage"] };
kha_graphics4_Usage.StaticUsage = ["StaticUsage",0];
kha_graphics4_Usage.StaticUsage.toString = $estr;
kha_graphics4_Usage.StaticUsage.__enum__ = kha_graphics4_Usage;
kha_graphics4_Usage.DynamicUsage = ["DynamicUsage",1];
kha_graphics4_Usage.DynamicUsage.toString = $estr;
kha_graphics4_Usage.DynamicUsage.__enum__ = kha_graphics4_Usage;
kha_graphics4_Usage.ReadableUsage = ["ReadableUsage",2];
kha_graphics4_Usage.ReadableUsage.toString = $estr;
kha_graphics4_Usage.ReadableUsage.__enum__ = kha_graphics4_Usage;
var kha_graphics4_VertexBuffer = function(vertexCount,structure,usage,instanceDataStepRate,canRead) {
	if(canRead == null) {
		canRead = false;
	}
	if(instanceDataStepRate == null) {
		instanceDataStepRate = 0;
	}
	this.usage = usage;
	this.instanceDataStepRate = instanceDataStepRate;
	this.mySize = vertexCount;
	this.myStride = 0;
	var _g = 0;
	var _g1 = structure.elements;
	while(_g < _g1.length) {
		var element = _g1[_g];
		++_g;
		var _g2 = element.data;
		switch(_g2[1]) {
		case 0:
			this.myStride += 4;
			break;
		case 1:
			this.myStride += 8;
			break;
		case 2:
			this.myStride += 12;
			break;
		case 3:
			this.myStride += 16;
			break;
		case 4:
			this.myStride += 64;
			break;
		}
	}
	this.buffer = kha_SystemImpl.gl.createBuffer();
	var this1 = new Float32Array(vertexCount * this.myStride / 4 | 0);
	this._data = this1;
	this.sizes = [];
	this.offsets = [];
	this.sizes[structure.elements.length - 1] = 0;
	this.offsets[structure.elements.length - 1] = 0;
	var offset = 0;
	var index = 0;
	var _g3 = 0;
	var _g11 = structure.elements;
	while(_g3 < _g11.length) {
		var element1 = _g11[_g3];
		++_g3;
		var size;
		var _g21 = element1.data;
		switch(_g21[1]) {
		case 0:
			size = 1;
			break;
		case 1:
			size = 2;
			break;
		case 2:
			size = 3;
			break;
		case 3:
			size = 4;
			break;
		case 4:
			size = 16;
			break;
		}
		this.sizes[index] = size;
		this.offsets[index] = offset;
		var _g31 = element1.data;
		switch(_g31[1]) {
		case 0:
			offset += 4;
			break;
		case 1:
			offset += 8;
			break;
		case 2:
			offset += 12;
			break;
		case 3:
			offset += 16;
			break;
		case 4:
			offset += 64;
			break;
		}
		++index;
	}
};
$hxClasses["kha.graphics4.VertexBuffer"] = kha_graphics4_VertexBuffer;
kha_graphics4_VertexBuffer.__name__ = ["kha","graphics4","VertexBuffer"];
kha_graphics4_VertexBuffer.prototype = {
	'delete': function() {
		this._data = null;
		kha_SystemImpl.gl.deleteBuffer(this.buffer);
	}
	,lock: function(start,count) {
		return this._data;
	}
	,unlock: function() {
		kha_SystemImpl.gl.bindBuffer(34962,this.buffer);
		kha_SystemImpl.gl.bufferData(34962,this._data,this.usage == kha_graphics4_Usage.DynamicUsage ? 35048 : 35044);
	}
	,stride: function() {
		return this.myStride;
	}
	,count: function() {
		return this.mySize;
	}
	,set: function(offset) {
		var ext = kha_SystemImpl.gl.getExtension("ANGLE_instanced_arrays");
		kha_SystemImpl.gl.bindBuffer(34962,this.buffer);
		var attributesOffset = 0;
		var _g1 = 0;
		var _g = this.sizes.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(this.sizes[i] > 4) {
				var size = this.sizes[i];
				var addonOffset = 0;
				while(size > 0) {
					kha_SystemImpl.gl.enableVertexAttribArray(offset + attributesOffset);
					kha_SystemImpl.gl.vertexAttribPointer(offset + attributesOffset,4,5126,false,this.myStride,this.offsets[i] + addonOffset);
					if(ext) {
						ext.vertexAttribDivisorANGLE(offset + attributesOffset,this.instanceDataStepRate);
					}
					size -= 4;
					addonOffset += 16;
					++attributesOffset;
				}
			} else {
				kha_SystemImpl.gl.enableVertexAttribArray(offset + attributesOffset);
				kha_SystemImpl.gl.vertexAttribPointer(offset + attributesOffset,this.sizes[i],5126,false,this.myStride,this.offsets[i]);
				if(ext) {
					ext.vertexAttribDivisorANGLE(offset + attributesOffset,this.instanceDataStepRate);
				}
				++attributesOffset;
			}
		}
		return attributesOffset;
	}
	,__class__: kha_graphics4_VertexBuffer
};
var kha_graphics4_VertexData = $hxClasses["kha.graphics4.VertexData"] = { __ename__ : true, __constructs__ : ["Float1","Float2","Float3","Float4","Float4x4"] };
kha_graphics4_VertexData.Float1 = ["Float1",0];
kha_graphics4_VertexData.Float1.toString = $estr;
kha_graphics4_VertexData.Float1.__enum__ = kha_graphics4_VertexData;
kha_graphics4_VertexData.Float2 = ["Float2",1];
kha_graphics4_VertexData.Float2.toString = $estr;
kha_graphics4_VertexData.Float2.__enum__ = kha_graphics4_VertexData;
kha_graphics4_VertexData.Float3 = ["Float3",2];
kha_graphics4_VertexData.Float3.toString = $estr;
kha_graphics4_VertexData.Float3.__enum__ = kha_graphics4_VertexData;
kha_graphics4_VertexData.Float4 = ["Float4",3];
kha_graphics4_VertexData.Float4.toString = $estr;
kha_graphics4_VertexData.Float4.__enum__ = kha_graphics4_VertexData;
kha_graphics4_VertexData.Float4x4 = ["Float4x4",4];
kha_graphics4_VertexData.Float4x4.toString = $estr;
kha_graphics4_VertexData.Float4x4.__enum__ = kha_graphics4_VertexData;
var kha_graphics4_VertexElement = function(name,data) {
	this.name = name;
	this.data = data;
};
$hxClasses["kha.graphics4.VertexElement"] = kha_graphics4_VertexElement;
kha_graphics4_VertexElement.__name__ = ["kha","graphics4","VertexElement"];
kha_graphics4_VertexElement.prototype = {
	__class__: kha_graphics4_VertexElement
};
var kha_graphics4_VertexShader = function(sources,files) {
	this.sources = [];
	var _g = 0;
	while(_g < sources.length) {
		var source = sources[_g];
		++_g;
		this.sources.push(source.toString());
	}
	this.type = 35633;
	this.shader = null;
	this.files = files;
};
$hxClasses["kha.graphics4.VertexShader"] = kha_graphics4_VertexShader;
kha_graphics4_VertexShader.__name__ = ["kha","graphics4","VertexShader"];
kha_graphics4_VertexShader.fromSource = function(source) {
	var shader = new kha_graphics4_VertexShader([],["runtime-string"]);
	shader.sources.push(source);
	return shader;
};
kha_graphics4_VertexShader.prototype = {
	'delete': function() {
		kha_SystemImpl.gl.deleteShader(this.shader);
		this.shader = null;
		this.sources = null;
	}
	,__class__: kha_graphics4_VertexShader
};
var kha_graphics4_VertexStructure = function() {
	this.elements = [];
};
$hxClasses["kha.graphics4.VertexStructure"] = kha_graphics4_VertexStructure;
kha_graphics4_VertexStructure.__name__ = ["kha","graphics4","VertexStructure"];
kha_graphics4_VertexStructure.prototype = {
	add: function(name,data) {
		this.elements.push(new kha_graphics4_VertexElement(name,data));
	}
	,size: function() {
		return this.elements.length;
	}
	,byteSize: function() {
		var byteSize = 0;
		var _g1 = 0;
		var _g = this.elements.length;
		while(_g1 < _g) {
			var i = _g1++;
			byteSize += this.dataByteSize(this.elements[i].data);
		}
		return byteSize;
	}
	,dataByteSize: function(data) {
		switch(data[1]) {
		case 0:
			return 4;
		case 1:
			return 8;
		case 2:
			return 12;
		case 3:
			return 16;
		case 4:
			return 64;
		}
	}
	,get: function(index) {
		return this.elements[index];
	}
	,__class__: kha_graphics4_VertexStructure
};
var kha_input_Gamepad = $hx_exports["kha"]["input"]["Gamepad"] = function(id) {
	if(id == null) {
		id = 0;
	}
	this.axisListeners = [];
	this.buttonListeners = [];
	kha_input_Gamepad.instances[id] = this;
};
$hxClasses["kha.input.Gamepad"] = kha_input_Gamepad;
kha_input_Gamepad.__name__ = ["kha","input","Gamepad"];
kha_input_Gamepad.get = function(num) {
	if(num == null) {
		num = 0;
	}
	if(num >= kha_input_Gamepad.instances.length) {
		return null;
	}
	return kha_input_Gamepad.instances[num];
};
kha_input_Gamepad.prototype = {
	notify: function(axisListener,buttonListener) {
		if(axisListener != null) {
			this.axisListeners.push(axisListener);
		}
		if(buttonListener != null) {
			this.buttonListeners.push(buttonListener);
		}
	}
	,remove: function(axisListener,buttonListener) {
		if(axisListener != null) {
			HxOverrides.remove(this.axisListeners,axisListener);
		}
		if(buttonListener != null) {
			HxOverrides.remove(this.buttonListeners,buttonListener);
		}
	}
	,sendAxisEvent: function(axis,value) {
		var _g = 0;
		var _g1 = this.axisListeners;
		while(_g < _g1.length) {
			var listener = _g1[_g];
			++_g;
			listener(axis,value);
		}
	}
	,sendButtonEvent: function(button,value) {
		var _g = 0;
		var _g1 = this.buttonListeners;
		while(_g < _g1.length) {
			var listener = _g1[_g];
			++_g;
			listener(button,value);
		}
	}
	,__class__: kha_input_Gamepad
};
var kha_network_Controller = function() {
	this.__id = kha_network_ControllerBuilder.nextId++;
	this._inputBuffer = new haxe_io_Bytes(new ArrayBuffer(1));
};
$hxClasses["kha.network.Controller"] = kha_network_Controller;
kha_network_Controller.__name__ = ["kha","network","Controller"];
kha_network_Controller.prototype = {
	_id: function() {
		return this.__id;
	}
	,_receive: function(bytes) {
	}
	,__class__: kha_network_Controller
};
var kha_input_Keyboard = $hx_exports["kha"]["input"]["Keyboard"] = function() {
	kha_network_Controller.call(this);
	this.downListeners = [];
	this.upListeners = [];
	kha_input_Keyboard.instance = this;
};
$hxClasses["kha.input.Keyboard"] = kha_input_Keyboard;
kha_input_Keyboard.__name__ = ["kha","input","Keyboard"];
kha_input_Keyboard.get = function(num) {
	if(num == null) {
		num = 0;
	}
	return kha_SystemImpl.getKeyboard(num);
};
kha_input_Keyboard.__super__ = kha_network_Controller;
kha_input_Keyboard.prototype = $extend(kha_network_Controller.prototype,{
	notify: function(downListener,upListener) {
		if(downListener != null) {
			this.downListeners.push(downListener);
		}
		if(upListener != null) {
			this.upListeners.push(upListener);
		}
	}
	,remove: function(downListener,upListener) {
		if(downListener != null) {
			HxOverrides.remove(this.downListeners,downListener);
		}
		if(upListener != null) {
			HxOverrides.remove(this.upListeners,upListener);
		}
	}
	,show: function() {
	}
	,hide: function() {
	}
	,sendDownEvent: function(key,$char) {
		if(kha_network_Session.the() != null) {
			var bytes = new haxe_io_Bytes(new ArrayBuffer(6));
			bytes.setInt32(0,0);
			bytes.b[4] = key[1] & 255;
			var v = HxOverrides.cca($char,0);
			bytes.b[5] = v & 255;
			kha_network_Session.the().sendControllerUpdate(this._id(),bytes);
		}
		var _g = 0;
		var _g1 = this.downListeners;
		while(_g < _g1.length) {
			var listener = _g1[_g];
			++_g;
			listener(key,$char);
		}
	}
	,sendUpEvent: function(key,$char) {
		if(kha_network_Session.the() != null) {
			var bytes = new haxe_io_Bytes(new ArrayBuffer(6));
			bytes.setInt32(0,1);
			bytes.b[4] = key[1] & 255;
			var v = HxOverrides.cca($char,0);
			bytes.b[5] = v & 255;
			kha_network_Session.the().sendControllerUpdate(this._id(),bytes);
		}
		var _g = 0;
		var _g1 = this.upListeners;
		while(_g < _g1.length) {
			var listener = _g1[_g];
			++_g;
			listener(key,$char);
		}
	}
	,_receive: function(bytes) {
		var funcindex = bytes.getInt32(0);
		if(funcindex == 0) {
			var input0 = Type.createEnumIndex(kha_Key,bytes.b[4],null);
			var input1 = String.fromCharCode(bytes.b[5]);
			this.sendDownEvent(input0,input1);
			return;
		}
		if(funcindex == 1) {
			var input01 = Type.createEnumIndex(kha_Key,bytes.b[4],null);
			var input11 = String.fromCharCode(bytes.b[5]);
			this.sendUpEvent(input01,input11);
			return;
		}
	}
	,__class__: kha_input_Keyboard
});
var kha_input_Mouse = $hx_exports["kha"]["input"]["Mouse"] = function() {
	kha_network_Controller.call(this);
	kha_input_Mouse.instance = this;
};
$hxClasses["kha.input.Mouse"] = kha_input_Mouse;
kha_input_Mouse.__name__ = ["kha","input","Mouse"];
kha_input_Mouse.get = function(num) {
	if(num == null) {
		num = 0;
	}
	return kha_SystemImpl.getMouse(num);
};
kha_input_Mouse.__super__ = kha_network_Controller;
kha_input_Mouse.prototype = $extend(kha_network_Controller.prototype,{
	notify: function(downListener,upListener,moveListener,wheelListener,leaveListener) {
		this.notifyWindowed(0,downListener,upListener,moveListener,wheelListener,leaveListener);
	}
	,remove: function(downListener,upListener,moveListener,wheelListener,leaveListener) {
		this.removeWindowed(0,downListener,upListener,moveListener,wheelListener,leaveListener);
	}
	,notifyWindowed: function(windowId,downListener,upListener,moveListener,wheelListener,leaveListener) {
		if(downListener != null) {
			if(this.windowDownListeners == null) {
				this.windowDownListeners = [];
			}
			while(this.windowDownListeners.length <= windowId) this.windowDownListeners.push([]);
			this.windowDownListeners[windowId].push(downListener);
		}
		if(upListener != null) {
			if(this.windowUpListeners == null) {
				this.windowUpListeners = [];
			}
			while(this.windowUpListeners.length <= windowId) this.windowUpListeners.push([]);
			this.windowUpListeners[windowId].push(upListener);
		}
		if(moveListener != null) {
			if(this.windowMoveListeners == null) {
				this.windowMoveListeners = [];
			}
			while(this.windowMoveListeners.length <= windowId) this.windowMoveListeners.push([]);
			this.windowMoveListeners[windowId].push(moveListener);
		}
		if(wheelListener != null) {
			if(this.windowWheelListeners == null) {
				this.windowWheelListeners = [];
			}
			while(this.windowWheelListeners.length <= windowId) this.windowWheelListeners.push([]);
			this.windowWheelListeners[windowId].push(wheelListener);
		}
		if(leaveListener != null) {
			if(this.windowLeaveListeners == null) {
				this.windowLeaveListeners = [];
			}
			while(this.windowLeaveListeners.length <= windowId) this.windowLeaveListeners.push([]);
			this.windowLeaveListeners[windowId].push(leaveListener);
		}
	}
	,removeWindowed: function(windowId,downListener,upListener,moveListener,wheelListener,leaveListener) {
		if(downListener != null) {
			if(this.windowDownListeners != null) {
				if(windowId < this.windowDownListeners.length) {
					HxOverrides.remove(this.windowDownListeners[windowId],downListener);
				} else {
					haxe_Log.trace("no downListeners for window \"" + windowId + "\" are registered",{ fileName : "Mouse.hx", lineNumber : 88, className : "kha.input.Mouse", methodName : "removeWindowed"});
				}
			} else {
				haxe_Log.trace("no downListeners were ever registered",{ fileName : "Mouse.hx", lineNumber : 91, className : "kha.input.Mouse", methodName : "removeWindowed"});
			}
		}
		if(upListener != null) {
			if(this.windowUpListeners != null) {
				if(windowId < this.windowUpListeners.length) {
					HxOverrides.remove(this.windowUpListeners[windowId],upListener);
				} else {
					haxe_Log.trace("no upListeners for window \"" + windowId + "\" are registered",{ fileName : "Mouse.hx", lineNumber : 100, className : "kha.input.Mouse", methodName : "removeWindowed"});
				}
			} else {
				haxe_Log.trace("no upListeners were ever registered",{ fileName : "Mouse.hx", lineNumber : 103, className : "kha.input.Mouse", methodName : "removeWindowed"});
			}
		}
		if(moveListener != null) {
			if(this.windowMoveListeners != null) {
				if(windowId < this.windowMoveListeners.length) {
					HxOverrides.remove(this.windowMoveListeners[windowId],moveListener);
				} else {
					haxe_Log.trace("no moveListeners for window \"" + windowId + "\" are registered",{ fileName : "Mouse.hx", lineNumber : 112, className : "kha.input.Mouse", methodName : "removeWindowed"});
				}
			} else {
				haxe_Log.trace("no moveListeners were ever registered",{ fileName : "Mouse.hx", lineNumber : 115, className : "kha.input.Mouse", methodName : "removeWindowed"});
			}
		}
		if(wheelListener != null) {
			if(this.windowWheelListeners != null) {
				if(windowId < this.windowWheelListeners.length) {
					HxOverrides.remove(this.windowWheelListeners[windowId],wheelListener);
				} else {
					haxe_Log.trace("no wheelListeners for window \"" + windowId + "\" are registered",{ fileName : "Mouse.hx", lineNumber : 124, className : "kha.input.Mouse", methodName : "removeWindowed"});
				}
			} else {
				haxe_Log.trace("no wheelListeners were ever registered",{ fileName : "Mouse.hx", lineNumber : 127, className : "kha.input.Mouse", methodName : "removeWindowed"});
			}
		}
		if(leaveListener != null) {
			if(this.windowLeaveListeners != null) {
				if(windowId < this.windowLeaveListeners.length) {
					HxOverrides.remove(this.windowLeaveListeners[windowId],leaveListener);
				} else {
					haxe_Log.trace("no leaveListeners for window \"" + windowId + "\" are registered",{ fileName : "Mouse.hx", lineNumber : 136, className : "kha.input.Mouse", methodName : "removeWindowed"});
				}
			} else {
				haxe_Log.trace("no leaveListeners were ever registered",{ fileName : "Mouse.hx", lineNumber : 139, className : "kha.input.Mouse", methodName : "removeWindowed"});
			}
		}
	}
	,lock: function() {
	}
	,unlock: function() {
	}
	,canLock: function() {
		return false;
	}
	,isLocked: function() {
		return false;
	}
	,notifyOnLockChange: function(func,error) {
	}
	,removeFromLockChange: function(func,error) {
	}
	,hideSystemCursor: function() {
	}
	,showSystemCursor: function() {
	}
	,sendLeaveEvent: function(windowId) {
		if(kha_network_Session.the() != null) {
			var bytes = new haxe_io_Bytes(new ArrayBuffer(8));
			bytes.setInt32(0,0);
			bytes.setInt32(4,windowId);
			kha_network_Session.the().sendControllerUpdate(this._id(),bytes);
		}
		if(this.windowLeaveListeners != null) {
			var _g = 0;
			var _g1 = this.windowLeaveListeners[windowId];
			while(_g < _g1.length) {
				var listener = _g1[_g];
				++_g;
				listener();
			}
		}
	}
	,sendDownEvent: function(windowId,button,x,y) {
		if(kha_network_Session.the() != null) {
			var bytes = new haxe_io_Bytes(new ArrayBuffer(20));
			bytes.setInt32(0,1);
			bytes.setInt32(4,windowId);
			bytes.setInt32(8,button);
			bytes.setInt32(12,x);
			bytes.setInt32(16,y);
			kha_network_Session.the().sendControllerUpdate(this._id(),bytes);
		}
		if(this.windowDownListeners != null) {
			var _g = 0;
			var _g1 = this.windowDownListeners[windowId];
			while(_g < _g1.length) {
				var listener = _g1[_g];
				++_g;
				listener(button,x,y);
			}
		}
	}
	,sendUpEvent: function(windowId,button,x,y) {
		if(kha_network_Session.the() != null) {
			var bytes = new haxe_io_Bytes(new ArrayBuffer(20));
			bytes.setInt32(0,2);
			bytes.setInt32(4,windowId);
			bytes.setInt32(8,button);
			bytes.setInt32(12,x);
			bytes.setInt32(16,y);
			kha_network_Session.the().sendControllerUpdate(this._id(),bytes);
		}
		if(this.windowUpListeners != null) {
			var _g = 0;
			var _g1 = this.windowUpListeners[windowId];
			while(_g < _g1.length) {
				var listener = _g1[_g];
				++_g;
				listener(button,x,y);
			}
		}
	}
	,sendMoveEvent: function(windowId,x,y,movementX,movementY) {
		if(kha_network_Session.the() != null) {
			var bytes = new haxe_io_Bytes(new ArrayBuffer(24));
			bytes.setInt32(0,3);
			bytes.setInt32(4,windowId);
			bytes.setInt32(8,x);
			bytes.setInt32(12,y);
			bytes.setInt32(16,movementX);
			bytes.setInt32(20,movementY);
			kha_network_Session.the().sendControllerUpdate(this._id(),bytes);
		}
		if(this.windowMoveListeners != null) {
			var _g = 0;
			var _g1 = this.windowMoveListeners[windowId];
			while(_g < _g1.length) {
				var listener = _g1[_g];
				++_g;
				listener(x,y,movementX,movementY);
			}
		}
	}
	,sendWheelEvent: function(windowId,delta) {
		if(kha_network_Session.the() != null) {
			var bytes = new haxe_io_Bytes(new ArrayBuffer(12));
			bytes.setInt32(0,4);
			bytes.setInt32(4,windowId);
			bytes.setInt32(8,delta);
			kha_network_Session.the().sendControllerUpdate(this._id(),bytes);
		}
		if(this.windowWheelListeners != null) {
			var _g = 0;
			var _g1 = this.windowWheelListeners[windowId];
			while(_g < _g1.length) {
				var listener = _g1[_g];
				++_g;
				listener(delta);
			}
		}
	}
	,_receive: function(bytes) {
		var funcindex = bytes.getInt32(0);
		if(funcindex == 0) {
			var input0 = bytes.getInt32(4);
			this.sendLeaveEvent(input0);
			return;
		}
		if(funcindex == 1) {
			var input01 = bytes.getInt32(4);
			var input1 = bytes.getInt32(8);
			var input2 = bytes.getInt32(12);
			var input3 = bytes.getInt32(16);
			this.sendDownEvent(input01,input1,input2,input3);
			return;
		}
		if(funcindex == 2) {
			var input02 = bytes.getInt32(4);
			var input11 = bytes.getInt32(8);
			var input21 = bytes.getInt32(12);
			var input31 = bytes.getInt32(16);
			this.sendUpEvent(input02,input11,input21,input31);
			return;
		}
		if(funcindex == 3) {
			var input03 = bytes.getInt32(4);
			var input12 = bytes.getInt32(8);
			var input22 = bytes.getInt32(12);
			var input32 = bytes.getInt32(16);
			var input4 = bytes.getInt32(20);
			this.sendMoveEvent(input03,input12,input22,input32,input4);
			return;
		}
		if(funcindex == 4) {
			var input04 = bytes.getInt32(4);
			var input13 = bytes.getInt32(8);
			this.sendWheelEvent(input04,input13);
			return;
		}
	}
	,__class__: kha_input_Mouse
});
var kha_input_MouseImpl = function() {
	kha_input_Mouse.call(this);
};
$hxClasses["kha.input.MouseImpl"] = kha_input_MouseImpl;
kha_input_MouseImpl.__name__ = ["kha","input","MouseImpl"];
kha_input_MouseImpl.__super__ = kha_input_Mouse;
kha_input_MouseImpl.prototype = $extend(kha_input_Mouse.prototype,{
	hideSystemCursor: function() {
		kha_SystemImpl.khanvas.style.cursor = "none";
	}
	,showSystemCursor: function() {
		kha_SystemImpl.khanvas.style.cursor = "default";
	}
	,_receive: function(bytes) {
		var funcindex = bytes.getInt32(0);
	}
	,__class__: kha_input_MouseImpl
});
var kha_input_Sensor = function() { };
$hxClasses["kha.input.Sensor"] = kha_input_Sensor;
kha_input_Sensor.__name__ = ["kha","input","Sensor"];
kha_input_Sensor.get = function(type) {
	return null;
};
kha_input_Sensor.prototype = {
	notify: function(listener) {
	}
	,__class__: kha_input_Sensor
};
var kha_input_SensorType = $hxClasses["kha.input.SensorType"] = { __ename__ : true, __constructs__ : ["Accelerometer","Gyroscope"] };
kha_input_SensorType.Accelerometer = ["Accelerometer",0];
kha_input_SensorType.Accelerometer.toString = $estr;
kha_input_SensorType.Accelerometer.__enum__ = kha_input_SensorType;
kha_input_SensorType.Gyroscope = ["Gyroscope",1];
kha_input_SensorType.Gyroscope.toString = $estr;
kha_input_SensorType.Gyroscope.__enum__ = kha_input_SensorType;
var kha_input_Surface = $hx_exports["kha"]["input"]["Surface"] = function() {
	this.touchStartListeners = [];
	this.touchEndListeners = [];
	this.moveListeners = [];
	kha_input_Surface.instance = this;
};
$hxClasses["kha.input.Surface"] = kha_input_Surface;
kha_input_Surface.__name__ = ["kha","input","Surface"];
kha_input_Surface.get = function(num) {
	if(num == null) {
		num = 0;
	}
	if(num != 0) {
		return null;
	}
	return kha_input_Surface.instance;
};
kha_input_Surface.prototype = {
	notify: function(touchStartListener,touchEndListener,moveListener) {
		if(touchStartListener != null) {
			this.touchStartListeners.push(touchStartListener);
		}
		if(touchEndListener != null) {
			this.touchEndListeners.push(touchEndListener);
		}
		if(moveListener != null) {
			this.moveListeners.push(moveListener);
		}
	}
	,remove: function(touchStartListener,touchEndListener,moveListener) {
		if(touchStartListener != null) {
			HxOverrides.remove(this.touchStartListeners,touchStartListener);
		}
		if(touchEndListener != null) {
			HxOverrides.remove(this.touchEndListeners,touchEndListener);
		}
		if(moveListener != null) {
			this.moveListeners.push(moveListener);
		}
	}
	,sendTouchStartEvent: function(index,x,y) {
		var _g = 0;
		var _g1 = this.touchStartListeners;
		while(_g < _g1.length) {
			var listener = _g1[_g];
			++_g;
			listener(index,x,y);
		}
	}
	,sendTouchEndEvent: function(index,x,y) {
		var _g = 0;
		var _g1 = this.touchEndListeners;
		while(_g < _g1.length) {
			var listener = _g1[_g];
			++_g;
			listener(index,x,y);
		}
	}
	,sendMoveEvent: function(index,x,y) {
		var _g = 0;
		var _g1 = this.moveListeners;
		while(_g < _g1.length) {
			var listener = _g1[_g];
			++_g;
			listener(index,x,y);
		}
	}
	,__class__: kha_input_Surface
};
var kha_internal_BytesBlob = function(bytes) {
	this.myFirstLine = true;
	this.bytes = bytes;
	this.buffer = [];
};
$hxClasses["kha.internal.BytesBlob"] = kha_internal_BytesBlob;
kha_internal_BytesBlob.__name__ = ["kha","internal","BytesBlob"];
kha_internal_BytesBlob.__interfaces__ = [kha_Resource];
kha_internal_BytesBlob.fromBytes = function(bytes) {
	return new kha_internal_BytesBlob(bytes);
};
kha_internal_BytesBlob.alloc = function(size) {
	return new kha_internal_BytesBlob(new haxe_io_Bytes(new ArrayBuffer(size)));
};
kha_internal_BytesBlob.readF32 = function(i) {
	var sign = (i & -2147483648) == 0 ? 1 : -1;
	var exp = i >> 23 & 255;
	var man = i & 8388607;
	switch(exp) {
	case 0:
		return 0.0;
	case 255:
		if(man != 0) {
			return NaN;
		} else if(sign > 0) {
			return Infinity;
		} else {
			return -Infinity;
		}
		break;
	default:
		return sign * ((man + 8388608) / 8388608.0) * Math.pow(2,exp - 127);
	}
};
kha_internal_BytesBlob.bit = function(value,position) {
	var b = (value >>> position & 1) == 1;
	if(b) {
		var a = 3;
		++a;
		return true;
	} else {
		var c = 4;
		--c;
		return false;
	}
};
kha_internal_BytesBlob.prototype = {
	sub: function(start,length) {
		return new kha_internal_BytesBlob(this.bytes.sub(start,length));
	}
	,get_length: function() {
		return this.bytes.length;
	}
	,writeU8: function(position,value) {
		this.bytes.b[position] = value & 255;
	}
	,readU8: function(position) {
		var $byte = this.bytes.b[position];
		++position;
		return $byte;
	}
	,readS8: function(position) {
		var $byte = this.bytes.b[position];
		++position;
		var sign = ($byte & 128) == 0 ? 1 : -1;
		$byte &= 127;
		return sign * $byte;
	}
	,readU16BE: function(position) {
		var first = this.bytes.b[position];
		var second = this.bytes.b[position + 1];
		position += 2;
		return first * 256 + second;
	}
	,readU16LE: function(position) {
		var first = this.bytes.b[position];
		var second = this.bytes.b[position + 1];
		position += 2;
		return second * 256 + first;
	}
	,readU32LE: function(position) {
		var fourth = this.bytes.b[position];
		var third = this.bytes.b[position + 1];
		var second = this.bytes.b[position + 2];
		var first = this.bytes.b[position + 3];
		position += 4;
		return fourth + third * 256 + second * 256 * 256 + first * 256 * 256 * 256;
	}
	,readU32BE: function(position) {
		var fourth = this.bytes.b[position];
		var third = this.bytes.b[position + 1];
		var second = this.bytes.b[position + 2];
		var first = this.bytes.b[position + 3];
		position += 4;
		return first + second * 256 + third * 256 * 256 + fourth * 256 * 256 * 256;
	}
	,readS16BE: function(position) {
		var first = this.bytes.b[position];
		var second = this.bytes.b[position + 1];
		position += 2;
		var sign = (first & 128) == 0 ? 1 : -1;
		first &= 127;
		if(sign == -1) {
			return -32767 + first * 256 + second;
		} else {
			return first * 256 + second;
		}
	}
	,readS16LE: function(position) {
		var first = this.bytes.b[position];
		var second = this.bytes.b[position + 1];
		var sign = (second & 128) == 0 ? 1 : -1;
		second &= 127;
		position += 2;
		if(sign == -1) {
			return -32767 + second * 256 + first;
		} else {
			return second * 256 + first;
		}
	}
	,readS32LE: function(position) {
		var fourth = this.bytes.b[position];
		var third = this.bytes.b[position + 1];
		var second = this.bytes.b[position + 2];
		var first = this.bytes.b[position + 3];
		var sign = (first & 128) == 0 ? 1 : -1;
		first &= 127;
		position += 4;
		if(sign == -1) {
			return -2147483647 + fourth + third * 256 + second * 256 * 256 + first * 256 * 256 * 256;
		} else {
			return fourth + third * 256 + second * 256 * 256 + first * 256 * 256 * 256;
		}
	}
	,readS32BE: function(position) {
		var fourth = this.bytes.b[position];
		var third = this.bytes.b[position + 1];
		var second = this.bytes.b[position + 2];
		var first = this.bytes.b[position + 3];
		var sign = (fourth & 128) == 0 ? 1 : -1;
		fourth &= 127;
		position += 4;
		if(sign == -1) {
			return -2147483647 + first + second * 256 + third * 256 * 256 + fourth * 256 * 256 * 256;
		}
		return first + second * 256 + third * 256 * 256 + fourth * 256 * 256 * 256;
	}
	,readF32LE: function(position) {
		return kha_internal_BytesBlob.readF32(this.readS32LE(position));
	}
	,readF32BE: function(position) {
		return kha_internal_BytesBlob.readF32(this.readS32BE(position));
	}
	,toString: function() {
		return this.bytes.toString();
	}
	,readUtf8Char: function(position) {
		if(position.value >= this.get_length()) {
			return -1;
		}
		var c = this.readU8(position.value);
		++position.value;
		var value = 0;
		if(!kha_internal_BytesBlob.bit(c,7)) {
			value = c;
		} else if(kha_internal_BytesBlob.bit(c,7) && kha_internal_BytesBlob.bit(c,6) && !kha_internal_BytesBlob.bit(c,5)) {
			var a = c & 31;
			var c2 = this.readU8(position.value);
			++position.value;
			var b = c2 & 63;
			value = a << 6 | b;
		} else if(kha_internal_BytesBlob.bit(c,7) && kha_internal_BytesBlob.bit(c,6) && kha_internal_BytesBlob.bit(c,5) && !kha_internal_BytesBlob.bit(c,4)) {
			position.value += 2;
		} else if(kha_internal_BytesBlob.bit(c,7) && kha_internal_BytesBlob.bit(c,6) && kha_internal_BytesBlob.bit(c,5) && kha_internal_BytesBlob.bit(c,4) && !kha_internal_BytesBlob.bit(c,3)) {
			position.value += 3;
		}
		return value;
	}
	,readUtf8Line: function(position) {
		var bufferindex = 0;
		var c = this.readUtf8Char(position);
		if(c < 0) {
			return "";
		}
		while(c != 10 && bufferindex < 2000) {
			this.buffer[bufferindex] = c;
			++bufferindex;
			c = this.readUtf8Char(position);
			if(position.value >= this.get_length()) {
				this.buffer[bufferindex] = c;
				++bufferindex;
				break;
			}
		}
		if(this.myFirstLine) {
			this.myFirstLine = false;
			if(bufferindex > 2 && this.buffer[0] == 239 && this.buffer[1] == 187 && this.buffer[2] == 191) {
				var chars = [];
				var _g1 = 3;
				var _g = bufferindex - 3;
				while(_g1 < _g) {
					var i = _g1++;
					chars[i - 3] = this.buffer[i];
				}
				return this.toText(chars,bufferindex - 3);
			}
		}
		var chars1 = [];
		var _g11 = 0;
		var _g2 = bufferindex;
		while(_g11 < _g2) {
			var i1 = _g11++;
			chars1[i1] = this.buffer[i1];
		}
		return this.toText(chars1,bufferindex);
	}
	,toText: function(chars,length) {
		var value = "";
		var _g1 = 0;
		var _g = length;
		while(_g1 < _g) {
			var i = _g1++;
			value += String.fromCharCode(chars[i]);
		}
		return value;
	}
	,readUtf8String: function() {
		var text = "";
		var position = { value : 0};
		while(position.value < this.get_length()) text += this.readUtf8Line(position) + "\n";
		return text;
	}
	,toBytes: function() {
		return this.bytes;
	}
	,unload: function() {
		this.bytes = null;
	}
	,__class__: kha_internal_BytesBlob
	,__properties__: {get_length:"get_length"}
};
var kha_internal_HdrFormat = function() {
};
$hxClasses["kha.internal.HdrFormat"] = kha_internal_HdrFormat;
kha_internal_HdrFormat.__name__ = ["kha","internal","HdrFormat"];
kha_internal_HdrFormat.readBuf = function(buf) {
	var bytesRead = 0;
	while(true) {
		buf[bytesRead++] = kha_internal_HdrFormat.buffer[kha_internal_HdrFormat.fileOffset] & 255;
		if(!(++kha_internal_HdrFormat.fileOffset < kha_internal_HdrFormat.bufferLength && bytesRead < buf.length)) {
			break;
		}
	}
	return bytesRead;
};
kha_internal_HdrFormat.readBufOffset = function(buf,offset,length) {
	var bytesRead = 0;
	while(true) {
		buf[offset + bytesRead++] = kha_internal_HdrFormat.buffer[kha_internal_HdrFormat.fileOffset] & 255;
		if(!(++kha_internal_HdrFormat.fileOffset < kha_internal_HdrFormat.bufferLength && bytesRead < length)) {
			break;
		}
	}
	return bytesRead;
};
kha_internal_HdrFormat.readPixelsRaw = function(buffer,data,offset,numpixels) {
	var numExpected = 4 * numpixels;
	var numRead = kha_internal_HdrFormat.readBufOffset(data,offset,numExpected);
	if(numRead < numExpected) {
		haxe_Log.trace("Error reading raw pixels: got " + numRead + " bytes, expected " + numExpected,{ fileName : "HdrFormat.hx", lineNumber : 43, className : "kha.internal.HdrFormat", methodName : "readPixelsRaw"});
		return;
	}
};
kha_internal_HdrFormat.readPixelsRawRLE = function(buffer,data,offset,scanline_width,num_scanlines) {
	var this1 = new Uint8Array(4);
	var rgbe = this1;
	var scanline_buffer = null;
	var ptr;
	var ptr_end;
	var count;
	var this2 = new Uint8Array(2);
	var buf = this2;
	var bufferLength = buffer.length;
	while(num_scanlines > 0) {
		if(kha_internal_HdrFormat.readBuf(rgbe) < rgbe.length) {
			haxe_Log.trace("Error reading bytes: expected " + rgbe.length,{ fileName : "HdrFormat.hx", lineNumber : 59, className : "kha.internal.HdrFormat", methodName : "readPixelsRawRLE"});
			return;
		}
		if(rgbe[0] != 2 || rgbe[1] != 2 || (rgbe[2] & 128) != 0) {
			data[offset++] = rgbe[0] & 255;
			data[offset++] = rgbe[1] & 255;
			data[offset++] = rgbe[2] & 255;
			data[offset++] = rgbe[3] & 255;
			kha_internal_HdrFormat.readPixelsRaw(buffer,data,offset,scanline_width * num_scanlines - 1);
			return;
		}
		if(((rgbe[2] & 255) << 8 | rgbe[3] & 255) != scanline_width) {
			haxe_Log.trace("Wrong scanline width " + ((rgbe[2] & 255) << 8 | rgbe[3] & 255) + ", expected " + scanline_width,{ fileName : "HdrFormat.hx", lineNumber : 74, className : "kha.internal.HdrFormat", methodName : "readPixelsRawRLE"});
			return;
		}
		if(scanline_buffer == null) {
			var this3 = new Uint8Array(4 * scanline_width);
			scanline_buffer = this3;
		}
		ptr = 0;
		var _g = 0;
		while(_g < 4) {
			var i = _g++;
			ptr_end = (i + 1) * scanline_width;
			while(ptr < ptr_end) {
				if(kha_internal_HdrFormat.readBuf(buf) < buf.length) {
					haxe_Log.trace("Error reading 2-byte buffer",{ fileName : "HdrFormat.hx", lineNumber : 88, className : "kha.internal.HdrFormat", methodName : "readPixelsRawRLE"});
					return;
				}
				if((buf[0] & 255) > 128) {
					count = (buf[0] & 255) - 128;
					if(count == 0 || count > ptr_end - ptr) {
						haxe_Log.trace("Bad scanline data",{ fileName : "HdrFormat.hx", lineNumber : 95, className : "kha.internal.HdrFormat", methodName : "readPixelsRawRLE"});
						return;
					}
					while(count-- > 0) scanline_buffer[ptr++] = buf[1] & 255;
				} else {
					count = buf[0] & 255;
					if(count == 0 || count > ptr_end - ptr) {
						haxe_Log.trace("Bad scanline data",{ fileName : "HdrFormat.hx", lineNumber : 106, className : "kha.internal.HdrFormat", methodName : "readPixelsRawRLE"});
						return;
					}
					scanline_buffer[ptr++] = buf[1] & 255;
					if(--count > 0) {
						if(kha_internal_HdrFormat.readBufOffset(scanline_buffer,ptr,count) < count) {
							haxe_Log.trace("Error reading non-run data",{ fileName : "HdrFormat.hx", lineNumber : 112, className : "kha.internal.HdrFormat", methodName : "readPixelsRawRLE"});
							return;
						}
						ptr += count;
					}
				}
			}
		}
		var _g1 = 0;
		var _g2 = scanline_width;
		while(_g1 < _g2) {
			var i1 = _g1++;
			data[offset] = scanline_buffer[i1] & 255;
			data[offset + 1] = scanline_buffer[i1 + scanline_width] & 255;
			data[offset + 2] = scanline_buffer[i1 + 2 * scanline_width] & 255;
			data[offset + 3] = scanline_buffer[i1 + 3 * scanline_width] & 255;
			offset += 4;
		}
		--num_scanlines;
	}
};
kha_internal_HdrFormat.readLine = function() {
	var buf = "";
	while(true) {
		var b = kha_internal_HdrFormat.buffer[kha_internal_HdrFormat.fileOffset];
		if(b == 10) {
			++kha_internal_HdrFormat.fileOffset;
			break;
		}
		buf += String.fromCharCode(b);
		if(!(++kha_internal_HdrFormat.fileOffset < kha_internal_HdrFormat.bufferLength)) {
			break;
		}
	}
	return buf;
};
kha_internal_HdrFormat.parse = function(bytes) {
	kha_internal_HdrFormat.buffer = haxe_io__$UInt8Array_UInt8Array_$Impl_$.fromBytes(bytes);
	kha_internal_HdrFormat.bufferLength = kha_internal_HdrFormat.buffer.length;
	kha_internal_HdrFormat.fileOffset = 0;
	var width = 0;
	var height = 0;
	var exposure = 1.0;
	var gamma = 1.0;
	var rle = false;
	var _g = 0;
	while(_g < 20) {
		var i = _g++;
		var line = kha_internal_HdrFormat.readLine();
		if(kha_internal_HdrFormat.formatPattern.match(line)) {
			rle = true;
		} else if(kha_internal_HdrFormat.exposurePattern.match(line)) {
			exposure = parseFloat(kha_internal_HdrFormat.exposurePattern.matched(1));
		} else if(kha_internal_HdrFormat.widthHeightPattern.match(line)) {
			height = Std.parseInt(kha_internal_HdrFormat.widthHeightPattern.matched(1));
			width = Std.parseInt(kha_internal_HdrFormat.widthHeightPattern.matched(2));
			break;
		}
	}
	if(!rle) {
		haxe_Log.trace("File is not run length encoded!",{ fileName : "HdrFormat.hx", lineNumber : 175, className : "kha.internal.HdrFormat", methodName : "parse"});
		return null;
	}
	var this1 = new Uint8Array(width * height * 4);
	var data = this1;
	var scanline_width = width;
	var num_scanlines = height;
	kha_internal_HdrFormat.readPixelsRawRLE(kha_internal_HdrFormat.buffer,data,0,scanline_width,num_scanlines);
	var this2 = new Float32Array(width * height * 4);
	var floatData = this2;
	var offset = 0;
	while(offset < data.length) {
		var r = data[offset] / 255;
		var g = data[offset + 1] / 255;
		var b = data[offset + 2] / 255;
		var e = data[offset + 3];
		var f = Math.pow(2.0,e - 128.0);
		r *= f;
		g *= f;
		b *= f;
		floatData[offset] = r;
		floatData[offset + 1] = g;
		floatData[offset + 2] = b;
		floatData[offset + 3] = 1.0;
		offset += 4;
	}
	return { width : width, height : height, data : floatData};
};
kha_internal_HdrFormat.prototype = {
	__class__: kha_internal_HdrFormat
};
var kha_js_AEAudioChannel = function(element) {
	this.stopped = false;
	this.element = element;
};
$hxClasses["kha.js.AEAudioChannel"] = kha_js_AEAudioChannel;
kha_js_AEAudioChannel.__name__ = ["kha","js","AEAudioChannel"];
kha_js_AEAudioChannel.__interfaces__ = [kha_audio1_AudioChannel];
kha_js_AEAudioChannel.prototype = {
	play: function() {
		this.stopped = false;
		if(kha_SystemImpl.mobile) {
			if(kha_SystemImpl.insideInputEvent) {
				this.element.play();
				kha_SystemImpl.mobileAudioPlaying = true;
			} else if(kha_SystemImpl.mobileAudioPlaying) {
				this.element.play();
			} else {
				kha_js_AEAudioChannel.todo.push(this);
			}
		} else {
			this.element.play();
		}
	}
	,pause: function() {
		try {
			this.element.pause();
		} catch( e ) {
			if (e instanceof js__$Boot_HaxeError) e = e.val;
			haxe_Log.trace(e,{ fileName : "AEAudioChannel.hx", lineNumber : 39, className : "kha.js.AEAudioChannel", methodName : "pause"});
		}
	}
	,stop: function() {
		try {
			this.element.pause();
			this.element.currentTime = 0;
			this.stopped = true;
		} catch( e ) {
			if (e instanceof js__$Boot_HaxeError) e = e.val;
			haxe_Log.trace(e,{ fileName : "AEAudioChannel.hx", lineNumber : 50, className : "kha.js.AEAudioChannel", methodName : "stop"});
		}
	}
	,get_length: function() {
		if(isFinite(this.element.duration)) {
			return this.element.duration;
		} else {
			return Infinity;
		}
	}
	,get_position: function() {
		return this.element.currentTime;
	}
	,get_volume: function() {
		return this.element.volume;
	}
	,set_volume: function(value) {
		return this.element.volume = value;
	}
	,get_finished: function() {
		if(!this.stopped) {
			return this.get_position() >= this.get_length();
		} else {
			return true;
		}
	}
	,__class__: kha_js_AEAudioChannel
	,__properties__: {get_finished:"get_finished",set_volume:"set_volume",get_volume:"get_volume",get_position:"get_position",get_length:"get_length"}
};
var kha_js_AudioElementAudio = function() { };
$hxClasses["kha.js.AudioElementAudio"] = kha_js_AudioElementAudio;
kha_js_AudioElementAudio.__name__ = ["kha","js","AudioElementAudio"];
kha_js_AudioElementAudio._compile = function() {
};
kha_js_AudioElementAudio.play = function(sound,loop) {
	if(loop == null) {
		loop = false;
	}
	return kha_js_AudioElementAudio.stream(sound,loop);
};
kha_js_AudioElementAudio.stream = function(sound,loop) {
	if(loop == null) {
		loop = false;
	}
	sound.element.loop = loop;
	var channel = new kha_js_AEAudioChannel(sound.element);
	channel.play();
	return channel;
};
var kha_js_CanvasGraphics = function(canvas) {
	kha_graphics2_Graphics.call(this);
	this.canvas = canvas;
	kha_js_CanvasGraphics.instance = this;
	this.myColor = kha__$Color_Color_$Impl_$.fromBytes(0,0,0);
	canvas.save();
};
$hxClasses["kha.js.CanvasGraphics"] = kha_js_CanvasGraphics;
kha_js_CanvasGraphics.__name__ = ["kha","js","CanvasGraphics"];
kha_js_CanvasGraphics.stringWidth = function(font,text) {
	if(kha_js_CanvasGraphics.instance == null) {
		return 5 * text.length;
	} else {
		kha_js_CanvasGraphics.instance.set_font(font);
		return kha_js_CanvasGraphics.instance.canvas.measureText(text).width;
	}
};
kha_js_CanvasGraphics.__super__ = kha_graphics2_Graphics;
kha_js_CanvasGraphics.prototype = $extend(kha_graphics2_Graphics.prototype,{
	begin: function(clear,clearColor) {
		if(clear == null) {
			clear = true;
		}
		if(clear) {
			this.clear(clearColor);
		}
	}
	,clear: function(color) {
		if(color == null) {
			color = 0;
		}
		this.canvas.strokeStyle = "rgba(" + ((color & 16711680) >>> 16) + "," + ((color & 65280) >>> 8) + "," + (color & 255) + "," + (color >>> 24) * 0.00392156862745098 + ")";
		this.canvas.fillStyle = "rgba(" + ((color & 16711680) >>> 16) + "," + ((color & 65280) >>> 8) + "," + (color & 255) + "," + (color >>> 24) * 0.00392156862745098 + ")";
		if((color >>> 24) * 0.00392156862745098 == 0) {
			this.canvas.clearRect(0,0,this.canvas.canvas.width,this.canvas.canvas.height);
		} else {
			this.canvas.fillRect(0,0,this.canvas.canvas.width,this.canvas.canvas.height);
		}
		this.set_color(this.myColor);
	}
	,end: function() {
	}
	,drawImage: function(img,x,y) {
		this.canvas.globalAlpha = this.get_opacity();
		this.canvas.drawImage((js_Boot.__cast(img , kha_CanvasImage)).image,x,y);
		this.canvas.globalAlpha = 1;
	}
	,drawScaledSubImage: function(image,sx,sy,sw,sh,dx,dy,dw,dh) {
		this.canvas.globalAlpha = this.get_opacity();
		try {
			if(dw < 0 || dh < 0) {
				this.canvas.save();
				this.canvas.translate(dx,dy);
				var x = 0.0;
				var y = 0.0;
				if(dw < 0) {
					this.canvas.scale(-1,1);
					x = -dw;
				}
				if(dh < 0) {
					this.canvas.scale(1,-1);
					y = -dh;
				}
				this.canvas.drawImage((js_Boot.__cast(image , kha_CanvasImage)).image,sx,sy,sw,sh,x,y,dw,dh);
				this.canvas.restore();
			} else {
				this.canvas.drawImage((js_Boot.__cast(image , kha_CanvasImage)).image,sx,sy,sw,sh,dx,dy,dw,dh);
			}
		} catch( ex ) {
		}
		this.canvas.globalAlpha = 1;
	}
	,set_color: function(color) {
		this.myColor = color;
		this.canvas.strokeStyle = "rgba(" + ((color & 16711680) >>> 16) + "," + ((color & 65280) >>> 8) + "," + (color & 255) + "," + (color >>> 24) * 0.00392156862745098 + ")";
		this.canvas.fillStyle = "rgba(" + ((color & 16711680) >>> 16) + "," + ((color & 65280) >>> 8) + "," + (color & 255) + "," + (color >>> 24) * 0.00392156862745098 + ")";
		return color;
	}
	,get_color: function() {
		return this.myColor;
	}
	,get_imageScaleQuality: function() {
		return this.scaleQuality;
	}
	,set_imageScaleQuality: function(value) {
		if(value == kha_graphics2_ImageScaleQuality.Low) {
			this.canvas.mozImageSmoothingEnabled = false;
			this.canvas.webkitImageSmoothingEnabled = false;
			this.canvas.msImageSmoothingEnabled = false;
			this.canvas.imageSmoothingEnabled = false;
		} else {
			this.canvas.mozImageSmoothingEnabled = true;
			this.canvas.webkitImageSmoothingEnabled = true;
			this.canvas.msImageSmoothingEnabled = true;
			this.canvas.imageSmoothingEnabled = true;
		}
		return this.scaleQuality = value;
	}
	,drawRect: function(x,y,width,height,strength) {
		if(strength == null) {
			strength = 1.0;
		}
		this.canvas.beginPath();
		var oldStrength = this.canvas.lineWidth;
		this.canvas.lineWidth = Math.round(strength);
		this.canvas.rect(x,y,width,height);
		this.canvas.stroke();
		this.canvas.lineWidth = oldStrength;
	}
	,fillRect: function(x,y,width,height) {
		var tmp = this.get_opacity();
		this.canvas.globalAlpha = tmp * ((this.myColor >>> 24) * 0.00392156862745098);
		this.canvas.fillRect(x,y,width,height);
		this.canvas.globalAlpha = this.get_opacity();
	}
	,drawCircle: function(cx,cy,radius,strength) {
		if(strength == null) {
			strength = 1.0;
		}
		this.canvas.beginPath();
		var oldStrength = this.canvas.lineWidth;
		this.canvas.lineWidth = Math.round(strength);
		this.canvas.arc(cx,cy,radius,0,2 * Math.PI,false);
		this.canvas.stroke();
		this.canvas.lineWidth = oldStrength;
	}
	,fillCircle: function(cx,cy,radius) {
		this.canvas.beginPath();
		this.canvas.arc(cx,cy,radius,0,2 * Math.PI,false);
		this.canvas.fill();
	}
	,drawString: function(text,x,y) {
		var image = this.webfont.getImage(this.get_fontSize(),this.myColor);
		if(image.width > 0) {
			var xpos = x;
			var ypos = y;
			var _g1 = 0;
			var _g = text.length;
			while(_g1 < _g) {
				var i = _g1++;
				var q = this.webfont.kravur._get(this.get_fontSize()).getBakedQuad(HxOverrides.cca(text,i) - 32,xpos,ypos);
				if(q != null) {
					if(q.s1 - q.s0 > 0 && q.t1 - q.t0 > 0 && q.x1 - q.x0 > 0 && q.y1 - q.y0 > 0) {
						this.canvas.drawImage(image,q.s0 * image.width,q.t0 * image.height,(q.s1 - q.s0) * image.width,(q.t1 - q.t0) * image.height,q.x0,q.y0,q.x1 - q.x0,q.y1 - q.y0);
					}
					xpos += q.xadvance;
				}
			}
		}
	}
	,set_font: function(font) {
		this.webfont = js_Boot.__cast(font , kha_js_Font);
		return this.webfont;
	}
	,get_font: function() {
		return this.webfont;
	}
	,drawLine: function(x1,y1,x2,y2,strength) {
		if(strength == null) {
			strength = 1.0;
		}
		this.canvas.beginPath();
		var oldWith = this.canvas.lineWidth;
		this.canvas.lineWidth = Math.round(strength);
		this.canvas.moveTo(x1,y1);
		this.canvas.lineTo(x2,y2);
		this.canvas.moveTo(0,0);
		this.canvas.stroke();
		this.canvas.lineWidth = oldWith;
	}
	,fillTriangle: function(x1,y1,x2,y2,x3,y3) {
		this.canvas.beginPath();
		this.canvas.closePath();
		this.canvas.fill();
	}
	,scissor: function(x,y,width,height) {
		this.canvas.beginPath();
		this.canvas.rect(x,y,width,height);
		this.canvas.clip();
	}
	,disableScissor: function() {
		this.canvas.restore();
	}
	,drawVideo: function(video,x,y,width,height) {
		this.canvas.drawImage((js_Boot.__cast(video , kha_js_Video)).element,x,y,width,height);
	}
	,setTransformation: function(transformation) {
		this.canvas.setTransform(transformation._00,transformation._01,transformation._10,transformation._11,transformation._20,transformation._21);
	}
	,__class__: kha_js_CanvasGraphics
});
var kha_js_URLParser = function(url) {
	this._parts = null;
	this._parts = ["source","protocol","authority","userInfo","user","password","host","port","relative","path","directory","file","query","anchor"];
	this.url = url;
	var r = new EReg("^(?:(?![^:@]+:[^:@/]*@)([^:/?#.]+):)?(?://)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:/?#]*)(?::(\\d*))?)(((/(?:[^?#](?![^?#/]*\\.[^?#/.]+(?:[?#]|$)))*/?)?([^?#/]*))(?:\\?([^#]*))?(?:#(.*))?)","");
	r.match(url);
	var _g1 = 0;
	var _g = this._parts.length;
	while(_g1 < _g) {
		var i = _g1++;
		this[this._parts[i]] = r.matched(i);
	}
};
$hxClasses["kha.js.URLParser"] = kha_js_URLParser;
kha_js_URLParser.__name__ = ["kha","js","URLParser"];
kha_js_URLParser.parse = function(url) {
	return new kha_js_URLParser(url);
};
kha_js_URLParser.prototype = {
	toString: function() {
		var s = "For Url -> " + this.url + "\n";
		var _g1 = 0;
		var _g = this._parts.length;
		while(_g1 < _g) {
			var i = _g1++;
			s += this._parts[i] + ": " + Std.string(Reflect.field(this,this._parts[i])) + (i == this._parts.length - 1 ? "" : "\n");
		}
		return s;
	}
	,__class__: kha_js_URLParser
};
var kha_js_EnvironmentVariables = function() {
	kha_EnvironmentVariables.call(this);
};
$hxClasses["kha.js.EnvironmentVariables"] = kha_js_EnvironmentVariables;
kha_js_EnvironmentVariables.__name__ = ["kha","js","EnvironmentVariables"];
kha_js_EnvironmentVariables.__super__ = kha_EnvironmentVariables;
kha_js_EnvironmentVariables.prototype = $extend(kha_EnvironmentVariables.prototype,{
	getVariable: function(name) {
		var parser = new kha_js_URLParser(window.location.href);
		var query = parser.query;
		var parts = query.split("&");
		var _g = 0;
		while(_g < parts.length) {
			var part = parts[_g];
			++_g;
			var subparts = part.split("=");
			if(subparts[0] == name) {
				return subparts[1];
			}
		}
		haxe_Log.trace("Environment variables requested.",{ fileName : "EnvironmentVariables.hx", lineNumber : 90, className : "kha.js.EnvironmentVariables", methodName : "getVariable"});
		return "";
	}
	,__class__: kha_js_EnvironmentVariables
});
var kha_js_Font = function(kravur) {
	this.images = new haxe_ds_IntMap();
	this.kravur = kravur;
};
$hxClasses["kha.js.Font"] = kha_js_Font;
kha_js_Font.__name__ = ["kha","js","Font"];
kha_js_Font.__interfaces__ = [kha_Font];
kha_js_Font.prototype = {
	height: function(fontSize) {
		return this.kravur._get(fontSize).getHeight();
	}
	,width: function(fontSize,str) {
		return this.kravur._get(fontSize).stringWidth(str);
	}
	,baseline: function(fontSize) {
		return this.kravur._get(fontSize).getBaselinePosition();
	}
	,getImage: function(fontSize,color) {
		if(!this.images.h.hasOwnProperty(fontSize)) {
			var this1 = this.images;
			var v = new haxe_ds_IntMap();
			this1.h[fontSize] = v;
		}
		if(!this.images.h[fontSize].h.hasOwnProperty(color)) {
			var kravur = this.kravur._get(fontSize);
			var canvas = window.document.createElement("canvas");
			canvas.width = kravur.width;
			canvas.height = kravur.height;
			var ctx = canvas.getContext("2d");
			ctx.fillStyle = "black";
			ctx.fillRect(0,0,kravur.width,kravur.height);
			var imageData = ctx.getImageData(0,0,kravur.width,kravur.height);
			var bytes = (js_Boot.__cast(kravur.getTexture() , kha_CanvasImage)).bytes;
			var _g1 = 0;
			var _g = bytes.length;
			while(_g1 < _g) {
				var i = _g1++;
				imageData.data[i * 4] = (color & 16711680) >>> 16;
				imageData.data[i * 4 + 1] = (color & 65280) >>> 8;
				imageData.data[i * 4 + 2] = color & 255;
				imageData.data[i * 4 + 3] = bytes.b[i];
			}
			ctx.putImageData(imageData,0,0);
			var img = window.document.createElement("img");
			img.src = canvas.toDataURL("image/png");
			this.images.h[fontSize].h[color] = img;
			return img;
		}
		return this.images.h[fontSize].h[color];
	}
	,unload: function() {
		this.kravur = null;
		this.images = null;
	}
	,__class__: kha_js_Font
};
var kha_js_MobileWebAudio = function() { };
$hxClasses["kha.js.MobileWebAudio"] = kha_js_MobileWebAudio;
kha_js_MobileWebAudio.__name__ = ["kha","js","MobileWebAudio"];
kha_js_MobileWebAudio._init = function() {
	try {
		kha_js_MobileWebAudio._context = new AudioContext();
		return;
	} catch( e ) {
	}
	try {
		this._context = new webkitAudioContext();
		return;
	} catch( e1 ) {
	}
};
kha_js_MobileWebAudio.play = function(sound,loop) {
	if(loop == null) {
		loop = false;
	}
	var channel = new kha_js_MobileWebAudioChannel(sound,loop);
	channel.play();
	return channel;
};
kha_js_MobileWebAudio.stream = function(sound,loop) {
	if(loop == null) {
		loop = false;
	}
	return kha_js_MobileWebAudio.play(sound,loop);
};
var kha_js_MobileWebAudioChannel = function(sound,loop) {
	this.stopped = false;
	this.paused = false;
	this.buffer = sound._buffer;
	this.loop = loop;
	this.createSource();
};
$hxClasses["kha.js.MobileWebAudioChannel"] = kha_js_MobileWebAudioChannel;
kha_js_MobileWebAudioChannel.__name__ = ["kha","js","MobileWebAudioChannel"];
kha_js_MobileWebAudioChannel.__interfaces__ = [kha_audio1_AudioChannel];
kha_js_MobileWebAudioChannel.prototype = {
	createSource: function() {
		var _gthis = this;
		this.source = kha_js_MobileWebAudio._context.createBufferSource();
		this.source.loop = this.loop;
		this.source.buffer = this.buffer;
		this.source.onended = function() {
			_gthis.stopped = true;
		};
		this.gain = kha_js_MobileWebAudio._context.createGain();
		this.source.connect(this.gain);
		this.gain.connect(kha_js_MobileWebAudio._context.destination);
	}
	,play: function() {
		if(this.paused || this.stopped) {
			this.createSource();
		}
		this.stopped = false;
		if(this.paused) {
			this.paused = false;
			this.startTime = kha_js_MobileWebAudio._context.currentTime - this.pauseTime;
			this.source.start(0,this.pauseTime);
		} else {
			this.startTime = kha_js_MobileWebAudio._context.currentTime;
			this.source.start();
		}
	}
	,pause: function() {
		this.pauseTime = kha_js_MobileWebAudio._context.currentTime - this.startTime;
		this.paused = true;
		this.source.stop();
	}
	,stop: function() {
		this.paused = false;
		this.stopped = true;
		this.source.stop();
	}
	,get_length: function() {
		return this.source.buffer.duration;
	}
	,get_position: function() {
		if(this.stopped) {
			return this.get_length();
		}
		if(this.paused) {
			return this.pauseTime;
		} else {
			return kha_js_MobileWebAudio._context.currentTime - this.startTime;
		}
	}
	,get_volume: function() {
		return this.gain.gain.value;
	}
	,set_volume: function(value) {
		return this.gain.gain.value = value;
	}
	,get_finished: function() {
		return this.stopped;
	}
	,__class__: kha_js_MobileWebAudioChannel
	,__properties__: {get_finished:"get_finished",set_volume:"set_volume",get_volume:"get_volume",get_position:"get_position",get_length:"get_length"}
};
var kha_js_MobileWebAudioSound = function(filename,done) {
	var _gthis = this;
	kha_Sound.call(this);
	var request = new XMLHttpRequest();
	request.open("GET",filename,true);
	request.responseType = "arraybuffer";
	request.onerror = function() {
		haxe_Log.trace("Error loading " + filename,{ fileName : "MobileWebAudioSound.hx", lineNumber : 25, className : "kha.js.MobileWebAudioSound", methodName : "new"});
	};
	request.onload = function() {
		_gthis.compressedData = haxe_io_Bytes.ofData(request.response);
		_gthis.uncompressedData = null;
		kha_js_MobileWebAudio._context.decodeAudioData(_gthis.compressedData.b.bufferValue,function(buffer) {
			_gthis._buffer = buffer;
			done(_gthis);
		},function() {
			throw new js__$Boot_HaxeError("Audio format not supported");
		});
	};
	request.send(null);
};
$hxClasses["kha.js.MobileWebAudioSound"] = kha_js_MobileWebAudioSound;
kha_js_MobileWebAudioSound.__name__ = ["kha","js","MobileWebAudioSound"];
kha_js_MobileWebAudioSound.__super__ = kha_Sound;
kha_js_MobileWebAudioSound.prototype = $extend(kha_Sound.prototype,{
	uncompress: function(done) {
		done();
	}
	,__class__: kha_js_MobileWebAudioSound
});
var kha_js_Sound = function(filenames,done) {
	kha_Sound.call(this);
	this.done = done;
	kha_js_Sound.loading.push(this);
	this.element = window.document.createElement("audio");
	this.filenames = [];
	var _g = 0;
	while(_g < filenames.length) {
		var filename = filenames[_g];
		++_g;
		if(this.element.canPlayType("audio/ogg") != "" && StringTools.endsWith(filename,".ogg")) {
			this.filenames.push(filename);
		}
		if(this.element.canPlayType("audio/mp4") != "" && StringTools.endsWith(filename,".mp4")) {
			this.filenames.push(filename);
		}
	}
	this.element.addEventListener("error",$bind(this,this.errorListener),false);
	this.element.addEventListener("canplay",$bind(this,this.canPlayThroughListener),false);
	this.element.src = this.filenames[0];
	this.element.preload = "auto";
	this.element.load();
};
$hxClasses["kha.js.Sound"] = kha_js_Sound;
kha_js_Sound.__name__ = ["kha","js","Sound"];
kha_js_Sound.__super__ = kha_Sound;
kha_js_Sound.prototype = $extend(kha_Sound.prototype,{
	errorListener: function(eventInfo) {
		if(this.element.error.code == 4) {
			var _g1 = 0;
			var _g = this.filenames.length - 1;
			while(_g1 < _g) {
				var i = _g1++;
				if(this.element.src == this.filenames[i]) {
					this.element.src = this.filenames[i + 1];
					return;
				}
			}
		}
		haxe_Log.trace("Error loading " + this.element.src,{ fileName : "Sound.hx", lineNumber : 108, className : "kha.js.Sound", methodName : "errorListener"});
		window.console.log("loadSound failed");
		this.finishAsset();
	}
	,canPlayThroughListener: function(eventInfo) {
		this.finishAsset();
	}
	,finishAsset: function() {
		this.element.removeEventListener("error",$bind(this,this.errorListener),false);
		this.element.removeEventListener("canplaythrough",$bind(this,this.canPlayThroughListener),false);
		this.done(this);
		HxOverrides.remove(kha_js_Sound.loading,this);
	}
	,uncompress: function(done) {
		done();
	}
	,__class__: kha_js_Sound
});
var kha_js_Video = function(filenames,done) {
	kha_Video.call(this);
	this.done = done;
	kha_js_Video.loading.add(this);
	this.element = window.document.createElement("video");
	this.filenames = [];
	var _g = 0;
	while(_g < filenames.length) {
		var filename = filenames[_g];
		++_g;
		if(this.element.canPlayType("video/webm") != "" && StringTools.endsWith(filename,".webm")) {
			this.filenames.push(filename);
		}
		if(this.element.canPlayType("video/mp4") != "" && StringTools.endsWith(filename,".mp4")) {
			this.filenames.push(filename);
		}
	}
	this.element.addEventListener("error",$bind(this,this.errorListener),false);
	this.element.addEventListener("canplaythrough",$bind(this,this.canPlayThroughListener),false);
	this.element.preload = "auto";
	this.element.src = this.filenames[0];
};
$hxClasses["kha.js.Video"] = kha_js_Video;
kha_js_Video.__name__ = ["kha","js","Video"];
kha_js_Video.__super__ = kha_Video;
kha_js_Video.prototype = $extend(kha_Video.prototype,{
	width: function() {
		return this.element.videoWidth;
	}
	,height: function() {
		return this.element.videoHeight;
	}
	,play: function(loop) {
		if(loop == null) {
			loop = false;
		}
		try {
			this.element.loop = loop;
			this.element.play();
		} catch( e ) {
			if (e instanceof js__$Boot_HaxeError) e = e.val;
			haxe_Log.trace(e,{ fileName : "Video.hx", lineNumber : 55, className : "kha.js.Video", methodName : "play"});
		}
	}
	,pause: function() {
		try {
			this.element.pause();
		} catch( e ) {
			if (e instanceof js__$Boot_HaxeError) e = e.val;
			haxe_Log.trace(e,{ fileName : "Video.hx", lineNumber : 64, className : "kha.js.Video", methodName : "pause"});
		}
	}
	,stop: function() {
		try {
			this.element.pause();
			this.element.currentTime = 0;
		} catch( e ) {
			if (e instanceof js__$Boot_HaxeError) e = e.val;
			haxe_Log.trace(e,{ fileName : "Video.hx", lineNumber : 74, className : "kha.js.Video", methodName : "stop"});
		}
	}
	,getCurrentPos: function() {
		return Math.ceil(this.element.currentTime * 1000);
	}
	,getLength: function() {
		if(isFinite(this.element.duration)) {
			return Math.floor(this.element.duration * 1000);
		} else {
			return -1;
		}
	}
	,errorListener: function(eventInfo) {
		if(this.element.error.code == 4) {
			var _g1 = 0;
			var _g = this.filenames.length - 1;
			while(_g1 < _g) {
				var i = _g1++;
				if(this.element.src == this.filenames[i]) {
					this.element.src = this.filenames[i + 1];
					return;
				}
			}
		}
		haxe_Log.trace("Error loading " + this.element.src,{ fileName : "Video.hx", lineNumber : 102, className : "kha.js.Video", methodName : "errorListener"});
		this.finishAsset();
	}
	,canPlayThroughListener: function(eventInfo) {
		this.finishAsset();
	}
	,finishAsset: function() {
		this.element.removeEventListener("error",$bind(this,this.errorListener),false);
		this.element.removeEventListener("canplaythrough",$bind(this,this.canPlayThroughListener),false);
		if(kha_SystemImpl.gl != null) {
			this.texture = kha_Image.fromVideo(this);
		}
		this.done(this);
		kha_js_Video.loading.remove(this);
	}
	,__class__: kha_js_Video
});
var kha_js_WebAudioSound = function(filename,done) {
	var _gthis = this;
	kha_Sound.call(this);
	var request = new XMLHttpRequest();
	request.open("GET",filename,true);
	request.responseType = "arraybuffer";
	request.onerror = function() {
		haxe_Log.trace("Error loading " + filename,{ fileName : "WebAudioSound.hx", lineNumber : 76, className : "kha.js.WebAudioSound", methodName : "new"});
	};
	request.onload = function() {
		_gthis.compressedData = haxe_io_Bytes.ofData(request.response);
		_gthis.uncompressedData = null;
		done(_gthis);
	};
	request.send(null);
};
$hxClasses["kha.js.WebAudioSound"] = kha_js_WebAudioSound;
kha_js_WebAudioSound.__name__ = ["kha","js","WebAudioSound"];
kha_js_WebAudioSound.__super__ = kha_Sound;
kha_js_WebAudioSound.prototype = $extend(kha_Sound.prototype,{
	superUncompress: function(done) {
		kha_Sound.prototype.uncompress.call(this,done);
	}
	,uncompress: function(done) {
		var _gthis = this;
		kha_audio2_Audio._context.decodeAudioData(this.compressedData.b.bufferValue,function(buffer) {
			var length = buffer.getChannelData(0).length * 2;
			var this1 = new Array(length);
			_gthis.uncompressedData = this1;
			if(buffer.numberOfChannels == 1) {
				var _g1 = 0;
				var _g = buffer.getChannelData(0).length;
				while(_g1 < _g) {
					var i = _g1++;
					_gthis.uncompressedData[i * 2] = buffer.getChannelData(0)[i];
					_gthis.uncompressedData[i * 2 + 1] = buffer.getChannelData(0)[i];
				}
			} else {
				var _g11 = 0;
				var _g2 = buffer.getChannelData(0).length;
				while(_g11 < _g2) {
					var i1 = _g11++;
					_gthis.uncompressedData[i1 * 2] = buffer.getChannelData(0)[i1];
					_gthis.uncompressedData[i1 * 2 + 1] = buffer.getChannelData(1)[i1];
				}
			}
			_gthis.compressedData = null;
			done();
		},function() {
			_gthis.superUncompress(done);
		});
	}
	,__class__: kha_js_WebAudioSound
});
var kha_js_graphics4_ConstantLocation = function(value,type) {
	this.value = value;
	this.type = type;
};
$hxClasses["kha.js.graphics4.ConstantLocation"] = kha_js_graphics4_ConstantLocation;
kha_js_graphics4_ConstantLocation.__name__ = ["kha","js","graphics4","ConstantLocation"];
kha_js_graphics4_ConstantLocation.__interfaces__ = [kha_graphics4_ConstantLocation];
kha_js_graphics4_ConstantLocation.prototype = {
	__class__: kha_js_graphics4_ConstantLocation
};
var kha_js_graphics4_Graphics = function(renderTarget) {
	var this1 = new Array(9);
	this.matrix3Cache = this1;
	var this11 = new Array(16);
	this.matrixCache = this11;
	this.isDepthAttachment = false;
	this.isCubeMap = false;
	this.depthMask = false;
	this.depthTest = false;
	this.renderTarget = renderTarget;
	this.init();
	this.instancedExtension = kha_SystemImpl.gl.getExtension("ANGLE_instanced_arrays");
	this.blendMinMaxExtension = kha_SystemImpl.gl.getExtension("EXT_blend_minmax");
};
$hxClasses["kha.js.graphics4.Graphics"] = kha_js_graphics4_Graphics;
kha_js_graphics4_Graphics.__name__ = ["kha","js","graphics4","Graphics"];
kha_js_graphics4_Graphics.__interfaces__ = [kha_graphics4_Graphics];
kha_js_graphics4_Graphics.getBlendFunc = function(factor) {
	switch(factor[1]) {
	case 0:case 2:
		return 0;
	case 1:
		return 1;
	case 3:
		return 770;
	case 4:
		return 772;
	case 5:
		return 771;
	case 6:
		return 773;
	case 7:
		return 768;
	case 8:
		return 774;
	case 9:
		return 769;
	case 10:
		return 775;
	}
};
kha_js_graphics4_Graphics.getBlendOp = function(op) {
	switch(op[1]) {
	case 0:
		return 32774;
	case 1:
		return 32778;
	case 2:
		return 32779;
	case 3:
		return 32775;
	case 4:
		return 32776;
	}
};
kha_js_graphics4_Graphics.prototype = {
	init: function() {
		if(this.renderTarget == null) {
			return;
		}
		this.isCubeMap = js_Boot.__instanceof(this.renderTarget,kha_graphics4_CubeMap);
		if(this.isCubeMap) {
			var cubeMap = js_Boot.__cast(this.renderTarget , kha_graphics4_CubeMap);
			this.renderTargetFrameBuffer = cubeMap.frameBuffer;
			this.renderTargetTexture = cubeMap.texture;
			this.isDepthAttachment = cubeMap.isDepthAttachment;
		} else {
			var image = js_Boot.__cast(this.renderTarget , kha_WebGLImage);
			this.renderTargetFrameBuffer = image.frameBuffer;
			this.renderTargetTexture = image.texture;
		}
	}
	,begin: function(additionalRenderTargets) {
		kha_SystemImpl.gl.enable(3042);
		kha_SystemImpl.gl.blendFunc(770,771);
		if(this.renderTarget == null) {
			kha_SystemImpl.gl.bindFramebuffer(36160,null);
			kha_SystemImpl.gl.viewport(0,0,kha_System.windowWidth(),kha_System.windowHeight());
		} else {
			kha_SystemImpl.gl.bindFramebuffer(36160,this.renderTargetFrameBuffer);
			kha_SystemImpl.gl.viewport(0,0,this.renderTarget.get_width(),this.renderTarget.get_height());
			if(additionalRenderTargets != null) {
				kha_SystemImpl.gl.framebufferTexture2D(36160,kha_SystemImpl.drawBuffers.COLOR_ATTACHMENT0_WEBGL,3553,this.renderTargetTexture,0);
				var _g1 = 0;
				var _g = additionalRenderTargets.length;
				while(_g1 < _g) {
					var i = _g1++;
					kha_SystemImpl.gl.framebufferTexture2D(36160,kha_SystemImpl.drawBuffers.COLOR_ATTACHMENT0_WEBGL + i + 1,3553,(js_Boot.__cast(additionalRenderTargets[i] , kha_WebGLImage)).texture,0);
				}
				var attachments = [kha_SystemImpl.drawBuffers.COLOR_ATTACHMENT0_WEBGL];
				var _g11 = 0;
				var _g2 = additionalRenderTargets.length;
				while(_g11 < _g2) {
					var i1 = _g11++;
					attachments.push(kha_SystemImpl.drawBuffers.COLOR_ATTACHMENT0_WEBGL + i1 + 1);
				}
				kha_SystemImpl.drawBuffers.drawBuffersWEBGL(attachments);
			}
		}
	}
	,beginFace: function(face) {
		kha_SystemImpl.gl.enable(3042);
		kha_SystemImpl.gl.blendFunc(770,771);
		kha_SystemImpl.gl.bindFramebuffer(36160,this.renderTargetFrameBuffer);
		kha_SystemImpl.gl.framebufferTexture2D(36160,this.isDepthAttachment ? 36096 : 36064,34069 + face,this.renderTargetTexture,0);
		kha_SystemImpl.gl.viewport(0,0,this.renderTarget.get_width(),this.renderTarget.get_height());
	}
	,beginEye: function(eye) {
		kha_SystemImpl.gl.enable(3042);
		kha_SystemImpl.gl.blendFunc(770,771);
		kha_SystemImpl.gl.bindFramebuffer(36160,null);
		if(eye == 0) {
			kha_SystemImpl.gl.viewport(0,0,kha_System.windowWidth() * 0.5 | 0,kha_System.windowHeight());
		} else {
			kha_SystemImpl.gl.viewport(kha_System.windowWidth() * 0.5 | 0,0,kha_System.windowWidth() * 0.5 | 0,kha_System.windowHeight());
		}
	}
	,end: function() {
	}
	,flush: function() {
	}
	,vsynced: function() {
		return true;
	}
	,refreshRate: function() {
		return 60;
	}
	,clear: function(color,depth,stencil) {
		var clearMask = 0;
		if(color != null) {
			clearMask |= 16384;
			kha_SystemImpl.gl.clearColor(((color & 16711680) >>> 16) * 0.00392156862745098,((color & 65280) >>> 8) * 0.00392156862745098,(color & 255) * 0.00392156862745098,(color >>> 24) * 0.00392156862745098);
		}
		if(depth != null) {
			clearMask |= 256;
			kha_SystemImpl.gl.enable(2929);
			kha_SystemImpl.gl.depthMask(true);
			kha_SystemImpl.gl.clearDepth(depth);
		}
		if(stencil != null) {
			clearMask |= 1024;
			kha_SystemImpl.gl.enable(2960);
			kha_SystemImpl.gl.stencilMask(255);
			kha_SystemImpl.gl.clearStencil(stencil);
		}
		kha_SystemImpl.gl.clear(clearMask);
		if(this.depthTest) {
			kha_SystemImpl.gl.enable(2929);
		} else {
			kha_SystemImpl.gl.disable(2929);
		}
		kha_SystemImpl.gl.depthMask(this.depthMask);
	}
	,viewport: function(x,y,width,height) {
		var h = this.renderTarget == null ? kha_System.windowHeight(0) : this.renderTarget.get_height();
		kha_SystemImpl.gl.viewport(x,h - y - height,width,height);
	}
	,setDepthMode: function(write,mode) {
		switch(mode[1]) {
		case 0:
			if(write) {
				kha_SystemImpl.gl.enable(2929);
			} else {
				kha_SystemImpl.gl.disable(2929);
			}
			this.depthTest = write;
			kha_SystemImpl.gl.depthFunc(519);
			break;
		case 1:
			kha_SystemImpl.gl.enable(2929);
			this.depthTest = true;
			kha_SystemImpl.gl.depthFunc(512);
			break;
		case 2:
			kha_SystemImpl.gl.enable(2929);
			this.depthTest = true;
			kha_SystemImpl.gl.depthFunc(514);
			break;
		case 3:
			kha_SystemImpl.gl.enable(2929);
			this.depthTest = true;
			kha_SystemImpl.gl.depthFunc(517);
			break;
		case 4:
			kha_SystemImpl.gl.enable(2929);
			this.depthTest = true;
			kha_SystemImpl.gl.depthFunc(513);
			break;
		case 5:
			kha_SystemImpl.gl.enable(2929);
			this.depthTest = true;
			kha_SystemImpl.gl.depthFunc(515);
			break;
		case 6:
			kha_SystemImpl.gl.enable(2929);
			this.depthTest = true;
			kha_SystemImpl.gl.depthFunc(516);
			break;
		case 7:
			kha_SystemImpl.gl.enable(2929);
			this.depthTest = true;
			kha_SystemImpl.gl.depthFunc(518);
			break;
		}
		kha_SystemImpl.gl.depthMask(write);
		this.depthMask = write;
	}
	,setBlendingMode: function(source,destination,operation,alphaSource,alphaDestination,alphaOperation) {
		if(source == kha_graphics4_BlendingFactor.BlendOne && destination == kha_graphics4_BlendingFactor.BlendZero) {
			kha_SystemImpl.gl.disable(3042);
		} else {
			kha_SystemImpl.gl.enable(3042);
			kha_SystemImpl.gl.blendFuncSeparate(kha_js_graphics4_Graphics.getBlendFunc(source),kha_js_graphics4_Graphics.getBlendFunc(destination),kha_js_graphics4_Graphics.getBlendFunc(alphaSource),kha_js_graphics4_Graphics.getBlendFunc(alphaDestination));
			kha_SystemImpl.gl.blendEquationSeparate(kha_js_graphics4_Graphics.getBlendOp(operation),kha_js_graphics4_Graphics.getBlendOp(alphaOperation));
		}
	}
	,createVertexBuffer: function(vertexCount,structure,usage,canRead) {
		if(canRead == null) {
			canRead = false;
		}
		return new kha_graphics4_VertexBuffer(vertexCount,structure,usage);
	}
	,setVertexBuffer: function(vertexBuffer) {
		(js_Boot.__cast(vertexBuffer , kha_graphics4_VertexBuffer)).set(0);
	}
	,setVertexBuffers: function(vertexBuffers) {
		var offset = 0;
		var _g = 0;
		while(_g < vertexBuffers.length) {
			var vertexBuffer = vertexBuffers[_g];
			++_g;
			offset += (js_Boot.__cast(vertexBuffer , kha_graphics4_VertexBuffer)).set(offset);
		}
	}
	,createIndexBuffer: function(indexCount,usage,canRead) {
		if(canRead == null) {
			canRead = false;
		}
		return new kha_graphics4_IndexBuffer(indexCount,usage);
	}
	,setIndexBuffer: function(indexBuffer) {
		this.indicesCount = indexBuffer.count();
		(js_Boot.__cast(indexBuffer , kha_graphics4_IndexBuffer)).set();
	}
	,setTexture: function(stage,texture) {
		if(texture == null) {
			kha_SystemImpl.gl.activeTexture(33984 + (js_Boot.__cast(stage , kha_js_graphics4_TextureUnit)).value);
			kha_SystemImpl.gl.bindTexture(3553,null);
		} else {
			(js_Boot.__cast(texture , kha_WebGLImage)).set((js_Boot.__cast(stage , kha_js_graphics4_TextureUnit)).value);
		}
	}
	,setTextureDepth: function(stage,texture) {
		(js_Boot.__cast(texture , kha_WebGLImage)).setDepth((js_Boot.__cast(stage , kha_js_graphics4_TextureUnit)).value);
	}
	,setVideoTexture: function(unit,texture) {
		if(texture == null) {
			kha_SystemImpl.gl.activeTexture(33984 + (js_Boot.__cast(unit , kha_js_graphics4_TextureUnit)).value);
			kha_SystemImpl.gl.bindTexture(3553,null);
		} else {
			(js_Boot.__cast((js_Boot.__cast(texture , kha_js_Video)).texture , kha_WebGLImage)).set((js_Boot.__cast(unit , kha_js_graphics4_TextureUnit)).value);
		}
	}
	,setImageTexture: function(unit,texture) {
	}
	,setTextureParameters: function(texunit,uAddressing,vAddressing,minificationFilter,magnificationFilter,mipmapFilter) {
		kha_SystemImpl.gl.activeTexture(33984 + (js_Boot.__cast(texunit , kha_js_graphics4_TextureUnit)).value);
		switch(uAddressing[1]) {
		case 0:
			kha_SystemImpl.gl.texParameteri(3553,10242,10497);
			break;
		case 1:
			kha_SystemImpl.gl.texParameteri(3553,10242,33648);
			break;
		case 2:
			kha_SystemImpl.gl.texParameteri(3553,10242,33071);
			break;
		}
		switch(vAddressing[1]) {
		case 0:
			kha_SystemImpl.gl.texParameteri(3553,10243,10497);
			break;
		case 1:
			kha_SystemImpl.gl.texParameteri(3553,10243,33648);
			break;
		case 2:
			kha_SystemImpl.gl.texParameteri(3553,10243,33071);
			break;
		}
		switch(minificationFilter[1]) {
		case 0:
			switch(mipmapFilter[1]) {
			case 0:
				kha_SystemImpl.gl.texParameteri(3553,10241,9728);
				break;
			case 1:
				kha_SystemImpl.gl.texParameteri(3553,10241,9984);
				break;
			case 2:
				kha_SystemImpl.gl.texParameteri(3553,10241,9986);
				break;
			}
			break;
		case 1:case 2:
			switch(mipmapFilter[1]) {
			case 0:
				kha_SystemImpl.gl.texParameteri(3553,10241,9729);
				break;
			case 1:
				kha_SystemImpl.gl.texParameteri(3553,10241,9985);
				break;
			case 2:
				kha_SystemImpl.gl.texParameteri(3553,10241,9987);
				break;
			}
			if(minificationFilter == kha_graphics4_TextureFilter.AnisotropicFilter) {
				kha_SystemImpl.gl.texParameteri(3553,kha_SystemImpl.anisotropicFilter.TEXTURE_MAX_ANISOTROPY_EXT,4);
			}
			break;
		}
		switch(magnificationFilter[1]) {
		case 0:
			kha_SystemImpl.gl.texParameteri(3553,10240,9728);
			break;
		case 1:case 2:
			kha_SystemImpl.gl.texParameteri(3553,10240,9729);
			break;
		}
	}
	,setTexture3DParameters: function(texunit,uAddressing,vAddressing,wAddressing,minificationFilter,magnificationFilter,mipmapFilter) {
	}
	,setCubeMap: function(stage,cubeMap) {
		if(cubeMap == null) {
			kha_SystemImpl.gl.activeTexture(33984 + (js_Boot.__cast(stage , kha_js_graphics4_TextureUnit)).value);
			kha_SystemImpl.gl.bindTexture(34067,null);
		} else {
			cubeMap.set((js_Boot.__cast(stage , kha_js_graphics4_TextureUnit)).value);
		}
	}
	,setCubeMapDepth: function(stage,cubeMap) {
		cubeMap.setDepth((js_Boot.__cast(stage , kha_js_graphics4_TextureUnit)).value);
	}
	,setCullMode: function(mode) {
		switch(mode[1]) {
		case 0:
			kha_SystemImpl.gl.enable(2884);
			kha_SystemImpl.gl.cullFace(1029);
			break;
		case 1:
			kha_SystemImpl.gl.enable(2884);
			kha_SystemImpl.gl.cullFace(1028);
			break;
		case 2:
			kha_SystemImpl.gl.disable(2884);
			break;
		}
	}
	,setPipeline: function(pipe) {
		this.setCullMode(pipe.cullMode);
		this.setDepthMode(pipe.depthWrite,pipe.depthMode);
		this.setStencilParameters(pipe.stencilMode,pipe.stencilBothPass,pipe.stencilDepthFail,pipe.stencilFail,pipe.stencilReferenceValue,pipe.stencilReadMask,pipe.stencilWriteMask);
		this.setBlendingMode(pipe.blendSource,pipe.blendDestination,pipe.blendOperation,pipe.alphaBlendSource,pipe.alphaBlendDestination,pipe.alphaBlendOperation);
		pipe.set();
	}
	,setBool: function(location,value) {
		kha_SystemImpl.gl.uniform1i((js_Boot.__cast(location , kha_js_graphics4_ConstantLocation)).value,value ? 1 : 0);
	}
	,setInt: function(location,value) {
		kha_SystemImpl.gl.uniform1i((js_Boot.__cast(location , kha_js_graphics4_ConstantLocation)).value,value);
	}
	,setFloat: function(location,value) {
		kha_SystemImpl.gl.uniform1f((js_Boot.__cast(location , kha_js_graphics4_ConstantLocation)).value,value);
	}
	,setFloat2: function(location,value1,value2) {
		kha_SystemImpl.gl.uniform2f((js_Boot.__cast(location , kha_js_graphics4_ConstantLocation)).value,value1,value2);
	}
	,setFloat3: function(location,value1,value2,value3) {
		kha_SystemImpl.gl.uniform3f((js_Boot.__cast(location , kha_js_graphics4_ConstantLocation)).value,value1,value2,value3);
	}
	,setFloat4: function(location,value1,value2,value3,value4) {
		kha_SystemImpl.gl.uniform4f((js_Boot.__cast(location , kha_js_graphics4_ConstantLocation)).value,value1,value2,value3,value4);
	}
	,setFloats: function(location,values) {
		var webglLocation = js_Boot.__cast(location , kha_js_graphics4_ConstantLocation);
		var _g = webglLocation.type;
		switch(_g) {
		case 35664:
			kha_SystemImpl.gl.uniform2fv(webglLocation.value,values);
			break;
		case 35665:
			kha_SystemImpl.gl.uniform3fv(webglLocation.value,values);
			break;
		case 35666:
			kha_SystemImpl.gl.uniform4fv(webglLocation.value,values);
			break;
		default:
			kha_SystemImpl.gl.uniform1fv(webglLocation.value,values);
		}
	}
	,setVector2: function(location,value) {
		kha_SystemImpl.gl.uniform2f((js_Boot.__cast(location , kha_js_graphics4_ConstantLocation)).value,value.x,value.y);
	}
	,setVector3: function(location,value) {
		kha_SystemImpl.gl.uniform3f((js_Boot.__cast(location , kha_js_graphics4_ConstantLocation)).value,value.x,value.y,value.z);
	}
	,setVector4: function(location,value) {
		kha_SystemImpl.gl.uniform4f((js_Boot.__cast(location , kha_js_graphics4_ConstantLocation)).value,value.x,value.y,value.z,value.w);
	}
	,setMatrix: function(location,matrix) {
		this.matrixCache[0] = matrix._00;
		this.matrixCache[1] = matrix._01;
		this.matrixCache[2] = matrix._02;
		this.matrixCache[3] = matrix._03;
		this.matrixCache[4] = matrix._10;
		this.matrixCache[5] = matrix._11;
		this.matrixCache[6] = matrix._12;
		this.matrixCache[7] = matrix._13;
		this.matrixCache[8] = matrix._20;
		this.matrixCache[9] = matrix._21;
		this.matrixCache[10] = matrix._22;
		this.matrixCache[11] = matrix._23;
		this.matrixCache[12] = matrix._30;
		this.matrixCache[13] = matrix._31;
		this.matrixCache[14] = matrix._32;
		this.matrixCache[15] = matrix._33;
		kha_SystemImpl.gl.uniformMatrix4fv((js_Boot.__cast(location , kha_js_graphics4_ConstantLocation)).value,false,this.matrixCache);
	}
	,setMatrix3: function(location,matrix) {
		this.matrix3Cache[0] = matrix._00;
		this.matrix3Cache[1] = matrix._01;
		this.matrix3Cache[2] = matrix._02;
		this.matrix3Cache[3] = matrix._10;
		this.matrix3Cache[4] = matrix._11;
		this.matrix3Cache[5] = matrix._12;
		this.matrix3Cache[6] = matrix._20;
		this.matrix3Cache[7] = matrix._21;
		this.matrix3Cache[8] = matrix._22;
		kha_SystemImpl.gl.uniformMatrix3fv((js_Boot.__cast(location , kha_js_graphics4_ConstantLocation)).value,false,this.matrix3Cache);
	}
	,drawIndexedVertices: function(start,count) {
		if(count == null) {
			count = -1;
		}
		if(start == null) {
			start = 0;
		}
		var type = kha_SystemImpl.elementIndexUint == null ? 5123 : 5125;
		var size = type == 5123 ? 2 : 4;
		kha_SystemImpl.gl.drawElements(4,count == -1 ? this.indicesCount : count,type,start * size);
	}
	,convertStencilAction: function(action) {
		switch(action[1]) {
		case 0:
			return 7680;
		case 1:
			return 0;
		case 2:
			return 7681;
		case 3:
			return 7682;
		case 4:
			return 34055;
		case 5:
			return 7683;
		case 6:
			return 34056;
		case 7:
			return 5386;
		}
	}
	,setStencilParameters: function(compareMode,bothPass,depthFail,stencilFail,referenceValue,readMask,writeMask) {
		if(writeMask == null) {
			writeMask = 255;
		}
		if(readMask == null) {
			readMask = 255;
		}
		if(compareMode == kha_graphics4_CompareMode.Always && bothPass == kha_graphics4_StencilAction.Keep && depthFail == kha_graphics4_StencilAction.Keep && stencilFail == kha_graphics4_StencilAction.Keep) {
			kha_SystemImpl.gl.disable(2960);
		} else {
			kha_SystemImpl.gl.enable(2960);
			var stencilFunc = 0;
			switch(compareMode[1]) {
			case 0:
				stencilFunc = 519;
				break;
			case 1:
				stencilFunc = 512;
				break;
			case 2:
				stencilFunc = 514;
				break;
			case 3:
				stencilFunc = 517;
				break;
			case 4:
				stencilFunc = 513;
				break;
			case 5:
				stencilFunc = 515;
				break;
			case 6:
				stencilFunc = 516;
				break;
			case 7:
				stencilFunc = 518;
				break;
			}
			kha_SystemImpl.gl.stencilMask(writeMask);
			kha_SystemImpl.gl.stencilOp(this.convertStencilAction(stencilFail),this.convertStencilAction(depthFail),this.convertStencilAction(bothPass));
			kha_SystemImpl.gl.stencilFunc(stencilFunc,referenceValue,readMask);
		}
	}
	,scissor: function(x,y,width,height) {
		kha_SystemImpl.gl.enable(3089);
		if(this.renderTarget == null) {
			kha_SystemImpl.gl.scissor(x,kha_System.windowHeight(0) - y - height,width,height);
		} else {
			kha_SystemImpl.gl.scissor(x,y,width,height);
		}
	}
	,disableScissor: function() {
		kha_SystemImpl.gl.disable(3089);
	}
	,renderTargetsInvertedY: function() {
		return true;
	}
	,drawIndexedVerticesInstanced: function(instanceCount,start,count) {
		if(count == null) {
			count = -1;
		}
		if(start == null) {
			start = 0;
		}
		if(this.instancedRenderingAvailable()) {
			var type = kha_SystemImpl.elementIndexUint == null ? 5123 : 5125;
			this.instancedExtension.drawElementsInstancedANGLE(4,count == -1 ? this.indicesCount : count,type,start * 2,instanceCount);
		}
	}
	,instancedRenderingAvailable: function() {
		return this.instancedExtension;
	}
	,__class__: kha_js_graphics4_Graphics
};
var kha_js_graphics4_Graphics2 = function(canvas) {
	kha_graphics4_Graphics2.call(this,canvas);
};
$hxClasses["kha.js.graphics4.Graphics2"] = kha_js_graphics4_Graphics2;
kha_js_graphics4_Graphics2.__name__ = ["kha","js","graphics4","Graphics2"];
kha_js_graphics4_Graphics2.__super__ = kha_graphics4_Graphics2;
kha_js_graphics4_Graphics2.prototype = $extend(kha_graphics4_Graphics2.prototype,{
	drawVideoInternal: function(video,x,y,width,height) {
		var v = js_Boot.__cast(video , kha_js_Video);
		this.drawScaledSubImage(v.texture,0,0,v.texture.get_width(),v.texture.get_height(),x,y,width,height);
	}
	,begin: function(clear,clearColor) {
		if(clear == null) {
			clear = true;
		}
		kha_SystemImpl.gl.colorMask(true,true,true,true);
		kha_SystemImpl.gl.disable(2929);
		kha_SystemImpl.gl.depthFunc(519);
		kha_graphics4_Graphics2.prototype.begin.call(this,clear,clearColor);
	}
	,__class__: kha_js_graphics4_Graphics2
});
var kha_js_graphics4_TextureUnit = function(value) {
	this.value = value;
};
$hxClasses["kha.js.graphics4.TextureUnit"] = kha_js_graphics4_TextureUnit;
kha_js_graphics4_TextureUnit.__name__ = ["kha","js","graphics4","TextureUnit"];
kha_js_graphics4_TextureUnit.__interfaces__ = [kha_graphics4_TextureUnit];
kha_js_graphics4_TextureUnit.prototype = {
	__class__: kha_js_graphics4_TextureUnit
};
var kha_vr_VrInterface = function() {
};
$hxClasses["kha.vr.VrInterface"] = kha_vr_VrInterface;
kha_vr_VrInterface.__name__ = ["kha","vr","VrInterface"];
kha_vr_VrInterface.prototype = {
	GetSensorState: function() {
		return null;
	}
	,GetPredictedSensorState: function(time) {
		return null;
	}
	,WarpSwapBlack: function() {
		return;
	}
	,WarpSwapLoadingIcon: function() {
		return;
	}
	,WarpSwap: function(parms) {
		return;
	}
	,IsPresenting: function() {
		return false;
	}
	,IsVrEnabled: function() {
		return false;
	}
	,GetTimeInSeconds: function() {
		return 0.0;
	}
	,GetProjectionMatrix: function(eye) {
		return null;
	}
	,GetViewMatrix: function(eye) {
		return null;
	}
	,onVRRequestPresent: function() {
		return;
	}
	,onVRExitPresent: function() {
		return;
	}
	,onResetPose: function() {
		return;
	}
	,__class__: kha_vr_VrInterface
};
var kha_js_vr_VrInterface = function() {
	this.vrHeight = 0;
	this.vrWidth = 0;
	this.height = 0;
	this.width = 0;
	this.rightViewMatrix = new kha_math_FastMatrix4(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);
	this.leftViewMatrix = new kha_math_FastMatrix4(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);
	this.rightProjectionMatrix = new kha_math_FastMatrix4(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);
	this.leftProjectionMatrix = new kha_math_FastMatrix4(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);
	this.vrEnabled = false;
	kha_vr_VrInterface.call(this);
	var displayEnabled = navigator.getVRDisplays;
	if(displayEnabled) {
		this.vrEnabled = true;
		this.getVRDisplays();
		haxe_Log.trace("Display enabled.",{ fileName : "VrInterface.hx", lineNumber : 36, className : "kha.js.vr.VrInterface", methodName : "new"});
	} else {
		haxe_Log.trace("WebVR is not supported on this browser.",{ fileName : "VrInterface.hx", lineNumber : 38, className : "kha.js.vr.VrInterface", methodName : "new"});
		haxe_Log.trace("To support progressive enhancement your fallback code should render a normal Canvas based WebGL experience for the user.",{ fileName : "VrInterface.hx", lineNumber : 39, className : "kha.js.vr.VrInterface", methodName : "new"});
	}
};
$hxClasses["kha.js.vr.VrInterface"] = kha_js_vr_VrInterface;
kha_js_vr_VrInterface.__name__ = ["kha","js","vr","VrInterface"];
kha_js_vr_VrInterface.__super__ = kha_vr_VrInterface;
kha_js_vr_VrInterface.prototype = $extend(kha_vr_VrInterface.prototype,{
	getVRDisplays: function() {
		var _gthis = this;
		var vrDisplayInstance = navigator.getVRDisplays();
		vrDisplayInstance.then(function(displays) {
			if(displays.length > 0) {
				_gthis.frameData = new VRFrameData();
				_gthis.vrDisplay = displays[0];
				_gthis.vrDisplay.depthNear = 0.1;
				_gthis.vrDisplay.depthFar = 1024.0;
				var leftEye = _gthis.vrDisplay.getEyeParameters("left");
				var rightEye = _gthis.vrDisplay.getEyeParameters("right");
				_gthis.width = kha_SystemImpl.khanvas.width;
				_gthis.height = kha_SystemImpl.khanvas.height;
				_gthis.vrWidth = Math.max(leftEye.renderWidth,rightEye.renderWidth) * 2 | 0;
				_gthis.vrHeight = Math.max(leftEye.renderHeight,rightEye.renderHeight) | 0;
			} else {
				haxe_Log.trace("There are no VR displays connected.",{ fileName : "VrInterface.hx", lineNumber : 59, className : "kha.js.vr.VrInterface", methodName : "getVRDisplays"});
			}
		});
	}
	,onVRRequestPresent: function() {
		var _gthis = this;
		try {
			this.vrDisplay.requestPresent([{ source : kha_SystemImpl.khanvas}]).then(function() {
				_gthis.onResize();
				_gthis.vrDisplay.requestAnimationFrame($bind(_gthis,_gthis.onAnimationFrame));
			});
		} catch( err ) {
			if (err instanceof js__$Boot_HaxeError) err = err.val;
			haxe_Log.trace("Failed to requestPresent.",{ fileName : "VrInterface.hx", lineNumber : 71, className : "kha.js.vr.VrInterface", methodName : "onVRRequestPresent"});
			haxe_Log.trace(err,{ fileName : "VrInterface.hx", lineNumber : 72, className : "kha.js.vr.VrInterface", methodName : "onVRRequestPresent"});
		}
	}
	,onVRExitPresent: function() {
		var _gthis = this;
		try {
			this.vrDisplay.exitPresent([{ source : kha_SystemImpl.khanvas}]).then(function() {
				_gthis.onResize();
			});
		} catch( err ) {
			if (err instanceof js__$Boot_HaxeError) err = err.val;
			haxe_Log.trace("Failed to exitPresent.",{ fileName : "VrInterface.hx", lineNumber : 82, className : "kha.js.vr.VrInterface", methodName : "onVRExitPresent"});
			haxe_Log.trace(err,{ fileName : "VrInterface.hx", lineNumber : 83, className : "kha.js.vr.VrInterface", methodName : "onVRExitPresent"});
		}
	}
	,onResetPose: function() {
		try {
			this.vrDisplay.resetPose();
		} catch( err ) {
			if (err instanceof js__$Boot_HaxeError) err = err.val;
			haxe_Log.trace("Failed to resetPose",{ fileName : "VrInterface.hx", lineNumber : 91, className : "kha.js.vr.VrInterface", methodName : "onResetPose"});
			haxe_Log.trace(err,{ fileName : "VrInterface.hx", lineNumber : 92, className : "kha.js.vr.VrInterface", methodName : "onResetPose"});
		}
	}
	,onAnimationFrame: function(timestamp) {
		if(this.vrDisplay != null && this.vrDisplay.isPresenting) {
			this.vrDisplay.requestAnimationFrame($bind(this,this.onAnimationFrame));
			this.vrDisplay.getFrameData(this.frameData);
			this.leftProjectionMatrix = this.createMatrixFromArray(this.frameData.leftProjectionMatrix);
			this.leftViewMatrix = this.createMatrixFromArray(this.frameData.leftViewMatrix);
			this.rightProjectionMatrix = this.createMatrixFromArray(this.frameData.rightProjectionMatrix);
			this.rightViewMatrix = this.createMatrixFromArray(this.frameData.rightViewMatrix);
			this.vrDisplay.submitFrame();
		}
	}
	,onResize: function() {
		if(this.vrDisplay != null && this.vrDisplay.isPresenting) {
			kha_SystemImpl.khanvas.width = this.vrWidth;
			kha_SystemImpl.khanvas.height = this.vrHeight;
		} else {
			kha_SystemImpl.khanvas.width = this.width;
			kha_SystemImpl.khanvas.height = this.height;
		}
	}
	,GetSensorState: function() {
		return this.GetPredictedSensorState(0.0);
	}
	,GetPredictedSensorState: function(time) {
		var result = new kha_vr_SensorState();
		result.Predicted = new kha_vr_PoseState();
		result.Recorded = result.Predicted;
		result.Predicted.AngularAcceleration = new kha_math_Vector3();
		result.Predicted.AngularVelocity = new kha_math_Vector3();
		result.Predicted.LinearAcceleration = new kha_math_Vector3();
		result.Predicted.LinearVelocity = new kha_math_Vector3();
		result.Predicted.TimeInSeconds = time;
		result.Predicted.Pose = new kha_vr_Pose();
		result.Predicted.Pose.Orientation = new kha_math_Quaternion();
		result.Predicted.Pose.Position = new kha_math_Vector3();
		var mPose = this.frameData.pose;
		if(mPose != null) {
			result.Predicted.AngularVelocity = this.createVectorFromArray(mPose.angularVelocity);
			result.Predicted.AngularAcceleration = this.createVectorFromArray(mPose.angularAcceleration);
			result.Predicted.LinearVelocity = this.createVectorFromArray(mPose.linearVelocity);
			result.Predicted.LinearAcceleration = this.createVectorFromArray(mPose.linearAcceleration);
			result.Predicted.Pose.Orientation = this.createQuaternion(mPose.orientation);
			result.Predicted.Pose.Position = this.createVectorFromArray(mPose.position);
		}
		return result;
	}
	,WarpSwapBlack: function() {
	}
	,WarpSwapLoadingIcon: function() {
	}
	,WarpSwap: function(parms) {
	}
	,IsPresenting: function() {
		if(this.vrDisplay != null) {
			return this.vrDisplay.isPresenting;
		}
		return false;
	}
	,IsVrEnabled: function() {
		return this.vrEnabled;
	}
	,GetTimeInSeconds: function() {
		return kha_Scheduler.time();
	}
	,GetProjectionMatrix: function(eye) {
		if(eye == 0) {
			return this.leftProjectionMatrix;
		} else {
			return this.rightProjectionMatrix;
		}
	}
	,GetViewMatrix: function(eye) {
		if(eye == 0) {
			return this.leftViewMatrix;
		} else {
			return this.rightViewMatrix;
		}
	}
	,createMatrixFromArray: function(array) {
		var matrix = new kha_math_FastMatrix4(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);
		matrix._00 = array[0];
		matrix._01 = array[1];
		matrix._02 = array[2];
		matrix._03 = array[3];
		matrix._10 = array[4];
		matrix._11 = array[5];
		matrix._12 = array[6];
		matrix._13 = array[7];
		matrix._20 = array[8];
		matrix._21 = array[9];
		matrix._22 = array[10];
		matrix._23 = array[11];
		matrix._30 = array[12];
		matrix._31 = array[13];
		matrix._32 = array[14];
		matrix._33 = array[15];
		return matrix;
	}
	,createVectorFromArray: function(array) {
		var vector = new kha_math_Vector3(0,0,0);
		if(array != null) {
			vector.x = array[0];
			vector.y = array[1];
			vector.z = array[2];
		}
		return vector;
	}
	,createQuaternion: function(array) {
		var quaternion = new kha_math_Quaternion(0,0,0,0);
		if(array != null) {
			quaternion.set_x(array[0]);
			quaternion.set_y(array[1]);
			quaternion.set_z(array[2]);
			quaternion.set_w(array[3]);
		}
		return quaternion;
	}
	,__class__: kha_js_vr_VrInterface
});
var kha_math_FastVector2 = function(x,y) {
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	this.x = x;
	this.y = y;
};
$hxClasses["kha.math.FastVector2"] = kha_math_FastVector2;
kha_math_FastVector2.__name__ = ["kha","math","FastVector2"];
kha_math_FastVector2.fromVector2 = function(v) {
	return new kha_math_FastVector2(v.x,v.y);
};
kha_math_FastVector2.prototype = {
	get_length: function() {
		return Math.sqrt(this.x * this.x + this.y * this.y);
	}
	,set_length: function(length) {
		var currentLength = this.get_length();
		if(currentLength == 0) {
			return 0;
		}
		var mul = length / currentLength;
		this.x *= mul;
		this.y *= mul;
		return length;
	}
	,toString: function() {
		return "FastVector2(" + this.x + ", " + this.y + ")";
	}
	,__class__: kha_math_FastVector2
	,__properties__: {set_length:"set_length",get_length:"get_length"}
};
var kha_math_FastVector3 = function(x,y,z) {
	if(z == null) {
		z = 0;
	}
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	this.x = x;
	this.y = y;
	this.z = z;
};
$hxClasses["kha.math.FastVector3"] = kha_math_FastVector3;
kha_math_FastVector3.__name__ = ["kha","math","FastVector3"];
kha_math_FastVector3.fromVector3 = function(v) {
	return new kha_math_FastVector3(v.x,v.y,v.z);
};
kha_math_FastVector3.prototype = {
	get_length: function() {
		return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);
	}
	,set_length: function(length) {
		var currentLength = this.get_length();
		if(currentLength == 0) {
			return 0;
		}
		var mul = length / currentLength;
		this.x *= mul;
		this.y *= mul;
		this.z *= mul;
		return length;
	}
	,toString: function() {
		return "FastVector3(" + this.x + ", " + this.y + ", " + this.z + ")";
	}
	,__class__: kha_math_FastVector3
	,__properties__: {set_length:"set_length",get_length:"get_length"}
};
var kha_math_FastVector4 = function(x,y,z,w) {
	if(w == null) {
		w = 1;
	}
	if(z == null) {
		z = 0;
	}
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	this.x = x;
	this.y = y;
	this.z = z;
	this.w = w;
};
$hxClasses["kha.math.FastVector4"] = kha_math_FastVector4;
kha_math_FastVector4.__name__ = ["kha","math","FastVector4"];
kha_math_FastVector4.fromVector4 = function(v) {
	return new kha_math_FastVector4(v.x,v.y,v.z,v.w);
};
kha_math_FastVector4.prototype = {
	get_length: function() {
		return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);
	}
	,set_length: function(length) {
		var currentLength = this.get_length();
		if(currentLength == 0) {
			return 0;
		}
		var mul = length / currentLength;
		this.x *= mul;
		this.y *= mul;
		this.z *= mul;
		this.w *= mul;
		return length;
	}
	,toString: function() {
		return "FastVector4(" + this.x + ", " + this.y + ", " + this.z + ", " + this.w + ")";
	}
	,__class__: kha_math_FastVector4
	,__properties__: {set_length:"set_length",get_length:"get_length"}
};
var kha_math_Matrix3 = function(_00,_10,_20,_01,_11,_21,_02,_12,_22) {
	this._00 = _00;
	this._10 = _10;
	this._20 = _20;
	this._01 = _01;
	this._11 = _11;
	this._21 = _21;
	this._02 = _02;
	this._12 = _12;
	this._22 = _22;
};
$hxClasses["kha.math.Matrix3"] = kha_math_Matrix3;
kha_math_Matrix3.__name__ = ["kha","math","Matrix3"];
kha_math_Matrix3.prototype = {
	__class__: kha_math_Matrix3
};
var kha_math_Matrix4 = function(_00,_10,_20,_30,_01,_11,_21,_31,_02,_12,_22,_32,_03,_13,_23,_33) {
	this._00 = _00;
	this._10 = _10;
	this._20 = _20;
	this._30 = _30;
	this._01 = _01;
	this._11 = _11;
	this._21 = _21;
	this._31 = _31;
	this._02 = _02;
	this._12 = _12;
	this._22 = _22;
	this._32 = _32;
	this._03 = _03;
	this._13 = _13;
	this._23 = _23;
	this._33 = _33;
};
$hxClasses["kha.math.Matrix4"] = kha_math_Matrix4;
kha_math_Matrix4.__name__ = ["kha","math","Matrix4"];
kha_math_Matrix4.orthogonalProjection = function(left,right,bottom,top,zn,zf) {
	var tx = -(right + left) / (right - left);
	var ty = -(top + bottom) / (top - bottom);
	var tz = -(zf + zn) / (zf - zn);
	return new kha_math_Matrix4(2 / (right - left),0,0,tx,0,2 / (top - bottom),0,ty,0,0,-2 / (zf - zn),tz,0,0,0,1);
};
kha_math_Matrix4.perspectiveProjection = function(fovY,aspect,zn,zf) {
	var uh = 1.0 / Math.tan(fovY / 2);
	var uw = uh / aspect;
	return new kha_math_Matrix4(uw,0,0,0,0,uh,0,0,0,0,(zf + zn) / (zn - zf),2 * zf * zn / (zn - zf),0,0,-1,0);
};
kha_math_Matrix4.lookAt = function(eye,at,up) {
	var zaxis = new kha_math_Vector3(at.x - eye.x,at.y - eye.y,at.z - eye.z);
	zaxis.set_length(1);
	var _x = zaxis.y * up.z - zaxis.z * up.y;
	var _y = zaxis.z * up.x - zaxis.x * up.z;
	var _z = zaxis.x * up.y - zaxis.y * up.x;
	var xaxis = new kha_math_Vector3(_x,_y,_z);
	xaxis.set_length(1);
	var yaxis_z;
	var yaxis_y;
	var yaxis_x;
	var _x1 = xaxis.y * zaxis.z - xaxis.z * zaxis.y;
	var _y1 = xaxis.z * zaxis.x - xaxis.x * zaxis.z;
	var _z1 = xaxis.x * zaxis.y - xaxis.y * zaxis.x;
	yaxis_x = _x1;
	yaxis_y = _y1;
	yaxis_z = _z1;
	return new kha_math_Matrix4(xaxis.x,xaxis.y,xaxis.z,-(xaxis.x * eye.x + xaxis.y * eye.y + xaxis.z * eye.z),yaxis_x,yaxis_y,yaxis_z,-(yaxis_x * eye.x + yaxis_y * eye.y + yaxis_z * eye.z),-zaxis.x,-zaxis.y,-zaxis.z,zaxis.x * eye.x + zaxis.y * eye.y + zaxis.z * eye.z,0,0,0,1);
};
kha_math_Matrix4.prototype = {
	__class__: kha_math_Matrix4
};
var kha_math_Quaternion = function(x,y,z,w) {
	if(w == null) {
		w = 1;
	}
	if(z == null) {
		z = 0;
	}
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	this.values = [];
	this.values.push(x);
	this.values.push(y);
	this.values.push(z);
	this.values.push(w);
};
$hxClasses["kha.math.Quaternion"] = kha_math_Quaternion;
kha_math_Quaternion.__name__ = ["kha","math","Quaternion"];
kha_math_Quaternion.fromAxisAngle = function(axis,radians) {
	var q = new kha_math_Quaternion();
	q.set_w(Math.cos(radians / 2.0));
	q.set_x(q.set_y(q.set_z(Math.sin(radians / 2.0))));
	var _g = q;
	_g.set_x(_g.get_x() * axis.x);
	var _g1 = q;
	_g1.set_y(_g1.get_y() * axis.y);
	var _g2 = q;
	_g2.set_z(_g2.get_z() * axis.z);
	return q;
};
kha_math_Quaternion.prototype = {
	slerp: function(t,q) {
		var epsilon = 0.0005;
		var dot = this.dot(q);
		if(dot > 1 - epsilon) {
			var result = q.add(this.sub(q).scaled(t));
			result.normalize();
			return result;
		}
		if(dot < 0) {
			dot = 0;
		}
		if(dot > 1) {
			dot = 1;
		}
		var theta0 = Math.acos(dot);
		var theta = theta0 * t;
		var q2 = q.sub(this.scaled(dot));
		q2.normalize();
		var result1 = this.scaled(Math.cos(theta)).add(q2.scaled(Math.sin(theta)));
		result1.normalize();
		return result1;
	}
	,rotated: function(b) {
		var q = new kha_math_Quaternion();
		q.set_w(this.get_w() * b.get_w() - this.get_x() * b.get_x() - this.get_y() * b.get_y() - this.get_z() * b.get_z());
		q.set_x(this.get_w() * b.get_x() + this.get_x() * b.get_w() + this.get_y() * b.get_z() - this.get_z() * b.get_y());
		q.set_y(this.get_w() * b.get_y() + this.get_y() * b.get_w() + this.get_z() * b.get_x() - this.get_x() * b.get_z());
		q.set_z(this.get_w() * b.get_z() + this.get_z() * b.get_w() + this.get_x() * b.get_y() - this.get_y() * b.get_x());
		q.normalize();
		return q;
	}
	,scaled: function(scale) {
		return new kha_math_Quaternion(this.get_x() * scale,this.get_y() * scale,this.get_z() * scale,this.get_w() * scale);
	}
	,scale: function(scale) {
		this.set_x(this.get_x() * scale);
		this.set_y(this.get_y() * scale);
		this.set_z(this.get_z() * scale);
		this.set_w(this.get_w() * scale);
	}
	,matrix: function() {
		var s = 2.0;
		var xs = this.get_x() * s;
		var ys = this.get_y() * s;
		var zs = this.get_z() * s;
		var wx = this.get_w() * xs;
		var wy = this.get_w() * ys;
		var wz = this.get_w() * zs;
		var xx = this.get_x() * xs;
		var xy = this.get_x() * ys;
		var xz = this.get_x() * zs;
		var yy = this.get_y() * ys;
		var yz = this.get_y() * zs;
		var zz = this.get_z() * zs;
		return new kha_math_Matrix4(1 - (yy + zz),xy - wz,xz + wy,0,xy + wz,1 - (xx + zz),yz - wx,0,xz - wy,yz + wx,1 - (xx + yy),0,0,0,0,1);
	}
	,get: function(index) {
		return this.values[index];
	}
	,set: function(index,value) {
		this.values[index] = value;
	}
	,get_x: function() {
		return this.values[0];
	}
	,set_x: function(value) {
		return this.values[0] = value;
	}
	,get_y: function() {
		return this.values[1];
	}
	,set_y: function(value) {
		return this.values[1] = value;
	}
	,get_z: function() {
		return this.values[2];
	}
	,set_z: function(value) {
		return this.values[2] = value;
	}
	,get_w: function() {
		return this.values[3];
	}
	,set_w: function(value) {
		return this.values[3] = value;
	}
	,get_length: function() {
		return Math.sqrt(this.get_x() * this.get_x() + this.get_y() * this.get_y() + this.get_z() * this.get_z() + this.get_w() * this.get_w());
	}
	,set_length: function(length) {
		if(this.get_length() == 0) {
			return 0;
		}
		var mul = length / this.get_length();
		var _g = this;
		_g.set_x(_g.get_x() * mul);
		var _g1 = this;
		_g1.set_y(_g1.get_y() * mul);
		var _g2 = this;
		_g2.set_z(_g2.get_z() * mul);
		return length;
	}
	,addVector: function(vec) {
		var result = new kha_math_Quaternion(this.get_x(),this.get_y(),this.get_z(),this.get_w());
		var q1 = new kha_math_Quaternion(0,vec.x,vec.y,vec.z);
		q1 = q1.mult(result);
		var _g = result;
		_g.set_x(_g.get_x() + q1.get_x() * 0.5);
		var _g1 = result;
		_g1.set_y(_g1.get_y() + q1.get_y() * 0.5);
		var _g2 = result;
		_g2.set_z(_g2.get_z() + q1.get_z() * 0.5);
		var _g3 = result;
		_g3.set_w(_g3.get_w() + q1.get_w() * 0.5);
		return result;
	}
	,add: function(q) {
		return new kha_math_Quaternion(this.get_x() + q.get_x(),this.get_y() + q.get_y(),this.get_z() + q.get_z(),this.get_w() + q.get_w());
	}
	,sub: function(q) {
		return new kha_math_Quaternion(this.get_x() - q.get_x(),this.get_y() - q.get_y(),this.get_z() - q.get_z(),this.get_w() - q.get_w());
	}
	,mult: function(r) {
		var q = new kha_math_Quaternion();
		q.set_x(this.get_w() * r.get_x() + this.get_x() * r.get_w() + this.get_y() * r.get_z() - this.get_z() * r.get_y());
		q.set_y(this.get_w() * r.get_y() - this.get_x() * r.get_z() + this.get_y() * r.get_w() + this.get_z() * r.get_x());
		q.set_z(this.get_w() * r.get_z() + this.get_x() * r.get_y() - this.get_y() * r.get_x() + this.get_z() * r.get_w());
		q.set_w(this.get_w() * r.get_w() - this.get_x() * r.get_x() - this.get_y() * r.get_y() - this.get_z() * r.get_z());
		return q;
	}
	,normalize: function() {
		this.scale(1.0 / this.get_length());
	}
	,dot: function(q) {
		return this.get_x() * q.get_x() + this.get_y() * q.get_y() + this.get_z() * q.get_z() + this.get_w() * q.get_w();
	}
	,getEulerAngles: function(A1,A2,A3,S,D) {
		if(D == null) {
			D = 1;
		}
		if(S == null) {
			S = 1;
		}
		var result = new kha_math_Vector3();
		var Q = [];
		Q[0] = this.get_x();
		Q[1] = this.get_y();
		Q[2] = this.get_z();
		var ww = this.get_w() * this.get_w();
		var Q11 = Q[A1] * Q[A1];
		var Q22 = Q[A2] * Q[A2];
		var Q33 = Q[A3] * Q[A3];
		var psign = -1;
		var SingularityRadius = 0.0000001;
		var PiOver2 = Math.PI / 2.0;
		if((A1 + 1) % 3 == A2 && (A2 + 1) % 3 == A3) {
			psign = 1;
		}
		var s2 = psign * 2.0 * (psign * this.get_w() * Q[A2] + Q[A1] * Q[A3]);
		if(s2 < -1 + SingularityRadius) {
			result.x = 0;
			result.y = -S * D * PiOver2;
			result.z = S * D * Math.atan2(2 * (psign * Q[A1] * Q[A2] + this.get_w() * Q[A3]),ww + Q22 - Q11 - Q33);
		} else if(s2 > 1 - SingularityRadius) {
			result.x = 0;
			result.y = S * D * PiOver2;
			result.z = S * D * Math.atan2(2 * (psign * Q[A1] * Q[A2] + this.get_w() * Q[A3]),ww + Q22 - Q11 - Q33);
		} else {
			result.x = -S * D * Math.atan2(-2 * (this.get_w() * Q[A1] - psign * Q[A2] * Q[A3]),ww + Q33 - Q11 - Q22);
			result.y = S * D * Math.asin(s2);
			result.z = S * D * Math.atan2(2 * (this.get_w() * Q[A3] - psign * Q[A1] * Q[A2]),ww + Q11 - Q22 - Q33);
		}
		return result;
	}
	,__class__: kha_math_Quaternion
	,__properties__: {set_length:"set_length",get_length:"get_length",set_w:"set_w",get_w:"get_w",set_z:"set_z",get_z:"get_z",set_y:"set_y",get_y:"get_y",set_x:"set_x",get_x:"get_x"}
};
var kha_math_Vector2 = function(x,y) {
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	this.x = x;
	this.y = y;
};
$hxClasses["kha.math.Vector2"] = kha_math_Vector2;
kha_math_Vector2.__name__ = ["kha","math","Vector2"];
kha_math_Vector2.prototype = {
	get_length: function() {
		return Math.sqrt(this.x * this.x + this.y * this.y);
	}
	,set_length: function(length) {
		var currentLength = this.get_length();
		if(currentLength == 0) {
			return 0;
		}
		var mul = length / currentLength;
		this.x *= mul;
		this.y *= mul;
		return length;
	}
	,__class__: kha_math_Vector2
	,__properties__: {set_length:"set_length",get_length:"get_length"}
};
var kha_math_Vector3 = function(x,y,z) {
	if(z == null) {
		z = 0;
	}
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	this.x = x;
	this.y = y;
	this.z = z;
};
$hxClasses["kha.math.Vector3"] = kha_math_Vector3;
kha_math_Vector3.__name__ = ["kha","math","Vector3"];
kha_math_Vector3.prototype = {
	get_length: function() {
		return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);
	}
	,set_length: function(length) {
		var currentLength = this.get_length();
		if(currentLength == 0) {
			return 0;
		}
		var mul = length / currentLength;
		this.x *= mul;
		this.y *= mul;
		this.z *= mul;
		return length;
	}
	,__class__: kha_math_Vector3
	,__properties__: {set_length:"set_length",get_length:"get_length"}
};
var kha_math_Vector4 = function(x,y,z,w) {
	if(w == null) {
		w = 1;
	}
	if(z == null) {
		z = 0;
	}
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	this.x = x;
	this.y = y;
	this.z = z;
	this.w = w;
};
$hxClasses["kha.math.Vector4"] = kha_math_Vector4;
kha_math_Vector4.__name__ = ["kha","math","Vector4"];
kha_math_Vector4.prototype = {
	get_length: function() {
		return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);
	}
	,set_length: function(length) {
		var currentLength = this.get_length();
		if(currentLength == 0) {
			return 0;
		}
		var mul = length / currentLength;
		this.x *= mul;
		this.y *= mul;
		this.z *= mul;
		this.w *= mul;
		return length;
	}
	,__class__: kha_math_Vector4
	,__properties__: {set_length:"set_length",get_length:"get_length"}
};
var kha_network_Client = function() { };
$hxClasses["kha.network.Client"] = kha_network_Client;
kha_network_Client.__name__ = ["kha","network","Client"];
kha_network_Client.prototype = {
	__class__: kha_network_Client
	,__properties__: {get_id:"get_id"}
};
var kha_network_ControllerBuilder = function() { };
$hxClasses["kha.network.ControllerBuilder"] = kha_network_ControllerBuilder;
kha_network_ControllerBuilder.__name__ = ["kha","network","ControllerBuilder"];
var kha_network_Entity = function() { };
$hxClasses["kha.network.Entity"] = kha_network_Entity;
kha_network_Entity.__name__ = ["kha","network","Entity"];
kha_network_Entity.prototype = {
	__class__: kha_network_Entity
};
var kha_network_LocalClient = function(id) {
	this.myId = id;
};
$hxClasses["kha.network.LocalClient"] = kha_network_LocalClient;
kha_network_LocalClient.__name__ = ["kha","network","LocalClient"];
kha_network_LocalClient.__interfaces__ = [kha_network_Client];
kha_network_LocalClient.prototype = {
	send: function(bytes,mandatory) {
	}
	,receive: function(receiver) {
	}
	,onClose: function(close) {
	}
	,get_controllers: function() {
		return null;
	}
	,get_id: function() {
		return this.myId;
	}
	,__class__: kha_network_LocalClient
	,__properties__: {get_id:"get_id",get_controllers:"get_controllers"}
};
var kha_network_Network = function(url,port,errorCallback,closeCallback) {
	this.open = false;
	var _gthis = this;
	this.socket = new WebSocket("ws://" + url + ":" + port);
	this.socket.onerror = function(error) {
		haxe_Log.trace("Network error: " + error,{ fileName : "Network.hx", lineNumber : 14, className : "kha.network.Network", methodName : "new"});
		errorCallback();
	};
	this.socket.binaryType = "arraybuffer";
	this.socket.onopen = function() {
		_gthis.open = true;
	};
	this.socket.onclose = function(event) {
		haxe_Log.trace("Network connection closed",{ fileName : "Network.hx", lineNumber : 22, className : "kha.network.Network", methodName : "new"});
		closeCallback();
	};
};
$hxClasses["kha.network.Network"] = kha_network_Network;
kha_network_Network.__name__ = ["kha","network","Network"];
kha_network_Network.prototype = {
	send: function(bytes,mandatory) {
		if(this.open) {
			this.socket.send(bytes.b.bufferValue);
		}
	}
	,listen: function(listener) {
		this.socket.onmessage = function(message) {
			var tmp = haxe_io_Bytes.ofData(message.data);
			listener(tmp);
		};
	}
	,__class__: kha_network_Network
};
var kha_network_State = function(time,data) {
	this.time = time;
	this.data = data;
};
$hxClasses["kha.network.State"] = kha_network_State;
kha_network_State.__name__ = ["kha","network","State"];
kha_network_State.prototype = {
	__class__: kha_network_State
};
var kha_network_Session = function(maxPlayers,address,port) {
	this.ping = 1;
	this.currentPlayers = 0;
	this.controllers = new haxe_ds_IntMap();
	this.entities = new haxe_ds_IntMap();
	kha_network_Session.instance = this;
	this.maxPlayers = maxPlayers;
	this.address = address;
	this.port = port;
};
$hxClasses["kha.network.Session"] = kha_network_Session;
kha_network_Session.__name__ = ["kha","network","Session"];
kha_network_Session.the = function() {
	return kha_network_Session.instance;
};
kha_network_Session.prototype = {
	get_me: function() {
		return this.localClient;
	}
	,addEntity: function(entity) {
		var this1 = this.entities;
		var key = entity._id();
		this1.h[key] = entity;
	}
	,addController: function(controller) {
		haxe_Log.trace("Adding controller id " + controller._id(),{ fileName : "Session.hx", lineNumber : 88, className : "kha.network.Session", methodName : "addController"});
		controller._inputBufferIndex = 0;
		var this1 = this.controllers;
		var key = controller._id();
		this1.h[key] = controller;
	}
	,sendControllerUpdate: function(id,bytes) {
		if(this.controllers.h.hasOwnProperty(id)) {
			if(this.controllers.h[id]._inputBuffer.length < this.controllers.h[id]._inputBufferIndex + 4 + bytes.length) {
				var newBuffer = new haxe_io_Bytes(new ArrayBuffer(this.controllers.h[id]._inputBufferIndex + 4 + bytes.length));
				newBuffer.blit(0,this.controllers.h[id]._inputBuffer,0,this.controllers.h[id]._inputBufferIndex);
				this.controllers.h[id]._inputBuffer = newBuffer;
			}
			this.controllers.h[id]._inputBuffer.setInt32(this.controllers.h[id]._inputBufferIndex,bytes.length);
			this.controllers.h[id]._inputBuffer.blit(this.controllers.h[id]._inputBufferIndex + 4,bytes,0,bytes.length);
			this.controllers.h[id]._inputBufferIndex += 4 + bytes.length;
		}
	}
	,sendPing: function() {
		var bytes = new haxe_io_Bytes(new ArrayBuffer(5));
		bytes.b[0] = 4;
		bytes.setFloat(1,kha_Scheduler.realTime());
		this.sendToServer(bytes);
	}
	,sendPlayerUpdate: function() {
	}
	,receive: function(bytes,client) {
		var _g = bytes.b[0];
		switch(_g) {
		case 0:
			var index = bytes.b[1];
			this.localClient = new kha_network_LocalClient(index);
			kha_Scheduler.resetTime();
			this.startCallback();
			break;
		case 1:
			var time = bytes.getDouble(1);
			var offset = 9;
			var entity = this.entities.iterator();
			while(entity.hasNext()) {
				var entity1 = entity.next();
				entity1._receive(offset,bytes);
				offset += entity1._size();
			}
			kha_Scheduler.back(time);
			break;
		case 3:
			var _g1 = bytes.b[1];
			switch(_g1) {
			case 0:
				break;
			case 1:
				this.executeRPC(bytes);
				break;
			}
			break;
		case 4:
			var sendTime = bytes.getFloat(1);
			this.ping = kha_Scheduler.realTime() - sendTime;
			break;
		case 5:
			this.refusedCallback();
			break;
		case 6:
			this.currentPlayers = bytes.getInt32(1);
			break;
		}
	}
	,executeRPC: function(bytes) {
		var args = [];
		var syncId = bytes.getInt32(2);
		var index = 6;
		var classnamelength = bytes.getUInt16(index);
		index += 2;
		var classname = "";
		var _g1 = 0;
		var _g = classnamelength;
		while(_g1 < _g) {
			var i = _g1++;
			classname += String.fromCharCode(bytes.b[index]);
			++index;
		}
		var methodnamelength = bytes.getUInt16(index);
		index += 2;
		var methodname = "";
		var _g11 = 0;
		var _g2 = methodnamelength;
		while(_g11 < _g2) {
			var i1 = _g11++;
			methodname += String.fromCharCode(bytes.b[index]);
			++index;
		}
		while(index < bytes.length) {
			var type = bytes.b[index];
			++index;
			switch(type) {
			case 66:
				var value = bytes.b[index] == 1;
				++index;
				haxe_Log.trace("Bool: " + (value == null ? "null" : "" + value),{ fileName : "Session.hx", lineNumber : 288, className : "kha.network.Session", methodName : "executeRPC"});
				args.push(value);
				break;
			case 70:
				var value1 = bytes.getDouble(index);
				index += 8;
				haxe_Log.trace("Float: " + value1,{ fileName : "Session.hx", lineNumber : 293, className : "kha.network.Session", methodName : "executeRPC"});
				args.push(value1);
				break;
			case 73:
				var value2 = bytes.getInt32(index);
				index += 4;
				haxe_Log.trace("Int: " + value2,{ fileName : "Session.hx", lineNumber : 298, className : "kha.network.Session", methodName : "executeRPC"});
				args.push(value2);
				break;
			case 83:
				var length = bytes.getUInt16(index);
				index += 2;
				var str = "";
				var _g12 = 0;
				var _g3 = length;
				while(_g12 < _g3) {
					var i2 = _g12++;
					str += String.fromCharCode(bytes.b[index]);
					++index;
				}
				haxe_Log.trace("String: " + str,{ fileName : "Session.hx", lineNumber : 308, className : "kha.network.Session", methodName : "executeRPC"});
				args.push(str);
				break;
			default:
				haxe_Log.trace("Unknown argument type.",{ fileName : "Session.hx", lineNumber : 311, className : "kha.network.Session", methodName : "executeRPC"});
			}
		}
		if(syncId == -1) {
			Reflect.field(Type.resolveClass(classname),methodname + "_remotely").apply(null,args);
		} else {
			var o = kha_network_SyncBuilder.objects[syncId];
			Reflect.field(kha_network_SyncBuilder.objects[syncId],methodname + "_remotely").apply(o,args);
		}
	}
	,waitForStart: function(callback,refuseCallback,errorCallback,closeCallback,resCallback) {
		var _gthis = this;
		this.startCallback = callback;
		this.refusedCallback = refuseCallback;
		this.resetCallback = resCallback;
		this.network = new kha_network_Network(this.address,this.port,errorCallback,function() {
			closeCallback();
			_gthis.reset();
		});
		this.network.listen(function(bytes) {
			_gthis.receive(bytes);
		});
		this.updateTaskId = kha_Scheduler.addFrameTask($bind(this,this.update),0);
		this.ping = 1;
		this.pingTaskId = kha_Scheduler.addTimeTask($bind(this,this.sendPing),0,1);
	}
	,reset: function() {
		kha_Scheduler.removeFrameTask(this.updateTaskId);
		kha_Scheduler.removeTimeTask(this.pingTaskId);
		this.currentPlayers = 0;
		this.ping = 1;
		this.controllers = new haxe_ds_IntMap();
		this.entities = new haxe_ds_IntMap();
		this.resetCallback();
	}
	,update: function() {
		var controller = this.controllers.iterator();
		while(controller.hasNext()) {
			var controller1 = controller.next();
			if(controller1._inputBufferIndex > 0) {
				var bytes = new haxe_io_Bytes(new ArrayBuffer(22 + controller1._inputBufferIndex));
				bytes.b[0] = 2;
				bytes.setInt32(1,controller1._id());
				bytes.setDouble(5,kha_Scheduler.realTime());
				bytes.setInt32(13,kha_System.windowWidth(0));
				bytes.setInt32(17,kha_System.windowHeight(0));
				var v = kha_System.get_screenRotation()[1];
				bytes.b[21] = v & 255;
				bytes.blit(22,controller1._inputBuffer,0,controller1._inputBufferIndex);
				this.sendToServer(bytes);
				controller1._inputBufferIndex = 0;
			}
		}
	}
	,sendToServer: function(bytes) {
		this.network.send(bytes,false);
	}
	,__class__: kha_network_Session
	,__properties__: {get_me:"get_me"}
};
var kha_network_SyncBuilder = function() { };
$hxClasses["kha.network.SyncBuilder"] = kha_network_SyncBuilder;
kha_network_SyncBuilder.__name__ = ["kha","network","SyncBuilder"];
var kha_simd_Float32x4 = function(_0,_1,_2,_3) {
	this._0 = _0;
	this._1 = _1;
	this._2 = _2;
	this._3 = _3;
};
$hxClasses["kha.simd.Float32x4"] = kha_simd_Float32x4;
kha_simd_Float32x4.__name__ = ["kha","simd","Float32x4"];
kha_simd_Float32x4.create = function() {
	return new kha_simd_Float32x4(0,0,0,0);
};
kha_simd_Float32x4.loadAllFast = function(t) {
	return new kha_simd_Float32x4(t,t,t,t);
};
kha_simd_Float32x4.load = function(a,b,c,d) {
	return new kha_simd_Float32x4(a,b,c,d);
};
kha_simd_Float32x4.loadFast = function(a,b,c,d) {
	return new kha_simd_Float32x4(a,b,c,d);
};
kha_simd_Float32x4.get = function(t,index) {
	var value = 0;
	switch(index) {
	case 0:
		value = t._0;
		break;
	case 1:
		value = t._1;
		break;
	case 2:
		value = t._2;
		break;
	case 3:
		value = t._3;
		break;
	}
	return value;
};
kha_simd_Float32x4.getFast = function(t,index) {
	switch(index) {
	case 0:
		return t._0;
	case 1:
		return t._1;
	case 2:
		return t._2;
	case 3:
		return t._3;
	}
	return 0;
};
kha_simd_Float32x4.abs = function(t) {
	return new kha_simd_Float32x4(Math.abs(t._0),Math.abs(t._1),Math.abs(t._2),Math.abs(t._3));
};
kha_simd_Float32x4.add = function(a,b) {
	return new kha_simd_Float32x4(a._0 + b._0,a._1 + b._1,a._2 + b._2,a._3 + b._3);
};
kha_simd_Float32x4.div = function(a,b) {
	return new kha_simd_Float32x4(a._0 / b._0,a._1 / b._1,a._2 / b._2,a._3 / b._3);
};
kha_simd_Float32x4.mul = function(a,b) {
	return new kha_simd_Float32x4(a._0 * b._0,a._1 * b._1,a._2 * b._2,a._3 * b._3);
};
kha_simd_Float32x4.neg = function(t) {
	return new kha_simd_Float32x4(-t._0,-t._1,-t._2,-t._3);
};
kha_simd_Float32x4.reciprocalApproximation = function(t) {
	return new kha_simd_Float32x4(0,0,0,0);
};
kha_simd_Float32x4.reciprocalSqrtApproximation = function(t) {
	return new kha_simd_Float32x4(0,0,0,0);
};
kha_simd_Float32x4.sub = function(a,b) {
	return new kha_simd_Float32x4(a._0 - b._0,a._1 - b._1,a._2 - b._2,a._3 - b._3);
};
kha_simd_Float32x4.sqrt = function(t) {
	return new kha_simd_Float32x4(Math.sqrt(t._0),Math.sqrt(t._1),Math.sqrt(t._2),Math.sqrt(t._3));
};
kha_simd_Float32x4.prototype = {
	__class__: kha_simd_Float32x4
};
var kha_vr_Pose = function() {
	this.Orientation = new kha_math_Quaternion();
	this.Position = new kha_math_Vector3();
};
$hxClasses["kha.vr.Pose"] = kha_vr_Pose;
kha_vr_Pose.__name__ = ["kha","vr","Pose"];
kha_vr_Pose.prototype = {
	__class__: kha_vr_Pose
};
var kha_vr_PoseState = function() {
};
$hxClasses["kha.vr.PoseState"] = kha_vr_PoseState;
kha_vr_PoseState.__name__ = ["kha","vr","PoseState"];
kha_vr_PoseState.prototype = {
	__class__: kha_vr_PoseState
};
var kha_vr_SensorState = function() {
};
$hxClasses["kha.vr.SensorState"] = kha_vr_SensorState;
kha_vr_SensorState.__name__ = ["kha","vr","SensorState"];
kha_vr_SensorState.prototype = {
	__class__: kha_vr_SensorState
};
var kha_vr_TimeWarpImage = function() {
};
$hxClasses["kha.vr.TimeWarpImage"] = kha_vr_TimeWarpImage;
kha_vr_TimeWarpImage.__name__ = ["kha","vr","TimeWarpImage"];
kha_vr_TimeWarpImage.prototype = {
	__class__: kha_vr_TimeWarpImage
};
var kha_vr_TimeWarpParms = function() {
};
$hxClasses["kha.vr.TimeWarpParms"] = kha_vr_TimeWarpParms;
kha_vr_TimeWarpParms.__name__ = ["kha","vr","TimeWarpParms"];
kha_vr_TimeWarpParms.prototype = {
	__class__: kha_vr_TimeWarpParms
};
function $iterator(o) { if( o instanceof Array ) return function() { return HxOverrides.iter(o); }; return typeof(o.iterator) == 'function' ? $bind(o,o.iterator) : o.iterator; }
var $_, $fid = 0;
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $fid++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = function(){ return f.method.apply(f.scope, arguments); }; f.scope = o; f.method = m; o.hx__closures__[m.__id__] = f; } return f; }
$hxClasses["Math"] = Math;
String.prototype.__class__ = $hxClasses["String"] = String;
String.__name__ = ["String"];
$hxClasses["Array"] = Array;
Array.__name__ = ["Array"];
Date.prototype.__class__ = $hxClasses["Date"] = Date;
Date.__name__ = ["Date"];
var Int = $hxClasses["Int"] = { __name__ : ["Int"]};
var Dynamic = $hxClasses["Dynamic"] = { __name__ : ["Dynamic"]};
var Float = $hxClasses["Float"] = Number;
Float.__name__ = ["Float"];
var Bool = $hxClasses["Bool"] = Boolean;
Bool.__ename__ = ["Bool"];
var Class = $hxClasses["Class"] = { __name__ : ["Class"]};
var Enum = { };
var __map_reserved = {}
var ArrayBuffer = $global.ArrayBuffer || js_html_compat_ArrayBuffer;
if(ArrayBuffer.prototype.slice == null) {
	ArrayBuffer.prototype.slice = js_html_compat_ArrayBuffer.sliceImpl;
}
var DataView = $global.DataView || js_html_compat_DataView;
var Float32Array = $global.Float32Array || js_html_compat_Float32Array._new;
var Uint8Array = $global.Uint8Array || js_html_compat_Uint8Array._new;
Main.projectName = "vrisland";
Main.projectPackage = "arm";
Main.projectAssets = 13;
Main.projectWidth = 960;
Main.projectHeight = 540;
Main.projectSamplesPerPixel = 4;
Main.projectScene = "Scene";
armory_data_ConstData.ltc_mat = [0.000200,-0.000000,1.000000,-0.000000,0.000504,-0.000000,1.000000,-0.000000,0.002016,-0.000000,1.000000,-0.000000,0.004535,-0.000000,1.000000,-0.000000,0.008063,-0.000000,1.000000,-0.000000,0.012598,-0.000000,1.000000,-0.000000,0.018141,-0.000000,1.000000,-0.000000,0.024692,-0.000000,1.000000,-0.000000,0.032252,-0.000000,1.000000,-0.000000,0.040821,-0.000000,1.000000,-0.000000,0.050400,-0.000000,1.000000,-0.000000,0.060989,-0.000000,1.000000,-0.000000,0.072591,-0.000000,1.000000,-0.000000,0.085206,-0.000000,1.000000,-0.000000,0.098836,-0.000000,1.000000,-0.000000,0.113483,-0.000000,1.000000,-0.000000,0.129147,-0.000000,1.000000,-0.000000,0.145828,-0.000000,1.000000,-0.000000,0.163499,-0.000000,1.000000,-0.000000,0.181972,-0.000000,1.000000,-0.000000,0.199498,-0.000000,1.000000,-0.000000,0.220031,-0.000000,1.000000,-0.000000,0.241588,-0.000000,1.000000,-0.000000,0.264120,-0.000000,1.000000,-0.000000,0.287521,-0.000000,1.000000,-0.000000,0.311478,-0.000000,1.000000,-0.000000,0.335127,-0.000000,1.000000,-0.000000,0.359811,-0.000000,1.000000,-0.000000,0.386446,-0.000000,1.000000,-0.000000,0.413161,-0.000000,1.000000,-0.000000,0.439142,-0.000000,1.000000,-0.000000,0.467039,-0.000000,1.000000,-0.000000,0.495170,-0.000000,1.000000,-0.000000,0.522324,-0.000000,1.000000,-0.000000,0.551482,-0.000000,1.000000,-0.000000,0.579621,-0.000000,1.000000,-0.000000,0.608255,-0.000000,1.000000,-0.000000,0.636515,-0.000000,1.000000,-0.000000,0.664835,-0.000000,1.000000,-0.000000,0.692549,-0.000000,1.000000,-0.000000,0.720375,-0.000000,1.000000,-0.000000,0.747238,-0.000000,1.000000,-0.000000,0.773956,-0.000000,1.000000,-0.000000,0.799879,-0.000000,1.000000,-0.000000,0.824889,-0.000000,1.000000,-0.000000,0.849357,-0.000000,1.000000,-0.000000,0.873016,-0.000000,1.000000,-0.000000,0.895670,-0.000000,1.000000,-0.000000,0.917194,-0.000000,1.000000,-0.000000,0.937978,-0.000000,1.000000,-0.000000,0.957872,-0.000000,1.000000,-0.000000,0.976736,-0.000000,1.000000,-0.000000,0.994433,-0.000000,1.000000,-0.000000,1.011206,-0.000000,1.000000,-0.000000,1.026820,-0.000000,1.000000,-0.000000,1.041720,-0.000000,1.000000,-0.000000,1.055657,-0.000000,1.000000,-0.000000,1.068642,-0.000000,1.000000,-0.000000,1.080646,-0.000000,1.000000,-0.000000,1.091637,-0.000000,1.000000,-0.000000,1.101837,-0.000000,1.000000,-0.000000,1.111292,-0.000000,1.000000,-0.000000,1.120025,-0.000000,1.000000,-0.000000,1.127918,-0.000000,1.000000,-0.000000,0.000200,-0.000005,1.000623,0.024938,0.000504,-0.000013,1.000643,0.024938,0.002016,-0.000050,1.000618,0.024938,0.004535,-0.000113,1.000621,0.024938,0.008063,-0.000201,1.000746,0.024938,0.012596,-0.000314,1.000463,0.024937,0.018140,-0.000452,1.000511,0.024939,0.024693,-0.000616,1.000541,0.024938,0.032253,-0.000804,1.000684,0.024938,0.040815,-0.001018,1.000524,0.024940,0.050399,-0.001257,1.000582,0.024937,0.060989,-0.001521,1.000655,0.024937,0.072591,-0.001810,1.000608,0.024938,0.085204,-0.002125,1.000622,0.024939,0.098835,-0.002465,1.000632,0.024937,0.113483,-0.002830,1.000640,0.024939,0.129143,-0.003220,1.000568,0.024938,0.145830,-0.003633,1.000635,0.024938,0.163497,-0.004062,1.000626,0.024938,0.181956,-0.004424,1.000612,0.024924,0.199791,-0.004593,1.000627,0.024890,0.220029,-0.005480,1.000594,0.024935,0.241586,-0.006010,1.000616,0.024933,0.264115,-0.006550,1.000607,0.024927,0.287514,-0.007072,1.000595,0.024909,0.311455,-0.007472,1.000616,0.024872,0.335083,-0.007491,1.000589,0.024755,0.359805,-0.008810,1.000601,0.024877,0.386438,-0.009282,1.000640,0.024824,0.413131,-0.009534,1.000599,0.024708,0.439249,-0.009701,1.000497,0.024573,0.466997,-0.010878,1.000467,0.024652,0.495138,-0.010959,1.000539,0.024455,0.522654,-0.011386,1.000518,0.024318,0.551415,-0.012022,1.000533,0.024216,0.579610,-0.011805,1.000495,0.023867,0.608185,-0.012773,1.000474,0.023834,0.636492,-0.012377,1.000488,0.023327,0.664826,-0.013172,1.000576,0.023205,0.692674,-0.012847,1.000505,0.022708,0.720341,-0.013141,1.000424,0.022349,0.747373,-0.013227,1.000449,0.021871,0.773980,-0.012739,1.000478,0.021171,0.799839,-0.012999,1.000396,0.020606,0.825113,-0.012727,1.000425,0.020006,0.849579,-0.012170,1.000469,0.019089,0.873046,-0.011855,1.000411,0.018291,0.895777,-0.011711,1.000426,0.017534,0.917518,-0.011107,1.000373,0.016542,0.938264,-0.010439,1.000322,0.015512,0.958032,-0.009807,1.000324,0.014491,0.976838,-0.009268,1.000341,0.013468,0.994631,-0.008662,1.000318,0.012376,1.011434,-0.007923,1.000289,0.011187,1.027169,-0.007132,1.000216,0.010078,1.041929,-0.006332,1.000096,0.008924,1.055767,-0.005554,1.000156,0.007770,1.068595,-0.004811,1.000084,0.006611,1.080612,-0.003950,1.000047,0.005485,1.091785,-0.003174,1.000109,0.004352,1.101998,-0.002363,1.000029,0.003180,1.111423,-0.001552,0.999985,0.002091,1.120007,-0.000786,0.999947,0.000991,1.127918,0.000004,1.000000,-0.000004,0.000200,-0.000010,1.002495,0.049907,0.000504,-0.000025,1.002476,0.049908,0.002016,-0.000101,1.002500,0.049908,0.004535,-0.000226,1.002487,0.049908,0.008062,-0.000402,1.002364,0.049908,0.012598,-0.000629,1.002412,0.049908,0.018140,-0.000905,1.002379,0.049908,0.024691,-0.001232,1.002490,0.049907,0.032251,-0.001610,1.002398,0.049908,0.040821,-0.002037,1.002392,0.049908,0.050398,-0.002515,1.002431,0.049907,0.060989,-0.003044,1.002475,0.049908,0.072592,-0.003623,1.002546,0.049907,0.085204,-0.004252,1.002467,0.049907,0.098832,-0.004932,1.002450,0.049908,0.113481,-0.005663,1.002482,0.049907,0.129145,-0.006443,1.002443,0.049907,0.145825,-0.007271,1.002495,0.049906,0.163491,-0.008128,1.002475,0.049903,0.181911,-0.008826,1.002459,0.049879,0.200065,-0.009285,1.002443,0.049824,0.220025,-0.010966,1.002450,0.049897,0.241581,-0.012025,1.002463,0.049893,0.264099,-0.013105,1.002395,0.049881,0.287493,-0.014145,1.002390,0.049855,0.311399,-0.014925,1.002414,0.049769,0.335096,-0.015239,1.002363,0.049591,0.359815,-0.017559,1.002415,0.049777,0.386365,-0.018554,1.002354,0.049675,0.413017,-0.019043,1.002297,0.049444,0.439519,-0.019815,1.002284,0.049253,0.466938,-0.021741,1.002307,0.049327,0.494999,-0.021887,1.002181,0.048922,0.522922,-0.022844,1.002107,0.048677,0.551270,-0.024014,1.002101,0.048478,0.579771,-0.024156,1.002060,0.047904,0.608156,-0.025317,1.002077,0.047594,0.636662,-0.025321,1.001975,0.046876,0.664846,-0.026018,1.001992,0.046354,0.692877,-0.026041,1.001846,0.045504,0.720316,-0.026252,1.001846,0.044655,0.747658,-0.026159,1.001931,0.043670,0.774252,-0.026086,1.001845,0.042515,0.800179,-0.025653,1.001794,0.041211,0.825525,-0.025170,1.001787,0.039823,0.850013,-0.024788,1.001806,0.038409,0.873593,-0.023992,1.001688,0.036767,0.896343,-0.022985,1.001666,0.034900,0.918062,-0.022005,1.001548,0.033010,0.938928,-0.021110,1.001503,0.031143,0.958667,-0.019893,1.001341,0.029059,0.977457,-0.018546,1.001194,0.026888,0.995243,-0.017152,1.001095,0.024713,1.012023,-0.015750,1.001100,0.022496,1.027614,-0.014289,1.000851,0.020153,1.042389,-0.012688,1.000724,0.017839,1.056161,-0.011118,1.000572,0.015529,1.068968,-0.009540,1.000407,0.013240,1.080866,-0.007963,1.000258,0.010940,1.091944,-0.006416,1.000254,0.008716,1.102104,-0.004771,1.000175,0.006434,1.111571,-0.003056,1.000148,0.004169,1.120084,-0.001458,1.000050,0.002033,1.127981,0.000021,0.999987,-0.000027,0.000200,-0.000015,1.005620,0.074940,0.000504,-0.000038,1.005650,0.074939,0.002016,-0.000151,1.005613,0.074939,0.004535,-0.000340,1.005618,0.074939,0.008062,-0.000604,1.005614,0.074939,0.012597,-0.000944,1.005616,0.074940,0.018141,-0.001359,1.005558,0.074939,0.024695,-0.001851,1.005495,0.074940,0.032253,-0.002417,1.005616,0.074939,0.040822,-0.003059,1.005591,0.074940,0.050399,-0.003777,1.005596,0.074940,0.060989,-0.004570,1.005599,0.074939,0.072591,-0.005440,1.005616,0.074940,0.085203,-0.006385,1.005616,0.074939,0.098833,-0.007406,1.005595,0.074938,0.113481,-0.008502,1.005605,0.074938,0.129147,-0.009674,1.005605,0.074937,0.145817,-0.010916,1.005513,0.074937,0.163485,-0.012199,1.005579,0.074928,0.181824,-0.013172,1.005552,0.074885,0.200274,-0.014100,1.005524,0.074825,0.220017,-0.016464,1.005529,0.074928,0.241568,-0.018052,1.005490,0.074914,0.264084,-0.019671,1.005457,0.074898,0.287450,-0.021217,1.005431,0.074860,0.311281,-0.022341,1.005395,0.074717,0.335228,-0.023296,1.005320,0.074526,0.360047,-0.025965,1.005302,0.074649,0.386273,-0.027808,1.005285,0.074575,0.412855,-0.028504,1.005167,0.074237,0.439705,-0.030007,1.005129,0.074013,0.466975,-0.032263,1.005082,0.073967,0.494874,-0.032931,1.004960,0.073475,0.523066,-0.034348,1.004834,0.073084,0.551198,-0.035739,1.004806,0.072657,0.579889,-0.036575,1.004687,0.072029,0.608282,-0.037434,1.004605,0.071309,0.636812,-0.038323,1.004589,0.070507,0.665010,-0.038676,1.004403,0.069424,0.693063,-0.039237,1.004340,0.068370,0.720750,-0.039332,1.004224,0.066988,0.747911,-0.039179,1.004117,0.065447,0.774576,-0.039110,1.004035,0.063838,0.800737,-0.038542,1.004027,0.061923,0.825966,-0.037966,1.003825,0.059859,0.850534,-0.036943,1.003786,0.057529,0.874289,-0.035853,1.003560,0.055081,0.897152,-0.034730,1.003549,0.052476,0.919029,-0.033242,1.003454,0.049647,0.939851,-0.031508,1.003215,0.046670,0.959599,-0.029695,1.002916,0.043588,0.978293,-0.027845,1.002720,0.040401,0.996085,-0.025775,1.002445,0.037060,1.012768,-0.023607,1.002133,0.033726,1.028404,-0.021374,1.001822,0.030217,1.043150,-0.019108,1.001602,0.026820,1.056760,-0.016823,1.001274,0.023372,1.069471,-0.014378,1.000964,0.019891,1.081283,-0.011884,1.000684,0.016405,1.092238,-0.009398,1.000514,0.012950,1.102384,-0.007030,1.000319,0.009579,1.111737,-0.004751,1.000225,0.006384,1.120274,-0.002404,1.000046,0.003192,1.128182,0.000031,1.000020,0.000033,0.000200,-0.000020,1.010006,0.100065,0.000504,-0.000050,1.009927,0.100065,0.002016,-0.000202,1.010026,0.100064,0.004535,-0.000454,1.010018,0.100065,0.008062,-0.000807,1.009891,0.100064,0.012599,-0.001261,1.010175,0.100064,0.018141,-0.001815,1.010067,0.100065,0.024692,-0.002471,1.010014,0.100066,0.032251,-0.003227,1.009950,0.100065,0.040818,-0.004084,1.009963,0.100067,0.050401,-0.005043,1.010032,0.100064,0.060988,-0.006102,1.009979,0.100064,0.072588,-0.007263,1.009984,0.100063,0.085205,-0.008525,1.010023,0.100063,0.098832,-0.009888,1.009960,0.100062,0.113479,-0.011352,1.009974,0.100063,0.129142,-0.012916,1.009945,0.100062,0.145817,-0.014573,1.009924,0.100058,0.163468,-0.016276,1.009912,0.100050,0.181674,-0.017411,1.009859,0.099975,0.200435,-0.019002,1.009842,0.099932,0.220005,-0.021978,1.009820,0.100043,0.241550,-0.024096,1.009778,0.100031,0.264058,-0.026250,1.009765,0.100002,0.287399,-0.028286,1.009724,0.099939,0.311134,-0.029698,1.009596,0.099748,0.335350,-0.031442,1.009508,0.099582,0.360295,-0.034401,1.009475,0.099613,0.386112,-0.037030,1.009329,0.099558,0.412733,-0.038163,1.009250,0.099137,0.439833,-0.040250,1.009125,0.098866,0.467099,-0.042583,1.009011,0.098626,0.494828,-0.044299,1.008803,0.098149,0.523217,-0.045876,1.008712,0.097600,0.551338,-0.047440,1.008509,0.096929,0.579917,-0.048995,1.008371,0.096178,0.608454,-0.049901,1.008212,0.095145,0.636785,-0.051224,1.007963,0.094151,0.665220,-0.051675,1.007741,0.092728,0.693194,-0.052278,1.007616,0.091195,0.721008,-0.052406,1.007327,0.089384,0.748196,-0.052529,1.007219,0.087461,0.774975,-0.051950,1.006851,0.085133,0.801129,-0.051456,1.006732,0.082628,0.826668,-0.050569,1.006612,0.079817,0.851291,-0.049328,1.006374,0.076710,0.875056,-0.047988,1.006183,0.073481,0.897872,-0.046149,1.005742,0.069943,0.919803,-0.044144,1.005514,0.066151,0.940701,-0.042095,1.005153,0.062247,0.960580,-0.039730,1.004843,0.058158,0.979427,-0.037104,1.004535,0.053850,0.997157,-0.034369,1.004023,0.049403,1.013777,-0.031555,1.003622,0.044944,1.029452,-0.028571,1.003212,0.040414,1.044029,-0.025416,1.002698,0.035723,1.057586,-0.022217,1.002202,0.031072,1.070148,-0.019037,1.001703,0.026429,1.081875,-0.015936,1.001322,0.021896,1.092789,-0.012734,1.001053,0.017288,1.102704,-0.009454,1.000604,0.012841,1.112011,-0.006199,1.000387,0.008446,1.120590,-0.003010,1.000166,0.004122,1.128283,0.000027,0.999956,-0.000038,0.000200,-0.000025,1.015664,0.125315,0.000504,-0.000063,1.015664,0.125316,0.002016,-0.000253,1.015727,0.125315,0.004535,-0.000568,1.015695,0.125314,0.008063,-0.001010,1.015823,0.125316,0.012599,-0.001579,1.015867,0.125315,0.018141,-0.002273,1.015758,0.125316,0.024691,-0.003094,1.015662,0.125316,0.032252,-0.004042,1.015674,0.125316,0.040820,-0.005115,1.015678,0.125316,0.050400,-0.006316,1.015684,0.125315,0.060989,-0.007642,1.015685,0.125315,0.072590,-0.009096,1.015703,0.125314,0.085203,-0.010676,1.015654,0.125314,0.098833,-0.012383,1.015670,0.125315,0.113477,-0.014215,1.015635,0.125312,0.129138,-0.016173,1.015599,0.125311,0.145815,-0.018246,1.015610,0.125306,0.163450,-0.020360,1.015564,0.125294,0.181595,-0.021807,1.015460,0.125204,0.200563,-0.023971,1.015440,0.125165,0.220186,-0.027280,1.015412,0.125250,0.241528,-0.030164,1.015342,0.125267,0.264020,-0.032847,1.015269,0.125233,0.287311,-0.035345,1.015232,0.125138,0.310993,-0.037108,1.015063,0.124903,0.335467,-0.039653,1.014970,0.124749,0.360497,-0.042914,1.014819,0.124702,0.385986,-0.046142,1.014685,0.124623,0.412703,-0.048050,1.014543,0.124193,0.439929,-0.050527,1.014315,0.123833,0.467163,-0.052880,1.014087,0.123375,0.494824,-0.055672,1.013898,0.122982,0.523222,-0.057388,1.013647,0.122166,0.551557,-0.059328,1.013403,0.121343,0.579884,-0.061315,1.013059,0.120430,0.608619,-0.062531,1.012745,0.119140,0.637014,-0.063778,1.012425,0.117721,0.665425,-0.064734,1.012067,0.116069,0.693580,-0.065315,1.011712,0.114146,0.721194,-0.065535,1.011200,0.111846,0.748586,-0.065501,1.010896,0.109309,0.775437,-0.065091,1.010576,0.106504,0.801554,-0.064332,1.010136,0.103308,0.827079,-0.063078,1.009629,0.099695,0.851693,-0.061728,1.009233,0.095946,0.875586,-0.059853,1.008726,0.091802,0.898589,-0.057727,1.008412,0.087339,0.920421,-0.055377,1.007767,0.082687,0.941533,-0.052571,1.007529,0.077716,0.961426,-0.049544,1.006929,0.072574,0.980287,-0.046400,1.006393,0.067217,0.998080,-0.042966,1.005872,0.061757,1.014940,-0.039321,1.005346,0.056072,1.030455,-0.035585,1.004609,0.050410,1.045078,-0.031823,1.004151,0.044622,1.058555,-0.027947,1.003421,0.038893,1.071009,-0.023891,1.002704,0.032977,1.082594,-0.019822,1.002023,0.027290,1.093265,-0.015765,1.001403,0.021543,1.103132,-0.011790,1.000944,0.016072,1.112348,-0.007784,1.000550,0.010511,1.120845,-0.003849,1.000224,0.005174,1.128573,0.000057,0.999975,-0.000039,0.000200,-0.000030,1.022609,0.150725,0.000504,-0.000076,1.022728,0.150725,0.002016,-0.000304,1.022728,0.150725,0.004535,-0.000684,1.022733,0.150725,0.008062,-0.001215,1.022715,0.150725,0.012598,-0.001899,1.022720,0.150725,0.018141,-0.002734,1.022659,0.150725,0.024694,-0.003722,1.022801,0.150724,0.032254,-0.004861,1.022779,0.150726,0.040815,-0.006152,1.022693,0.150724,0.050400,-0.007596,1.022716,0.150725,0.060990,-0.009192,1.022733,0.150725,0.072587,-0.010939,1.022630,0.150723,0.085203,-0.012839,1.022676,0.150725,0.098828,-0.014891,1.022659,0.150725,0.113473,-0.017095,1.022589,0.150720,0.129137,-0.019449,1.022572,0.150716,0.145803,-0.021938,1.022508,0.150712,0.163417,-0.024443,1.022471,0.150691,0.181580,-0.026329,1.022406,0.150600,0.200667,-0.028997,1.022336,0.150553,0.220429,-0.032584,1.022296,0.150610,0.241497,-0.036260,1.022202,0.150658,0.263975,-0.039465,1.022119,0.150619,0.287210,-0.042385,1.021988,0.150490,0.310935,-0.044758,1.021771,0.150241,0.335556,-0.047922,1.021658,0.150076,0.360667,-0.051493,1.021437,0.149931,0.386028,-0.054931,1.021228,0.149754,0.412665,-0.058007,1.021023,0.149400,0.439951,-0.060813,1.020723,0.148913,0.467262,-0.063461,1.020332,0.148319,0.494972,-0.066738,1.020097,0.147798,0.523153,-0.068976,1.019630,0.146903,0.551700,-0.071268,1.019245,0.145863,0.580046,-0.073439,1.018797,0.144695,0.608649,-0.075193,1.018201,0.143237,0.637239,-0.076536,1.017746,0.141463,0.665388,-0.077771,1.017111,0.139462,0.693755,-0.078344,1.016609,0.137082,0.721345,-0.078817,1.015863,0.134403,0.748879,-0.078512,1.015390,0.131252,0.775560,-0.078128,1.014652,0.127866,0.801897,-0.077094,1.013877,0.123928,0.827193,-0.075863,1.013021,0.119733,0.851990,-0.073973,1.012395,0.115055,0.875823,-0.071765,1.011595,0.110098,0.898655,-0.069241,1.010862,0.104722,0.920915,-0.066232,1.010185,0.098991,0.941969,-0.062980,1.009588,0.093044,0.961882,-0.059507,1.008777,0.086925,0.980952,-0.055606,1.008252,0.080520,0.998955,-0.051503,1.007633,0.073890,1.015756,-0.047292,1.006908,0.067302,1.031571,-0.042804,1.006338,0.060412,1.046095,-0.038132,1.005512,0.053497,1.059542,-0.033380,1.004592,0.046569,1.072006,-0.028613,1.003731,0.039679,1.083348,-0.023811,1.002871,0.032772,1.093969,-0.018930,1.002068,0.025894,1.103697,-0.014098,1.001284,0.019178,1.112813,-0.009339,1.000820,0.012652,1.121193,-0.004661,1.000324,0.006226,1.128930,0.000052,0.999988,-0.000008,0.000200,-0.000035,1.030857,0.176327,0.000504,-0.000089,1.031137,0.176326,0.002016,-0.000355,1.031049,0.176325,0.004535,-0.000800,1.031105,0.176326,0.008062,-0.001422,1.030973,0.176326,0.012598,-0.002221,1.031168,0.176326,0.018141,-0.003199,1.031093,0.176326,0.024695,-0.004354,1.031297,0.176326,0.032253,-0.005687,1.031091,0.176327,0.040821,-0.007197,1.031012,0.176326,0.050399,-0.008886,1.031068,0.176325,0.060987,-0.010752,1.030967,0.176323,0.072588,-0.012797,1.031028,0.176324,0.085200,-0.015019,1.030985,0.176322,0.098829,-0.017419,1.030983,0.176320,0.113474,-0.019997,1.030953,0.176317,0.129133,-0.022748,1.030891,0.176312,0.145800,-0.025655,1.030825,0.176306,0.163372,-0.028510,1.030781,0.176279,0.181578,-0.030914,1.030683,0.176187,0.200761,-0.034076,1.030574,0.176139,0.220645,-0.037985,1.030476,0.176160,0.241473,-0.042391,1.030384,0.176238,0.263922,-0.046105,1.030241,0.176175,0.287074,-0.049390,1.030049,0.176013,0.310915,-0.052511,1.029839,0.175776,0.335604,-0.056236,1.029608,0.175578,0.360775,-0.060118,1.029355,0.175359,0.386196,-0.063907,1.029052,0.175083,0.412599,-0.067997,1.028766,0.174791,0.439916,-0.071088,1.028326,0.174174,0.467444,-0.074247,1.027890,0.173487,0.495132,-0.077728,1.027374,0.172774,0.523117,-0.080822,1.026763,0.171824,0.551783,-0.083228,1.026205,0.170554,0.580234,-0.085682,1.025614,0.169090,0.608568,-0.087860,1.024668,0.167468,0.637357,-0.089346,1.023939,0.165283,0.665507,-0.090704,1.022946,0.162966,0.693704,-0.091388,1.022010,0.160131,0.721396,-0.091783,1.021085,0.156957,0.748676,-0.091688,1.019894,0.153292,0.775370,-0.090992,1.018608,0.149158,0.801547,-0.089881,1.017646,0.144551,0.827013,-0.088267,1.016355,0.139614,0.851708,-0.086132,1.015446,0.134026,0.875652,-0.083707,1.014321,0.128101,0.898703,-0.080619,1.013454,0.121841,0.920904,-0.077280,1.012634,0.115379,0.942077,-0.073484,1.011770,0.108355,0.962245,-0.069252,1.010894,0.101153,0.981385,-0.064807,1.010114,0.093666,0.999379,-0.060080,1.009294,0.086007,1.016494,-0.055007,1.008591,0.078194,1.032357,-0.049760,1.007821,0.070328,1.047061,-0.044468,1.006871,0.062358,1.060675,-0.038960,1.006062,0.054279,1.073032,-0.033343,1.004911,0.046158,1.084293,-0.027699,1.003791,0.038111,1.094724,-0.022130,1.002744,0.030239,1.104302,-0.016508,1.001815,0.022397,1.113290,-0.010846,1.001083,0.014747,1.121649,-0.005294,1.000490,0.007234,1.129230,0.000071,0.999975,-0.000053,0.000200,-0.000040,1.040431,0.202155,0.000504,-0.000102,1.040912,0.202154,0.002016,-0.000407,1.041328,0.202152,0.004535,-0.000917,1.040877,0.202154,0.008063,-0.001630,1.040867,0.202153,0.012598,-0.002547,1.040870,0.202153,0.018140,-0.003667,1.040808,0.202153,0.024692,-0.004991,1.040861,0.202153,0.032252,-0.006519,1.040861,0.202153,0.040822,-0.008252,1.040864,0.202153,0.050397,-0.010187,1.040717,0.202151,0.060988,-0.012327,1.040791,0.202152,0.072582,-0.014669,1.040640,0.202149,0.085198,-0.017217,1.040716,0.202147,0.098827,-0.019968,1.040748,0.202141,0.113467,-0.022921,1.040632,0.202142,0.129129,-0.026074,1.040606,0.202137,0.145793,-0.029399,1.040566,0.202127,0.163294,-0.032524,1.040459,0.202078,0.181589,-0.035552,1.040315,0.201996,0.200844,-0.039208,1.040221,0.201948,0.220835,-0.043489,1.040047,0.201945,0.241471,-0.048523,1.039921,0.202031,0.263854,-0.052764,1.039756,0.201957,0.286935,-0.056387,1.039497,0.201743,0.310902,-0.060338,1.039252,0.201531,0.335642,-0.064594,1.038954,0.201286,0.360859,-0.068772,1.038582,0.200983,0.386419,-0.073086,1.038160,0.200651,0.412588,-0.077887,1.037724,0.200343,0.439836,-0.081391,1.037182,0.199618,0.467538,-0.085121,1.036602,0.198839,0.495286,-0.088718,1.035893,0.197895,0.523231,-0.092514,1.035121,0.196887,0.551730,-0.095238,1.034127,0.195390,0.580302,-0.097949,1.033131,0.193668,0.608559,-0.100418,1.031962,0.191773,0.637224,-0.102129,1.030838,0.189319,0.665597,-0.103578,1.029511,0.186529,0.693535,-0.104652,1.028263,0.183303,0.721325,-0.104766,1.026611,0.179497,0.748384,-0.104717,1.025128,0.175283,0.775058,-0.103846,1.023385,0.170493,0.801387,-0.102728,1.022236,0.165187,0.826412,-0.100679,1.019908,0.159362,0.851314,-0.098451,1.018839,0.153059,0.875100,-0.095363,1.017306,0.146284,0.898280,-0.092008,1.016151,0.138975,0.920450,-0.088095,1.014880,0.131361,0.941727,-0.083690,1.013556,0.123417,0.962308,-0.079077,1.012998,0.115201,0.981364,-0.073894,1.011841,0.106711,0.999798,-0.068435,1.011021,0.098063,1.016983,-0.062830,1.010194,0.089183,1.033039,-0.056914,1.009292,0.080190,1.047994,-0.050721,1.008474,0.071010,1.061580,-0.044454,1.007386,0.061867,1.074023,-0.038145,1.006135,0.052711,1.085470,-0.031679,1.004890,0.043595,1.095673,-0.025157,1.003627,0.034506,1.105000,-0.018702,1.002331,0.025468,1.113795,-0.012458,1.001278,0.016834,1.122012,-0.006169,1.000548,0.008265,1.129683,0.000078,0.999988,-0.000072,0.000200,-0.000046,1.052496,0.228243,0.000504,-0.000115,1.052079,0.228243,0.002016,-0.000460,1.052079,0.228241,0.004535,-0.001035,1.052091,0.228242,0.008062,-0.001840,1.051962,0.228242,0.012598,-0.002875,1.052087,0.228242,0.018141,-0.004140,1.052088,0.228242,0.024692,-0.005636,1.052096,0.228239,0.032251,-0.007361,1.052029,0.228243,0.040820,-0.009316,1.052038,0.228241,0.050399,-0.011501,1.052042,0.228239,0.060990,-0.013917,1.052046,0.228238,0.072586,-0.016562,1.051990,0.228236,0.085198,-0.019437,1.051946,0.228234,0.098824,-0.022542,1.051879,0.228229,0.113467,-0.025875,1.051841,0.228227,0.129121,-0.029430,1.051724,0.228219,0.145780,-0.033170,1.051672,0.228205,0.163222,-0.036567,1.051556,0.228143,0.181604,-0.040245,1.051382,0.228069,0.200913,-0.044395,1.051230,0.228010,0.221005,-0.049088,1.051062,0.227988,0.241667,-0.054506,1.050881,0.228044,0.263777,-0.059437,1.050643,0.227986,0.286841,-0.063590,1.050312,0.227755,0.310879,-0.068224,1.050009,0.227525,0.335650,-0.072986,1.049597,0.227253,0.360869,-0.077435,1.049121,0.226845,0.386609,-0.082385,1.048587,0.226466,0.412742,-0.087570,1.047987,0.226059,0.439789,-0.091929,1.047308,0.225331,0.467558,-0.096038,1.046423,0.224409,0.495406,-0.099938,1.045481,0.223288,0.523417,-0.104050,1.044512,0.222066,0.551755,-0.107503,1.043408,0.220487,0.580468,-0.110234,1.042016,0.218451,0.608904,-0.112993,1.040535,0.216200,0.637230,-0.115173,1.038934,0.213458,0.665566,-0.116433,1.036961,0.210158,0.693413,-0.117589,1.035130,0.206457,0.721025,-0.117885,1.033080,0.202197,0.748054,-0.117606,1.030752,0.197296,0.774631,-0.116771,1.028608,0.191813,0.800677,-0.115194,1.026350,0.185691,0.826062,-0.113138,1.024472,0.179053,0.850590,-0.110359,1.022174,0.171839,0.874550,-0.107072,1.020381,0.164067,0.897567,-0.103268,1.018777,0.155959,0.919609,-0.098794,1.016886,0.147320,0.941177,-0.094067,1.015880,0.138365,0.961752,-0.088670,1.014616,0.129051,0.981518,-0.082965,1.013807,0.119515,0.999880,-0.076971,1.012793,0.109897,1.017370,-0.070518,1.011894,0.099872,1.033661,-0.063830,1.010943,0.089883,1.048672,-0.057040,1.009802,0.079691,1.062479,-0.049917,1.008670,0.069458,1.075052,-0.042735,1.007429,0.059191,1.086371,-0.035513,1.005991,0.048894,1.096623,-0.028359,1.004468,0.038770,1.105871,-0.021111,1.002927,0.028745,1.114481,-0.013908,1.001728,0.018884,1.122610,-0.006843,1.000740,0.009264,1.130165,0.000062,0.999983,-0.000006,0.000200,-0.000051,1.064931,0.254630,0.000504,-0.000128,1.064668,0.254630,0.002016,-0.000513,1.064794,0.254630,0.004535,-0.001155,1.064851,0.254630,0.008063,-0.002053,1.064966,0.254630,0.012598,-0.003208,1.064840,0.254630,0.018140,-0.004619,1.064602,0.254631,0.024695,-0.006288,1.064965,0.254632,0.032251,-0.008211,1.064795,0.254630,0.040821,-0.010393,1.064802,0.254628,0.050398,-0.012830,1.064758,0.254627,0.060987,-0.015525,1.064731,0.254625,0.072584,-0.018474,1.064615,0.254621,0.085199,-0.021682,1.064672,0.254619,0.098826,-0.025144,1.064630,0.254613,0.113465,-0.028860,1.064515,0.254606,0.129119,-0.032823,1.064416,0.254598,0.145767,-0.036969,1.064347,0.254579,0.163190,-0.040754,1.064132,0.254506,0.181622,-0.044989,1.063951,0.254437,0.200981,-0.049642,1.063745,0.254370,0.221145,-0.054776,1.063547,0.254324,0.241896,-0.060538,1.063289,0.254346,0.263684,-0.066113,1.063013,0.254296,0.286796,-0.070925,1.062625,0.254059,0.310867,-0.076187,1.062216,0.253817,0.335644,-0.081406,1.061703,0.253481,0.360917,-0.086336,1.061066,0.253005,0.386786,-0.091790,1.060454,0.252558,0.412921,-0.097230,1.059568,0.252008,0.439722,-0.102574,1.058706,0.251323,0.467559,-0.106972,1.057682,0.250239,0.495605,-0.111329,1.056612,0.248944,0.523589,-0.115561,1.055101,0.247471,0.551787,-0.119732,1.053745,0.245777,0.580426,-0.122711,1.051829,0.243448,0.608778,-0.125436,1.049642,0.240769,0.637069,-0.127993,1.047749,0.237739,0.665251,-0.129448,1.045244,0.233928,0.692977,-0.130408,1.042279,0.229640,0.720346,-0.130931,1.039693,0.224829,0.747365,-0.130392,1.036675,0.219144,0.773734,-0.129540,1.033719,0.212965,0.799578,-0.127689,1.030774,0.206047,0.825002,-0.125456,1.028551,0.198576,0.849564,-0.122291,1.025800,0.190471,0.873412,-0.118720,1.023657,0.181739,0.896628,-0.114323,1.021381,0.172586,0.918952,-0.109587,1.019674,0.162914,0.940602,-0.104093,1.018126,0.153039,0.960917,-0.098187,1.016339,0.142774,0.980911,-0.091963,1.015440,0.132316,0.999686,-0.085159,1.014377,0.121453,1.017538,-0.078139,1.013498,0.110527,1.033918,-0.070797,1.012332,0.099437,1.049390,-0.063129,1.011368,0.088157,1.063402,-0.055354,1.010111,0.076951,1.076096,-0.047522,1.008774,0.065616,1.087562,-0.039447,1.007202,0.054310,1.097591,-0.031359,1.005346,0.042948,1.106782,-0.023393,1.003710,0.031799,1.115234,-0.015461,1.002116,0.020943,1.123166,-0.007589,1.000858,0.010288,1.130796,0.000104,1.000032,-0.000024,0.000200,-0.000056,1.078780,0.281356,0.000504,-0.000142,1.079271,0.281355,0.002015,-0.000567,1.078635,0.281355,0.004535,-0.001276,1.079164,0.281356,0.008064,-0.002269,1.079300,0.281355,0.012598,-0.003544,1.079149,0.281355,0.018143,-0.005104,1.079329,0.281355,0.024691,-0.006947,1.079073,0.281353,0.032254,-0.009074,1.079253,0.281354,0.040822,-0.011484,1.079176,0.281353,0.050399,-0.014177,1.079057,0.281349,0.060987,-0.017153,1.079007,0.281347,0.072586,-0.020412,1.078998,0.281343,0.085203,-0.023956,1.078962,0.281336,0.098823,-0.027778,1.078839,0.281332,0.113464,-0.031882,1.078783,0.281325,0.129114,-0.036255,1.078633,0.281315,0.145748,-0.040790,1.078545,0.281287,0.163179,-0.045024,1.078311,0.281208,0.181649,-0.049791,1.078135,0.281137,0.201042,-0.054953,1.077845,0.281063,0.221267,-0.060551,1.077576,0.281006,0.242114,-0.066663,1.077257,0.280978,0.263568,-0.072771,1.076897,0.280925,0.286744,-0.078349,1.076405,0.280689,0.310840,-0.084201,1.075898,0.280418,0.335612,-0.089846,1.075287,0.280020,0.360975,-0.095394,1.074482,0.279513,0.386932,-0.101290,1.073617,0.278961,0.413171,-0.107042,1.072719,0.278283,0.439886,-0.113083,1.071698,0.277547,0.467535,-0.118010,1.070213,0.276311,0.495701,-0.122793,1.068857,0.274867,0.523772,-0.127278,1.067037,0.273153,0.551849,-0.131671,1.064923,0.271176,0.580338,-0.135293,1.062749,0.268626,0.608771,-0.138065,1.059944,0.265569,0.636756,-0.140565,1.056851,0.262054,0.664574,-0.142434,1.053461,0.257807,0.692151,-0.143237,1.049910,0.252930,0.719376,-0.143717,1.046426,0.247414,0.745852,-0.143117,1.042377,0.241001,0.772300,-0.141975,1.038789,0.233797,0.798050,-0.140114,1.035290,0.226218,0.823370,-0.137379,1.032374,0.217785,0.847735,-0.134119,1.028853,0.208748,0.871897,-0.129985,1.026395,0.198877,0.894950,-0.125324,1.023787,0.188803,0.917909,-0.120007,1.022073,0.178493,0.939567,-0.114099,1.020098,0.167466,0.960534,-0.107748,1.018851,0.156223,0.980423,-0.100748,1.017362,0.144716,0.999334,-0.093494,1.015961,0.133028,1.017561,-0.085728,1.015059,0.120953,1.034225,-0.077627,1.013888,0.108943,1.049937,-0.069375,1.012898,0.096678,1.064265,-0.060807,1.011635,0.084350,1.077188,-0.052052,1.010095,0.071964,1.088637,-0.043304,1.008399,0.059531,1.098766,-0.034458,1.006397,0.047134,1.107697,-0.025637,1.004354,0.034887,1.116055,-0.016932,1.002611,0.022948,1.123819,-0.008437,1.001023,0.011386,1.131333,0.000087,0.999952,-0.000097,0.000200,-0.000062,1.095622,0.308458,0.000504,-0.000155,1.094863,0.308458,0.002016,-0.000622,1.095169,0.308458,0.004535,-0.001399,1.095156,0.308458,0.008063,-0.002487,1.095413,0.308455,0.012598,-0.003886,1.095147,0.308458,0.018141,-0.005596,1.095150,0.308457,0.024692,-0.007616,1.095140,0.308457,0.032252,-0.009947,1.095098,0.308456,0.040822,-0.012589,1.095096,0.308453,0.050399,-0.015541,1.095070,0.308451,0.060985,-0.018803,1.094922,0.308448,0.072583,-0.022375,1.094902,0.308444,0.085197,-0.026258,1.094882,0.308438,0.098822,-0.030448,1.094775,0.308429,0.113460,-0.034944,1.094641,0.308419,0.129112,-0.039731,1.094530,0.308403,0.145711,-0.044610,1.094332,0.308365,0.163178,-0.049362,1.094149,0.308285,0.181679,-0.054666,1.093876,0.308210,0.201109,-0.060336,1.093603,0.308132,0.221388,-0.066414,1.093250,0.308047,0.242315,-0.072881,1.092835,0.307985,0.263651,-0.079453,1.092391,0.307902,0.286720,-0.085882,1.091866,0.307688,0.310817,-0.092274,1.091225,0.307379,0.335562,-0.098306,1.090346,0.306906,0.361043,-0.104572,1.089423,0.306374,0.387051,-0.110843,1.088437,0.305710,0.413405,-0.117062,1.087228,0.304906,0.440122,-0.123501,1.085879,0.304017,0.467522,-0.129245,1.084197,0.302783,0.495721,-0.134285,1.082284,0.301104,0.523925,-0.139143,1.080109,0.299142,0.551814,-0.143638,1.077043,0.296825,0.579878,-0.147774,1.074071,0.294071,0.608316,-0.150724,1.070621,0.290519,0.636059,-0.153168,1.066390,0.286424,0.663481,-0.155139,1.062069,0.281559,0.690753,-0.155944,1.057211,0.276024,0.717767,-0.156176,1.052682,0.269622,0.743937,-0.155783,1.047747,0.262532,0.770214,-0.154245,1.043510,0.254609,0.795542,-0.152192,1.039121,0.246007,0.821099,-0.149256,1.035962,0.236663,0.845452,-0.145605,1.032320,0.226751,0.869780,-0.141186,1.029390,0.216165,0.893141,-0.136137,1.026485,0.204937,0.916034,-0.130332,1.024389,0.193624,0.938089,-0.124040,1.022270,0.181756,0.959488,-0.117011,1.020457,0.169339,0.979594,-0.109617,1.018871,0.156875,0.998912,-0.101562,1.017533,0.144288,1.017100,-0.093164,1.016445,0.131370,1.034413,-0.084488,1.015453,0.118322,1.050347,-0.075377,1.014259,0.104963,1.064958,-0.066108,1.013057,0.091722,1.078045,-0.056702,1.011491,0.078231,1.089749,-0.047106,1.009662,0.064797,1.099831,-0.037467,1.007417,0.051315,1.108789,-0.027990,1.005144,0.038064,1.116865,-0.018464,1.002925,0.025008,1.124609,-0.009068,1.001221,0.012250,1.132040,0.000093,0.999984,-0.000071,0.000200,-0.000067,1.112554,0.335981,0.000504,-0.000169,1.112660,0.335981,0.002016,-0.000677,1.112827,0.335981,0.004533,-0.001523,1.112147,0.335982,0.008063,-0.002709,1.112882,0.335979,0.012598,-0.004233,1.112891,0.335980,0.018141,-0.006095,1.112882,0.335980,0.024693,-0.008296,1.112877,0.335978,0.032252,-0.010834,1.112860,0.335976,0.040824,-0.013713,1.112965,0.335974,0.050398,-0.016927,1.112753,0.335971,0.060991,-0.020482,1.112826,0.335970,0.072587,-0.024371,1.112676,0.335962,0.085199,-0.028597,1.112593,0.335955,0.098822,-0.033159,1.112453,0.335943,0.113461,-0.038052,1.112329,0.335930,0.129108,-0.043255,1.112144,0.335910,0.145665,-0.048412,1.111905,0.335857,0.163185,-0.053786,1.111668,0.335781,0.181710,-0.059608,1.111345,0.335696,0.201166,-0.065794,1.110979,0.335606,0.221489,-0.072361,1.110553,0.335505,0.242471,-0.079184,1.110112,0.335396,0.263900,-0.086213,1.109584,0.335271,0.286688,-0.093491,1.108927,0.335089,0.310773,-0.100406,1.108091,0.334737,0.335573,-0.106987,1.107169,0.334208,0.361117,-0.113844,1.106097,0.333600,0.387175,-0.120463,1.104826,0.332828,0.413665,-0.127245,1.103415,0.331929,0.440386,-0.133927,1.101632,0.330851,0.467527,-0.140496,1.099563,0.329538,0.495630,-0.145874,1.096956,0.327618,0.523864,-0.150997,1.094201,0.325390,0.551705,-0.155713,1.090342,0.322688,0.579383,-0.159993,1.086010,0.319483,0.607301,-0.163238,1.081226,0.315522,0.634873,-0.165667,1.076065,0.310840,0.662028,-0.167606,1.070466,0.305377,0.688755,-0.168626,1.064601,0.299056,0.715612,-0.168578,1.059269,0.291963,0.741604,-0.167961,1.053648,0.284018,0.767757,-0.166439,1.048928,0.275474,0.793264,-0.164023,1.044343,0.266056,0.818165,-0.160965,1.039909,0.255750,0.843255,-0.156896,1.036180,0.244843,0.867249,-0.152262,1.032303,0.233464,0.890994,-0.146655,1.029365,0.221128,0.913829,-0.140574,1.026607,0.208554,0.936508,-0.133640,1.024512,0.195772,0.957720,-0.126220,1.022421,0.182420,0.978940,-0.118164,1.021293,0.168852,0.998285,-0.109558,1.019444,0.155261,1.016764,-0.100562,1.017825,0.141395,1.034387,-0.091064,1.016996,0.127311,1.050916,-0.081468,1.015945,0.113089,1.065652,-0.071463,1.014547,0.098879,1.079155,-0.061240,1.013066,0.084468,1.090822,-0.050980,1.010788,0.069940,1.101100,-0.040549,1.008563,0.055475,1.109824,-0.030101,1.005950,0.041033,1.117828,-0.019884,1.003453,0.027022,1.125443,-0.009900,1.001484,0.013306,1.132869,0.000094,1.000004,-0.000046,0.000200,-0.000073,1.132849,0.363970,0.000504,-0.000183,1.132155,0.363969,0.002016,-0.000734,1.132516,0.363969,0.004535,-0.001651,1.132256,0.363969,0.008062,-0.002934,1.132318,0.363966,0.012597,-0.004585,1.132386,0.363968,0.018141,-0.006602,1.132457,0.363967,0.024693,-0.008987,1.132511,0.363967,0.032252,-0.011737,1.132488,0.363965,0.040819,-0.014853,1.132241,0.363959,0.050398,-0.018336,1.132372,0.363958,0.060988,-0.022185,1.132373,0.363954,0.072582,-0.026396,1.132137,0.363943,0.085195,-0.030973,1.132071,0.363935,0.098822,-0.035913,1.131978,0.363922,0.113461,-0.041209,1.131801,0.363905,0.129116,-0.046833,1.131535,0.363867,0.145640,-0.052346,1.131290,0.363814,0.163199,-0.058275,1.131046,0.363734,0.181742,-0.064623,1.130671,0.363642,0.201227,-0.071336,1.130224,0.363539,0.221587,-0.078396,1.129758,0.363419,0.242625,-0.085545,1.129213,0.363256,0.264183,-0.093110,1.128549,0.363097,0.286668,-0.101206,1.127767,0.362939,0.310745,-0.108586,1.126796,0.362516,0.335602,-0.115827,1.125686,0.361953,0.361202,-0.123212,1.124451,0.361275,0.387298,-0.130294,1.122861,0.360376,0.413918,-0.137553,1.121154,0.359362,0.440680,-0.144577,1.118825,0.358069,0.467667,-0.151558,1.116002,0.356581,0.495449,-0.157621,1.112778,0.354531,0.523514,-0.162844,1.108842,0.351915,0.551250,-0.167744,1.104075,0.348797,0.578629,-0.172132,1.098733,0.345222,0.605757,-0.175733,1.092224,0.340665,0.633392,-0.178109,1.086201,0.335286,0.660783,-0.180009,1.080110,0.329286,0.687219,-0.181105,1.073419,0.322319,0.713873,-0.181046,1.067410,0.314616,0.740094,-0.180219,1.061414,0.306014,0.765233,-0.178559,1.055287,0.296704,0.790885,-0.175806,1.049727,0.286394,0.815464,-0.172354,1.044519,0.275189,0.840259,-0.168048,1.040375,0.263441,0.864285,-0.162904,1.036010,0.250918,0.888806,-0.157194,1.033525,0.237611,0.911682,-0.150486,1.029490,0.223809,0.934481,-0.143212,1.026778,0.209705,0.956337,-0.135233,1.024632,0.195281,0.977380,-0.126650,1.022737,0.180878,0.997427,-0.117552,1.021110,0.166112,1.016666,-0.107814,1.019869,0.151231,1.034337,-0.097814,1.018543,0.136375,1.051082,-0.087330,1.017476,0.121187,1.066326,-0.076614,1.016083,0.106043,1.079897,-0.065793,1.014227,0.090566,1.092136,-0.054654,1.012334,0.074988,1.102315,-0.043516,1.009627,0.059577,1.111105,-0.032509,1.006808,0.044202,1.118861,-0.021381,1.003917,0.028995,1.126363,-0.010489,1.001670,0.014269,1.133598,0.000083,0.999989,-0.000035,0.000200,-0.000079,1.155026,0.392470,0.000504,-0.000198,1.154184,0.392469,0.002016,-0.000791,1.153990,0.392469,0.004535,-0.001780,1.154045,0.392469,0.008063,-0.003164,1.154007,0.392466,0.012598,-0.004944,1.154022,0.392469,0.018141,-0.007119,1.154015,0.392468,0.024692,-0.009690,1.154017,0.392466,0.032254,-0.012656,1.154069,0.392465,0.040826,-0.016018,1.153980,0.392459,0.050399,-0.019771,1.153911,0.392456,0.060987,-0.023919,1.153860,0.392447,0.072588,-0.028461,1.153777,0.392442,0.085197,-0.033393,1.153582,0.392428,0.098822,-0.038716,1.153434,0.392412,0.113462,-0.044422,1.153271,0.392390,0.129101,-0.050455,1.153019,0.392359,0.145642,-0.056392,1.152721,0.392283,0.163223,-0.062859,1.152404,0.392201,0.181779,-0.069721,1.151941,0.392099,0.201289,-0.076968,1.151422,0.391978,0.221678,-0.084518,1.150861,0.391833,0.242752,-0.092017,1.150156,0.391618,0.264474,-0.100184,1.149402,0.391421,0.286768,-0.108921,1.148545,0.391249,0.310719,-0.116815,1.147388,0.390773,0.335638,-0.124785,1.146042,0.390168,0.361240,-0.132630,1.144529,0.389394,0.387443,-0.140298,1.142602,0.388391,0.414067,-0.147913,1.140361,0.387199,0.440904,-0.155362,1.137612,0.385742,0.467771,-0.162574,1.133659,0.383926,0.494907,-0.169312,1.129246,0.381715,0.522801,-0.174778,1.124228,0.378678,0.550751,-0.179824,1.118697,0.375158,0.578018,-0.184284,1.112019,0.370851,0.605291,-0.188215,1.105151,0.365928,0.632269,-0.190760,1.097677,0.360114,0.659432,-0.192457,1.090816,0.353498,0.685839,-0.193458,1.083286,0.346094,0.711876,-0.193502,1.076245,0.337754,0.738184,-0.192371,1.069684,0.328412,0.763723,-0.190531,1.063249,0.318164,0.789192,-0.187726,1.057265,0.306900,0.813744,-0.183783,1.051177,0.295021,0.838408,-0.179328,1.045902,0.282144,0.862116,-0.173573,1.040853,0.268438,0.885636,-0.167350,1.036515,0.254108,0.909342,-0.160229,1.033269,0.239082,0.931962,-0.152529,1.029627,0.224024,0.954671,-0.144080,1.027507,0.208393,0.975707,-0.135023,1.024657,0.192630,0.996644,-0.125258,1.022998,0.176741,1.015817,-0.115089,1.021234,0.160926,1.034301,-0.104317,1.020025,0.145042,1.051131,-0.093218,1.018739,0.129052,1.066836,-0.081828,1.017419,0.112905,1.081027,-0.070132,1.015714,0.096578,1.093225,-0.058382,1.013465,0.080077,1.103691,-0.046527,1.010853,0.063580,1.112431,-0.034624,1.007702,0.047118,1.120035,-0.022913,1.004551,0.031018,1.127336,-0.011284,1.001924,0.015283,1.134510,0.000170,0.999937,-0.000058,0.000200,-0.000084,1.177044,0.421534,0.000504,-0.000212,1.177312,0.421533,0.002016,-0.000850,1.177730,0.421533,0.004535,-0.001912,1.177722,0.421533,0.008063,-0.003399,1.177844,0.421529,0.012598,-0.005310,1.177768,0.421533,0.018141,-0.007646,1.177730,0.421531,0.024692,-0.010407,1.177663,0.421530,0.032252,-0.013592,1.177681,0.421527,0.040821,-0.017201,1.177562,0.421524,0.050401,-0.021234,1.177445,0.421516,0.060988,-0.025688,1.177461,0.421509,0.072590,-0.030565,1.177364,0.421498,0.085200,-0.035860,1.177205,0.421482,0.098823,-0.041572,1.177011,0.421462,0.113465,-0.047694,1.176794,0.421436,0.129094,-0.054122,1.176504,0.421396,0.145652,-0.060530,1.176203,0.421311,0.163245,-0.067517,1.175805,0.421218,0.181825,-0.074919,1.175271,0.421108,0.201360,-0.082700,1.174717,0.420974,0.221773,-0.090727,1.174021,0.420795,0.242908,-0.098719,1.173173,0.420536,0.264742,-0.107417,1.172285,0.420296,0.287091,-0.116601,1.171326,0.420065,0.310723,-0.125265,1.169907,0.419582,0.335685,-0.133876,1.168352,0.418912,0.361285,-0.142140,1.166322,0.418006,0.387562,-0.150436,1.164136,0.416899,0.414175,-0.158388,1.161162,0.415513,0.441021,-0.166258,1.157608,0.413836,0.467698,-0.173720,1.152519,0.411702,0.494730,-0.180843,1.147020,0.409102,0.522524,-0.186906,1.141256,0.405789,0.550055,-0.192004,1.134114,0.401759,0.577512,-0.196588,1.127086,0.397153,0.604348,-0.200420,1.119029,0.391767,0.630970,-0.203320,1.110308,0.385573,0.658023,-0.204883,1.102643,0.378245,0.684422,-0.205716,1.094573,0.370191,0.710405,-0.205767,1.086405,0.361231,0.736417,-0.204513,1.078712,0.351106,0.761836,-0.202281,1.071619,0.340096,0.787140,-0.199395,1.064873,0.328139,0.812197,-0.195185,1.058313,0.315044,0.836342,-0.190191,1.052085,0.300933,0.860311,-0.184343,1.046705,0.286411,0.883597,-0.177415,1.041072,0.270897,0.906852,-0.170003,1.036797,0.254825,0.929991,-0.161592,1.033264,0.238176,0.952478,-0.152792,1.030250,0.221581,0.974216,-0.143032,1.027331,0.204378,0.995372,-0.132922,1.025135,0.187470,1.015330,-0.122009,1.023250,0.170538,1.034070,-0.110740,1.022021,0.153777,1.051295,-0.099016,1.020271,0.136916,1.067460,-0.086920,1.018948,0.119880,1.082022,-0.074729,1.017336,0.102565,1.094378,-0.062036,1.014820,0.084994,1.104998,-0.049413,1.011999,0.067650,1.113773,-0.036812,1.008711,0.050148,1.121263,-0.024274,1.005141,0.032976,1.128420,-0.012038,1.002196,0.016239,1.135496,0.000106,1.000042,-0.000062,0.000200,-0.000090,1.203048,0.451217,0.000504,-0.000227,1.203226,0.451215,0.002016,-0.000909,1.203450,0.451215,0.004535,-0.002046,1.203569,0.451215,0.008062,-0.003638,1.203609,0.451209,0.012598,-0.005684,1.203580,0.451214,0.018141,-0.008185,1.203515,0.451212,0.024694,-0.011141,1.203618,0.451211,0.032253,-0.014549,1.203609,0.451207,0.040815,-0.018409,1.203302,0.451203,0.050401,-0.022727,1.203454,0.451195,0.060990,-0.027495,1.203480,0.451188,0.072591,-0.032713,1.203220,0.451172,0.085203,-0.038378,1.203058,0.451154,0.098829,-0.044489,1.202838,0.451130,0.113466,-0.051031,1.202530,0.451098,0.129084,-0.057808,1.202270,0.451041,0.145669,-0.064769,1.201904,0.450956,0.163278,-0.072278,1.201411,0.450853,0.181880,-0.080224,1.200825,0.450721,0.201436,-0.088537,1.200164,0.450566,0.221865,-0.097009,1.199335,0.450351,0.243083,-0.105591,1.198383,0.450062,0.265033,-0.114818,1.197380,0.449769,0.287456,-0.124372,1.196137,0.449438,0.310758,-0.133892,1.194554,0.448974,0.335721,-0.143052,1.192649,0.448216,0.361348,-0.151868,1.190233,0.447202,0.387573,-0.160644,1.187211,0.445926,0.414159,-0.169028,1.183452,0.444313,0.440950,-0.177169,1.178562,0.442315,0.467998,-0.185090,1.173540,0.439960,0.494566,-0.192396,1.166344,0.436989,0.521730,-0.198915,1.159283,0.433439,0.549405,-0.204240,1.151503,0.428984,0.576755,-0.208861,1.143004,0.423839,0.603635,-0.212734,1.134099,0.418012,0.629979,-0.215712,1.124555,0.411445,0.656597,-0.217385,1.115293,0.403628,0.683317,-0.218093,1.106460,0.394639,0.708990,-0.217835,1.097389,0.385012,0.734898,-0.216774,1.088940,0.373999,0.760342,-0.214120,1.080385,0.362128,0.785517,-0.210821,1.072959,0.349184,0.809933,-0.206443,1.065450,0.335080,0.834339,-0.200942,1.058701,0.320257,0.858793,-0.194938,1.052711,0.304133,0.882300,-0.187615,1.047044,0.287771,0.905560,-0.179626,1.042083,0.270571,0.927916,-0.170753,1.037077,0.252741,0.950415,-0.161270,1.033200,0.234656,0.972920,-0.151239,1.030418,0.216652,0.993893,-0.140358,1.027479,0.198252,1.014204,-0.128963,1.024897,0.180113,1.033878,-0.117128,1.023648,0.162282,1.051754,-0.104678,1.022230,0.144366,1.067924,-0.092000,1.020453,0.126455,1.082643,-0.078837,1.018518,0.108194,1.095503,-0.065669,1.016199,0.089966,1.106290,-0.052345,1.013113,0.071530,1.115219,-0.039024,1.009636,0.053158,1.122587,-0.025789,1.005801,0.034959,1.129461,-0.012622,1.002442,0.017222,1.136468,0.000152,0.999964,-0.000065,0.000200,-0.000096,1.231156,0.481574,0.000504,-0.000243,1.232187,0.481572,0.002016,-0.000971,1.231948,0.481572,0.004535,-0.002184,1.231919,0.481572,0.008061,-0.003882,1.231453,0.481566,0.012597,-0.006066,1.231800,0.481572,0.018142,-0.008736,1.231756,0.481569,0.024693,-0.011889,1.232062,0.481570,0.032254,-0.015528,1.231915,0.481563,0.040822,-0.019650,1.231863,0.481559,0.050402,-0.024255,1.231737,0.481550,0.060992,-0.029342,1.231678,0.481537,0.072592,-0.034908,1.231537,0.481521,0.085207,-0.040953,1.231336,0.481499,0.098834,-0.047469,1.231071,0.481469,0.113474,-0.054441,1.230757,0.481431,0.129077,-0.061556,1.230424,0.481359,0.145691,-0.069091,1.230022,0.481269,0.163321,-0.077151,1.229461,0.481156,0.181936,-0.085636,1.228718,0.481011,0.201516,-0.094484,1.228023,0.480830,0.221963,-0.103362,1.227057,0.480562,0.243264,-0.112628,1.225997,0.480247,0.265291,-0.122366,1.224744,0.479891,0.287824,-0.132256,1.223255,0.479461,0.310927,-0.142614,1.221348,0.478978,0.335749,-0.152326,1.218953,0.478132,0.361361,-0.161747,1.215806,0.476971,0.387480,-0.170879,1.211853,0.475477,0.414231,-0.179865,1.207783,0.473686,0.441065,-0.188331,1.202051,0.471415,0.467923,-0.196454,1.195463,0.468647,0.494526,-0.204048,1.187542,0.465459,0.521318,-0.211020,1.179235,0.461650,0.548654,-0.216520,1.170110,0.456868,0.575778,-0.221098,1.160163,0.451227,0.602610,-0.224923,1.149751,0.444866,0.628891,-0.227895,1.139169,0.437577,0.655635,-0.230020,1.129736,0.429369,0.682115,-0.230419,1.119516,0.419673,0.707514,-0.229789,1.108277,0.409143,0.733169,-0.228520,1.099159,0.397296,0.758342,-0.225793,1.089839,0.384578,0.783477,-0.222049,1.081428,0.370323,0.808497,-0.217562,1.073742,0.355253,0.832790,-0.211697,1.065850,0.339282,0.856677,-0.204989,1.058834,0.322181,0.880662,-0.197653,1.053291,0.304610,0.903474,-0.188858,1.046822,0.286042,0.926313,-0.179746,1.041663,0.267224,0.948458,-0.169542,1.036532,0.247978,0.970873,-0.159005,1.033008,0.228535,0.992958,-0.147658,1.029844,0.208819,1.013413,-0.135771,1.026930,0.189486,1.033483,-0.123256,1.025545,0.170422,1.051872,-0.110401,1.023935,0.152075,1.068396,-0.096860,1.022092,0.133169,1.083731,-0.083259,1.020221,0.114022,1.096849,-0.069266,1.017663,0.094772,1.107864,-0.055203,1.014524,0.075432,1.116600,-0.041097,1.010514,0.055980,1.123871,-0.027083,1.006313,0.036839,1.130718,-0.013510,1.002778,0.018156,1.137649,0.000154,1.000033,-0.000028,0.000200,-0.000103,1.264025,0.512670,0.000504,-0.000258,1.262437,0.512667,0.002016,-0.001033,1.262691,0.512668,0.004535,-0.002325,1.262834,0.512667,0.008063,-0.004133,1.262783,0.512659,0.012598,-0.006458,1.262803,0.512666,0.018141,-0.009299,1.262720,0.512665,0.024683,-0.012652,1.262061,0.512655,0.032257,-0.016532,1.262858,0.512656,0.040826,-0.020919,1.262709,0.512649,0.050403,-0.025820,1.262685,0.512639,0.060993,-0.031233,1.262544,0.512625,0.072597,-0.037157,1.262435,0.512607,0.085211,-0.043587,1.262209,0.512581,0.098842,-0.050520,1.261907,0.512544,0.113484,-0.057926,1.261575,0.512500,0.129097,-0.065460,1.261293,0.512420,0.145727,-0.073543,1.260736,0.512316,0.163375,-0.082134,1.260117,0.512190,0.182011,-0.091173,1.259299,0.512024,0.201598,-0.100540,1.258381,0.511810,0.222084,-0.109931,1.257293,0.511505,0.243446,-0.119838,1.256050,0.511151,0.265574,-0.130090,1.254607,0.510724,0.288230,-0.140421,1.252808,0.510191,0.311336,-0.151343,1.250489,0.509627,0.335719,-0.161689,1.247279,0.508688,0.361314,-0.171748,1.243467,0.507393,0.387541,-0.181399,1.239145,0.505758,0.414204,-0.190768,1.233760,0.503676,0.441092,-0.199659,1.227433,0.501129,0.467789,-0.207934,1.219247,0.498078,0.494454,-0.215747,1.210441,0.494630,0.520950,-0.222869,1.200559,0.490467,0.547802,-0.228881,1.189872,0.485444,0.575563,-0.233760,1.180081,0.479268,0.602426,-0.237566,1.168544,0.472272,0.628772,-0.240447,1.156546,0.464390,0.654963,-0.242427,1.145123,0.455345,0.681384,-0.242980,1.134322,0.444885,0.707173,-0.242150,1.122665,0.433338,0.732477,-0.240435,1.111733,0.420647,0.757567,-0.237806,1.101271,0.406799,0.782341,-0.233503,1.091341,0.391761,0.806690,-0.228346,1.082042,0.375576,0.830804,-0.222386,1.073504,0.358545,0.854940,-0.215141,1.065880,0.340431,0.878709,-0.207207,1.058850,0.321690,0.901928,-0.198273,1.052588,0.301930,0.924845,-0.188476,1.046521,0.281513,0.946932,-0.177996,1.040966,0.261234,0.969256,-0.166644,1.036670,0.240356,0.991323,-0.154968,1.032694,0.219748,1.013013,-0.142425,1.030061,0.199103,1.032845,-0.129456,1.027254,0.178936,1.051887,-0.115763,1.025497,0.159243,1.069179,-0.101851,1.023807,0.139560,1.084499,-0.087357,1.021441,0.119607,1.097921,-0.072796,1.018780,0.099501,1.109281,-0.058037,1.015566,0.079211,1.118194,-0.043226,1.011494,0.058873,1.125351,-0.028633,1.007089,0.038736,1.132002,-0.013996,1.003014,0.019063,1.138951,0.000132,1.000036,-0.000007,0.000200,-0.000109,1.296791,0.544571,0.000504,-0.000274,1.296055,0.544568,0.002016,-0.001098,1.297239,0.544568,0.004535,-0.002470,1.296600,0.544568,0.008062,-0.004390,1.296368,0.544559,0.012597,-0.006860,1.296454,0.544566,0.018141,-0.009878,1.296522,0.544565,0.024693,-0.013444,1.296536,0.544560,0.032256,-0.017559,1.296638,0.544557,0.040824,-0.022218,1.296491,0.544547,0.050408,-0.027426,1.296552,0.544532,0.060997,-0.033173,1.296283,0.544518,0.072600,-0.039463,1.296113,0.544496,0.085220,-0.046292,1.295894,0.544466,0.098851,-0.053648,1.295545,0.544422,0.113496,-0.061487,1.295201,0.544371,0.129112,-0.069467,1.294754,0.544273,0.145765,-0.078092,1.294209,0.544160,0.163431,-0.087231,1.293534,0.544017,0.182088,-0.096837,1.292580,0.543828,0.201698,-0.106713,1.291586,0.543585,0.222231,-0.116699,1.290325,0.543238,0.243653,-0.127208,1.288888,0.542836,0.265855,-0.137949,1.287131,0.542329,0.288623,-0.148847,1.284936,0.541700,0.311830,-0.160204,1.282109,0.540997,0.335728,-0.171324,1.278036,0.540045,0.361403,-0.181915,1.273912,0.538603,0.387647,-0.192124,1.268881,0.536741,0.414217,-0.201807,1.262363,0.534432,0.441090,-0.211093,1.254755,0.531623,0.467823,-0.219678,1.245456,0.528314,0.494361,-0.227581,1.234953,0.524391,0.521264,-0.235087,1.224839,0.519902,0.547881,-0.241508,1.213175,0.514574,0.574965,-0.246315,1.200505,0.507837,0.601847,-0.250061,1.187901,0.500286,0.628207,-0.252822,1.174601,0.491502,0.654445,-0.254691,1.161944,0.481726,0.680175,-0.255318,1.149305,0.470727,0.706168,-0.254257,1.136708,0.458045,0.731458,-0.252100,1.124047,0.444438,0.756378,-0.249115,1.112942,0.429611,0.781311,-0.244899,1.101800,0.413501,0.805755,-0.239225,1.091662,0.395889,0.829867,-0.232830,1.082291,0.377860,0.853067,-0.225193,1.072820,0.358704,0.877084,-0.216648,1.065415,0.338413,0.900123,-0.207390,1.058403,0.317596,0.923370,-0.197095,1.051412,0.296301,0.946021,-0.186084,1.045877,0.274498,0.967669,-0.174262,1.040316,0.252565,0.989761,-0.161814,1.035489,0.230312,1.012163,-0.149076,1.032540,0.208746,1.032547,-0.135299,1.029598,0.187180,1.052032,-0.121277,1.027355,0.166482,1.069907,-0.106582,1.025622,0.145939,1.085563,-0.091589,1.023244,0.125362,1.099447,-0.076263,1.020661,0.104087,1.110848,-0.060825,1.017035,0.083036,1.119923,-0.045319,1.012675,0.061719,1.126805,-0.029852,1.007668,0.040583,1.133282,-0.014846,1.003335,0.019969,1.140128,0.000149,1.000024,-0.000037,0.000200,-0.000116,1.334863,0.577350,0.000504,-0.000291,1.333350,0.577348,0.002015,-0.001164,1.332853,0.577347,0.004535,-0.002618,1.333295,0.577347,0.008062,-0.004655,1.333189,0.577336,0.012598,-0.007273,1.333309,0.577345,0.018141,-0.010472,1.333274,0.577342,0.024694,-0.014253,1.333231,0.577339,0.032254,-0.018614,1.333265,0.577332,0.040827,-0.023556,1.333261,0.577321,0.050400,-0.029069,1.332893,0.577309,0.061000,-0.035166,1.332998,0.577288,0.072608,-0.041833,1.332901,0.577263,0.085227,-0.049067,1.332603,0.577226,0.098864,-0.056860,1.332264,0.577177,0.113507,-0.065114,1.331825,0.577109,0.129146,-0.073610,1.331311,0.577005,0.145808,-0.082766,1.330639,0.576872,0.163494,-0.092458,1.329878,0.576709,0.182176,-0.102639,1.328889,0.576501,0.201804,-0.112983,1.327710,0.576207,0.222394,-0.123650,1.326256,0.575823,0.243881,-0.134780,1.324593,0.575363,0.266122,-0.145931,1.322426,0.574751,0.289043,-0.157500,1.319837,0.574033,0.312330,-0.169208,1.316301,0.573181,0.336120,-0.181125,1.312251,0.572188,0.361506,-0.192232,1.307003,0.570631,0.387757,-0.202981,1.301068,0.568558,0.414365,-0.213160,1.293695,0.566027,0.440986,-0.222617,1.283958,0.562942,0.467943,-0.231583,1.274057,0.559219,0.494821,-0.239881,1.262864,0.554913,0.521486,-0.247336,1.250633,0.549953,0.547884,-0.253921,1.237448,0.544251,0.574582,-0.259099,1.223164,0.537120,0.601342,-0.262695,1.208784,0.528650,0.627861,-0.265337,1.194424,0.518978,0.653745,-0.266872,1.179361,0.508525,0.679348,-0.267403,1.165010,0.496705,0.705068,-0.266429,1.151693,0.482926,0.730312,-0.263829,1.137584,0.468519,0.755576,-0.260491,1.125328,0.452213,0.780371,-0.256166,1.113759,0.435127,0.804632,-0.250079,1.101656,0.416833,0.828983,-0.243181,1.091235,0.397009,0.852585,-0.235383,1.081475,0.376647,0.875237,-0.226031,1.071806,0.355506,0.899152,-0.216343,1.064453,0.333133,0.922121,-0.205772,1.057161,0.311073,0.944523,-0.193980,1.050447,0.287781,0.967313,-0.181920,1.044531,0.264350,0.989042,-0.168822,1.039312,0.241128,1.010881,-0.155350,1.035298,0.218138,1.032368,-0.141231,1.032073,0.195579,1.052254,-0.126521,1.029395,0.173399,1.070207,-0.111243,1.026938,0.151866,1.086528,-0.095617,1.024957,0.130711,1.100670,-0.079687,1.021924,0.108865,1.112461,-0.063593,1.018281,0.086760,1.121588,-0.047313,1.013747,0.064575,1.128522,-0.031385,1.008433,0.042499,1.134759,-0.015356,1.003569,0.020840,1.141448,0.000114,0.999978,-0.000056,0.000200,-0.000122,1.372763,0.611086,0.000503,-0.000308,1.371456,0.611084,0.002016,-0.001232,1.373440,0.611084,0.004535,-0.002771,1.373387,0.611083,0.008061,-0.004926,1.372916,0.611083,0.012601,-0.007700,1.373956,0.611084,0.018142,-0.011084,1.373419,0.611078,0.024695,-0.015087,1.373492,0.611074,0.032255,-0.019701,1.373360,0.611066,0.040827,-0.024930,1.373327,0.611055,0.050408,-0.030769,1.373222,0.611037,0.061004,-0.037217,1.373079,0.611014,0.072613,-0.044270,1.372895,0.610982,0.085238,-0.051923,1.372624,0.610941,0.098878,-0.060161,1.372252,0.610883,0.113522,-0.068785,1.371785,0.610798,0.129176,-0.077863,1.371103,0.610683,0.145876,-0.087593,1.370541,0.610537,0.163570,-0.097847,1.369496,0.610349,0.182283,-0.108592,1.368477,0.610109,0.201930,-0.119420,1.366980,0.609763,0.222570,-0.130789,1.365375,0.609343,0.244123,-0.142514,1.363456,0.608815,0.266437,-0.154232,1.360916,0.608114,0.289467,-0.166370,1.357909,0.607291,0.312861,-0.178505,1.353588,0.606272,0.336736,-0.190980,1.349211,0.605153,0.361740,-0.202859,1.343319,0.603548,0.387878,-0.213997,1.335908,0.601268,0.414357,-0.224584,1.326676,0.598499,0.441442,-0.234664,1.317331,0.595066,0.468409,-0.243875,1.305818,0.590996,0.494999,-0.252121,1.291863,0.586293,0.521730,-0.259714,1.278212,0.580840,0.547894,-0.266242,1.262656,0.574494,0.573865,-0.271578,1.246364,0.567007,0.601124,-0.275503,1.231274,0.557771,0.627606,-0.277954,1.215252,0.547255,0.654004,-0.279404,1.199977,0.535766,0.679554,-0.279632,1.183995,0.522792,0.704280,-0.278457,1.167428,0.508488,0.729830,-0.275706,1.152760,0.492425,0.754376,-0.271640,1.137942,0.475285,0.779209,-0.266911,1.125222,0.456679,0.803562,-0.260838,1.112179,0.437267,0.827985,-0.253353,1.101439,0.416227,0.851737,-0.245027,1.089890,0.394728,0.874850,-0.235719,1.080018,0.372244,0.897680,-0.225051,1.070807,0.348846,0.921351,-0.214051,1.063180,0.324961,0.943818,-0.202039,1.056148,0.300836,0.966368,-0.189134,1.049277,0.276333,0.987426,-0.175613,1.042176,0.251862,1.010162,-0.161473,1.038567,0.227217,1.031224,-0.146866,1.034102,0.203582,1.052317,-0.131644,1.031600,0.180629,1.070879,-0.115909,1.028913,0.158165,1.087407,-0.099638,1.026193,0.135905,1.102159,-0.083091,1.023567,0.113394,1.114006,-0.066178,1.019567,0.090325,1.123374,-0.049430,1.014856,0.067302,1.130310,-0.032557,1.009141,0.044264,1.136334,-0.016157,1.003984,0.021807,1.142961,0.000172,0.999951,-0.000077,0.000200,-0.000129,1.416584,0.645866,0.000504,-0.000326,1.417762,0.645865,0.002016,-0.001302,1.417825,0.645866,0.004535,-0.002929,1.417142,0.645865,0.008062,-0.005207,1.416968,0.645864,0.012598,-0.008136,1.417109,0.645862,0.018141,-0.011715,1.417001,0.645859,0.024690,-0.015941,1.416878,0.645853,0.032257,-0.020823,1.417134,0.645843,0.040827,-0.026347,1.416983,0.645829,0.050411,-0.032518,1.416949,0.645808,0.061007,-0.039330,1.416694,0.645781,0.072621,-0.046783,1.416599,0.645746,0.085249,-0.054865,1.416241,0.645695,0.098897,-0.063563,1.415832,0.645630,0.113546,-0.072607,1.415264,0.645529,0.129220,-0.082257,1.414482,0.645396,0.145888,-0.092515,1.413626,0.645268,0.163659,-0.103393,1.412710,0.645018,0.182385,-0.114684,1.411418,0.644739,0.202078,-0.126098,1.409822,0.644348,0.222772,-0.138145,1.407948,0.643872,0.244370,-0.150405,1.405678,0.643255,0.266787,-0.162798,1.402763,0.642463,0.289844,-0.175434,1.398863,0.641504,0.313540,-0.188158,1.394695,0.640346,0.337489,-0.201014,1.389376,0.639042,0.362008,-0.213719,1.382439,0.637412,0.387990,-0.225248,1.373281,0.634930,0.414728,-0.236348,1.363729,0.631861,0.441635,-0.246701,1.352304,0.628155,0.468588,-0.256167,1.339162,0.623625,0.495337,-0.264662,1.323811,0.618458,0.521886,-0.272207,1.307630,0.612373,0.548355,-0.278890,1.291265,0.605263,0.574535,-0.284442,1.273752,0.597048,0.600870,-0.288389,1.256171,0.587401,0.627715,-0.290816,1.238447,0.576001,0.653830,-0.291886,1.221036,0.563198,0.679175,-0.291629,1.202283,0.549249,0.704539,-0.290489,1.185866,0.533881,0.729126,-0.287529,1.168822,0.516966,0.754297,-0.283184,1.152934,0.498501,0.778678,-0.277732,1.137821,0.478728,0.802473,-0.271203,1.123387,0.457814,0.826596,-0.263494,1.110573,0.435865,0.850835,-0.254572,1.099099,0.412597,0.874203,-0.244815,1.088403,0.388995,0.897271,-0.233993,1.078085,0.364487,0.919667,-0.221934,1.068543,0.339344,0.943001,-0.209714,1.061081,0.313770,0.965688,-0.196367,1.054023,0.287928,0.987598,-0.182263,1.047247,0.262157,1.009280,-0.167775,1.041376,0.236855,1.031762,-0.152530,1.037647,0.211847,1.051965,-0.136809,1.033396,0.187546,1.071699,-0.120418,1.031021,0.164186,1.088881,-0.103618,1.028403,0.141184,1.103482,-0.086271,1.024987,0.117665,1.115646,-0.068973,1.020884,0.093896,1.125258,-0.051285,1.015966,0.069978,1.132045,-0.033998,1.009990,0.046126,1.138004,-0.016696,1.004270,0.022635,1.144463,0.000089,0.999987,-0.000016,0.000200,-0.000136,1.463614,0.681786,0.000504,-0.000344,1.465345,0.681785,0.002015,-0.001374,1.464172,0.681783,0.004535,-0.003092,1.464846,0.681784,0.008062,-0.005496,1.464783,0.681784,0.012598,-0.008588,1.464883,0.681781,0.018141,-0.012366,1.464740,0.681777,0.024692,-0.016829,1.464665,0.681770,0.032258,-0.021980,1.464720,0.681760,0.040829,-0.027811,1.464625,0.681742,0.050415,-0.034324,1.464571,0.681720,0.061013,-0.041513,1.464346,0.681688,0.072628,-0.049375,1.464131,0.681644,0.085264,-0.057903,1.463847,0.681588,0.098918,-0.067067,1.463369,0.681509,0.113568,-0.076570,1.462549,0.681389,0.129265,-0.086782,1.461703,0.681239,0.145997,-0.097637,1.460840,0.681047,0.163751,-0.109101,1.459737,0.680806,0.182505,-0.120922,1.458231,0.680480,0.202241,-0.133007,1.456393,0.680042,0.222987,-0.145693,1.454258,0.679503,0.244638,-0.158488,1.451543,0.678792,0.267132,-0.171585,1.448115,0.677907,0.290365,-0.184746,1.443992,0.676796,0.314178,-0.198101,1.439271,0.675498,0.338289,-0.211370,1.432830,0.673922,0.362543,-0.224489,1.424163,0.672151,0.388470,-0.236914,1.415160,0.669601,0.415105,-0.248342,1.403811,0.666255,0.441925,-0.258957,1.390149,0.662166,0.468668,-0.268556,1.374104,0.657229,0.495720,-0.277359,1.358102,0.651347,0.522574,-0.285078,1.340754,0.644598,0.548981,-0.291718,1.322033,0.636820,0.574946,-0.297087,1.302148,0.627812,0.600744,-0.301079,1.282130,0.617485,0.627565,-0.303566,1.263339,0.605047,0.653598,-0.304330,1.242712,0.591167,0.679239,-0.303820,1.223212,0.576025,0.704043,-0.302064,1.203763,0.559649,0.728796,-0.299095,1.185434,0.541271,0.753581,-0.294392,1.167630,0.521800,0.778577,-0.288603,1.151930,0.500628,0.802550,-0.281604,1.136072,0.478434,0.825803,-0.273472,1.121673,0.455384,0.849768,-0.264011,1.108491,0.430811,0.873250,-0.253653,1.096550,0.405524,0.896725,-0.242642,1.085905,0.380038,0.919158,-0.230191,1.075091,0.353482,0.942236,-0.217145,1.066848,0.326605,0.965031,-0.203555,1.059310,0.299842,0.987048,-0.188777,1.051749,0.272859,1.008718,-0.173613,1.044999,0.246040,1.031097,-0.157972,1.040066,0.219826,1.052493,-0.141589,1.035951,0.194278,1.071773,-0.124814,1.032520,0.169830,1.089646,-0.107321,1.029803,0.146135,1.104932,-0.089726,1.026612,0.122127,1.117687,-0.071433,1.022391,0.097461,1.127188,-0.053395,1.017113,0.072556,1.134010,-0.035151,1.010934,0.047749,1.139746,-0.017427,1.004633,0.023530,1.146205,0.000151,1.000020,-0.000106,0.000200,-0.000144,1.517643,0.718949,0.000504,-0.000362,1.516387,0.718947,0.002016,-0.001449,1.516742,0.718946,0.004536,-0.003261,1.517196,0.718946,0.008063,-0.005796,1.516806,0.718945,0.012598,-0.009057,1.516986,0.718943,0.018140,-0.013039,1.516603,0.718937,0.024694,-0.017747,1.516739,0.718929,0.032260,-0.023178,1.516994,0.718917,0.040831,-0.029325,1.516649,0.718896,0.050419,-0.036192,1.516594,0.718870,0.061019,-0.043770,1.516327,0.718833,0.072638,-0.052056,1.516054,0.718782,0.085274,-0.061039,1.515628,0.718714,0.098938,-0.070676,1.515199,0.718623,0.113607,-0.080679,1.514222,0.718483,0.129329,-0.091485,1.513354,0.718316,0.146077,-0.102931,1.512301,0.718096,0.163856,-0.114986,1.510977,0.717818,0.182640,-0.127305,1.509225,0.717432,0.202432,-0.140147,1.507152,0.716939,0.223229,-0.153468,1.504780,0.716331,0.244943,-0.166875,1.501612,0.715527,0.267559,-0.180658,1.497898,0.714523,0.290926,-0.194405,1.493208,0.713266,0.314863,-0.208302,1.487388,0.711758,0.339053,-0.222020,1.479677,0.709982,0.363627,-0.235683,1.470950,0.707958,0.388887,-0.248723,1.459907,0.705346,0.415474,-0.260563,1.446579,0.701644,0.442065,-0.271352,1.429962,0.697134,0.469418,-0.281541,1.414343,0.691665,0.496419,-0.290429,1.395681,0.685227,0.523071,-0.298032,1.375347,0.677815,0.549641,-0.304679,1.354816,0.669063,0.575489,-0.309902,1.332505,0.659071,0.601108,-0.313771,1.309752,0.647799,0.627199,-0.316225,1.288381,0.634856,0.653243,-0.316679,1.265785,0.619627,0.678960,-0.315816,1.244333,0.603244,0.704055,-0.313776,1.223315,0.585191,0.728713,-0.310417,1.203142,0.565969,0.753301,-0.305786,1.184323,0.545347,0.777890,-0.299262,1.166070,0.522753,0.802354,-0.291830,1.149599,0.499017,0.826005,-0.283281,1.133655,0.474335,0.848920,-0.273512,1.118132,0.449019,0.872765,-0.262525,1.105606,0.422329,0.895950,-0.250769,1.093539,0.395057,0.918816,-0.238257,1.082388,0.367709,0.941089,-0.224381,1.072484,0.339350,0.964514,-0.210289,1.064054,0.311239,0.987128,-0.195488,1.056645,0.283272,1.009064,-0.179491,1.049549,0.255163,1.030163,-0.163172,1.042741,0.227757,1.052502,-0.146457,1.038270,0.200970,1.072971,-0.129054,1.035014,0.175767,1.091223,-0.111285,1.032231,0.151118,1.106518,-0.092617,1.028211,0.126196,1.119235,-0.074168,1.023686,0.100828,1.129311,-0.055212,1.018311,0.075240,1.135983,-0.036571,1.011485,0.049558,1.141648,-0.017954,1.004952,0.024273,1.147938,0.000125,1.000009,-0.000048,0.000199,-0.000151,1.566887,0.757466,0.000504,-0.000382,1.574111,0.757466,0.002016,-0.001527,1.573735,0.757466,0.004535,-0.003435,1.573737,0.757466,0.008062,-0.006107,1.573782,0.757464,0.012599,-0.009542,1.573796,0.757460,0.018142,-0.013739,1.573710,0.757455,0.024694,-0.018697,1.573562,0.757446,0.032259,-0.024418,1.573667,0.757429,0.040834,-0.030895,1.573555,0.757407,0.050422,-0.038127,1.573383,0.757376,0.061025,-0.046108,1.573086,0.757332,0.072650,-0.054835,1.572833,0.757274,0.085296,-0.064294,1.572395,0.757195,0.098962,-0.074376,1.571729,0.757087,0.113649,-0.084955,1.570571,0.756925,0.129389,-0.096334,1.569582,0.756729,0.146167,-0.108406,1.568444,0.756481,0.163973,-0.121056,1.566905,0.756158,0.182798,-0.133970,1.564939,0.755715,0.202650,-0.147522,1.562666,0.755167,0.223502,-0.161466,1.559877,0.754465,0.245269,-0.175539,1.556008,0.753552,0.268010,-0.189957,1.552013,0.752420,0.291474,-0.204361,1.546509,0.751008,0.315527,-0.218714,1.539575,0.749266,0.339954,-0.233029,1.530968,0.747232,0.364649,-0.247149,1.520994,0.744906,0.389520,-0.260672,1.507748,0.742123,0.415717,-0.272873,1.491777,0.738187,0.442862,-0.284317,1.475658,0.733189,0.469939,-0.294552,1.456572,0.727165,0.496916,-0.303517,1.435237,0.720043,0.523480,-0.311061,1.412192,0.711640,0.550092,-0.317596,1.389033,0.702174,0.576384,-0.322921,1.365086,0.691225,0.602280,-0.326806,1.341317,0.678841,0.627676,-0.329057,1.316518,0.664815,0.653458,-0.329372,1.291877,0.648548,0.679227,-0.328067,1.268126,0.630676,0.704476,-0.325585,1.244424,0.611585,0.729232,-0.321775,1.223010,0.590803,0.753405,-0.316713,1.201297,0.568653,0.777274,-0.309858,1.181071,0.544763,0.801882,-0.301866,1.162826,0.519747,0.826030,-0.292861,1.145704,0.493531,0.849359,-0.282794,1.129629,0.466900,0.871837,-0.271197,1.114155,0.439230,0.895896,-0.258954,1.102334,0.410570,0.918951,-0.245878,1.090163,0.381314,0.941148,-0.231897,1.078738,0.352268,0.963464,-0.216743,1.068862,0.322688,0.986628,-0.201486,1.061077,0.293523,1.009289,-0.185521,1.053561,0.264125,1.030659,-0.168429,1.046627,0.235706,1.052382,-0.151210,1.040953,0.208022,1.073476,-0.133289,1.036534,0.181245,1.092237,-0.114768,1.033580,0.155661,1.108200,-0.095917,1.029997,0.130223,1.121435,-0.076492,1.025374,0.104098,1.131382,-0.057204,1.019485,0.077776,1.137994,-0.037747,1.012188,0.051250,1.143441,-0.018673,1.005309,0.025245,1.149714,0.000216,1.000004,-0.000120,0.000200,-0.000159,1.633988,0.797469,0.000504,-0.000402,1.636076,0.797469,0.002016,-0.001607,1.635679,0.797467,0.004535,-0.003617,1.636040,0.797468,0.008063,-0.006430,1.636159,0.797467,0.012599,-0.010046,1.636128,0.797462,0.018141,-0.014464,1.635730,0.797457,0.024696,-0.019685,1.635836,0.797445,0.032259,-0.025705,1.635719,0.797426,0.040835,-0.032523,1.635610,0.797401,0.050425,-0.040135,1.635460,0.797363,0.061033,-0.048536,1.635182,0.797313,0.072661,-0.057718,1.634817,0.797243,0.085315,-0.067666,1.634314,0.797150,0.098985,-0.078179,1.633350,0.797016,0.113699,-0.089383,1.632253,0.796839,0.129456,-0.101364,1.631025,0.796623,0.146275,-0.114081,1.629867,0.796331,0.164108,-0.127318,1.628043,0.795956,0.182983,-0.140901,1.625813,0.795458,0.202891,-0.155174,1.623149,0.794834,0.223787,-0.169654,1.619686,0.794015,0.245678,-0.184540,1.615694,0.793013,0.268495,-0.199543,1.610812,0.791727,0.292093,-0.214639,1.604629,0.790107,0.316184,-0.229499,1.596061,0.788154,0.340986,-0.244407,1.587195,0.785797,0.365808,-0.258907,1.575031,0.783093,0.390528,-0.272746,1.559448,0.779970,0.416510,-0.285845,1.543294,0.775852,0.443443,-0.297404,1.523476,0.770323,0.470442,-0.307757,1.501515,0.763721,0.497499,-0.316846,1.477841,0.755889,0.524316,-0.324561,1.452427,0.746662,0.551212,-0.331060,1.427421,0.736004,0.577323,-0.335956,1.400369,0.723810,0.602976,-0.339501,1.373093,0.710184,0.628357,-0.341577,1.345853,0.695017,0.653642,-0.342031,1.319040,0.677972,0.679440,-0.340342,1.292490,0.658877,0.704744,-0.337356,1.267182,0.638085,0.729692,-0.333042,1.243280,0.615615,0.753920,-0.327504,1.219751,0.592054,0.777695,-0.320537,1.197796,0.566967,0.801426,-0.311880,1.176872,0.540643,0.825649,-0.302211,1.158160,0.512906,0.849282,-0.291665,1.141257,0.484587,0.872341,-0.280050,1.125469,0.455556,0.895110,-0.266978,1.110222,0.425652,0.918841,-0.253326,1.097419,0.395015,0.941209,-0.238899,1.086101,0.364948,0.963142,-0.223523,1.075023,0.334151,0.985996,-0.207346,1.065628,0.303708,1.008718,-0.190889,1.057256,0.273008,1.030554,-0.173517,1.049720,0.243221,1.053085,-0.155645,1.043837,0.214426,1.074267,-0.137472,1.039312,0.187036,1.093591,-0.118385,1.035457,0.160512,1.109850,-0.098883,1.031630,0.134384,1.123516,-0.079050,1.026762,0.107424,1.133578,-0.058977,1.020640,0.080317,1.140289,-0.039013,1.013096,0.052944,1.145610,-0.019228,1.005694,0.025989,1.151704,0.000105,0.999981,-0.000019,0.000200,-0.000168,1.704841,0.839096,0.000504,-0.000423,1.704242,0.839097,0.002016,-0.001691,1.703821,0.839091,0.004534,-0.003805,1.703804,0.839094,0.008063,-0.006765,1.704224,0.839092,0.012598,-0.010570,1.704013,0.839087,0.018142,-0.015219,1.703889,0.839079,0.024697,-0.020712,1.704023,0.839066,0.032261,-0.027046,1.703836,0.839045,0.040837,-0.034218,1.703608,0.839014,0.050429,-0.042224,1.703414,0.838972,0.061041,-0.051061,1.703148,0.838912,0.072676,-0.060717,1.702744,0.838831,0.085340,-0.071175,1.702223,0.838724,0.099023,-0.082182,1.700984,0.838567,0.113759,-0.094007,1.699764,0.838367,0.129546,-0.106621,1.698462,0.838112,0.146382,-0.119956,1.696938,0.837782,0.164260,-0.133760,1.694868,0.837346,0.183188,-0.148108,1.692262,0.836780,0.203158,-0.163075,1.689251,0.836073,0.224147,-0.178255,1.685408,0.835148,0.246147,-0.193900,1.680946,0.833992,0.269072,-0.209553,1.675277,0.832546,0.292718,-0.225226,1.667626,0.830727,0.317159,-0.240836,1.658952,0.828510,0.341979,-0.256103,1.647624,0.825843,0.366844,-0.270887,1.633014,0.822760,0.392043,-0.285324,1.617191,0.819159,0.417356,-0.298817,1.597501,0.814788,0.444093,-0.310711,1.575184,0.808751,0.471379,-0.321410,1.551590,0.801294,0.498267,-0.330421,1.524134,0.792711,0.525401,-0.338331,1.496672,0.782480,0.551846,-0.344430,1.467062,0.770659,0.578009,-0.349047,1.436943,0.757348,0.604054,-0.352490,1.407611,0.742541,0.629387,-0.354158,1.377441,0.726071,0.654435,-0.354422,1.347651,0.707524,0.679845,-0.352663,1.318769,0.687067,0.704892,-0.348994,1.290600,0.664637,0.729763,-0.344105,1.263997,0.640663,0.754345,-0.338129,1.239273,0.615484,0.778629,-0.330905,1.215858,0.589210,0.801939,-0.322113,1.192318,0.561550,0.825723,-0.311673,1.171380,0.532175,0.849387,-0.300410,1.152991,0.502055,0.872792,-0.288328,1.136139,0.471308,0.895083,-0.275087,1.119534,0.440427,0.918335,-0.260700,1.105542,0.409260,0.941577,-0.245717,1.093070,0.377142,0.963992,-0.230079,1.081207,0.345289,0.986510,-0.213523,1.071488,0.313508,1.008806,-0.196157,1.062011,0.281962,1.030724,-0.178467,1.053240,0.251177,1.053782,-0.160291,1.047057,0.220986,1.075451,-0.141308,1.041842,0.192256,1.094947,-0.121975,1.037704,0.165023,1.111783,-0.101744,1.033300,0.138228,1.125525,-0.081476,1.028234,0.110679,1.135873,-0.060770,1.021695,0.082672,1.142478,-0.040207,1.013838,0.054506,1.147889,-0.019908,1.006166,0.026938,1.153852,0.000204,0.999983,-0.000123,0.000199,-0.000176,1.771601,0.882501,0.000504,-0.000445,1.779195,0.882504,0.002016,-0.001779,1.779635,0.882498,0.004536,-0.004003,1.779586,0.882499,0.008062,-0.007115,1.778613,0.882496,0.012598,-0.011116,1.778678,0.882492,0.018142,-0.016005,1.778531,0.882481,0.024696,-0.021782,1.778556,0.882466,0.032262,-0.028444,1.778507,0.882442,0.040842,-0.035987,1.778385,0.882408,0.050436,-0.044404,1.778034,0.882364,0.061053,-0.053695,1.777761,0.882287,0.072692,-0.063842,1.777256,0.882190,0.085364,-0.074821,1.776518,0.882067,0.099064,-0.086368,1.775080,0.881884,0.113828,-0.098805,1.773836,0.881657,0.129649,-0.112090,1.772370,0.881361,0.146518,-0.126067,1.770594,0.880982,0.164440,-0.140493,1.768089,0.880484,0.183437,-0.155646,1.765301,0.879843,0.203468,-0.171266,1.761698,0.879035,0.224562,-0.187231,1.757518,0.877982,0.246665,-0.203540,1.752318,0.876667,0.269652,-0.219916,1.745356,0.875028,0.293531,-0.236255,1.737186,0.872977,0.318048,-0.252410,1.726709,0.870448,0.342963,-0.268192,1.713109,0.867400,0.368336,-0.283587,1.698087,0.863882,0.393512,-0.298186,1.678638,0.859724,0.418602,-0.311882,1.655604,0.854835,0.445080,-0.324500,1.632250,0.848353,0.472289,-0.335295,1.605069,0.840218,0.499128,-0.344256,1.573846,0.830556,0.525834,-0.351716,1.541120,0.819269,0.553177,-0.358241,1.511385,0.806222,0.579480,-0.362640,1.477866,0.791647,0.605205,-0.365513,1.444218,0.775398,0.630617,-0.366822,1.410954,0.757144,0.655730,-0.366785,1.379010,0.737323,0.680529,-0.364904,1.347280,0.715601,0.705800,-0.360990,1.316416,0.691547,0.730550,-0.355397,1.286344,0.666141,0.754970,-0.348664,1.258954,0.638929,0.779042,-0.340774,1.232965,0.611015,0.802839,-0.331767,1.209775,0.581877,0.825793,-0.321054,1.185813,0.551509,0.849512,-0.309016,1.165080,0.519698,0.873120,-0.296369,1.147091,0.487506,0.895942,-0.282704,1.129658,0.455320,0.917996,-0.268007,1.113463,0.422605,0.941281,-0.252329,1.100040,0.389347,0.964584,-0.236203,1.087973,0.356430,0.986371,-0.219209,1.075983,0.323089,1.009522,-0.201588,1.066940,0.290806,1.031976,-0.183296,1.057999,0.258682,1.053461,-0.164509,1.049542,0.227722,1.076121,-0.145165,1.043718,0.197439,1.096597,-0.125199,1.039607,0.169578,1.113908,-0.104921,1.035528,0.142222,1.127939,-0.083623,1.029807,0.113802,1.138391,-0.062589,1.023312,0.085164,1.145110,-0.041376,1.014806,0.056186,1.150141,-0.020433,1.006501,0.027654,1.156069,0.000097,0.999949,-0.000046,0.000200,-0.000185,1.858268,0.927857,0.000504,-0.000468,1.861583,0.927859,0.002016,-0.001870,1.860659,0.927855,0.004535,-0.004208,1.860963,0.927867,0.008063,-0.007480,1.860766,0.927855,0.012594,-0.011683,1.859996,0.927851,0.018142,-0.016828,1.860739,0.927839,0.024698,-0.022901,1.860763,0.927818,0.032263,-0.029903,1.860501,0.927791,0.040846,-0.037834,1.860431,0.927751,0.050440,-0.046680,1.859827,0.927690,0.061066,-0.056446,1.859624,0.927610,0.072713,-0.067109,1.859039,0.927505,0.085393,-0.078613,1.858144,0.927357,0.099120,-0.090747,1.856618,0.927145,0.113910,-0.103850,1.855221,0.926884,0.129755,-0.117777,1.853470,0.926546,0.146669,-0.132441,1.851413,0.926104,0.164648,-0.147565,1.848498,0.925530,0.183708,-0.163470,1.845281,0.924802,0.203832,-0.179763,1.841273,0.923871,0.225029,-0.196564,1.836481,0.922691,0.247221,-0.213537,1.830273,0.921198,0.270343,-0.230662,1.822374,0.919320,0.294399,-0.247740,1.812975,0.917008,0.319040,-0.264448,1.800693,0.914141,0.344269,-0.280831,1.785923,0.910707,0.369625,-0.296478,1.767203,0.906585,0.394925,-0.311287,1.744434,0.901918,0.420583,-0.325578,1.720938,0.896240,0.446200,-0.338384,1.693005,0.889335,0.472969,-0.349187,1.660901,0.880394,0.500490,-0.358687,1.628806,0.869705,0.527312,-0.366042,1.593001,0.857145,0.554207,-0.372045,1.557046,0.842943,0.580620,-0.376134,1.520192,0.826837,0.606480,-0.378636,1.482947,0.808891,0.631815,-0.379414,1.445954,0.789119,0.657021,-0.378972,1.410833,0.767564,0.681686,-0.376728,1.376575,0.744338,0.706498,-0.372844,1.342935,0.718799,0.731258,-0.366649,1.311052,0.691756,0.755937,-0.359354,1.280478,0.662683,0.779259,-0.350487,1.250585,0.632892,0.803295,-0.340941,1.225722,0.602160,0.826570,-0.330174,1.201003,0.570520,0.849954,-0.317854,1.178488,0.537651,0.873696,-0.304426,1.158302,0.503799,0.896695,-0.290120,1.139886,0.469645,0.919149,-0.275106,1.122884,0.435625,0.942121,-0.259282,1.107691,0.401228,0.964627,-0.242123,1.093661,0.367086,0.986614,-0.224575,1.081580,0.332885,1.009623,-0.206837,1.071375,0.299209,1.033126,-0.188092,1.062241,0.266187,1.054954,-0.168637,1.052912,0.233733,1.077660,-0.149166,1.047047,0.203192,1.097983,-0.128587,1.041607,0.173918,1.115586,-0.107339,1.036850,0.145531,1.130170,-0.086203,1.031427,0.116890,1.141018,-0.064171,1.024395,0.087388,1.147681,-0.042530,1.015719,0.057733,1.152560,-0.021011,1.006883,0.028413,1.158406,0.000158,0.999897,-0.000106,0.000200,-0.000195,1.950982,0.975366,0.000504,-0.000491,1.950207,0.975365,0.002015,-0.001966,1.950675,0.975362,0.004535,-0.004423,1.951281,0.975370,0.008062,-0.007863,1.951045,0.975362,0.012597,-0.012285,1.951199,0.975356,0.018145,-0.017692,1.951528,0.975340,0.024699,-0.024074,1.951194,0.975321,0.032266,-0.031434,1.950865,0.975288,0.040853,-0.039771,1.951038,0.975244,0.050452,-0.049067,1.950336,0.975173,0.061077,-0.059324,1.949805,0.975078,0.072736,-0.070526,1.949133,0.974951,0.085431,-0.082528,1.947947,0.974777,0.099182,-0.095345,1.946337,0.974540,0.113999,-0.109118,1.944725,0.974241,0.129888,-0.123741,1.942857,0.973852,0.146842,-0.139071,1.940251,0.973342,0.164890,-0.154986,1.937086,0.972684,0.184025,-0.171661,1.933404,0.971856,0.204245,-0.188672,1.928770,0.970785,0.225528,-0.206252,1.923041,0.969448,0.247841,-0.223972,1.915788,0.967742,0.271157,-0.241827,1.907008,0.965607,0.295297,-0.259562,1.895854,0.963007,0.320121,-0.276909,1.881289,0.959722,0.345566,-0.293883,1.864528,0.955831,0.371012,-0.309816,1.842062,0.951127,0.396834,-0.325157,1.818068,0.945725,0.422277,-0.339357,1.788874,0.939318,0.447928,-0.352387,1.758283,0.931470,0.474315,-0.363680,1.723668,0.921900,0.501560,-0.372963,1.686081,0.909996,0.528391,-0.380159,1.645816,0.896244,0.554754,-0.385545,1.603709,0.880326,0.581888,-0.389778,1.565475,0.862716,0.607791,-0.391839,1.524196,0.843146,0.633511,-0.392331,1.483921,0.821554,0.658621,-0.391193,1.445013,0.798336,0.683160,-0.388424,1.406963,0.773299,0.707429,-0.384104,1.370996,0.746668,0.732212,-0.377945,1.335879,0.717502,0.756871,-0.369856,1.302489,0.686954,0.781065,-0.360707,1.271815,0.655372,0.804167,-0.350091,1.242416,0.622683,0.827948,-0.338941,1.217208,0.589185,0.850901,-0.326427,1.192354,0.555005,0.873589,-0.312199,1.169639,0.519594,0.897085,-0.297374,1.150181,0.484105,0.920459,-0.281932,1.132858,0.448661,0.942637,-0.265625,1.115401,0.413051,0.965341,-0.248332,1.101078,0.377329,0.987530,-0.229983,1.087377,0.342349,1.010739,-0.211647,1.076582,0.307824,1.033449,-0.192725,1.065900,0.273368,1.055618,-0.172726,1.056958,0.240238,1.079345,-0.152640,1.049620,0.208322,1.100058,-0.131931,1.044084,0.178242,1.118547,-0.110351,1.039387,0.149493,1.132748,-0.088128,1.033049,0.119673,1.143419,-0.066069,1.025521,0.089728,1.150316,-0.043513,1.016378,0.059253,1.155208,-0.021593,1.007506,0.029140,1.160871,0.000111,0.999916,-0.000035,0.000201,-0.000206,2.061000,1.025243,0.000504,-0.000516,2.049647,1.025237,0.002015,-0.002066,2.050169,1.025237,0.004535,-0.004650,2.051254,1.025255,0.008063,-0.008266,2.051302,1.025236,0.012600,-0.012915,2.051508,1.025226,0.018144,-0.018594,2.050981,1.025215,0.024700,-0.025304,2.050841,1.025190,0.032267,-0.033038,2.050537,1.025152,0.040852,-0.041795,2.050660,1.025090,0.050460,-0.051570,2.049921,1.025017,0.061094,-0.062347,2.049350,1.024908,0.072762,-0.074111,2.048517,1.024760,0.085475,-0.086661,2.047009,1.024555,0.099249,-0.100160,2.045261,1.024278,0.114106,-0.114628,2.043508,1.023941,0.130032,-0.130002,2.041321,1.023488,0.147050,-0.145985,2.038299,1.022905,0.165164,-0.162762,2.034658,1.022151,0.184380,-0.180172,2.030312,1.021200,0.204704,-0.198022,2.024944,1.019966,0.226129,-0.216359,2.018546,1.018424,0.248582,-0.234923,2.010153,1.016519,0.272011,-0.253474,1.999659,1.014072,0.296259,-0.271820,1.986076,1.011071,0.321423,-0.289959,1.970618,1.007389,0.346897,-0.307283,1.949667,1.002955,0.372750,-0.323817,1.925287,0.997633,0.398603,-0.339241,1.896006,0.991354,0.424351,-0.353633,1.863658,0.983937,0.449887,-0.366660,1.827430,0.975254,0.475715,-0.378213,1.789521,0.964753,0.502204,-0.387133,1.745632,0.951594,0.530179,-0.394976,1.705347,0.936344,0.556732,-0.400134,1.658928,0.918907,0.583123,-0.403439,1.613077,0.899504,0.609477,-0.405285,1.567884,0.878172,0.634927,-0.405055,1.523507,0.854396,0.660357,-0.403494,1.481712,0.829259,0.684851,-0.400104,1.439000,0.802359,0.709654,-0.395536,1.400956,0.773534,0.733472,-0.388996,1.362156,0.743230,0.757502,-0.380263,1.325113,0.711090,0.782249,-0.370594,1.292913,0.677166,0.806017,-0.359509,1.262088,0.642527,0.828687,-0.347126,1.232059,0.607589,0.852372,-0.334474,1.207160,0.571938,0.874266,-0.320074,1.181978,0.535518,0.898168,-0.304719,1.161156,0.498375,0.920456,-0.288246,1.140667,0.461179,0.942832,-0.271311,1.122780,0.424533,0.966458,-0.254154,1.108743,0.387784,0.988907,-0.235659,1.093872,0.351689,1.011557,-0.216322,1.081959,0.315743,1.035099,-0.197007,1.070885,0.280402,1.056354,-0.176878,1.059968,0.246472,1.079854,-0.156058,1.051815,0.212818,1.101494,-0.134772,1.045757,0.182143,1.120587,-0.113071,1.041169,0.152867,1.135399,-0.090411,1.034844,0.122796,1.146612,-0.067477,1.026974,0.091888,1.153168,-0.044849,1.017303,0.060779,1.157912,-0.021998,1.007735,0.029919,1.163607,0.000121,0.999959,0.000003,0.000200,-0.000216,2.163956,1.077737,0.000504,-0.000543,2.161128,1.077732,0.002016,-0.002173,2.162732,1.077729,0.004535,-0.004887,2.161402,1.077749,0.008066,-0.008692,2.163252,1.077732,0.012599,-0.013576,2.161300,1.077727,0.018145,-0.019546,2.161151,1.077702,0.024702,-0.026599,2.161223,1.077675,0.032272,-0.034729,2.160949,1.077632,0.040862,-0.043936,2.160967,1.077575,0.050470,-0.054203,2.160035,1.077473,0.061113,-0.065528,2.159490,1.077348,0.072794,-0.077882,2.158517,1.077178,0.085528,-0.091030,2.156605,1.076937,0.099337,-0.105251,2.154828,1.076631,0.114228,-0.120456,2.152812,1.076229,0.130202,-0.136573,2.150298,1.075713,0.147284,-0.153306,2.146752,1.075031,0.165480,-0.170931,2.142744,1.074173,0.184793,-0.189083,2.137475,1.073063,0.205224,-0.207840,2.131320,1.071683,0.226743,-0.226939,2.123154,1.069914,0.249401,-0.246344,2.114086,1.067718,0.272955,-0.265640,2.101599,1.064924,0.297494,-0.284846,2.086612,1.061512,0.322731,-0.303452,2.067356,1.057359,0.348451,-0.321330,2.043711,1.052294,0.374451,-0.338201,2.015033,1.046153,0.400454,-0.353816,1.981139,1.039003,0.426434,-0.368216,1.944128,1.030498,0.452088,-0.381251,1.903094,1.020454,0.477901,-0.392833,1.860402,1.008793,0.504173,-0.402408,1.814402,0.994791,0.531520,-0.409545,1.766273,0.977733,0.558049,-0.414351,1.714119,0.958625,0.584778,-0.417437,1.664612,0.937189,0.610808,-0.418519,1.613793,0.913543,0.636915,-0.418094,1.565942,0.888137,0.662204,-0.415742,1.518783,0.860728,0.686848,-0.411746,1.473306,0.831793,0.710992,-0.406153,1.430153,0.800862,0.735382,-0.399519,1.389824,0.768768,0.759079,-0.390927,1.350744,0.734825,0.782912,-0.380111,1.313559,0.699450,0.806746,-0.368383,1.280028,0.663191,0.830269,-0.355606,1.249814,0.625927,0.853305,-0.341988,1.221138,0.588644,0.876326,-0.327545,1.195837,0.550849,0.898322,-0.311779,1.171844,0.512694,0.921811,-0.294944,1.150671,0.474225,0.944563,-0.277333,1.132224,0.435772,0.967089,-0.259340,1.115422,0.398001,0.989754,-0.240836,1.100405,0.360802,1.012470,-0.221293,1.086533,0.323566,1.036426,-0.201191,1.075496,0.287387,1.058709,-0.180590,1.064233,0.252184,1.081593,-0.159810,1.055296,0.218441,1.103146,-0.137772,1.047978,0.186223,1.122814,-0.115347,1.042693,0.156019,1.137790,-0.092582,1.036049,0.125579,1.149184,-0.069152,1.027944,0.093986,1.156062,-0.045661,1.018039,0.062122,1.160733,-0.022719,1.008072,0.030650,1.166487,0.000231,1.000063,-0.000120,0.000201,-0.000228,2.308308,1.133128,0.000504,-0.000571,2.283756,1.133123,0.002016,-0.002284,2.283756,1.133123,0.004535,-0.005138,2.283310,1.133144,0.008048,-0.009119,2.266192,1.133138,0.012600,-0.014274,2.284377,1.133110,0.018147,-0.020553,2.284204,1.133093,0.024702,-0.027964,2.283517,1.133060,0.032272,-0.036510,2.282997,1.133007,0.040866,-0.046188,2.282986,1.132930,0.050481,-0.056979,2.282260,1.132824,0.061133,-0.068881,2.281533,1.132678,0.072830,-0.081850,2.280504,1.132481,0.085592,-0.095657,2.278304,1.132202,0.099431,-0.110594,2.276269,1.131845,0.114360,-0.126590,2.273890,1.131383,0.130388,-0.143454,2.270761,1.130784,0.147547,-0.161029,2.266794,1.130003,0.165836,-0.179523,2.262332,1.129016,0.185269,-0.198527,2.256326,1.127738,0.205822,-0.218138,2.249031,1.126156,0.227527,-0.238141,2.239993,1.124132,0.250325,-0.258302,2.228878,1.121594,0.274070,-0.278329,2.214204,1.118449,0.298793,-0.298310,2.196654,1.114528,0.324131,-0.317462,2.173394,1.109783,0.350101,-0.335853,2.146395,1.103901,0.376293,-0.353064,2.112341,1.096954,0.402547,-0.368950,2.073700,1.088642,0.428791,-0.383462,2.031152,1.078946,0.454976,-0.396635,1.986661,1.067536,0.480566,-0.407873,1.937038,1.054403,0.506154,-0.417303,1.885155,1.038894,0.532862,-0.424194,1.830369,1.020535,0.560354,-0.429344,1.776976,0.999295,0.587114,-0.431949,1.721214,0.975990,0.613345,-0.432547,1.665739,0.950239,0.639335,-0.431338,1.612200,0.922467,0.664996,-0.428473,1.561035,0.892593,0.688947,-0.423355,1.508240,0.861325,0.713403,-0.417235,1.461776,0.828289,0.737649,-0.409848,1.418888,0.793863,0.761275,-0.400901,1.376807,0.758074,0.784778,-0.390174,1.337204,0.721974,0.808762,-0.377683,1.301527,0.682718,0.831993,-0.364037,1.267144,0.644001,0.854696,-0.349494,1.236023,0.605478,0.877933,-0.334499,1.209284,0.565588,0.900180,-0.318435,1.183967,0.526138,0.923039,-0.301669,1.161513,0.486524,0.945895,-0.283298,1.140838,0.446747,0.968069,-0.264438,1.122475,0.408041,0.991179,-0.245463,1.106968,0.369477,1.012926,-0.225680,1.091435,0.331626,1.036995,-0.205401,1.079561,0.294288,1.060909,-0.184310,1.068215,0.257696,1.083531,-0.162846,1.058133,0.223343,1.105644,-0.141040,1.050851,0.190541,1.125691,-0.117965,1.045001,0.159310,1.141297,-0.094377,1.038028,0.128238,1.152672,-0.070831,1.029694,0.096282,1.159333,-0.046853,1.019136,0.063720,1.163819,-0.022991,1.008518,0.031234,1.169564,0.000125,1.000069,-0.000024,0.000202,-0.000241,2.458341,1.191742,0.000504,-0.000600,2.418738,1.191740,0.002015,-0.002401,2.418821,1.191730,0.004535,-0.005405,2.421986,1.191756,0.008071,-0.009618,2.424988,1.191753,0.012600,-0.015012,2.420242,1.191727,0.018145,-0.021612,2.419937,1.191703,0.024704,-0.029410,2.419746,1.191662,0.032278,-0.038398,2.419409,1.191604,0.040874,-0.048574,2.418995,1.191515,0.050496,-0.059920,2.418190,1.191389,0.061160,-0.072432,2.417487,1.191221,0.072871,-0.086009,2.415853,1.190984,0.085664,-0.100559,2.413669,1.190664,0.099543,-0.116283,2.411423,1.190256,0.114520,-0.133071,2.408711,1.189719,0.130616,-0.150670,2.404900,1.189019,0.147856,-0.169197,2.400512,1.188125,0.166235,-0.188545,2.394939,1.186972,0.185804,-0.208480,2.388232,1.185515,0.206488,-0.228883,2.379190,1.183673,0.228383,-0.249897,2.369208,1.181382,0.251305,-0.270851,2.355459,1.178478,0.275349,-0.291780,2.339142,1.174857,0.300106,-0.312257,2.316655,1.170411,0.325849,-0.332225,2.291540,1.164883,0.351782,-0.350862,2.257242,1.158196,0.378248,-0.368431,2.218671,1.150173,0.404674,-0.384428,2.173680,1.140703,0.431385,-0.399230,2.127083,1.129555,0.457407,-0.411875,2.073236,1.116436,0.483275,-0.423013,2.018223,1.101373,0.509278,-0.432624,1.962674,1.084257,0.534751,-0.439261,1.900814,1.064592,0.561895,-0.443801,1.839558,1.040881,0.588677,-0.445872,1.777763,1.015208,0.614900,-0.445896,1.716550,0.987252,0.641051,-0.444148,1.657984,0.957271,0.666409,-0.440299,1.600832,0.924841,0.691872,-0.435318,1.548237,0.891185,0.716638,-0.428631,1.497572,0.855929,0.739864,-0.419872,1.447043,0.819676,0.763707,-0.410456,1.403648,0.781455,0.786744,-0.399390,1.360844,0.742965,0.809585,-0.386381,1.320529,0.703260,0.834164,-0.372622,1.286467,0.662385,0.856713,-0.357177,1.252306,0.621379,0.879820,-0.341458,1.223070,0.580238,0.902721,-0.325024,1.197115,0.539028,0.924650,-0.307543,1.172314,0.498592,0.947613,-0.289557,1.151171,0.457980,0.969590,-0.269799,1.129986,0.417696,0.992961,-0.250111,1.113321,0.377529,1.014582,-0.229761,1.097149,0.339096,1.038069,-0.209375,1.083913,0.301119,1.061661,-0.188038,1.071241,0.263506,1.085069,-0.165874,1.060508,0.227921,1.107744,-0.143437,1.052930,0.194062,1.127982,-0.120574,1.046396,0.162506,1.144541,-0.096569,1.039880,0.130788,1.155876,-0.072039,1.030946,0.098057,1.162719,-0.047888,1.020124,0.064956,1.167089,-0.023740,1.008953,0.031966,1.172775,0.000277,1.000067,-0.000111,0.000200,-0.000251,2.573709,1.253951,0.000504,-0.000632,2.572401,1.253940,0.002015,-0.002527,2.571267,1.253927,0.004535,-0.005687,2.572481,1.253948,0.008062,-0.010108,2.571851,1.253941,0.012588,-0.015780,2.568431,1.253934,0.018139,-0.022731,2.569765,1.253893,0.024709,-0.030948,2.572115,1.253853,0.032283,-0.040401,2.571456,1.253785,0.040883,-0.051105,2.571041,1.253683,0.050514,-0.063041,2.570153,1.253538,0.061188,-0.076195,2.569085,1.253336,0.072926,-0.090402,2.567184,1.253065,0.085746,-0.105745,2.564731,1.252697,0.099661,-0.122296,2.561995,1.252218,0.114699,-0.139912,2.559019,1.251590,0.130882,-0.158362,2.555017,1.250766,0.148202,-0.177856,2.549419,1.249744,0.166706,-0.198049,2.542908,1.248423,0.186404,-0.219014,2.535205,1.246741,0.207272,-0.240376,2.524893,1.244596,0.229345,-0.262230,2.512804,1.241917,0.252494,-0.284134,2.496923,1.238610,0.276690,-0.305828,2.476583,1.234474,0.301798,-0.327107,2.451548,1.229292,0.327423,-0.347300,2.418630,1.222997,0.353848,-0.366699,2.381002,1.215366,0.380342,-0.384421,2.334413,1.206199,0.407390,-0.400855,2.285660,1.195374,0.433913,-0.415241,2.228604,1.182290,0.460837,-0.428275,2.171532,1.167385,0.486381,-0.438573,2.105639,1.150401,0.511959,-0.447348,2.040835,1.130990,0.537586,-0.454152,1.974797,1.109302,0.564035,-0.458684,1.907895,1.084131,0.590690,-0.460058,1.839482,1.055803,0.617250,-0.459662,1.772332,1.025103,0.643406,-0.457260,1.707313,0.992502,0.668794,-0.452666,1.644722,0.957657,0.693930,-0.446641,1.586832,0.921340,0.718708,-0.439121,1.531197,0.883841,0.743469,-0.430429,1.480765,0.844931,0.766080,-0.419622,1.430338,0.804786,0.789801,-0.408368,1.386295,0.764206,0.812718,-0.395392,1.343758,0.722565,0.835453,-0.380699,1.304655,0.680585,0.858801,-0.364834,1.269287,0.637235,0.881537,-0.348092,1.237493,0.594579,0.904656,-0.331087,1.208862,0.552313,0.926357,-0.312966,1.182365,0.510080,0.949001,-0.294684,1.159452,0.468677,0.971598,-0.275361,1.138706,0.426723,0.994905,-0.254947,1.120552,0.385875,1.017981,-0.234109,1.104215,0.345751,1.040840,-0.213040,1.089276,0.306762,1.063893,-0.191616,1.075845,0.269066,1.086907,-0.169272,1.063788,0.232171,1.109937,-0.146076,1.054977,0.197826,1.130808,-0.122544,1.048572,0.165272,1.146831,-0.098492,1.040742,0.133280,1.158955,-0.073710,1.031818,0.100262,1.166161,-0.048610,1.020747,0.066165,1.170491,-0.024209,1.009380,0.032741,1.176111,0.000010,1.000042,0.000056,0.000202,-0.000267,2.786357,1.320169,0.000504,-0.000665,2.741889,1.320168,0.002015,-0.002660,2.740000,1.320143,0.004536,-0.005987,2.744276,1.320161,0.008063,-0.010644,2.743432,1.320162,0.012600,-0.016628,2.741741,1.320148,0.018144,-0.023937,2.741314,1.320127,0.024708,-0.032577,2.741916,1.320061,0.032290,-0.042536,2.742132,1.319976,0.040894,-0.053799,2.741199,1.319861,0.050533,-0.066361,2.740258,1.319691,0.061223,-0.080202,2.739045,1.319458,0.072985,-0.095109,2.736519,1.319138,0.085841,-0.111296,2.733903,1.318715,0.099808,-0.128685,2.730944,1.318156,0.114903,-0.147202,2.727293,1.317424,0.131164,-0.166575,2.722169,1.316485,0.148599,-0.187019,2.716148,1.315274,0.167245,-0.208240,2.708701,1.313733,0.187078,-0.230151,2.698998,1.311792,0.208153,-0.252538,2.687341,1.309343,0.230418,-0.275295,2.672621,1.306247,0.253802,-0.298066,2.653619,1.302374,0.278261,-0.320673,2.629943,1.297573,0.303527,-0.342528,2.599228,1.291625,0.329571,-0.363531,2.562226,1.284374,0.355939,-0.382963,2.515491,1.275478,0.382987,-0.401306,2.464858,1.264866,0.409917,-0.417455,2.404877,1.252184,0.437015,-0.432067,2.341408,1.237415,0.463474,-0.444204,2.271837,1.220687,0.489835,-0.454631,2.200593,1.200973,0.516054,-0.463338,2.129733,1.179346,0.541397,-0.469425,2.055635,1.155039,0.566798,-0.473526,1.980812,1.127866,0.593114,-0.474632,1.904723,1.097304,0.619945,-0.473597,1.832456,1.063603,0.646325,-0.470656,1.761501,1.027971,0.672320,-0.465675,1.694248,0.990692,0.697163,-0.458527,1.629227,0.951582,0.721472,-0.449904,1.568132,0.911197,0.745855,-0.440140,1.512084,0.869745,0.770089,-0.429338,1.460694,0.827648,0.792546,-0.416701,1.410739,0.784728,0.815161,-0.403151,1.365438,0.741884,0.837994,-0.388714,1.324811,0.697800,0.861220,-0.372573,1.287723,0.653341,0.883737,-0.355024,1.252491,0.609455,0.906784,-0.337092,1.221844,0.565275,0.928493,-0.318370,1.192881,0.521558,0.951495,-0.299605,1.169131,0.478149,0.973586,-0.280067,1.146316,0.436325,0.996400,-0.259823,1.127860,0.394409,1.019780,-0.238313,1.110521,0.353045,1.042775,-0.216506,1.093915,0.312803,1.066822,-0.194695,1.080326,0.274100,1.089869,-0.172290,1.067722,0.236657,1.113606,-0.149264,1.058471,0.201603,1.134229,-0.124814,1.050701,0.168398,1.150922,-0.100070,1.043051,0.135616,1.163224,-0.075155,1.033742,0.102144,1.169965,-0.049933,1.021818,0.067532,1.174200,-0.024461,1.009916,0.033215,1.179766,0.000188,1.000045,-0.000014,0.000202,-0.000281,2.964186,1.390880,0.000505,-0.000702,2.945157,1.390903,0.002015,-0.002802,2.931184,1.390863,0.004535,-0.006307,2.935673,1.390900,0.008063,-0.011213,2.934274,1.390890,0.012598,-0.017516,2.932216,1.390876,0.018147,-0.025221,2.933324,1.390832,0.024711,-0.034322,2.933945,1.390769,0.032295,-0.044810,2.933496,1.390674,0.040904,-0.056673,2.932487,1.390538,0.050555,-0.069906,2.931571,1.390342,0.061259,-0.084468,2.929914,1.390064,0.073053,-0.100152,2.927039,1.389695,0.085948,-0.117202,2.924241,1.389201,0.099968,-0.135531,2.920760,1.388548,0.115135,-0.154906,2.915998,1.387692,0.131496,-0.175352,2.910285,1.386611,0.149049,-0.196783,2.903174,1.385190,0.167848,-0.219066,2.894584,1.383407,0.187879,-0.241983,2.883171,1.381148,0.209143,-0.265398,2.869102,1.378261,0.231689,-0.289254,2.852238,1.374690,0.255223,-0.312776,2.828264,1.370166,0.279952,-0.336260,2.800175,1.364591,0.305572,-0.358865,2.764282,1.357758,0.331650,-0.380223,2.717845,1.349413,0.358491,-0.400252,2.665326,1.339084,0.385445,-0.418422,2.602293,1.326773,0.412947,-0.434993,2.536973,1.312141,0.439681,-0.448757,2.459463,1.295205,0.467272,-0.461427,2.386250,1.275573,0.493568,-0.471102,2.303225,1.253400,0.519743,-0.478930,2.221945,1.228890,0.544882,-0.484098,2.136425,1.201730,0.570690,-0.488125,2.057093,1.172022,0.595905,-0.489185,1.975334,1.139312,0.622747,-0.487535,1.895055,1.103038,0.648695,-0.483482,1.815995,1.064364,0.675159,-0.478096,1.744272,1.024098,0.700714,-0.470492,1.675257,0.982186,0.725641,-0.461398,1.609135,0.939137,0.748552,-0.449825,1.545091,0.894791,0.772808,-0.438185,1.489394,0.850373,0.795928,-0.425073,1.437026,0.805287,0.818900,-0.411028,1.389654,0.760003,0.841633,-0.396047,1.345873,0.714914,0.863213,-0.379637,1.305185,0.669271,0.886662,-0.362227,1.269147,0.622935,0.908504,-0.343068,1.234714,0.577757,0.931425,-0.323982,1.204997,0.532922,0.953835,-0.304347,1.178871,0.488154,0.975813,-0.284219,1.155019,0.444885,0.997662,-0.263544,1.133941,0.402224,1.021167,-0.242611,1.116100,0.360530,1.044038,-0.220065,1.098348,0.318968,1.068837,-0.197580,1.084605,0.279107,1.092548,-0.174779,1.071217,0.241111,1.116157,-0.151596,1.060486,0.204913,1.137486,-0.127478,1.052751,0.171410,1.154694,-0.101915,1.044807,0.137999,1.166867,-0.076246,1.034824,0.103807,1.173715,-0.050661,1.022501,0.068802,1.178236,-0.025355,1.010324,0.034155,1.183545,0.000205,1.000059,-0.000110,0.000201,-0.000294,3.161080,1.466721,0.000505,-0.000740,3.155526,1.466737,0.002016,-0.002957,3.152852,1.466688,0.004537,-0.006655,3.150654,1.466667,0.008066,-0.011828,3.153109,1.466694,0.012604,-0.018479,3.152143,1.466721,0.018150,-0.026598,3.151025,1.466636,0.024714,-0.036191,3.150300,1.466562,0.032301,-0.047249,3.149861,1.466450,0.040924,-0.059766,3.149548,1.466289,0.050579,-0.073703,3.147516,1.466055,0.061306,-0.089022,3.145680,1.465738,0.073135,-0.105563,3.142428,1.465301,0.086075,-0.123544,3.139113,1.464715,0.100153,-0.142853,3.135064,1.463956,0.115411,-0.163183,3.129509,1.462962,0.131876,-0.184760,3.122959,1.461670,0.149570,-0.207172,3.114153,1.460045,0.168523,-0.230578,3.103626,1.457945,0.188784,-0.254658,3.090818,1.455279,0.210264,-0.279114,3.073352,1.451998,0.233030,-0.303930,3.052592,1.447780,0.256959,-0.328517,3.025187,1.442568,0.281901,-0.352755,2.990341,1.436026,0.307728,-0.375894,2.946820,1.427979,0.334197,-0.397924,2.892845,1.418249,0.360966,-0.417914,2.827937,1.406370,0.388478,-0.436526,2.758006,1.392134,0.415567,-0.452366,2.674696,1.375244,0.443518,-0.466917,2.595136,1.355660,0.470631,-0.478417,2.504173,1.333123,0.497419,-0.487825,2.413227,1.308181,0.523961,-0.495064,2.321239,1.280227,0.549708,-0.499844,2.228911,1.249894,0.575296,-0.502844,2.138834,1.217130,0.600168,-0.503368,2.049030,1.181412,0.625874,-0.501622,1.962267,1.142648,0.652164,-0.496936,1.876900,1.101268,0.678029,-0.490319,1.796344,1.057782,0.703248,-0.481575,1.718925,1.012884,0.728520,-0.471822,1.648358,0.966487,0.752577,-0.460134,1.581989,0.919880,0.776163,-0.447164,1.520109,0.873087,0.800016,-0.433601,1.465081,0.825803,0.822176,-0.418388,1.412564,0.778249,0.844873,-0.402704,1.366184,0.730849,0.865955,-0.385633,1.321865,0.684037,0.888173,-0.368255,1.283464,0.637192,0.910994,-0.349332,1.249215,0.590131,0.934270,-0.329612,1.218366,0.543213,0.956653,-0.309228,1.189808,0.497752,0.978476,-0.288310,1.163674,0.452837,1.000755,-0.267243,1.141389,0.409481,1.023827,-0.246015,1.122012,0.367354,1.045572,-0.223777,1.103303,0.325171,1.070445,-0.200837,1.088010,0.284442,1.094268,-0.177211,1.073650,0.245138,1.118639,-0.153531,1.063051,0.208289,1.139786,-0.129074,1.053921,0.173607,1.157848,-0.104051,1.045968,0.140467,1.170697,-0.077694,1.035782,0.105594,1.177874,-0.051393,1.023483,0.069898,1.182242,-0.025392,1.010620,0.034532,1.187612,-0.000032,1.000062,-0.000035,0.000202,-0.000313,3.450327,1.548291,0.000504,-0.000780,3.396162,1.548289,0.002015,-0.003120,3.395621,1.548260,0.004533,-0.007019,3.394299,1.548217,0.008066,-0.012486,3.398803,1.548274,0.012600,-0.019500,3.396363,1.548245,0.018151,-0.028076,3.396805,1.548192,0.024722,-0.038209,3.396384,1.548109,0.032306,-0.049868,3.395158,1.547979,0.040936,-0.063077,3.394303,1.547785,0.050610,-0.077791,3.392979,1.547513,0.061360,-0.093869,3.389910,1.547134,0.073227,-0.111380,3.386669,1.546619,0.086217,-0.130371,3.382974,1.545938,0.100364,-0.150684,3.378046,1.545039,0.115733,-0.172116,3.371719,1.543880,0.132309,-0.194809,3.363764,1.542380,0.150174,-0.218431,3.353699,1.540462,0.169340,-0.242954,3.341397,1.538002,0.189788,-0.268175,3.324957,1.534894,0.211581,-0.293776,3.304776,1.530954,0.234561,-0.319619,3.278192,1.526033,0.258776,-0.345089,3.244910,1.519926,0.284059,-0.370176,3.203338,1.512296,0.310312,-0.394171,3.152477,1.502956,0.336748,-0.416137,3.083616,1.491463,0.364029,-0.436752,3.010481,1.477493,0.391575,-0.455102,2.925454,1.460933,0.419409,-0.471378,2.834380,1.441554,0.446811,-0.484714,2.733329,1.418861,0.474489,-0.496021,2.633630,1.393405,0.501751,-0.504991,2.530935,1.364633,0.528488,-0.511392,2.426653,1.333234,0.554428,-0.515395,2.323633,1.299138,0.580434,-0.517761,2.224964,1.262462,0.605474,-0.517598,2.127228,1.223784,0.629888,-0.514946,2.030545,1.182321,0.655579,-0.510177,1.939070,1.138515,0.681940,-0.503097,1.852355,1.091502,0.707228,-0.493537,1.768084,1.043464,0.731894,-0.482372,1.690840,0.994242,0.756741,-0.470312,1.619277,0.944749,0.780160,-0.456412,1.553430,0.894816,0.803384,-0.441492,1.493357,0.845202,0.826347,-0.425944,1.437830,0.795954,0.849145,-0.409532,1.388578,0.746915,0.870617,-0.391988,1.341527,0.698025,0.892943,-0.374229,1.302188,0.649579,0.913828,-0.355148,1.262877,0.601833,0.936830,-0.335238,1.230136,0.554521,0.958687,-0.313939,1.199596,0.507208,0.982008,-0.292741,1.173619,0.461357,1.003691,-0.270940,1.149015,0.416031,1.027223,-0.249102,1.128689,0.372457,1.050048,-0.226899,1.109444,0.330281,1.074105,-0.204329,1.092943,0.288987,1.098971,-0.180560,1.078591,0.249075,1.123324,-0.155987,1.066885,0.211519,1.145445,-0.130929,1.057617,0.176506,1.162856,-0.105269,1.048453,0.142345,1.175360,-0.079267,1.037439,0.107452,1.182514,-0.052547,1.024393,0.071252,1.186575,-0.025744,1.011093,0.035019,1.192050,0.000318,1.000013,-0.000152,0.000204,-0.000334,3.909175,1.636412,0.000504,-0.000825,3.678647,1.636410,0.002015,-0.003298,3.678315,1.636387,0.004533,-0.007417,3.674126,1.636310,0.008062,-0.013190,3.676771,1.636376,0.012603,-0.020613,3.678135,1.636369,0.018153,-0.029675,3.677315,1.636299,0.024723,-0.040378,3.676872,1.636196,0.032318,-0.052708,3.675750,1.636038,0.040955,-0.066660,3.674803,1.635810,0.050645,-0.082203,3.672735,1.635494,0.061429,-0.099150,3.669047,1.635048,0.073333,-0.117679,3.665401,1.634437,0.086388,-0.137725,3.661315,1.633634,0.100620,-0.159081,3.654992,1.632571,0.116087,-0.181721,3.647341,1.631202,0.132820,-0.205611,3.637877,1.629432,0.150867,-0.230542,3.626333,1.627161,0.170234,-0.256239,3.610671,1.624266,0.190981,-0.282751,3.591685,1.620589,0.213013,-0.309430,3.565864,1.615999,0.236387,-0.336427,3.534826,1.610216,0.260943,-0.362931,3.493984,1.603047,0.286497,-0.388644,3.442075,1.593920,0.312769,-0.412912,3.375973,1.582961,0.339832,-0.435635,3.299355,1.569343,0.367214,-0.456181,3.208994,1.553137,0.394935,-0.474325,3.108910,1.533791,0.422935,-0.490318,3.001767,1.511093,0.451166,-0.503827,2.891735,1.485145,0.478695,-0.514185,2.773430,1.455617,0.506313,-0.522502,2.657639,1.422946,0.533427,-0.528119,2.541132,1.387843,0.559942,-0.531430,2.426950,1.349542,0.585150,-0.531978,2.312437,1.309303,0.610500,-0.531054,2.205966,1.266280,0.635380,-0.528058,2.101993,1.221709,0.659852,-0.522751,2.002950,1.175062,0.685151,-0.515026,1.908647,1.125078,0.710920,-0.505020,1.819389,1.074296,0.736066,-0.493268,1.735806,1.022420,0.760503,-0.480032,1.658607,0.970230,0.785091,-0.465986,1.589424,0.917077,0.807523,-0.449721,1.522533,0.864888,0.830974,-0.433461,1.465416,0.813006,0.852659,-0.415808,1.409076,0.761689,0.874841,-0.397855,1.360758,0.711258,0.896322,-0.379041,1.316829,0.661721,0.918134,-0.360048,1.278574,0.612263,0.939356,-0.340108,1.242200,0.564369,0.961025,-0.318877,1.210305,0.516506,0.984371,-0.297130,1.183689,0.469342,1.006905,-0.274661,1.157466,0.423080,1.029941,-0.252234,1.135066,0.378315,1.052751,-0.229268,1.114518,0.335169,1.077981,-0.206662,1.097760,0.293336,1.102542,-0.183331,1.082051,0.252984,1.126539,-0.158797,1.068935,0.214990,1.149023,-0.133014,1.058996,0.178903,1.167550,-0.106641,1.050245,0.144559,1.179994,-0.079952,1.038648,0.108667,1.187104,-0.053316,1.025284,0.072209,1.191406,-0.026826,1.011453,0.035833,1.196748,0.000226,1.000034,-0.000061,0.000200,-0.000346,3.996419,1.732034,0.000504,-0.000873,4.000138,1.732038,0.002016,-0.003492,4.002078,1.732012,0.004538,-0.007859,4.005626,1.731962,0.008064,-0.013963,3.998500,1.731999,0.012590,-0.021794,3.995024,1.732004,0.018154,-0.031406,3.999233,1.731901,0.024727,-0.042733,3.998497,1.731774,0.032327,-0.055781,3.997064,1.731599,0.040974,-0.070543,3.995856,1.731325,0.050685,-0.086984,3.993839,1.730945,0.061506,-0.104897,3.989519,1.730417,0.073458,-0.124506,3.985313,1.729697,0.086573,-0.145706,3.979984,1.728747,0.100909,-0.168211,3.972562,1.727491,0.116509,-0.192198,3.963836,1.725854,0.133404,-0.217280,3.951919,1.723749,0.151659,-0.243556,3.937734,1.721093,0.171288,-0.270611,3.919021,1.717640,0.192301,-0.298389,3.895171,1.713272,0.214683,-0.326338,3.864171,1.707825,0.238392,-0.354394,3.824682,1.700956,0.263151,-0.381636,3.771168,1.692392,0.289155,-0.408266,3.709961,1.681769,0.315832,-0.433070,3.630302,1.668539,0.342942,-0.455741,3.534719,1.652513,0.370892,-0.476655,3.431531,1.633428,0.398985,-0.494692,3.314933,1.610694,0.427206,-0.510313,3.189741,1.584240,0.455266,-0.522760,3.058325,1.554195,0.483472,-0.532872,2.927213,1.520805,0.511192,-0.540229,2.794112,1.484026,0.538706,-0.545105,2.663786,1.443796,0.565422,-0.547251,2.534841,1.401429,0.591270,-0.547115,2.408437,1.356231,0.616787,-0.545113,2.291284,1.308887,0.641380,-0.540853,2.177478,1.260447,0.665344,-0.534561,2.069265,1.210634,0.690147,-0.527115,1.969776,1.158569,0.714578,-0.516171,1.870847,1.104593,0.740349,-0.504048,1.782674,1.049578,0.764563,-0.489683,1.698614,0.994458,0.788710,-0.474541,1.624447,0.938612,0.812154,-0.458099,1.554453,0.883694,0.834566,-0.440345,1.490045,0.830220,0.857486,-0.422491,1.432889,0.776499,0.879224,-0.403588,1.380669,0.724257,0.899971,-0.383819,1.333124,0.673311,0.922111,-0.364250,1.292648,0.622999,0.942842,-0.343873,1.253933,0.573304,0.964398,-0.323206,1.221027,0.525090,0.986860,-0.301711,1.191806,0.477580,1.009760,-0.278695,1.165162,0.430624,1.033347,-0.255591,1.141715,0.384482,1.055937,-0.232039,1.119739,0.340532,1.081178,-0.208664,1.102117,0.297311,1.105696,-0.184935,1.085062,0.256227,1.129575,-0.160673,1.070918,0.217709,1.152135,-0.135414,1.060642,0.181471,1.171221,-0.108462,1.051041,0.146380,1.184412,-0.081008,1.039694,0.110120,1.191820,-0.053710,1.025903,0.073052,1.196195,-0.026625,1.011816,0.036129,1.201677,-0.000175,0.999945,0.000098,0.000196,-0.000360,4.100786,1.836290,0.000504,-0.000925,4.370184,1.836295,0.002018,-0.003706,4.385247,1.836243,0.004534,-0.008324,4.370146,1.836210,0.008064,-0.014805,4.372335,1.836256,0.012597,-0.023116,4.359918,1.836259,0.018158,-0.033299,4.371503,1.836123,0.024732,-0.045301,4.370533,1.835988,0.032344,-0.059143,4.369649,1.835768,0.040999,-0.074779,4.367861,1.835454,0.050739,-0.092178,4.364322,1.834974,0.061594,-0.111161,4.359221,1.834355,0.073604,-0.131958,4.354620,1.833499,0.086796,-0.154393,4.347915,1.832355,0.101246,-0.178201,4.339152,1.830880,0.116990,-0.203531,4.328327,1.828936,0.134086,-0.230043,4.314240,1.826442,0.152589,-0.257718,4.296795,1.823230,0.172514,-0.286176,4.273985,1.819124,0.193853,-0.315295,4.244136,1.813909,0.216582,-0.344507,4.205152,1.807410,0.240668,-0.373646,4.154781,1.799084,0.265904,-0.401897,4.091563,1.788905,0.292226,-0.429136,4.013199,1.776206,0.319045,-0.454057,3.912886,1.760500,0.346721,-0.477219,3.800927,1.741586,0.374849,-0.497883,3.675652,1.718818,0.403078,-0.515504,3.536892,1.692138,0.431597,-0.530621,3.391351,1.661434,0.460246,-0.542852,3.242817,1.626989,0.488899,-0.552238,3.093685,1.588582,0.517215,-0.559045,2.944163,1.546300,0.544480,-0.562351,2.794189,1.501299,0.571542,-0.563394,2.650239,1.453758,0.598167,-0.562590,2.513757,1.403321,0.624104,-0.559636,2.384203,1.352431,0.648789,-0.554148,2.259149,1.298758,0.672715,-0.546779,2.140250,1.244943,0.696258,-0.537896,2.030401,1.189971,0.720048,-0.527401,1.928311,1.134526,0.744078,-0.514142,1.830175,1.076504,0.768895,-0.499352,1.740731,1.018032,0.792551,-0.482982,1.658911,0.960250,0.817007,-0.466406,1.586579,0.903029,0.839035,-0.447616,1.516969,0.846484,0.862742,-0.429261,1.458675,0.791420,0.884307,-0.409479,1.402989,0.737125,0.905641,-0.389303,1.352817,0.683912,0.926185,-0.368344,1.306684,0.632690,0.947229,-0.347366,1.267395,0.581739,0.969502,-0.326720,1.233192,0.532305,0.990758,-0.304973,1.201017,0.484166,1.012749,-0.282816,1.173018,0.437385,1.035533,-0.259084,1.147184,0.390755,1.059915,-0.235239,1.125388,0.345399,1.084348,-0.211044,1.105859,0.301356,1.109544,-0.186698,1.088888,0.259708,1.133770,-0.161900,1.073848,0.220324,1.157553,-0.136604,1.063190,0.183857,1.176461,-0.110428,1.053110,0.148521,1.190137,-0.082898,1.041484,0.112124,1.197215,-0.054554,1.026844,0.074160,1.201654,-0.026744,1.012264,0.036527,1.207085,0.000399,1.000034,-0.000201,0.000191,-0.000373,4.194318,1.950551,0.000504,-0.000983,4.804350,1.950552,0.002015,-0.003931,4.802820,1.950518,0.004536,-0.008847,4.805254,1.950472,0.008064,-0.015725,4.804152,1.950517,0.012693,-0.024740,4.826828,1.949914,0.018159,-0.035365,4.803103,1.950349,0.024740,-0.048122,4.803220,1.950183,0.032361,-0.062822,4.801522,1.949917,0.041034,-0.079430,4.799593,1.949538,0.050815,-0.097841,4.797179,1.948972,0.061702,-0.118026,4.789557,1.948246,0.073766,-0.140112,4.783293,1.947204,0.087066,-0.163819,4.775698,1.945855,0.101637,-0.189122,4.764612,1.944052,0.117558,-0.215884,4.751486,1.941710,0.134884,-0.243968,4.734791,1.938727,0.153637,-0.273170,4.712078,1.934891,0.173890,-0.303146,4.683575,1.929976,0.195643,-0.333704,4.646766,1.923740,0.218767,-0.364170,4.596814,1.915888,0.243337,-0.394530,4.535509,1.905970,0.268860,-0.423512,4.452006,1.893623,0.295173,-0.450609,4.345682,1.878286,0.322784,-0.476488,4.231632,1.859391,0.350616,-0.499420,4.093553,1.836912,0.379127,-0.519862,3.944127,1.809625,0.407860,-0.537373,3.782223,1.778529,0.436717,-0.551802,3.615563,1.742684,0.465345,-0.562951,3.440672,1.702289,0.494158,-0.571334,3.268070,1.658666,0.522896,-0.577227,3.100668,1.611027,0.551379,-0.580514,2.937615,1.559742,0.578992,-0.580610,2.778703,1.507257,0.605095,-0.577729,2.621626,1.451941,0.630653,-0.573000,2.476506,1.395218,0.656175,-0.566944,2.341592,1.337862,0.681036,-0.558988,2.216478,1.279275,0.704713,-0.549211,2.096972,1.220526,0.726894,-0.537190,1.983311,1.161709,0.749865,-0.524167,1.881100,1.102095,0.773553,-0.508991,1.785637,1.042039,0.797102,-0.491658,1.697234,0.981588,0.821187,-0.474093,1.620250,0.921265,0.843848,-0.454980,1.547071,0.862757,0.866662,-0.435421,1.482008,0.804700,0.888696,-0.414990,1.424116,0.749432,0.910945,-0.394472,1.372658,0.694767,0.932300,-0.373239,1.325157,0.641106,0.952850,-0.351347,1.282217,0.589689,0.974718,-0.329809,1.244897,0.539322,0.996445,-0.307902,1.212306,0.490083,1.017580,-0.285392,1.181402,0.442702,1.040342,-0.262782,1.155996,0.395911,1.064399,-0.238995,1.131708,0.350206,1.089464,-0.214297,1.111215,0.305175,1.115565,-0.189293,1.093094,0.262686,1.140640,-0.163843,1.077994,0.223078,1.163824,-0.137789,1.066014,0.185651,1.182577,-0.111087,1.055615,0.150045,1.195775,-0.083945,1.042940,0.113457,1.203175,-0.056145,1.028015,0.075453,1.207282,-0.027685,1.012552,0.037217,1.213019,0.000362,0.999938,-0.000293,0.000187,-0.000388,4.316009,2.076500,0.000504,-0.001048,5.317799,2.076499,0.002014,-0.004182,5.306557,2.076523,0.004539,-0.009425,5.317505,2.076453,0.008063,-0.016737,5.312143,2.076410,0.012614,-0.026171,5.316434,2.076389,0.018158,-0.037641,5.307836,2.076265,0.024767,-0.051266,5.315297,2.076044,0.032372,-0.066859,5.307433,2.075743,0.041066,-0.084538,5.304809,2.075270,0.050871,-0.104062,5.299277,2.074622,0.061821,-0.125613,5.293419,2.073708,0.073970,-0.149085,5.286629,2.072457,0.087375,-0.174214,5.275937,2.070804,0.102105,-0.201136,5.263267,2.068647,0.118223,-0.229505,5.246309,2.065846,0.135814,-0.259217,5.225496,2.062189,0.154887,-0.289990,5.196580,2.057566,0.175510,-0.321618,5.160716,2.051593,0.197636,-0.353632,5.112202,2.043949,0.221168,-0.385303,5.046981,2.034445,0.246099,-0.416511,4.965386,2.022368,0.272070,-0.446377,4.860735,2.007160,0.299090,-0.474279,4.735140,1.988598,0.326702,-0.499809,4.584962,1.965865,0.355017,-0.522790,4.420447,1.938705,0.383856,-0.542755,4.241942,1.906370,0.413059,-0.559903,4.053302,1.869455,0.441882,-0.573174,3.852753,1.827946,0.471516,-0.584151,3.660377,1.781652,0.500872,-0.591843,3.466027,1.730885,0.529677,-0.596253,3.272812,1.676821,0.557683,-0.597604,3.084286,1.620064,0.585652,-0.596591,2.906111,1.560909,0.612819,-0.593138,2.738258,1.500318,0.639848,-0.588245,2.584172,1.438127,0.664758,-0.580140,2.430697,1.375746,0.688754,-0.570189,2.290701,1.312727,0.712848,-0.559420,2.162679,1.250063,0.735111,-0.546570,2.042186,1.187840,0.757521,-0.532944,1.933435,1.125513,0.780056,-0.517981,1.833524,1.063827,0.802513,-0.500724,1.739053,1.002154,0.825462,-0.481625,1.652381,0.939811,0.848973,-0.462327,1.577560,0.878279,0.871521,-0.441928,1.509291,0.819200,0.892325,-0.420297,1.443799,0.761607,0.914935,-0.399072,1.389647,0.705351,0.936429,-0.377232,1.339903,0.650213,0.957614,-0.355091,1.295467,0.597773,0.979578,-0.332767,1.256692,0.545914,1.000860,-0.310147,1.221666,0.495661,1.022550,-0.287395,1.190775,0.448026,1.045005,-0.264582,1.162641,0.400490,1.068703,-0.241464,1.138358,0.354088,1.093098,-0.217504,1.115973,0.309812,1.119230,-0.192140,1.096284,0.266297,1.144608,-0.165975,1.080042,0.225831,1.168599,-0.139174,1.067749,0.187761,1.187970,-0.111910,1.056635,0.151322,1.201240,-0.083978,1.043566,0.114337,1.208895,-0.056089,1.028366,0.076083,1.213344,-0.028369,1.013074,0.037735,1.219220,-0.000534,0.999968,0.000076,0.000182,-0.000404,4.433519,2.216201,0.000504,-0.001117,5.911693,2.216198,0.002017,-0.004469,5.919142,2.216190,0.004536,-0.010051,5.913172,2.216130,0.008065,-0.017867,5.911791,2.216145,0.012467,-0.027603,5.785357,2.216447,0.018156,-0.040159,5.901121,2.215958,0.024758,-0.054670,5.908781,2.215654,0.032395,-0.071352,5.906098,2.215283,0.041108,-0.090201,5.902558,2.214715,0.050955,-0.111004,5.895707,2.213905,0.061968,-0.134002,5.888736,2.212807,0.074206,-0.159038,5.880633,2.211303,0.087742,-0.185801,5.867001,2.209297,0.102652,-0.214368,5.851446,2.206657,0.119006,-0.244573,5.830722,2.203232,0.136883,-0.276067,5.802688,2.198778,0.156335,-0.308660,5.767185,2.193091,0.177396,-0.341940,5.719726,2.185858,0.200070,-0.375591,5.658792,2.176584,0.224067,-0.408564,5.573508,2.164759,0.249420,-0.440668,5.465696,2.149777,0.275879,-0.471138,5.332207,2.131225,0.303307,-0.499204,5.173339,2.108794,0.331189,-0.524547,4.985102,2.080585,0.359932,-0.547256,4.785788,2.047792,0.389063,-0.566479,4.569344,2.009518,0.418725,-0.583031,4.349557,1.965601,0.448181,-0.595809,4.121278,1.916911,0.477703,-0.605102,3.892291,1.863530,0.507999,-0.612462,3.676557,1.806286,0.536889,-0.615451,3.456241,1.745841,0.565778,-0.616029,3.249464,1.681137,0.593863,-0.613644,3.050273,1.615238,0.620770,-0.608268,2.859599,1.548003,0.647171,-0.601116,2.683287,1.480447,0.673458,-0.592840,2.524036,1.412084,0.698064,-0.581973,2.371046,1.345130,0.721011,-0.568963,2.229104,1.278440,0.744293,-0.555642,2.103213,1.212448,0.766314,-0.540934,1.985370,1.146287,0.788164,-0.525271,1.878842,1.082600,0.809019,-0.507986,1.779821,1.019978,0.830947,-0.489717,1.691630,0.956931,0.853732,-0.469345,1.607513,0.894207,0.874904,-0.447618,1.531176,0.833436,0.897289,-0.426124,1.467302,0.773611,0.919226,-0.404025,1.408321,0.716016,0.940860,-0.381454,1.356209,0.659515,0.962764,-0.358901,1.310082,0.604629,0.984322,-0.335983,1.268485,0.552335,1.005343,-0.312533,1.230662,0.501591,1.028153,-0.289452,1.199168,0.452032,1.049283,-0.265754,1.168575,0.404347,1.073687,-0.242571,1.143533,0.357445,1.097546,-0.218681,1.119859,0.312534,1.123340,-0.194465,1.099634,0.269437,1.148166,-0.168797,1.081968,0.228586,1.172518,-0.141552,1.068789,0.189866,1.192930,-0.113325,1.057548,0.152772,1.206816,-0.084800,1.044145,0.115390,1.215045,-0.056019,1.028938,0.076493,1.220048,-0.027733,1.013338,0.037767,1.225852,0.000050,0.999927,-0.000160,0.000178,-0.000422,4.587902,2.372253,0.000504,-0.001195,6.624675,2.372248,0.002016,-0.004782,6.626884,2.372187,0.004531,-0.010746,6.607379,2.372318,0.008081,-0.019161,6.640102,2.372084,0.012637,-0.029945,6.653708,2.372128,0.018167,-0.042999,6.623837,2.371902,0.024769,-0.058516,6.624484,2.371595,0.032421,-0.076370,6.620877,2.371120,0.041164,-0.096474,6.615235,2.370428,0.051057,-0.118786,6.607844,2.369440,0.062136,-0.143390,6.599216,2.368075,0.074490,-0.170034,6.588018,2.366218,0.088179,-0.198717,6.572526,2.363747,0.103307,-0.229147,6.551868,2.360517,0.119964,-0.261253,6.526089,2.356304,0.138173,-0.294703,6.489593,2.350797,0.158072,-0.329261,6.443573,2.343783,0.179592,-0.364298,6.379764,2.334673,0.202709,-0.399375,6.295845,2.323125,0.227335,-0.433616,6.184929,2.308547,0.253230,-0.466794,6.045905,2.289980,0.280100,-0.497509,5.871803,2.266964,0.308146,-0.525956,5.672422,2.239074,0.336544,-0.551101,5.443256,2.204809,0.365223,-0.572471,5.188034,2.164827,0.395484,-0.592088,4.943783,2.119489,0.424416,-0.606026,4.666400,2.067262,0.455641,-0.619671,4.418961,2.009937,0.485298,-0.627583,4.152737,1.948900,0.514774,-0.632072,3.893344,1.882692,0.544172,-0.634033,3.645332,1.814073,0.573283,-0.633239,3.414651,1.742717,0.602155,-0.630008,3.195712,1.669703,0.630520,-0.624550,2.994536,1.596021,0.657121,-0.615749,2.799373,1.522572,0.682071,-0.604738,2.616102,1.448978,0.707605,-0.593301,2.456112,1.376250,0.731492,-0.579628,2.303517,1.305297,0.754139,-0.564473,2.165340,1.235548,0.776505,-0.548787,2.041646,1.167051,0.796833,-0.531415,1.923334,1.100534,0.817565,-0.513778,1.818176,1.035144,0.837981,-0.495167,1.723830,0.971583,0.858513,-0.475690,1.638448,0.908841,0.879892,-0.454099,1.559420,0.846701,0.902258,-0.432038,1.491471,0.785332,0.924114,-0.409316,1.428878,0.726409,0.944230,-0.385618,1.370785,0.668588,0.967001,-0.362604,1.323529,0.612943,0.988579,-0.339117,1.279679,0.559038,1.010210,-0.315355,1.240104,0.506867,1.032084,-0.291408,1.205261,0.456934,1.054671,-0.267387,1.175197,0.407792,1.078314,-0.243346,1.148153,0.360992,1.102443,-0.219205,1.123799,0.315577,1.128524,-0.194996,1.102624,0.271742,1.153989,-0.169897,1.085134,0.230702,1.179420,-0.143960,1.071699,0.192146,1.200098,-0.116173,1.060179,0.155164,1.214837,-0.086655,1.046290,0.117071,1.222749,-0.056956,1.030040,0.077450,1.227273,-0.027883,1.013650,0.038092,1.233293,0.000831,1.000043,-0.000462,0.000173,-0.000442,4.741539,2.547922,0.000504,-0.001284,7.491127,2.547919,0.002014,-0.005132,7.484889,2.547844,0.004523,-0.011521,7.439875,2.547587,0.008059,-0.020524,7.483694,2.547725,0.012586,-0.032029,7.470912,2.547685,0.018081,-0.045948,7.422534,2.547686,0.024783,-0.062844,7.487581,2.547107,0.032451,-0.082011,7.483603,2.546522,0.041233,-0.103540,7.475124,2.545684,0.051181,-0.127537,7.467521,2.544438,0.062347,-0.153921,7.456266,2.542744,0.074829,-0.182427,7.440422,2.540459,0.088703,-0.213134,7.420694,2.537380,0.104080,-0.245750,7.394875,2.533347,0.121050,-0.279941,7.358515,2.528069,0.139697,-0.315591,7.313001,2.521237,0.160036,-0.351980,7.246342,2.512378,0.182147,-0.388993,7.163688,2.500993,0.205799,-0.425570,7.048339,2.486450,0.231091,-0.461093,6.902586,2.468174,0.257405,-0.494668,6.712721,2.444774,0.284956,-0.525889,6.491261,2.415538,0.313180,-0.553693,6.232833,2.380610,0.342327,-0.578724,5.953834,2.338525,0.371689,-0.599706,5.649698,2.290256,0.401919,-0.617615,5.347900,2.235157,0.432204,-0.631632,5.036417,2.173932,0.463151,-0.643082,4.735976,2.107298,0.493388,-0.649970,4.432044,2.036121,0.524128,-0.654188,4.145472,1.961595,0.553930,-0.654671,3.866877,1.883602,0.583856,-0.653051,3.607848,1.804521,0.611762,-0.646994,3.356237,1.724047,0.639117,-0.638860,3.122531,1.643016,0.666279,-0.629093,2.913178,1.563932,0.692936,-0.617862,2.722675,1.484614,0.716498,-0.603279,2.536926,1.406734,0.742273,-0.589878,2.381054,1.331469,0.764031,-0.572744,2.228312,1.256796,0.786601,-0.555933,2.095451,1.185290,0.807776,-0.537992,1.972866,1.115940,0.828400,-0.519596,1.863394,1.048371,0.847412,-0.499847,1.760630,0.982934,0.866850,-0.479920,1.670998,0.919972,0.886340,-0.459434,1.587962,0.858100,0.906933,-0.437767,1.515505,0.796714,0.927490,-0.414068,1.448243,0.736162,0.950217,-0.390910,1.390505,0.677613,0.971545,-0.366964,1.337865,0.620477,0.992901,-0.342603,1.291104,0.565807,1.015460,-0.318596,1.251138,0.513086,1.037859,-0.294242,1.214291,0.461573,1.060535,-0.269601,1.182517,0.411838,1.086885,-0.245608,1.155300,0.363221,1.111237,-0.220589,1.129715,0.317174,1.138718,-0.196008,1.108103,0.273213,1.164223,-0.170408,1.089640,0.231968,1.187256,-0.144205,1.074145,0.192987,1.207851,-0.116945,1.061615,0.156118,1.222217,-0.088852,1.047599,0.118674,1.230315,-0.059381,1.030869,0.078993,1.235052,-0.029145,1.014126,0.038924,1.241359,0.000479,1.000114,-0.000211,0.000169,-0.000465,4.953966,2.747437,0.000504,-0.001384,8.544530,2.747430,0.002015,-0.005537,8.545147,2.747339,0.004542,-0.012477,8.557734,2.747125,0.008064,-0.022143,8.530193,2.747341,0.012543,-0.034411,8.465151,2.747411,0.018178,-0.049792,8.543328,2.746874,0.024810,-0.067784,8.547247,2.746396,0.032489,-0.088416,8.537436,2.745730,0.041313,-0.111580,8.526655,2.744596,0.051332,-0.137462,8.517438,2.743082,0.062603,-0.165860,8.502803,2.740950,0.075240,-0.196548,8.481507,2.738057,0.089341,-0.229440,8.454287,2.734174,0.105021,-0.264395,8.420289,2.729086,0.122399,-0.301020,8.373503,2.722420,0.141526,-0.338997,8.309059,2.713686,0.162451,-0.377589,8.221539,2.702492,0.185098,-0.416349,8.100116,2.687893,0.209406,-0.454284,7.941704,2.669386,0.235098,-0.490450,7.733318,2.645590,0.262100,-0.524592,7.486120,2.615709,0.290103,-0.555558,7.193498,2.579231,0.319135,-0.583516,6.874796,2.534957,0.348286,-0.606714,6.516118,2.483017,0.378840,-0.627850,6.163912,2.424214,0.409608,-0.644715,5.801404,2.357563,0.440553,-0.657657,5.435955,2.285835,0.470599,-0.665621,5.063481,2.207940,0.503172,-0.673767,4.743532,2.126440,0.533884,-0.676009,4.413409,2.040694,0.563808,-0.674536,4.092169,1.953979,0.591849,-0.668913,3.787057,1.865897,0.621474,-0.663159,3.520578,1.777762,0.650500,-0.655018,3.275065,1.689902,0.678011,-0.643949,3.043141,1.603528,0.703490,-0.630030,2.827104,1.519484,0.728250,-0.614910,2.632620,1.436677,0.752165,-0.598649,2.455570,1.355753,0.775894,-0.581771,2.295932,1.278884,0.797650,-0.563193,2.152291,1.202767,0.818505,-0.543750,2.022099,1.130338,0.838596,-0.524017,1.903562,1.060263,0.858396,-0.504064,1.797204,0.993077,0.877088,-0.483418,1.701208,0.928606,0.896606,-0.462786,1.617736,0.866039,0.914342,-0.440943,1.539227,0.804293,0.933550,-0.419129,1.470383,0.745206,0.955237,-0.396100,1.409100,0.685832,0.976700,-0.371743,1.354930,0.627953,0.997681,-0.346882,1.305249,0.572127,1.020784,-0.322391,1.262603,0.517941,1.043840,-0.297564,1.225115,0.466188,1.067224,-0.272639,1.190817,0.415499,1.092358,-0.247664,1.161265,0.366782,1.117573,-0.222260,1.133935,0.319377,1.145730,-0.196933,1.111750,0.275293,1.170822,-0.170577,1.091981,0.233306,1.194559,-0.143878,1.075810,0.193950,1.214819,-0.116347,1.062438,0.156724,1.229830,-0.088233,1.048092,0.118984,1.238185,-0.059408,1.031325,0.079385,1.243527,-0.030703,1.014698,0.039893,1.249724,-0.001520,0.999819,0.000760,0.000164,-0.000489,5.157359,2.976300,0.000505,-0.001502,9.891415,2.976286,0.002016,-0.006000,9.857730,2.976197,0.004543,-0.013519,9.870651,2.975832,0.008064,-0.023985,9.855780,2.976170,0.012611,-0.037471,9.850209,2.975941,0.018162,-0.053866,9.827134,2.974968,0.024820,-0.073390,9.849955,2.975010,0.032545,-0.095758,9.842021,2.974073,0.041418,-0.120834,9.829989,2.972700,0.051511,-0.148861,9.817421,2.970736,0.062920,-0.179456,9.797347,2.968033,0.075744,-0.212674,9.771533,2.964371,0.090131,-0.248193,9.735924,2.959437,0.106187,-0.285748,9.687707,2.952881,0.124035,-0.325017,9.622684,2.944273,0.143733,-0.365463,9.531452,2.933093,0.165262,-0.406157,9.401732,2.918484,0.188622,-0.446833,9.232451,2.899529,0.213693,-0.486209,9.013432,2.875137,0.239987,-0.522925,8.725671,2.844166,0.267796,-0.557452,8.400028,2.805649,0.296547,-0.588266,8.023041,2.758720,0.325838,-0.614837,7.606773,2.702676,0.355479,-0.636760,7.160680,2.638483,0.386984,-0.657230,6.736765,2.566849,0.418853,-0.673592,6.313742,2.488091,0.450302,-0.684966,5.884479,2.402458,0.481149,-0.691591,5.455771,2.311816,0.512177,-0.695337,5.055698,2.217330,0.543437,-0.696370,4.681506,2.121285,0.574309,-0.694186,4.334716,2.024160,0.604787,-0.689158,4.008524,1.927738,0.633483,-0.680580,3.703505,1.830456,0.660766,-0.669088,3.418386,1.734934,0.688471,-0.656673,3.168101,1.642316,0.715729,-0.642820,2.941735,1.550744,0.740435,-0.626155,2.730570,1.463345,0.764114,-0.608299,2.537561,1.378151,0.787028,-0.589519,2.364323,1.297630,0.807985,-0.569257,2.207970,1.217830,0.830663,-0.550055,2.076646,1.142746,0.850416,-0.528812,1.948085,1.070757,0.869609,-0.507478,1.834684,1.001282,0.888324,-0.486131,1.734879,0.934987,0.907482,-0.464910,1.645974,0.871203,0.924829,-0.442742,1.563550,0.809260,0.942958,-0.420777,1.491264,0.750037,0.961999,-0.398842,1.428069,0.691715,0.981043,-0.375967,1.369668,0.635669,1.002371,-0.351469,1.318588,0.578689,1.025343,-0.326601,1.273628,0.524424,1.048511,-0.301395,1.234572,0.471403,1.072242,-0.275835,1.198354,0.419950,1.096758,-0.250200,1.166392,0.370733,1.122781,-0.224474,1.138991,0.322864,1.150871,-0.198592,1.114313,0.277723,1.177319,-0.171805,1.093534,0.234950,1.201765,-0.144291,1.077462,0.195376,1.222629,-0.115949,1.063288,0.157315,1.237334,-0.087140,1.048366,0.118843,1.246153,-0.058094,1.031224,0.079207,1.252570,-0.029194,1.014695,0.039376,1.259060,-0.000418,0.999881,0.000307,0.000159,-0.000515,5.393984,3.241865,0.000505,-0.001636,11.548038,3.241848,0.002016,-0.006534,11.506640,3.241718,0.004537,-0.014706,11.513460,3.241196,0.008068,-0.026134,11.510533,3.241693,0.012573,-0.040676,11.428978,3.241030,0.018212,-0.058794,11.510745,3.240924,0.024847,-0.079926,11.497339,3.240201,0.032603,-0.104160,11.484607,3.238994,0.041543,-0.131552,11.470801,3.237182,0.051738,-0.162012,11.453219,3.234635,0.063313,-0.195260,11.427244,3.231153,0.076381,-0.231205,11.388534,3.226361,0.091096,-0.269678,11.340406,3.219943,0.107600,-0.310170,11.270127,3.211448,0.126017,-0.352435,11.178583,3.200168,0.146411,-0.395551,11.046559,3.185328,0.168663,-0.438627,10.858624,3.165972,0.192730,-0.480660,10.606379,3.140735,0.218497,-0.520987,10.288093,3.108388,0.245752,-0.558483,9.907480,3.067586,0.273993,-0.592090,9.453246,3.016931,0.303495,-0.622416,8.966138,2.956444,0.333717,-0.648303,8.443776,2.885116,0.363928,-0.668640,7.894122,2.805963,0.396240,-0.687748,7.385728,2.718338,0.427161,-0.699903,6.838511,2.622346,0.460175,-0.711210,6.356371,2.522476,0.492593,-0.717734,5.878312,2.417984,0.524449,-0.719956,5.423285,2.310941,0.556010,-0.719127,4.997909,2.201885,0.587032,-0.715077,4.600426,2.093330,0.617030,-0.707574,4.235885,1.986585,0.644684,-0.695781,3.881712,1.881279,0.674483,-0.685313,3.590960,1.777918,0.700290,-0.669619,3.303138,1.678004,0.727892,-0.654728,3.057771,1.581162,0.751694,-0.635727,2.826642,1.487769,0.776271,-0.617343,2.622178,1.399628,0.799502,-0.597683,2.441265,1.313195,0.821768,-0.577090,2.276954,1.232316,0.841960,-0.555165,2.125744,1.153914,0.861582,-0.532983,1.991236,1.079598,0.881460,-0.510933,1.874027,1.008883,0.899952,-0.488321,1.766812,0.940802,0.918954,-0.466405,1.673436,0.875653,0.936130,-0.443623,1.586986,0.813130,0.954799,-0.421532,1.513558,0.752241,0.972435,-0.398897,1.445787,0.694711,0.990147,-0.376302,1.384382,0.638770,1.009189,-0.353623,1.331934,0.583826,1.029687,-0.330635,1.284478,0.530476,1.052604,-0.305698,1.243632,0.477187,1.076524,-0.279917,1.204997,0.425349,1.101701,-0.253951,1.171750,0.375165,1.127264,-0.227541,1.142519,0.326869,1.156397,-0.201265,1.116817,0.280912,1.183020,-0.173943,1.095289,0.237447,1.208448,-0.145860,1.078296,0.196694,1.230417,-0.116901,1.064416,0.158409,1.248617,-0.087507,1.050504,0.119483,1.257310,-0.057353,1.032796,0.079092,1.263076,-0.027785,1.015128,0.038883,1.269870,0.001331,0.999935,-0.000557,0.000154,-0.000549,5.705205,3.554136,0.000506,-0.001797,13.703335,3.554133,0.002014,-0.007156,13.614074,3.553937,0.004544,-0.016145,13.657344,3.553096,0.008070,-0.028652,13.627997,3.553894,0.012584,-0.044617,13.606235,3.554000,0.018180,-0.064288,13.581339,3.549637,0.024887,-0.087627,13.608851,3.552006,0.032690,-0.114134,13.599099,3.550341,0.041705,-0.144154,13.579829,3.547982,0.052035,-0.177400,13.552845,3.544641,0.063810,-0.213813,13.515619,3.539941,0.077171,-0.252978,13.460460,3.533696,0.092329,-0.294852,13.393559,3.524977,0.109390,-0.338688,13.292376,3.513655,0.128455,-0.384018,13.147332,3.498484,0.149661,-0.429960,12.945774,3.478323,0.172694,-0.475024,12.658979,3.451862,0.197650,-0.518614,12.289564,3.417602,0.224156,-0.559298,11.828307,3.372913,0.252008,-0.596110,11.285162,3.317454,0.281165,-0.629292,10.684922,3.251171,0.311434,-0.658379,10.052939,3.172222,0.342741,-0.683455,9.405296,3.082825,0.373543,-0.701674,8.716078,2.983976,0.407008,-0.719664,8.108425,2.876244,0.438623,-0.729882,7.461252,2.763279,0.471872,-0.738696,6.880182,2.645590,0.504700,-0.743136,6.324308,2.524680,0.537118,-0.743676,5.808302,2.402723,0.569412,-0.741181,5.332306,2.281437,0.598202,-0.732348,4.857402,2.161401,0.629640,-0.724832,4.465554,2.043872,0.659239,-0.713435,4.093661,1.930129,0.686547,-0.698539,3.752593,1.817654,0.715529,-0.684471,3.457593,1.712567,0.739456,-0.664983,3.171220,1.610687,0.764892,-0.646322,2.929674,1.512031,0.789301,-0.626393,2.710719,1.419033,0.809881,-0.603498,2.506139,1.330115,0.833385,-0.582934,2.336089,1.245859,0.854254,-0.560419,2.178470,1.165042,0.873964,-0.537294,2.040087,1.086633,0.893433,-0.514264,1.911969,1.015028,0.911756,-0.490657,1.799840,0.944938,0.930894,-0.467601,1.703188,0.878743,0.948078,-0.444043,1.612092,0.815356,0.966162,-0.421155,1.534444,0.753883,0.984166,-0.398238,1.462397,0.695534,1.002184,-0.375278,1.400793,0.638806,1.019669,-0.352159,1.344172,0.584549,1.039571,-0.329651,1.295227,0.531660,1.059989,-0.306804,1.251281,0.480529,1.081116,-0.283345,1.211504,0.430071,1.105742,-0.258568,1.176400,0.380277,1.133080,-0.232146,1.144519,0.331076,1.161888,-0.205244,1.118059,0.284040,1.192408,-0.177932,1.097561,0.239958,1.221043,-0.149532,1.082021,0.198751,1.244141,-0.120046,1.067634,0.160114,1.259465,-0.089542,1.051626,0.121101,1.268124,-0.058593,1.033296,0.079898,1.274330,-0.028011,1.015382,0.039038,1.281590,0.002330,1.000087,-0.001259,0.000149,-0.000587,6.059834,3.927143,0.000507,-0.001992,16.560400,3.927149,0.002014,-0.007910,16.406326,3.926821,0.004549,-0.017856,16.545532,3.927027,0.008064,-0.031632,16.375853,3.925487,0.012450,-0.048749,15.928564,3.928272,0.018030,-0.070371,16.072989,3.917862,0.024964,-0.096897,16.458925,3.924489,0.032807,-0.126073,16.377851,3.921896,0.041917,-0.159205,16.351561,3.918860,0.052416,-0.195762,16.307037,3.914339,0.064464,-0.235784,16.255514,3.907954,0.078225,-0.278812,16.176226,3.899254,0.093900,-0.324457,16.066530,3.887455,0.111657,-0.372174,15.913818,3.871777,0.131478,-0.420530,15.669197,3.850776,0.153574,-0.469330,15.355453,3.822348,0.177505,-0.516029,14.908978,3.785168,0.203383,-0.560585,14.352687,3.736602,0.230569,-0.600607,13.666022,3.675046,0.259188,-0.636296,12.900244,3.599811,0.289272,-0.668312,12.111226,3.510550,0.320490,-0.695986,11.292102,3.408535,0.353031,-0.719848,10.493485,3.295667,0.385228,-0.737073,9.661955,3.171998,0.419219,-0.752419,8.909942,3.042428,0.452096,-0.761179,8.155107,2.907108,0.484909,-0.766166,7.450609,2.769858,0.518306,-0.768596,6.811866,2.631935,0.550067,-0.765683,6.205275,2.492870,0.582562,-0.761197,5.663215,2.358645,0.614450,-0.753834,5.165358,2.227377,0.644563,-0.742860,4.712554,2.097547,0.673658,-0.729294,4.306101,1.974920,0.702857,-0.714839,3.943352,1.857613,0.729350,-0.696774,3.609432,1.743601,0.754958,-0.677394,3.308389,1.636607,0.779575,-0.657018,3.043803,1.533841,0.800491,-0.633342,2.793592,1.437092,0.825030,-0.612471,2.590307,1.344272,0.847535,-0.589882,2.406477,1.256436,0.865979,-0.564850,2.231999,1.173938,0.886254,-0.541357,2.083556,1.094722,0.905566,-0.517353,1.950928,1.021107,0.924607,-0.493320,1.835979,0.948941,0.943365,-0.469366,1.731417,0.881060,0.960405,-0.444745,1.635838,0.816479,0.977893,-0.420493,1.552981,0.754604,0.996573,-0.397150,1.481595,0.694917,1.014000,-0.373483,1.414070,0.638445,1.031807,-0.349985,1.356031,0.584035,1.051877,-0.327062,1.305041,0.530010,1.071701,-0.304134,1.258836,0.479439,1.093109,-0.280962,1.217297,0.429763,1.116681,-0.258121,1.182063,0.381050,1.143886,-0.235365,1.150039,0.333395,1.175163,-0.211621,1.125074,0.287477,1.203675,-0.184061,1.102339,0.243301,1.230477,-0.154815,1.083927,0.201826,1.253134,-0.124513,1.067989,0.162271,1.270092,-0.093383,1.052032,0.122855,1.279576,-0.061770,1.033685,0.081639,1.286472,-0.030317,1.015583,0.040411,1.294476,0.000964,1.000206,-0.000454,0.000144,-0.000630,6.467978,4.381146,0.000504,-0.002208,20.193617,4.381151,0.002017,-0.008834,20.206446,4.380687,0.004536,-0.019864,20.183254,4.380550,0.008174,-0.035759,20.564249,4.381247,0.012608,-0.055034,20.111612,4.382390,0.018198,-0.079119,20.106096,4.379815,0.025057,-0.108067,20.215635,4.376874,0.032962,-0.140630,20.153549,4.374143,0.042199,-0.177350,20.084061,4.369558,0.052928,-0.218094,20.026609,4.363287,0.065327,-0.262407,19.940054,4.354386,0.079568,-0.309833,19.806814,4.342127,0.095961,-0.360074,19.641878,4.325533,0.114516,-0.411747,19.370914,4.302950,0.135349,-0.463726,18.983900,4.271991,0.158293,-0.514211,18.433926,4.230856,0.183348,-0.562511,17.733471,4.176250,0.209959,-0.606310,16.864214,4.105895,0.238736,-0.646958,15.935207,4.020104,0.268543,-0.681574,14.890014,3.916094,0.299996,-0.712458,13.846786,3.798239,0.331930,-0.737130,12.758296,3.664191,0.365222,-0.758156,11.732940,3.521867,0.399061,-0.774364,10.741743,3.369831,0.433480,-0.786412,9.812527,3.212079,0.467002,-0.792373,8.915130,3.053715,0.500754,-0.795410,8.094276,2.894526,0.534023,-0.794617,7.342067,2.735959,0.566988,-0.790689,6.664186,2.581160,0.599960,-0.784433,6.052983,2.432318,0.630599,-0.773378,5.486277,2.287630,0.660807,-0.760334,4.982516,2.150183,0.690103,-0.745430,4.531104,2.017266,0.717315,-0.727511,4.120734,1.891699,0.743819,-0.708376,3.759599,1.772680,0.770147,-0.688632,3.441912,1.660620,0.793510,-0.665931,3.152600,1.553166,0.816535,-0.643045,2.898883,1.452080,0.839163,-0.619917,2.674488,1.355544,0.859066,-0.594923,2.469262,1.267232,0.879489,-0.570343,2.292209,1.181702,0.898525,-0.544975,2.131086,1.102089,0.918359,-0.520585,1.994526,1.024744,0.937502,-0.496044,1.873079,0.951712,0.955573,-0.471010,1.761232,0.883374,0.972957,-0.445712,1.661604,0.818008,0.991248,-0.421201,1.577169,0.754446,1.008997,-0.396444,1.499653,0.694518,1.028127,-0.372362,1.432030,0.637259,1.045710,-0.347895,1.369870,0.581515,1.065977,-0.324409,1.317341,0.527713,1.087469,-0.301181,1.270447,0.476281,1.109943,-0.277866,1.228398,0.426403,1.134440,-0.254849,1.190986,0.377822,1.160986,-0.231754,1.157681,0.330740,1.188458,-0.207973,1.128665,0.286014,1.214405,-0.183424,1.103711,0.243600,1.239504,-0.157972,1.084253,0.203686,1.262961,-0.130607,1.068258,0.165214,1.280340,-0.099652,1.051919,0.126067,1.292129,-0.067363,1.034016,0.084791,1.299876,-0.035026,1.015775,0.042786,1.308328,-0.002944,0.999963,0.001385,0.000138,-0.000681,6.943771,4.946556,0.000503,-0.002486,25.346689,4.946532,0.002016,-0.009973,25.494320,4.946311,0.004539,-0.022440,25.484949,4.945823,0.008069,-0.039836,25.420902,4.945311,0.012628,-0.062172,25.394403,4.945041,0.018294,-0.089609,25.440279,4.943295,0.025079,-0.121584,25.399988,4.939368,0.033142,-0.158595,25.356537,4.936200,0.042596,-0.199971,25.295067,4.929842,0.053628,-0.245624,25.196465,4.920586,0.066496,-0.295240,25.055311,4.907700,0.081434,-0.348006,24.846170,4.889647,0.098640,-0.403167,24.527803,4.864680,0.118231,-0.459106,24.051735,4.830574,0.140139,-0.513907,23.352467,4.783530,0.164198,-0.565953,22.418245,4.720530,0.190502,-0.614858,21.324049,4.638075,0.218530,-0.658304,20.038671,4.535464,0.248094,-0.696133,18.639786,4.411646,0.279435,-0.729388,17.234526,4.268872,0.312002,-0.757534,15.830426,4.109603,0.346173,-0.781866,14.495901,3.938782,0.379435,-0.797579,13.136444,3.756138,0.414945,-0.812334,11.946491,3.571258,0.449991,-0.821119,10.811908,3.384217,0.484636,-0.825066,9.763482,3.198076,0.518675,-0.824728,8.796811,3.015808,0.552559,-0.821710,7.932528,2.836886,0.587272,-0.817478,7.185156,2.664995,0.616960,-0.804441,6.445302,2.502223,0.648054,-0.792063,5.818812,2.345851,0.678575,-0.777793,5.264731,2.197150,0.707287,-0.760476,4.766033,2.056042,0.735851,-0.742541,4.335871,1.922805,0.760594,-0.720503,3.928021,1.798585,0.784534,-0.697719,3.579153,1.680605,0.811029,-0.677036,3.285307,1.568942,0.831809,-0.651479,3.001423,1.465496,0.854364,-0.627376,2.760672,1.367849,0.872639,-0.600496,2.540697,1.275644,0.894296,-0.576297,2.355273,1.188638,0.913123,-0.550377,2.188563,1.105652,0.932025,-0.524640,2.040739,1.028614,0.949876,-0.498402,1.910315,0.954421,0.968933,-0.473220,1.795750,0.884061,0.985366,-0.447086,1.690336,0.817765,1.004940,-0.422394,1.599626,0.753295,1.022217,-0.396726,1.519055,0.693380,1.041490,-0.371854,1.448745,0.635747,1.059920,-0.346769,1.384292,0.579508,1.080408,-0.322343,1.328798,0.525045,1.101632,-0.297979,1.279898,0.473773,1.124812,-0.274059,1.234005,0.422949,1.148503,-0.249954,1.195373,0.374609,1.174554,-0.225988,1.160362,0.327350,1.202931,-0.201932,1.131307,0.283494,1.229335,-0.176886,1.105885,0.241092,1.254254,-0.151225,1.085802,0.201514,1.275743,-0.124282,1.068524,0.162866,1.292929,-0.097122,1.051493,0.124991,1.305805,-0.068939,1.033890,0.085521,1.314991,-0.040082,1.015927,0.045247,1.324033,-0.009923,0.999893,0.004738,0.000131,-0.000745,7.562414,5.671075,0.000473,-0.002681,27.216688,5.670949,0.002021,-0.011462,32.962402,5.670177,0.004540,-0.025728,33.183949,5.670197,0.008087,-0.045746,33.185688,5.667313,0.012673,-0.071427,33.170441,5.668396,0.018358,-0.102673,33.145138,5.665252,0.025299,-0.139780,33.303326,5.653404,0.033469,-0.181718,33.107243,5.652829,0.043139,-0.228698,32.859524,5.645676,0.054622,-0.280648,32.694893,5.631547,0.068115,-0.336524,32.422569,5.611561,0.083957,-0.395671,32.035511,5.583449,0.102259,-0.456164,31.415047,5.543651,0.123021,-0.515765,30.470440,5.488278,0.146127,-0.572309,29.186451,5.413118,0.171749,-0.625710,27.653852,5.312369,0.199549,-0.673853,25.902435,5.185774,0.229188,-0.715905,23.978609,5.030582,0.260421,-0.751533,21.999035,4.853484,0.293421,-0.782309,20.087366,4.656137,0.327077,-0.806332,18.186535,4.443975,0.361892,-0.825818,16.418409,4.223844,0.397146,-0.840019,14.774344,3.998959,0.434169,-0.852434,13.321097,3.775443,0.469288,-0.856632,11.929448,3.552818,0.504319,-0.857130,10.675201,3.338825,0.540067,-0.855903,9.591900,3.130547,0.575404,-0.851565,8.607655,2.932930,0.606782,-0.839818,7.690560,2.743876,0.638660,-0.827508,6.900781,2.565115,0.670577,-0.814154,6.216821,2.395215,0.696718,-0.793162,5.551886,2.238233,0.725990,-0.775291,5.015406,2.090264,0.754140,-0.755758,4.546843,1.950834,0.775992,-0.729824,4.094254,1.820582,0.802990,-0.708909,3.732984,1.699191,0.828291,-0.686483,3.413194,1.583805,0.847406,-0.659162,3.103861,1.478093,0.864951,-0.631051,2.832976,1.378496,0.887154,-0.606590,2.616645,1.282127,0.906337,-0.580124,2.413988,1.194643,0.927184,-0.554835,2.244380,1.110354,0.943810,-0.527583,2.081964,1.031996,0.963630,-0.502243,1.948979,0.956718,0.979691,-0.475006,1.822701,0.886957,0.997690,-0.448815,1.715714,0.819006,1.016460,-0.423044,1.621868,0.754892,1.035485,-0.397637,1.539537,0.693707,1.053165,-0.371775,1.462285,0.634867,1.072394,-0.346372,1.396193,0.578574,1.093397,-0.321291,1.338344,0.524341,1.115194,-0.296102,1.287594,0.472059,1.137943,-0.271023,1.240495,0.421674,1.164163,-0.246367,1.201224,0.371963,1.191457,-0.221414,1.164472,0.325040,1.220253,-0.196228,1.134325,0.280343,1.245456,-0.169991,1.108214,0.238098,1.270647,-0.143314,1.087277,0.197886,1.292124,-0.115881,1.069397,0.159560,1.309091,-0.087816,1.051426,0.120547,1.321130,-0.059301,1.032904,0.080834,1.332484,-0.030912,1.015767,0.040933,1.342834,-0.002172,0.999591,0.001185,0.000125,-0.000830,8.392562,6.634228,0.000443,-0.002936,29.687805,6.634032,0.002016,-0.013374,45.025234,6.633008,0.004540,-0.030089,45.020294,6.633056,0.008092,-0.053499,45.066029,6.626466,0.012710,-0.083610,44.810101,6.630330,0.018485,-0.120260,45.216747,6.614516,0.025134,-0.161031,44.674168,6.600349,0.033897,-0.212161,44.819195,6.610186,0.043978,-0.266661,44.450245,6.593605,0.056094,-0.326582,44.134544,6.570142,0.070528,-0.390342,43.591648,6.536712,0.087498,-0.456162,42.708160,6.488329,0.107138,-0.521609,41.365093,6.420198,0.129461,-0.584225,39.525822,6.323702,0.154245,-0.641931,37.186111,6.193606,0.181228,-0.692829,34.478470,6.026897,0.210711,-0.738440,31.680904,5.825769,0.242181,-0.777397,28.828054,5.595428,0.275337,-0.809980,26.042755,5.342321,0.309698,-0.835990,23.376804,5.073076,0.345702,-0.858077,20.965754,4.794572,0.382135,-0.874122,18.710079,4.516676,0.419871,-0.887133,16.713011,4.241767,0.455609,-0.891199,14.819674,3.972124,0.492617,-0.894082,13.187921,3.717271,0.528186,-0.891270,11.708584,3.471719,0.563462,-0.885719,10.422834,3.237760,0.596013,-0.874241,9.237741,3.019060,0.629455,-0.862814,8.248549,2.813572,0.661110,-0.848126,7.358398,2.621046,0.690314,-0.829798,6.569392,2.441627,0.720589,-0.812314,5.905934,2.274629,0.745631,-0.788704,5.276800,2.119423,0.771488,-0.766133,4.752773,1.974380,0.798704,-0.744726,4.306095,1.839482,0.820172,-0.718062,3.889792,1.713244,0.844368,-0.693972,3.545456,1.594809,0.863128,-0.665748,3.212762,1.487512,0.880094,-0.637003,2.926572,1.386724,0.904252,-0.613728,2.704260,1.288131,0.920506,-0.585217,2.483164,1.199845,0.940919,-0.559603,2.300348,1.114958,0.957044,-0.531597,2.130516,1.034754,0.972648,-0.503583,1.979313,0.960912,0.994318,-0.478813,1.859664,0.889786,1.008754,-0.450943,1.742705,0.820833,1.028667,-0.425516,1.645220,0.756332,1.046145,-0.398977,1.557184,0.693921,1.067212,-0.373657,1.480814,0.635955,1.084111,-0.346657,1.408762,0.578832,1.106749,-0.321392,1.350468,0.523561,1.128440,-0.295773,1.294865,0.471146,1.151073,-0.270028,1.246118,0.420298,1.178601,-0.244816,1.204226,0.370575,1.206845,-0.219027,1.166896,0.323716,1.235963,-0.192622,1.135756,0.278058,1.263030,-0.165331,1.109240,0.235743,1.288937,-0.137489,1.088379,0.195390,1.310681,-0.108685,1.068987,0.156439,1.334352,-0.079710,1.054273,0.117096,1.344847,-0.049947,1.034598,0.076554,1.354943,-0.020272,1.016079,0.035585,1.365515,0.009170,0.999969,-0.004771,0.000117,-0.000935,9.424866,7.979243,0.000410,-0.003275,33.013195,7.979422,0.002009,-0.016024,64.370331,7.977156,0.004541,-0.036176,64.655952,7.976128,0.008109,-0.064384,64.864494,7.964988,0.012694,-0.099984,64.487198,7.971348,0.018554,-0.143991,64.637970,7.923116,0.025303,-0.192040,61.930538,7.953975,0.035297,-0.259442,66.274422,7.921861,0.045226,-0.318370,63.334690,7.909609,0.058370,-0.388821,62.686401,7.864696,0.074083,-0.461667,61.332054,7.801843,0.092537,-0.533744,59.125607,7.708949,0.113781,-0.601905,55.997845,7.575799,0.137786,-0.664409,52.177567,7.393524,0.164770,-0.721193,48.019485,7.161756,0.193894,-0.768842,43.460278,6.882018,0.225586,-0.810332,39.086590,6.564607,0.259311,-0.845096,34.896049,6.221983,0.294517,-0.872849,30.952213,5.865831,0.331163,-0.895159,27.375792,5.507064,0.368964,-0.912860,24.213310,5.149763,0.407255,-0.925338,21.364958,4.806172,0.444704,-0.930956,18.791691,4.472272,0.482041,-0.932576,16.521160,4.160864,0.519572,-0.931547,14.589918,3.865206,0.556236,-0.926554,12.887797,3.590445,0.590431,-0.915839,11.352402,3.332747,0.622723,-0.901266,10.002660,3.093264,0.657029,-0.888747,8.905210,2.873842,0.686164,-0.868666,7.876704,2.666740,0.719168,-0.853152,7.051816,2.479017,0.742294,-0.826169,6.226034,2.306498,0.770320,-0.804936,5.590831,2.141328,0.792337,-0.777772,4.984083,1.994663,0.819050,-0.755478,4.507655,1.853950,0.837684,-0.726072,4.049884,1.725590,0.861324,-0.701424,3.678201,1.606303,0.880741,-0.673615,3.337163,1.495452,0.903335,-0.648506,3.055720,1.391162,0.920311,-0.619640,2.792068,1.294734,0.935769,-0.590245,2.554566,1.204518,0.956592,-0.564944,2.366468,1.118630,0.972424,-0.536842,2.187863,1.038323,0.986269,-0.508020,2.023480,0.963803,1.006122,-0.482411,1.895137,0.890986,1.022504,-0.455110,1.775886,0.820936,1.037905,-0.427450,1.665951,0.758556,1.059281,-0.402198,1.577363,0.696126,1.076613,-0.375156,1.493391,0.636676,1.097828,-0.349577,1.421129,0.579947,1.116671,-0.322955,1.355205,0.525140,1.140514,-0.297406,1.299979,0.471460,1.166473,-0.271786,1.249847,0.420473,1.192591,-0.245461,1.204625,0.371118,1.223349,-0.219412,1.166686,0.322600,1.254833,-0.192660,1.134121,0.277572,1.285808,-0.165167,1.108617,0.234417,1.322015,-0.137236,1.093841,0.194640,1.342172,-0.106871,1.074616,0.155001,1.357238,-0.075759,1.053550,0.114648,1.367725,-0.044279,1.033851,0.073254,1.379461,-0.013001,1.015713,0.031895,1.391625,0.018075,1.000203,-0.009397,0.000109,-0.001093,10.986820,9.992467,0.000378,-0.003779,37.989063,9.992861,0.002028,-0.020252,101.850441,9.988345,0.004557,-0.045429,101.106750,9.983879,0.008115,-0.080453,100.646606,9.953411,0.012864,-0.125836,101.366592,9.943727,0.018734,-0.179350,100.786118,9.908408,0.026314,-0.243680,99.779343,9.821631,0.035500,-0.313552,98.608231,9.782450,0.047562,-0.394644,97.689568,9.845875,0.062065,-0.476697,95.177795,9.755218,0.079552,-0.557933,91.095581,9.615121,0.099905,-0.632818,85.110382,9.408299,0.123231,-0.699926,77.948921,9.120996,0.149980,-0.760671,70.491119,8.764173,0.179550,-0.812251,62.821407,8.341752,0.211839,-0.855909,55.512890,7.876337,0.246434,-0.892023,48.744549,7.386268,0.282317,-0.919200,42.462059,6.886009,0.319580,-0.940333,36.901031,6.400318,0.360135,-0.962176,32.353752,5.937503,0.397805,-0.969755,27.996445,5.489783,0.437077,-0.976494,24.359192,5.072855,0.474388,-0.975265,21.124300,4.684682,0.513695,-0.975335,18.476677,4.326597,0.551542,-0.970264,16.167391,3.999049,0.587525,-0.960365,14.143442,3.696317,0.621251,-0.945944,12.374341,3.414176,0.654738,-0.930709,10.877112,3.160455,0.685794,-0.911702,9.580887,2.921461,0.717135,-0.892948,8.481939,2.707478,0.740798,-0.865086,7.435941,2.510382,0.770920,-0.845137,6.650625,2.329648,0.792303,-0.815956,5.879976,2.163206,0.818363,-0.792225,5.274404,2.008042,0.837362,-0.762396,4.700960,1.867576,0.862266,-0.738465,4.254798,1.735819,0.880069,-0.708890,3.828697,1.614690,0.896021,-0.678588,3.451655,1.503477,0.920156,-0.654832,3.168722,1.395800,0.934948,-0.624740,2.879533,1.299955,0.949686,-0.595203,2.628258,1.208597,0.970989,-0.570041,2.433689,1.122310,0.985606,-0.541116,2.241461,1.042168,1.000819,-0.512835,2.075567,0.966543,1.012209,-0.483024,1.919932,0.895758,1.035320,-0.459125,1.807884,0.825668,1.052077,-0.432333,1.695689,0.760812,1.070459,-0.406131,1.595491,0.699897,1.088704,-0.379721,1.508512,0.640575,1.103817,-0.352104,1.428159,0.583765,1.131711,-0.328122,1.366565,0.528240,1.156448,-0.302568,1.306843,0.473988,1.181821,-0.276487,1.252861,0.422189,1.211347,-0.250540,1.205265,0.372005,1.243636,-0.224264,1.165943,0.324184,1.283038,-0.198289,1.137772,0.278419,1.316722,-0.170179,1.115057,0.235425,1.342715,-0.140095,1.092994,0.195084,1.363288,-0.108794,1.071875,0.155439,1.380656,-0.076774,1.052475,0.114636,1.394826,-0.044509,1.032525,0.072890,1.408830,-0.011968,1.015459,0.031101,1.422370,0.020555,0.999808,-0.011002,0.000100,-0.001334,13.377127,13.342275,0.000342,-0.004563,45.758434,13.342710,0.002026,-0.027004,179.672058,13.331846,0.004559,-0.060563,179.294235,13.314877,0.008232,-0.108154,181.242035,13.222856,0.013031,-0.167590,179.684509,13.153860,0.019526,-0.242041,181.004608,12.986094,0.026364,-0.309289,159.606293,13.247752,0.037670,-0.409755,179.468521,12.368877,0.051804,-0.512051,167.955582,12.981333,0.068214,-0.601994,156.278793,12.704532,0.088295,-0.686849,143.096878,12.316531,0.111478,-0.758670,127.423111,11.793048,0.138336,-0.821348,111.763031,11.157992,0.168447,-0.873616,96.887924,10.447472,0.201411,-0.916322,83.225327,9.696606,0.237443,-0.953090,71.403137,8.949244,0.274234,-0.977751,60.739277,8.225874,0.314566,-1.003135,52.115578,7.547433,0.353932,-1.016312,44.341869,6.910326,0.393858,-1.024848,37.827263,6.324401,0.433805,-1.028950,32.380932,5.790555,0.475812,-1.034084,27.955982,5.312826,0.513254,-1.026743,23.977417,4.866118,0.549965,-1.016740,20.628025,4.468437,0.590300,-1.012030,18.036856,4.105483,0.626420,-0.998919,15.669224,3.780593,0.658897,-0.979874,13.603898,3.482054,0.687252,-0.955238,11.788331,3.211213,0.718941,-0.935663,10.355552,2.962083,0.749877,-0.915206,9.131123,2.741382,0.772094,-0.884837,7.973935,2.536501,0.799495,-0.861214,7.086230,2.347282,0.820136,-0.830976,6.240769,2.179332,0.846715,-0.807408,5.604792,2.018005,0.865176,-0.776657,4.975034,1.877021,0.881100,-0.744657,4.442767,1.743528,0.907637,-0.722088,4.035177,1.621563,0.922239,-0.690432,3.633160,1.506158,0.936558,-0.659650,3.281798,1.403606,0.950047,-0.629105,2.974179,1.304276,0.961959,-0.598277,2.704483,1.213888,0.987410,-0.576085,2.510453,1.125569,0.999996,-0.546494,2.304016,1.045567,1.014127,-0.518186,2.127867,0.970718,1.036275,-0.494009,1.985804,0.897557,1.049695,-0.465659,1.845074,0.830584,1.064617,-0.438159,1.725130,0.766083,1.077131,-0.409813,1.613818,0.705101,1.101054,-0.385632,1.528694,0.644828,1.122361,-0.360045,1.447086,0.587878,1.147359,-0.335186,1.377588,0.532130,1.169881,-0.309040,1.313673,0.478843,1.200554,-0.284590,1.257256,0.426855,1.232047,-0.259332,1.208431,0.376125,1.275402,-0.235215,1.174692,0.326614,1.306595,-0.207508,1.141042,0.281524,1.334304,-0.178290,1.111778,0.238694,1.364678,-0.148530,1.090976,0.198549,1.387168,-0.117114,1.069308,0.158529,1.408657,-0.084977,1.050625,0.118042,1.426214,-0.052052,1.031444,0.076541,1.444257,-0.018653,1.014298,0.034061,1.460618,0.015206,0.999413,-0.008132,0.000100,-0.002003,20.052612,20.032721,0.000297,-0.005947,59.540512,20.033842,0.002022,-0.040439,404.848511,20.032743,0.004588,-0.090999,403.741241,19.910591,0.008769,-0.169802,441.471558,19.572552,0.013708,-0.253629,411.667816,19.145721,0.020331,-0.349396,371.322571,18.591049,0.030259,-0.468121,385.816498,18.331083,0.045190,-0.611444,391.924133,15.807686,0.058476,-0.676875,319.638641,16.947781,0.079894,-0.781421,278.804260,17.512903,0.103871,-0.855116,235.999786,16.290295,0.131756,-0.915747,197.168076,14.956566,0.163487,-0.966333,163.452347,13.608010,0.198693,-1.008386,135.632706,12.299661,0.236157,-1.039862,111.919281,11.088790,0.274579,-1.059988,92.136581,9.983883,0.317164,-1.084069,77.063034,9.008505,0.357624,-1.092124,63.963051,8.127298,0.399009,-1.097560,53.483341,7.347628,0.441182,-1.100981,45.052429,6.658191,0.481606,-1.097318,37.932640,6.047333,0.524253,-1.096570,32.395638,5.505878,0.564351,-1.088739,27.679380,5.018494,0.600843,-1.073396,23.611519,4.580770,0.635527,-1.055024,20.207081,4.194785,0.672045,-1.039775,17.469036,3.847436,0.698372,-1.009545,14.928226,3.532546,0.729336,-0.987168,12.953170,3.248834,0.761147,-0.966299,11.346271,2.994166,0.782270,-0.932841,9.813129,2.762244,0.811832,-0.910431,8.672224,2.549933,0.832053,-0.878369,7.578633,2.363132,0.849383,-0.844673,6.648379,2.189266,0.866020,-0.811703,5.850784,2.031716,0.893083,-0.789181,5.273372,1.884480,0.909212,-0.757541,4.700618,1.750298,0.923169,-0.725157,4.196640,1.627590,0.937112,-0.693769,3.764841,1.514906,0.961901,-0.670828,3.444598,1.406839,0.975245,-0.640240,3.120745,1.307873,0.989696,-0.611032,2.840732,1.216417,1.002057,-0.581144,2.591596,1.132553,1.014022,-0.551620,2.373820,1.051695,1.025307,-0.522268,2.177992,0.977500,1.052190,-0.500826,2.042511,0.904301,1.064408,-0.472355,1.891934,0.837557,1.077876,-0.444815,1.761054,0.773004,1.088939,-0.416531,1.638939,0.713958,1.118551,-0.395057,1.555724,0.652485,1.134469,-0.368289,1.465490,0.596330,1.162778,-0.345095,1.390977,0.539703,1.185298,-0.319527,1.321225,0.486250,1.208419,-0.293590,1.259318,0.434178,1.261013,-0.273471,1.219767,0.382032,1.297811,-0.248226,1.176422,0.334190,1.326591,-0.220354,1.139881,0.289075,1.357918,-0.191937,1.111418,0.246259,1.387590,-0.162282,1.086511,0.205129,1.415797,-0.131515,1.067072,0.165601,1.440194,-0.099555,1.047799,0.125462,1.465600,-0.066957,1.030406,0.084082,1.487714,-0.033496,1.013889,0.041981,1.509947,0.000663,0.998773,-0.000485,0.000100,-0.004009,40.102047,40.087105,0.000228,-0.009141,91.431366,40.074432,0.001522,-0.060544,605.651733,39.918827,0.004919,-0.188871,1712.982300,38.873421,0.009053,-0.320325,1583.453125,39.715633,0.015375,-0.471415,1486.033691,39.162876,0.029306,-0.735111,1751.701050,28.083200,0.043450,-0.859759,1392.475220,24.599945,0.079075,-1.220033,1629.972656,18.507019,0.090130,-1.091255,940.347351,17.961655,0.098008,-0.945965,425.901093,24.478010,0.138246,-1.084105,416.823944,20.003433,0.174489,-1.133148,302.730042,18.550846,0.207969,-1.138483,242.853577,15.923334,0.249132,-1.168197,191.649445,13.940813,0.291391,-1.187038,152.910309,12.263267,0.332856,-1.192793,121.905075,10.822873,0.377473,-1.202846,99.145561,9.618412,0.422601,-1.208871,81.343315,8.591735,0.465276,-1.204545,66.742569,7.692911,0.504710,-1.190839,54.787876,6.915612,0.544909,-1.178827,45.507313,6.242786,0.582125,-1.160590,37.819912,5.651690,0.620694,-1.145481,31.926588,5.123660,0.659127,-1.130178,27.147310,4.669475,0.684358,-1.093728,22.650702,4.258717,0.719453,-1.074591,19.454103,3.901225,0.751695,-1.051678,16.735672,3.576870,0.775082,-1.017716,14.281039,3.287471,0.796233,-0.982759,12.261332,3.023708,0.827404,-0.961227,10.767912,2.787740,0.848149,-0.928433,9.371350,2.570737,0.864891,-0.892838,8.142364,2.379204,0.880979,-0.858193,7.118954,2.204470,0.910434,-0.837281,6.389041,2.041554,0.925396,-0.803638,5.643217,1.893353,0.942463,-0.772925,5.031223,1.757331,0.955217,-0.739720,4.486978,1.633572,0.968570,-0.708048,4.014621,1.520414,0.981672,-0.677109,3.617768,1.412506,0.992829,-0.645712,3.258773,1.317079,1.021270,-0.625746,3.006640,1.222611,1.031247,-0.594628,2.733073,1.137911,1.043581,-0.565540,2.498495,1.058439,1.055930,-0.536962,2.289843,0.984428,1.066727,-0.508076,2.108603,0.912794,1.081225,-0.481297,1.951454,0.845536,1.088198,-0.451563,1.801891,0.782718,1.123316,-0.433247,1.704316,0.721664,1.133206,-0.404812,1.586153,0.662761,1.152889,-0.379901,1.490958,0.606866,1.188158,-0.359421,1.415730,0.550666,1.217064,-0.336049,1.344172,0.496748,1.257727,-0.314816,1.283196,0.443538,1.286647,-0.289530,1.225903,0.394018,1.308729,-0.262053,1.173928,0.346255,1.351453,-0.237704,1.139992,0.300393,1.380284,-0.209733,1.105997,0.256661,1.414621,-0.181613,1.082109,0.215429,1.453045,-0.152797,1.063853,0.177098,1.481066,-0.121803,1.043185,0.137203,1.514113,-0.090250,1.027072,0.096998,1.547317,-0.057603,1.012551,0.055328,1.577983,-0.023799,0.999267,0.013094,0.000108,-0.124970,1249.704346,1249.703491,0.000140,-0.119585,1195.855469,1195.854370,0.003995,-0.927433,9274.246094,232.443573,0.012013,-1.131580,11315.999023,98.211105,0.023892,-1.216018,12162.739258,67.214500,0.047506,-1.517865,15186.294922,42.410069,0.082523,-1.812564,18145.718750,24.421545,0.112452,-1.805072,11112.966797,18.450365,0.164460,-2.016784,8086.032715,14.043465,0.195870,-1.898199,4245.658203,13.178202,0.197797,-1.556158,1315.561768,30.760096,0.219540,-1.433455,802.380371,25.037956,0.268696,-1.483235,579.715515,20.975695,0.265968,-1.261051,386.583649,12.017023,0.325369,-1.343349,316.795959,12.612406,0.387968,-1.411606,232.491623,13.296940,0.435543,-1.411236,181.515228,11.646996,0.482729,-1.405722,143.425354,10.265131,0.531742,-1.402782,114.920082,9.114828,0.559383,-1.346165,88.589005,8.089214,0.607851,-1.342407,73.056610,7.249064,0.656928,-1.338238,60.826897,6.531094,0.681212,-1.285692,48.727219,5.868711,0.729238,-1.279951,41.256016,5.324553,0.751172,-1.230045,33.728260,4.816513,0.773107,-1.184288,27.913816,4.377203,0.815726,-1.171653,24.065962,3.999965,0.837886,-1.130636,20.254860,3.658493,0.857674,-1.089071,17.138168,3.347930,0.876120,-1.048303,14.572968,3.072666,0.893935,-1.009040,12.496377,2.825165,0.927998,-0.989064,11.040731,2.605520,0.928445,-0.935017,9.365102,2.401481,0.945279,-0.899993,8.177711,2.222282,0.959378,-0.863854,7.155303,2.059342,0.971761,-0.827684,6.284632,1.909314,0.987812,-0.795878,5.583837,1.771094,1.001958,-0.763540,4.962345,1.645968,1.014357,-0.730897,4.435898,1.527438,1.025946,-0.698675,3.973241,1.421337,1.036435,-0.666662,3.568025,1.323677,1.046807,-0.635466,3.218647,1.232678,1.052974,-0.602660,2.902273,1.147675,1.086089,-0.585364,2.694939,1.068352,1.094660,-0.554784,2.454491,0.993445,1.117131,-0.531500,2.270746,0.923758,1.114009,-0.496581,2.063934,0.858381,1.137328,-0.473914,1.917990,0.794980,1.158671,-0.450127,1.786523,0.735697,1.177878,-0.425306,1.662454,0.677498,1.207510,-0.403797,1.559058,0.621762,1.244496,-0.383812,1.466801,0.566190,1.240412,-0.351080,1.366853,0.514288,1.321257,-0.341200,1.309808,0.464621,1.336512,-0.312710,1.241822,0.413228,1.365047,-0.286935,1.186612,0.366092,1.418984,-0.265184,1.152120,0.321528,1.388864,-0.227750,1.089937,0.271827,1.464383,-0.207168,1.077271,0.232838,1.473125,-0.175770,1.041835,0.193289,1.542908,-0.150424,1.036794,0.156153,1.563005,-0.118748,1.013029,0.114866,1.637048,-0.089604,1.013493,0.076804,1.670777,-0.056398,0.999208,0.032691];
armory_data_ConstData.ltc_mag = [1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,0.999995,0.999990,0.999971,0.999937,0.999853,0.999670,0.999138,0.996746,0.979578,0.979309,0.978836,0.977972,0.976223,0.972205,0.962466,0.953919,0.949829,0.942492,0.929870,0.921319,0.911112,0.896015,0.885105,0.869971,0.855017,0.838328,0.821241,0.802352,0.783873,0.763309,0.743058,0.721929,0.699755,0.677721,0.655456,0.632681,0.609629,0.586831,0.564287,0.541772,0.519428,0.497353,0.475624,0.454606,0.434099,0.414085,0.394605,0.375698,0.357386,0.339871,0.323085,0.306905,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,0.999999,0.999999,0.999998,0.999995,0.999990,0.999980,0.999959,0.999923,0.999842,0.999660,0.999119,0.996613,0.981824,0.979298,0.978826,0.977957,0.976184,0.972091,0.962188,0.953875,0.949746,0.942335,0.930166,0.921211,0.910927,0.896979,0.884940,0.869864,0.854835,0.838200,0.821049,0.802552,0.783659,0.763512,0.742927,0.721715,0.699938,0.677775,0.655246,0.632555,0.609805,0.586996,0.564225,0.541606,0.519346,0.497419,0.475863,0.454738,0.434099,0.414003,0.394547,0.375747,0.357564,0.340012,0.323099,0.306861,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,0.999999,0.999998,0.999995,0.999991,0.999979,0.999959,0.999917,0.999839,0.999648,0.999074,0.996168,0.983770,0.979279,0.978800,0.977905,0.976058,0.971727,0.962120,0.953901,0.949485,0.941859,0.930911,0.920853,0.910394,0.897600,0.884427,0.870101,0.854522,0.838325,0.820754,0.802707,0.783223,0.763605,0.742872,0.721565,0.699935,0.677726,0.655242,0.632580,0.609766,0.586946,0.564275,0.541759,0.519467,0.497478,0.475886,0.454794,0.434233,0.414207,0.394751,0.375892,0.357683,0.340146,0.323287,0.307095,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,0.999999,0.999999,0.999998,0.999996,0.999992,0.999987,0.999975,0.999953,0.999913,0.999830,0.999630,0.998993,0.995279,0.985142,0.979252,0.978754,0.977821,0.975838,0.971088,0.962563,0.954785,0.949048,0.941052,0.931420,0.920812,0.909750,0.897867,0.883856,0.870091,0.854353,0.838166,0.820661,0.802465,0.783308,0.763346,0.742734,0.721608,0.699747,0.677626,0.655245,0.632547,0.609793,0.587044,0.564340,0.541779,0.519529,0.497633,0.476114,0.455030,0.434430,0.414406,0.394974,0.376154,0.357979,0.340443,0.323572,0.307379,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,0.999998,0.999998,0.999996,0.999991,0.999984,0.999970,0.999946,0.999905,0.999815,0.999599,0.998856,0.993704,0.986135,0.979212,0.978690,0.977691,0.975504,0.970133,0.962951,0.955649,0.948405,0.940418,0.931660,0.920881,0.909376,0.897785,0.883844,0.869756,0.854326,0.837732,0.820617,0.802053,0.783195,0.763119,0.742610,0.721344,0.699709,0.677624,0.655114,0.632523,0.609812,0.587052,0.564417,0.541966,0.519751,0.497824,0.476309,0.455271,0.434735,0.414736,0.395317,0.376524,0.358364,0.340852,0.323988,0.307786,1.000000,1.000000,1.000000,1.000000,1.000000,1.000000,0.999999,0.999999,0.999997,0.999996,0.999994,0.999989,0.999980,0.999965,0.999940,0.999895,0.999796,0.999559,0.998638,0.992774,0.986878,0.980297,0.978602,0.977514,0.975026,0.969169,0.963214,0.956267,0.947689,0.940054,0.931637,0.920678,0.908990,0.897349,0.883905,0.869139,0.854177,0.837476,0.820295,0.801977,0.782798,0.762978,0.742418,0.721193,0.699560,0.677402,0.655108,0.632543,0.609804,0.587158,0.564557,0.542096,0.519908,0.498088,0.476632,0.455623,0.435104,0.415161,0.395783,0.377005,0.358843,0.341345,0.324529,0.308355,1.000000,1.000000,1.000000,1.000000,1.000000,0.999999,0.999999,0.999998,0.999997,0.999992,0.999991,0.999985,0.999977,0.999959,0.999935,0.999878,0.999773,0.999505,0.998284,0.992353,0.987457,0.981665,0.978492,0.977277,0.974360,0.968716,0.963373,0.956629,0.947397,0.939657,0.931339,0.920588,0.908975,0.896712,0.883763,0.868890,0.853731,0.837333,0.819702,0.801738,0.782454,0.762712,0.742024,0.721037,0.699325,0.677359,0.655030,0.632439,0.609869,0.587221,0.564663,0.542328,0.520220,0.498400,0.476997,0.456053,0.435593,0.415658,0.396300,0.377577,0.359473,0.342004,0.325170,0.308997,1.000000,1.000000,1.000000,1.000000,1.000000,0.999999,0.999998,0.999998,0.999996,0.999993,0.999988,0.999981,0.999971,0.999951,0.999921,0.999863,0.999748,0.999433,0.997681,0.992120,0.987920,0.982864,0.978353,0.976961,0.973451,0.968396,0.963400,0.956680,0.947529,0.939151,0.930747,0.920511,0.908867,0.896142,0.883335,0.868764,0.853025,0.837015,0.819452,0.801249,0.782176,0.762345,0.741843,0.720721,0.699135,0.677194,0.654889,0.632487,0.609902,0.587328,0.564891,0.542567,0.520501,0.498793,0.477442,0.456528,0.436131,0.416273,0.396980,0.378276,0.360176,0.342738,0.325950,0.309803,1.000000,1.000000,1.000000,1.000000,0.999999,0.999998,0.999999,0.999997,0.999995,0.999991,0.999985,0.999978,0.999963,0.999942,0.999907,0.999844,0.999715,0.999332,0.996612,0.991974,0.988297,0.983843,0.978349,0.976540,0.972351,0.968109,0.963280,0.956464,0.947779,0.938754,0.929952,0.920253,0.908530,0.895785,0.882679,0.868456,0.852669,0.836406,0.819138,0.800708,0.781803,0.761855,0.741534,0.720405,0.698959,0.676964,0.654827,0.632411,0.609922,0.587477,0.565051,0.542829,0.520889,0.499225,0.477951,0.457148,0.436792,0.416963,0.397723,0.379068,0.361025,0.343608,0.326842,0.310718,1.000000,1.000000,1.000000,1.000000,1.000000,0.999999,0.999998,0.999995,0.999994,0.999990,0.999983,0.999971,0.999954,0.999932,0.999892,0.999820,0.999675,0.999190,0.995492,0.991911,0.988610,0.984662,0.979221,0.975975,0.971671,0.967788,0.963002,0.955938,0.947965,0.938692,0.929309,0.919781,0.908268,0.895518,0.882022,0.867884,0.852346,0.835746,0.818607,0.800261,0.781335,0.761539,0.741063,0.720116,0.698617,0.676815,0.654700,0.632389,0.610037,0.587591,0.565328,0.543205,0.521293,0.499745,0.478562,0.457776,0.437515,0.417776,0.398586,0.379963,0.361984,0.344616,0.327857,0.311751,1.000000,1.000000,1.000000,1.000000,1.000000,0.999999,0.999997,0.999996,0.999992,0.999986,0.999977,0.999965,0.999947,0.999916,0.999873,0.999794,0.999628,0.998966,0.994914,0.991849,0.988873,0.985288,0.980170,0.975207,0.971156,0.967476,0.962538,0.955601,0.947978,0.938542,0.928618,0.919056,0.907890,0.895098,0.881352,0.867263,0.851806,0.835168,0.818003,0.799785,0.780633,0.761080,0.740618,0.719795,0.698332,0.676629,0.654544,0.632411,0.610042,0.587805,0.565593,0.543549,0.521793,0.500309,0.479195,0.458546,0.438353,0.418669,0.399557,0.381012,0.363049,0.345710,0.329006,0.312948,1.000000,1.000000,1.000000,1.000000,1.000000,0.999999,0.999997,0.999993,0.999990,0.999984,0.999972,0.999960,0.999939,0.999906,0.999853,0.999765,0.999567,0.998603,0.994519,0.991794,0.989089,0.985781,0.980956,0.974161,0.970688,0.967064,0.961890,0.955292,0.947848,0.938359,0.928226,0.918214,0.907361,0.894702,0.880834,0.866500,0.851209,0.834627,0.817211,0.799250,0.780131,0.760512,0.740218,0.719264,0.698063,0.676325,0.654450,0.632316,0.610170,0.587988,0.565891,0.544013,0.522305,0.500958,0.479971,0.459376,0.439271,0.419699,0.400620,0.382126,0.364246,0.346967,0.330273,0.314236,1.000000,1.000000,1.000000,1.000000,0.999999,0.999998,0.999996,0.999994,0.999988,0.999979,0.999967,0.999952,0.999924,0.999888,0.999833,0.999733,0.999490,0.997946,0.994192,0.991812,0.989274,0.986224,0.981547,0.974000,0.970269,0.966545,0.961031,0.954921,0.947416,0.938226,0.928003,0.917390,0.906553,0.894191,0.880329,0.865540,0.850476,0.834058,0.816467,0.798509,0.779561,0.759828,0.739738,0.718878,0.697718,0.676138,0.654342,0.632317,0.610292,0.588207,0.566289,0.544443,0.522927,0.501674,0.480765,0.460314,0.440304,0.420782,0.401824,0.383410,0.365538,0.348312,0.331692,0.315688,1.000000,1.000000,1.000000,1.000000,0.999999,0.999998,0.999996,0.999993,0.999985,0.999976,0.999961,0.999943,0.999913,0.999872,0.999807,0.999691,0.999390,0.996859,0.994003,0.991808,0.989423,0.986523,0.981783,0.974511,0.969791,0.965933,0.960377,0.954434,0.946803,0.938026,0.927620,0.916545,0.905639,0.893489,0.879820,0.864852,0.849513,0.833311,0.815878,0.797621,0.778938,0.759253,0.739142,0.718479,0.697274,0.675902,0.654135,0.632357,0.610364,0.588497,0.566631,0.545012,0.523579,0.502429,0.481680,0.461304,0.441425,0.422039,0.403135,0.384779,0.366976,0.349796,0.333231,0.317277,1.000000,1.000000,1.000000,1.000000,0.999999,0.999998,0.999996,0.999991,0.999983,0.999974,0.999956,0.999932,0.999901,0.999852,0.999780,0.999646,0.999248,0.996193,0.993784,0.991782,0.989539,0.986694,0.981765,0.975135,0.969309,0.965128,0.959788,0.953831,0.946255,0.937664,0.927351,0.916044,0.904715,0.892528,0.879111,0.864256,0.848452,0.832434,0.815129,0.796806,0.778118,0.758668,0.738466,0.718024,0.696958,0.675642,0.654067,0.632325,0.610546,0.588786,0.567123,0.545617,0.524312,0.503348,0.482637,0.462418,0.442657,0.423338,0.404564,0.386277,0.368545,0.351448,0.334906,0.318961,1.000000,1.000000,1.000000,0.999999,0.999999,0.999998,0.999994,0.999989,0.999979,0.999968,0.999949,0.999921,0.999886,0.999833,0.999747,0.999596,0.999029,0.995749,0.993677,0.991724,0.989620,0.986723,0.981515,0.975767,0.969056,0.964124,0.959142,0.953036,0.945650,0.937022,0.926971,0.915515,0.903584,0.891603,0.878212,0.863472,0.847652,0.831398,0.814299,0.796105,0.777231,0.757977,0.737895,0.717415,0.696595,0.675317,0.653980,0.632343,0.610735,0.589076,0.567620,0.546251,0.525165,0.504255,0.483759,0.463666,0.443987,0.424783,0.406042,0.387891,0.370293,0.353221,0.336715,0.320806,1.000000,1.000000,1.000000,0.999999,0.999998,0.999998,0.999993,0.999987,0.999977,0.999964,0.999943,0.999911,0.999867,0.999807,0.999714,0.999531,0.998645,0.995399,0.993512,0.991717,0.989661,0.986652,0.981559,0.976183,0.969411,0.963317,0.958457,0.952091,0.944951,0.936307,0.926454,0.915043,0.902668,0.890462,0.877245,0.862672,0.846823,0.830201,0.813293,0.795306,0.776393,0.757199,0.737324,0.716808,0.696187,0.675094,0.653814,0.632453,0.610885,0.589483,0.568099,0.546975,0.525953,0.505268,0.484936,0.464988,0.445458,0.426314,0.407750,0.389670,0.372098,0.355105,0.338682,0.322825,1.000000,1.000000,1.000000,1.000000,0.999999,0.999996,0.999992,0.999983,0.999976,0.999959,0.999933,0.999898,0.999849,0.999780,0.999676,0.999454,0.997884,0.995166,0.993394,0.991723,0.989654,0.986389,0.981632,0.976607,0.969701,0.962555,0.957605,0.951232,0.944099,0.935556,0.925699,0.914492,0.902027,0.889116,0.876093,0.861649,0.845956,0.829238,0.812220,0.794420,0.775657,0.756265,0.736673,0.716372,0.695669,0.674886,0.653728,0.632568,0.611217,0.589929,0.568783,0.547752,0.526931,0.506425,0.486238,0.466425,0.446945,0.428026,0.409536,0.391551,0.374087,0.357155,0.340787,0.324974,1.000000,1.000000,1.000000,1.000000,0.999998,0.999996,0.999990,0.999984,0.999970,0.999952,0.999925,0.999886,0.999831,0.999757,0.999633,0.999356,0.997017,0.994868,0.993337,0.991710,0.989580,0.985848,0.981640,0.976711,0.969755,0.962166,0.956609,0.950365,0.943026,0.934693,0.924880,0.913729,0.901350,0.887966,0.874726,0.860474,0.844905,0.828269,0.810905,0.793364,0.774812,0.755478,0.735886,0.715847,0.695231,0.674537,0.653667,0.632527,0.611475,0.590363,0.569462,0.548571,0.527976,0.507634,0.487632,0.467901,0.448680,0.429833,0.411467,0.393568,0.376197,0.359374,0.343034,0.327273,1.000000,1.000000,1.000000,0.999999,0.999998,0.999993,0.999989,0.999980,0.999965,0.999945,0.999913,0.999869,0.999810,0.999723,0.999583,0.999213,0.996540,0.994740,0.993244,0.991671,0.989411,0.985533,0.981616,0.976847,0.969968,0.962315,0.955468,0.949420,0.942016,0.933617,0.923949,0.912899,0.900495,0.887022,0.873283,0.859153,0.843830,0.827325,0.809888,0.792172,0.773832,0.754686,0.735035,0.715297,0.694955,0.674242,0.653660,0.632752,0.611804,0.590993,0.570154,0.549539,0.529087,0.508974,0.489030,0.469599,0.450466,0.431761,0.413508,0.395761,0.378480,0.361679,0.345465,0.329752,1.000000,1.000000,1.000000,1.000000,0.999997,0.999994,0.999987,0.999978,0.999961,0.999936,0.999903,0.999855,0.999786,0.999689,0.999527,0.998988,0.996137,0.994527,0.993108,0.991599,0.989084,0.985308,0.981527,0.976677,0.970079,0.962535,0.954490,0.948271,0.940942,0.932422,0.922836,0.911896,0.899632,0.886118,0.871864,0.857719,0.842536,0.826163,0.808849,0.790860,0.772802,0.753860,0.734335,0.714582,0.694543,0.674071,0.653544,0.632922,0.612153,0.591573,0.570951,0.550520,0.530352,0.510311,0.490707,0.471359,0.452396,0.433837,0.415736,0.398052,0.380874,0.364232,0.348023,0.332368,1.000000,1.000000,1.000000,0.999999,0.999998,0.999994,0.999988,0.999976,0.999957,0.999928,0.999891,0.999837,0.999759,0.999650,0.999463,0.998551,0.995879,0.994366,0.992964,0.991479,0.988521,0.985101,0.981482,0.976168,0.970242,0.962585,0.953950,0.946973,0.939686,0.931248,0.921614,0.910765,0.898617,0.885183,0.870772,0.856138,0.841120,0.824962,0.807732,0.789813,0.771638,0.753008,0.733686,0.713927,0.694082,0.673967,0.653549,0.633135,0.612702,0.592200,0.571904,0.551679,0.531678,0.511898,0.492437,0.473239,0.454451,0.436067,0.418054,0.400542,0.383486,0.366848,0.350781,0.335182,1.000000,1.000000,1.000000,0.999999,0.999997,0.999993,0.999985,0.999972,0.999951,0.999919,0.999877,0.999817,0.999733,0.999608,0.999380,0.997685,0.995603,0.994264,0.992911,0.991287,0.987923,0.984871,0.981239,0.975933,0.970149,0.962511,0.953824,0.945699,0.938285,0.929907,0.920343,0.909537,0.897435,0.884056,0.869626,0.854490,0.839459,0.823511,0.806511,0.788752,0.770440,0.751995,0.732962,0.713424,0.693525,0.673798,0.653622,0.633301,0.613224,0.592938,0.572833,0.552904,0.533030,0.513556,0.494215,0.475279,0.456673,0.438411,0.420583,0.403178,0.386178,0.369728,0.353688,0.338147,1.000000,1.000000,1.000000,0.999999,0.999997,0.999991,0.999984,0.999967,0.999944,0.999912,0.999863,0.999796,0.999703,0.999563,0.999279,0.997104,0.995394,0.994111,0.992825,0.990979,0.987529,0.984661,0.980774,0.975758,0.969866,0.962465,0.953678,0.944489,0.936886,0.928356,0.918820,0.908073,0.896092,0.882833,0.868463,0.853212,0.837744,0.822048,0.805333,0.787643,0.769414,0.750830,0.732178,0.712972,0.693227,0.673569,0.653744,0.633739,0.613735,0.593822,0.573916,0.554158,0.534652,0.515248,0.496233,0.477436,0.459009,0.440929,0.423259,0.405951,0.389136,0.372690,0.356789,0.341329,1.000000,1.000000,1.000000,0.999999,0.999996,0.999991,0.999981,0.999966,0.999939,0.999903,0.999847,0.999771,0.999666,0.999510,0.999131,0.996690,0.995147,0.993882,0.992696,0.990474,0.987227,0.984334,0.980153,0.975438,0.969406,0.962238,0.953598,0.943868,0.935356,0.926721,0.917122,0.906430,0.894550,0.881354,0.867131,0.851954,0.835972,0.820331,0.803911,0.786452,0.768420,0.749821,0.731298,0.712393,0.692979,0.673418,0.653859,0.634232,0.614327,0.594732,0.575131,0.555584,0.536346,0.517175,0.498323,0.479744,0.461485,0.443645,0.426061,0.408969,0.392155,0.375921,0.360060,0.344677,1.000000,1.000000,1.000000,0.999999,0.999997,0.999991,0.999979,0.999960,0.999931,0.999891,0.999832,0.999748,0.999629,0.999449,0.998880,0.996305,0.995024,0.993812,0.992508,0.989721,0.986936,0.983936,0.979629,0.974979,0.968928,0.961970,0.953291,0.943458,0.933644,0.925007,0.915388,0.904755,0.892932,0.879831,0.865794,0.850672,0.834591,0.818398,0.802304,0.785151,0.767450,0.748987,0.730325,0.711758,0.692761,0.673417,0.653908,0.634686,0.615168,0.595707,0.576393,0.557198,0.538018,0.519253,0.500555,0.482220,0.464197,0.446414,0.429106,0.412035,0.395508,0.379284,0.363538,0.348220,1.000000,1.000000,1.000000,0.999999,0.999995,0.999989,0.999977,0.999955,0.999924,0.999879,0.999813,0.999722,0.999590,0.999381,0.998335,0.996088,0.994814,0.993709,0.992220,0.989209,0.986575,0.983383,0.979084,0.974272,0.968359,0.961275,0.953025,0.943098,0.932434,0.923101,0.913477,0.902861,0.891059,0.878072,0.864118,0.849188,0.833281,0.816808,0.800596,0.783745,0.766331,0.748123,0.729686,0.711078,0.692527,0.673491,0.654296,0.635113,0.616048,0.596847,0.577720,0.558879,0.540028,0.521371,0.502996,0.484858,0.466997,0.449477,0.432217,0.415426,0.398924,0.382890,0.367206,0.351955,1.000000,1.000000,1.000000,0.999998,0.999996,0.999988,0.999974,0.999953,0.999918,0.999865,0.999791,0.999690,0.999542,0.999293,0.997535,0.995790,0.994609,0.993557,0.991766,0.988767,0.986255,0.982544,0.978541,0.973528,0.967700,0.960596,0.952299,0.942684,0.931653,0.921211,0.911489,0.900818,0.889018,0.876245,0.862406,0.847517,0.831852,0.815367,0.798719,0.782224,0.765167,0.747304,0.729133,0.710485,0.692196,0.673589,0.654770,0.635717,0.616986,0.598119,0.579298,0.560560,0.542163,0.523669,0.505564,0.487642,0.469991,0.452658,0.435620,0.418937,0.402612,0.386633,0.371091,0.355949,1.000000,1.000000,0.999999,0.999998,0.999995,0.999986,0.999973,0.999948,0.999909,0.999852,0.999769,0.999656,0.999490,0.999186,0.997059,0.995624,0.994510,0.993327,0.991020,0.988379,0.985771,0.981971,0.978051,0.972892,0.967020,0.959965,0.951625,0.941902,0.930951,0.919370,0.909285,0.898562,0.886809,0.874251,0.860597,0.845808,0.830365,0.813972,0.797260,0.780597,0.763854,0.746401,0.728519,0.710203,0.691882,0.673687,0.655275,0.636621,0.617909,0.599473,0.581032,0.562560,0.544295,0.526228,0.508293,0.490652,0.473242,0.456004,0.439212,0.422663,0.406476,0.390647,0.375204,0.360129,1.000000,1.000000,1.000000,0.999999,0.999994,0.999984,0.999969,0.999940,0.999898,0.999837,0.999746,0.999617,0.999438,0.999016,0.996703,0.995302,0.994356,0.992993,0.990390,0.988072,0.985152,0.981447,0.977273,0.972234,0.966113,0.959033,0.950869,0.941217,0.930175,0.918279,0.906941,0.896201,0.884509,0.871920,0.858420,0.843906,0.828730,0.812524,0.795978,0.778979,0.762450,0.745459,0.727966,0.710046,0.691808,0.673739,0.655756,0.637574,0.619153,0.600887,0.582796,0.564748,0.546636,0.528904,0.511252,0.493791,0.476563,0.459695,0.442942,0.426632,0.410558,0.394895,0.379517,0.364560,1.000000,1.000000,1.000000,0.999998,0.999994,0.999984,0.999966,0.999934,0.999887,0.999819,0.999720,0.999578,0.999367,0.998696,0.996353,0.995201,0.994115,0.992665,0.989948,0.987633,0.984331,0.980827,0.976390,0.971327,0.965201,0.957977,0.949712,0.940128,0.929187,0.917237,0.904645,0.893711,0.882112,0.869516,0.856236,0.841929,0.826924,0.810991,0.794686,0.777761,0.760980,0.744384,0.727314,0.709877,0.691988,0.674098,0.656243,0.638603,0.620606,0.602574,0.584694,0.567018,0.549311,0.531673,0.514403,0.497148,0.480177,0.463439,0.446998,0.430743,0.414943,0.399304,0.384121,0.369251,1.000000,1.000000,1.000000,0.999997,0.999992,0.999981,0.999962,0.999927,0.999874,0.999798,0.999691,0.999533,0.999291,0.997909,0.996117,0.995029,0.993880,0.992142,0.989576,0.987185,0.983587,0.980055,0.975487,0.970172,0.963998,0.956738,0.948637,0.939083,0.928169,0.916144,0.903147,0.890916,0.879389,0.866895,0.853826,0.839729,0.824957,0.809472,0.793341,0.776743,0.759808,0.743277,0.726643,0.709685,0.692249,0.674639,0.657008,0.639576,0.622114,0.604471,0.586851,0.569340,0.552135,0.534806,0.517599,0.500765,0.484035,0.467440,0.451212,0.435240,0.419399,0.404083,0.388944,0.374182,1.000000,1.000000,1.000000,0.999998,0.999993,0.999979,0.999958,0.999919,0.999861,0.999774,0.999656,0.999482,0.999195,0.997307,0.995837,0.994722,0.993707,0.991391,0.989169,0.986461,0.982904,0.979062,0.974536,0.969035,0.962653,0.955486,0.947243,0.937747,0.926861,0.914936,0.901835,0.888472,0.876571,0.864223,0.851252,0.837374,0.822985,0.807788,0.791927,0.775702,0.758928,0.742347,0.725914,0.709495,0.692569,0.675363,0.658085,0.640639,0.623698,0.606505,0.589267,0.572008,0.554939,0.538132,0.521211,0.504487,0.488048,0.471807,0.455651,0.439858,0.424332,0.408983,0.394071,0.379402,1.000000,1.000000,1.000000,0.999997,0.999992,0.999978,0.999954,0.999913,0.999844,0.999753,0.999618,0.999424,0.999067,0.996875,0.995659,0.994603,0.993420,0.990874,0.988713,0.985585,0.982193,0.978145,0.973416,0.967801,0.961483,0.954069,0.945704,0.936138,0.925374,0.913395,0.900339,0.886675,0.873512,0.861326,0.848513,0.834956,0.820820,0.805943,0.790574,0.774677,0.758279,0.741807,0.725271,0.709231,0.692874,0.676189,0.659352,0.642296,0.625250,0.608700,0.591823,0.575012,0.558143,0.541491,0.525075,0.508558,0.492277,0.476270,0.460459,0.444740,0.429400,0.414309,0.399421,0.384907,1.000000,1.000000,1.000000,0.999997,0.999990,0.999977,0.999947,0.999902,0.999832,0.999730,0.999577,0.999359,0.998845,0.996554,0.995328,0.994442,0.992919,0.990393,0.988170,0.984855,0.981312,0.977149,0.972137,0.966207,0.959967,0.952454,0.943873,0.934434,0.923813,0.911942,0.898928,0.885120,0.871043,0.858248,0.845666,0.832346,0.818482,0.804029,0.788982,0.773571,0.757700,0.741484,0.725186,0.708915,0.693244,0.677028,0.660656,0.644079,0.627377,0.610804,0.594542,0.578112,0.561650,0.545163,0.528962,0.512926,0.496893,0.481007,0.465397,0.450042,0.434740,0.419831,0.405156,0.390692,1.000000,1.000000,0.999999,0.999997,0.999989,0.999973,0.999942,0.999891,0.999813,0.999698,0.999532,0.999285,0.998286,0.996295,0.995215,0.994182,0.992032,0.989855,0.987415,0.984047,0.980050,0.976017,0.970845,0.964767,0.958269,0.950600,0.942033,0.932501,0.921807,0.910017,0.897149,0.883414,0.869182,0.855055,0.842687,0.829548,0.816162,0.802072,0.787436,0.772533,0.757043,0.741263,0.725330,0.709262,0.693497,0.678038,0.662128,0.646068,0.629824,0.613437,0.597334,0.581401,0.565372,0.549288,0.533182,0.517405,0.501765,0.486143,0.470675,0.455465,0.440532,0.425630,0.411113,0.396887,1.000000,1.000000,0.999999,0.999996,0.999989,0.999970,0.999934,0.999879,0.999793,0.999665,0.999481,0.999192,0.997506,0.995926,0.995009,0.993736,0.991298,0.989326,0.986371,0.983199,0.979032,0.974596,0.969364,0.963198,0.956385,0.948509,0.939993,0.930421,0.919590,0.908140,0.895349,0.881699,0.867456,0.852784,0.839500,0.826629,0.813602,0.799983,0.785873,0.771340,0.756480,0.741190,0.725687,0.709997,0.694192,0.678975,0.663673,0.648135,0.632442,0.616477,0.600565,0.584772,0.569202,0.553595,0.537881,0.522193,0.506784,0.491554,0.476349,0.461278,0.446419,0.431913,0.417443,0.403271,1.000000,1.000000,0.999999,0.999995,0.999986,0.999966,0.999927,0.999867,0.999772,0.999629,0.999423,0.999075,0.997024,0.995773,0.994651,0.993353,0.990822,0.988569,0.985596,0.982182,0.977871,0.973140,0.967584,0.961408,0.954294,0.946398,0.937603,0.927937,0.917305,0.905833,0.893138,0.879770,0.865720,0.851023,0.836801,0.823784,0.810909,0.797886,0.784177,0.770243,0.755925,0.741144,0.726214,0.710971,0.695563,0.680212,0.665304,0.650297,0.635168,0.619796,0.604217,0.588692,0.573254,0.557998,0.542839,0.527470,0.512162,0.497115,0.482296,0.467477,0.452812,0.438310,0.424184,0.410163,1.000000,1.000000,0.999999,0.999996,0.999984,0.999962,0.999920,0.999852,0.999745,0.999586,0.999354,0.998894,0.996686,0.995485,0.994493,0.992573,0.990323,0.987772,0.984692,0.980887,0.976446,0.971625,0.965717,0.959421,0.951975,0.944086,0.935066,0.925403,0.914814,0.903208,0.890958,0.877817,0.863828,0.849289,0.834872,0.820889,0.808183,0.795660,0.782556,0.769066,0.755386,0.741229,0.726726,0.712170,0.697209,0.682170,0.667203,0.652689,0.637938,0.623262,0.608190,0.593002,0.577817,0.562737,0.547836,0.533036,0.518052,0.503135,0.488422,0.473986,0.459552,0.445282,0.431149,0.417407,1.000000,1.000000,0.999999,0.999994,0.999983,0.999957,0.999914,0.999835,0.999718,0.999538,0.999275,0.998454,0.996341,0.995246,0.994222,0.991844,0.989829,0.986688,0.983562,0.979638,0.974932,0.969827,0.963621,0.957146,0.949365,0.941398,0.932245,0.922556,0.911949,0.900627,0.888440,0.875544,0.862005,0.847810,0.833372,0.819134,0.805508,0.793339,0.780916,0.767837,0.754858,0.741307,0.727496,0.713386,0.699131,0.684542,0.669878,0.655261,0.641035,0.626685,0.612377,0.597625,0.582805,0.568030,0.553204,0.538684,0.524269,0.509662,0.495119,0.480735,0.466634,0.452593,0.438748,0.424915,1.000000,1.000000,0.999998,0.999994,0.999982,0.999956,0.999901,0.999818,0.999683,0.999487,0.999185,0.997584,0.996004,0.995050,0.993715,0.991212,0.989057,0.985879,0.982243,0.978206,0.973119,0.967919,0.961343,0.954603,0.946712,0.938378,0.929266,0.919443,0.908911,0.897725,0.885589,0.873254,0.859889,0.846123,0.832094,0.817898,0.803866,0.791061,0.779235,0.766885,0.754292,0.741565,0.728331,0.714861,0.701179,0.687166,0.673012,0.658716,0.644442,0.630472,0.616519,0.602514,0.588172,0.573689,0.559281,0.544768,0.530543,0.516485,0.502303,0.488100,0.474095,0.460245,0.446598,0.433169,1.000000,1.000000,0.999997,0.999993,0.999980,0.999947,0.999891,0.999794,0.999647,0.999425,0.999062,0.997049,0.995778,0.994652,0.992778,0.990482,0.988004,0.984893,0.980881,0.976605,0.971199,0.965610,0.958925,0.951746,0.943791,0.935200,0.926018,0.916028,0.905724,0.894528,0.882914,0.870740,0.857802,0.844552,0.830857,0.816921,0.803102,0.789625,0.777480,0.765891,0.753908,0.741795,0.729390,0.716440,0.703411,0.690068,0.676438,0.662586,0.648697,0.634732,0.620997,0.607451,0.593765,0.579748,0.565661,0.551594,0.537396,0.523433,0.509708,0.495972,0.482082,0.468427,0.454890,0.441623,1.000000,1.000000,0.999999,0.999991,0.999977,0.999940,0.999875,0.999769,0.999605,0.999352,0.998882,0.996665,0.995459,0.994380,0.992014,0.989912,0.986796,0.983537,0.979326,0.974792,0.969140,0.963160,0.956222,0.948807,0.940518,0.931755,0.922452,0.912319,0.902227,0.891142,0.879838,0.868047,0.855745,0.842718,0.829827,0.816398,0.802786,0.789396,0.776581,0.764901,0.753710,0.742102,0.730448,0.718337,0.705768,0.693172,0.680153,0.666882,0.653401,0.639837,0.626152,0.612676,0.599435,0.586109,0.572473,0.558715,0.544964,0.531112,0.517416,0.503992,0.490653,0.477162,0.463832,0.450645,1.000000,1.000000,0.999999,0.999992,0.999973,0.999933,0.999861,0.999741,0.999554,0.999267,0.998411,0.996303,0.995191,0.993945,0.991406,0.989019,0.985720,0.982057,0.977501,0.972605,0.966697,0.960340,0.953031,0.945347,0.936866,0.927917,0.918562,0.908598,0.898486,0.887794,0.876545,0.865379,0.853428,0.841167,0.828649,0.815967,0.802957,0.789865,0.777077,0.764695,0.753544,0.742694,0.731571,0.720304,0.708490,0.696351,0.684134,0.671470,0.658541,0.645376,0.632209,0.618776,0.605511,0.592527,0.579546,0.566310,0.552860,0.539492,0.526005,0.512564,0.499340,0.486360,0.473357,0.460306,1.000000,1.000000,0.999998,0.999991,0.999970,0.999926,0.999842,0.999710,0.999498,0.999164,0.997464,0.995870,0.994917,0.992911,0.990682,0.987816,0.984410,0.980551,0.975693,0.970263,0.963946,0.957248,0.949765,0.941571,0.932941,0.923873,0.914332,0.904560,0.894394,0.884127,0.873294,0.862503,0.851335,0.839566,0.827776,0.815708,0.803370,0.790821,0.778386,0.766121,0.754193,0.743420,0.732975,0.722326,0.711376,0.699992,0.688180,0.676354,0.664004,0.651449,0.638600,0.625776,0.612660,0.599603,0.586719,0.574078,0.561273,0.548129,0.535155,0.522015,0.508851,0.495837,0.483190,0.470624,1.000000,1.000000,0.999998,0.999988,0.999965,0.999916,0.999823,0.999669,0.999425,0.999025,0.996874,0.995670,0.994415,0.991991,0.989766,0.986646,0.982812,0.978356,0.973317,0.967612,0.960820,0.953603,0.945969,0.937323,0.928661,0.919507,0.909833,0.900245,0.890390,0.880252,0.870000,0.859518,0.849163,0.838101,0.826960,0.815688,0.804126,0.792234,0.780356,0.768474,0.756678,0.745159,0.734601,0.724624,0.714339,0.703751,0.692766,0.681267,0.669799,0.657871,0.645577,0.633102,0.620560,0.607737,0.594890,0.582143,0.569779,0.557360,0.544651,0.531942,0.519228,0.506467,0.493710,0.481143,1.000000,1.000000,0.999998,0.999988,0.999961,0.999902,0.999798,0.999622,0.999341,0.998801,0.996397,0.995225,0.993927,0.991338,0.988500,0.985327,0.981195,0.976383,0.970726,0.964471,0.957386,0.949813,0.941694,0.932681,0.923974,0.914755,0.905026,0.895649,0.886178,0.876277,0.866629,0.856890,0.846934,0.836887,0.826373,0.815885,0.805169,0.794133,0.782812,0.771547,0.760175,0.748896,0.737687,0.727152,0.717601,0.707670,0.697425,0.686788,0.675664,0.664513,0.652962,0.640965,0.628851,0.616551,0.604168,0.591559,0.579009,0.566648,0.554597,0.542382,0.529999,0.517655,0.505254,0.492894,1.000000,1.000000,0.999997,0.999986,0.999956,0.999889,0.999766,0.999562,0.999240,0.997952,0.996094,0.994979,0.992773,0.990536,0.987214,0.983322,0.978938,0.973714,0.967681,0.960981,0.953144,0.945475,0.936909,0.927734,0.918826,0.909590,0.900085,0.890867,0.881801,0.872565,0.863236,0.854239,0.845060,0.835686,0.826251,0.816284,0.806586,0.796419,0.785914,0.775210,0.764461,0.753599,0.742805,0.731872,0.721370,0.711898,0.702337,0.692383,0.682137,0.671365,0.660479,0.649314,0.637685,0.625899,0.613898,0.601865,0.589582,0.577285,0.565013,0.553106,0.541280,0.529367,0.517320,0.505411,1.000000,1.000000,0.999997,0.999983,0.999948,0.999869,0.999732,0.999499,0.999111,0.997167,0.995720,0.994349,0.991727,0.989197,0.985883,0.981483,0.976618,0.970597,0.964122,0.956994,0.948639,0.940500,0.931606,0.922385,0.913291,0.904205,0.894938,0.885890,0.877334,0.868754,0.860053,0.851683,0.843447,0.834889,0.826304,0.817441,0.808285,0.799141,0.789570,0.779600,0.769510,0.759155,0.748882,0.738346,0.727629,0.717273,0.707467,0.698283,0.688609,0.678748,0.668371,0.657739,0.646951,0.635765,0.624254,0.612647,0.600900,0.589061,0.576998,0.564991,0.553102,0.541517,0.530027,0.518495,1.000000,1.000000,0.999997,0.999983,0.999939,0.999851,0.999684,0.999412,0.998925,0.996597,0.995207,0.993603,0.990903,0.987594,0.983814,0.979016,0.973647,0.967048,0.960109,0.952123,0.943560,0.934900,0.925747,0.916566,0.907305,0.898441,0.889629,0.881042,0.872874,0.865064,0.857225,0.849446,0.842063,0.834561,0.826814,0.818875,0.810748,0.802316,0.793699,0.784704,0.775198,0.765643,0.755735,0.745873,0.735526,0.725229,0.714892,0.704807,0.695502,0.686241,0.676633,0.666688,0.656384,0.645871,0.635174,0.624113,0.612788,0.601426,0.589925,0.578399,0.566612,0.554931,0.543383,0.532065,1.000000,1.000000,0.999996,0.999977,0.999928,0.999824,0.999633,0.999306,0.998429,0.996133,0.994890,0.992316,0.989752,0.986095,0.981564,0.976234,0.970081,0.962779,0.955232,0.946702,0.937716,0.928604,0.919281,0.910167,0.901046,0.892446,0.884183,0.876253,0.868619,0.861545,0.854673,0.847885,0.841074,0.834610,0.827984,0.820945,0.813648,0.806232,0.798444,0.790232,0.781853,0.772897,0.763648,0.754227,0.744542,0.734689,0.724526,0.714204,0.704152,0.694222,0.685143,0.675860,0.666319,0.656415,0.646273,0.635902,0.625399,0.614563,0.603490,0.592413,0.581217,0.570000,0.558608,0.547242,1.000000,0.999999,0.999995,0.999972,0.999915,0.999790,0.999562,0.999168,0.997237,0.995672,0.994074,0.991220,0.987792,0.983822,0.978599,0.972804,0.965718,0.958053,0.949460,0.940503,0.931011,0.921608,0.912409,0.903378,0.894606,0.886369,0.878756,0.871573,0.864862,0.858421,0.852541,0.846802,0.841027,0.835206,0.829628,0.823730,0.817415,0.810655,0.803873,0.796659,0.788887,0.780940,0.772537,0.763507,0.754487,0.745163,0.735572,0.725687,0.715611,0.705398,0.695418,0.685592,0.676518,0.667304,0.657875,0.648182,0.638235,0.628062,0.617813,0.607283,0.596552,0.585770,0.575033,0.564153,1.000000,1.000000,0.999995,0.999970,0.999898,0.999748,0.999472,0.998969,0.996528,0.995102,0.992701,0.989963,0.985981,0.981194,0.975183,0.968501,0.960502,0.952012,0.942861,0.933376,0.923506,0.914042,0.904921,0.896282,0.887987,0.880341,0.873536,0.867293,0.861556,0.856148,0.850987,0.846352,0.841684,0.836880,0.832036,0.827091,0.821900,0.816206,0.810042,0.803629,0.796918,0.789653,0.781915,0.774014,0.765530,0.756526,0.747669,0.738342,0.728770,0.718942,0.708942,0.698855,0.688933,0.679131,0.669855,0.660811,0.651549,0.642127,0.632454,0.622651,0.612709,0.602606,0.592344,0.581877,1.000000,0.999999,0.999993,0.999963,0.999874,0.999691,0.999350,0.998431,0.995873,0.994456,0.991327,0.987798,0.983232,0.977500,0.970828,0.962815,0.954228,0.944752,0.935126,0.925179,0.915102,0.905763,0.897087,0.888933,0.881452,0.874687,0.868716,0.863585,0.858931,0.854662,0.850569,0.846719,0.843151,0.839426,0.835588,0.831443,0.827004,0.822395,0.817254,0.811630,0.805464,0.799124,0.792382,0.785091,0.777315,0.769360,0.760908,0.751957,0.743128,0.733917,0.724340,0.714713,0.704721,0.694835,0.684862,0.675099,0.665570,0.656644,0.647651,0.638581,0.629337,0.619926,0.610358,0.600707,1.000000,1.000000,0.999990,0.999953,0.999843,0.999613,0.999186,0.997025,0.995317,0.992850,0.989760,0.985270,0.979807,0.973049,0.965228,0.956248,0.946394,0.936324,0.926124,0.915808,0.905942,0.897060,0.889001,0.881755,0.875351,0.869688,0.864736,0.860745,0.857305,0.854190,0.851261,0.848484,0.845642,0.842948,0.840060,0.836901,0.833379,0.829393,0.825103,0.820431,0.815288,0.809575,0.803326,0.796949,0.790174,0.782873,0.775048,0.767139,0.758772,0.750019,0.741120,0.732127,0.722743,0.713225,0.703637,0.693768,0.684016,0.674277,0.664703,0.655328,0.646550,0.637812,0.629036,0.620129,1.000000,1.000000,0.999988,0.999933,0.999800,0.999508,0.998917,0.996236,0.994617,0.991176,0.987089,0.981880,0.974966,0.967156,0.957914,0.947585,0.936937,0.926318,0.915662,0.905567,0.896223,0.888166,0.881117,0.875079,0.869981,0.865675,0.862091,0.859183,0.856981,0.855065,0.853273,0.851572,0.849782,0.847768,0.845668,0.843345,0.840703,0.837646,0.834094,0.830030,0.825631,0.820873,0.815619,0.809856,0.803578,0.797096,0.790359,0.783152,0.775507,0.767504,0.759411,0.750982,0.742208,0.733383,0.724445,0.715190,0.705827,0.696440,0.686773,0.677242,0.667735,0.658471,0.649236,0.640305,1.000000,0.999999,0.999984,0.999918,0.999737,0.999350,0.997576,0.995476,0.992614,0.988817,0.983601,0.976880,0.968694,0.959092,0.948297,0.936831,0.925592,0.914494,0.904159,0.894643,0.886417,0.879620,0.874023,0.869533,0.865967,0.863238,0.861113,0.859527,0.858367,0.857594,0.856882,0.856172,0.855316,0.854197,0.852818,0.851062,0.849046,0.846747,0.844043,0.840842,0.837164,0.832985,0.828344,0.823544,0.818276,0.812543,0.806374,0.799838,0.793170,0.786246,0.778956,0.771297,0.763278,0.755252,0.746984,0.738445,0.729688,0.721045,0.712189,0.703099,0.694045,0.684930,0.675601,0.666480,1.000000,0.999999,0.999978,0.999888,0.999639,0.999093,0.996310,0.994405,0.990527,0.985186,0.978518,0.969748,0.959597,0.948104,0.935724,0.923704,0.912023,0.901356,0.891850,0.883847,0.877280,0.872289,0.868583,0.865913,0.864098,0.862993,0.862356,0.862125,0.862107,0.862168,0.862359,0.862490,0.862430,0.862063,0.861431,0.860386,0.858950,0.857090,0.854848,0.852381,0.849503,0.846167,0.842399,0.838194,0.833566,0.828579,0.823464,0.817951,0.812079,0.805873,0.799320,0.792533,0.785715,0.778636,0.771260,0.763618,0.755719,0.747815,0.739825,0.731602,0.723212,0.714845,0.706465,0.697933,1.000000,0.999998,0.999969,0.999836,0.999475,0.997943,0.995219,0.991760,0.986663,0.979592,0.970218,0.959155,0.946575,0.933047,0.920022,0.907749,0.896801,0.887506,0.880077,0.874322,0.870126,0.867481,0.865949,0.865293,0.865287,0.865746,0.866502,0.867439,0.868442,0.869382,0.870161,0.870782,0.871303,0.871511,0.871427,0.870978,0.870136,0.868892,0.867248,0.865209,0.862775,0.859944,0.857004,0.853671,0.849984,0.845927,0.841518,0.836774,0.831750,0.826407,0.821001,0.815333,0.809412,0.803238,0.796802,0.790204,0.783457,0.776713,0.769749,0.762596,0.755239,0.747690,0.740127,0.732595,1.000000,0.999997,0.999950,0.999744,0.999162,0.996124,0.992844,0.987757,0.980062,0.969642,0.957087,0.942735,0.927747,0.913622,0.900889,0.890115,0.881584,0.875288,0.870926,0.868307,0.867033,0.866972,0.867692,0.868950,0.870549,0.872320,0.874144,0.875947,0.877674,0.879192,0.880478,0.881539,0.882307,0.882739,0.882902,0.882847,0.882461,0.881725,0.880636,0.879197,0.877422,0.875296,0.872849,0.870076,0.866988,0.863637,0.860159,0.856475,0.852525,0.848328,0.843883,0.839198,0.834322,0.829221,0.823907,0.818461,0.812972,0.807316,0.801474,0.795459,0.789276,0.783025,0.776615,0.770223,0.999999,0.999994,0.999909,0.999536,0.997195,0.994123,0.988168,0.979344,0.967003,0.951763,0.934724,0.917948,0.902918,0.890432,0.880902,0.874401,0.870394,0.868503,0.868209,0.869062,0.870725,0.873006,0.875558,0.878230,0.880893,0.883445,0.885832,0.888059,0.890058,0.891782,0.893247,0.894460,0.895397,0.896023,0.896380,0.896433,0.896198,0.895673,0.894865,0.893908,0.892700,0.891224,0.889501,0.887539,0.885336,0.882903,0.880244,0.877373,0.874296,0.871019,0.867549,0.863933,0.860153,0.856355,0.852395,0.848277,0.844006,0.839587,0.835045,0.830378,0.825579,0.820649,0.815592,0.810432,0.999998,0.999988,0.999795,0.998892,0.994635,0.987290,0.975397,0.958508,0.938352,0.917733,0.899800,0.885878,0.876516,0.871200,0.869099,0.869317,0.871112,0.873870,0.877160,0.880682,0.884228,0.887737,0.891076,0.894161,0.896981,0.899543,0.901847,0.903882,0.905672,0.907188,0.908451,0.909480,0.910289,0.910878,0.911259,0.911430,0.911396,0.911154,0.910712,0.910081,0.909266,0.908264,0.907094,0.905752,0.904244,0.902577,0.900799,0.898931,0.896923,0.894782,0.892513,0.890117,0.887600,0.884968,0.882222,0.879369,0.876408,0.873345,0.870183,0.866926,0.863575,0.860160,0.856672,0.853098,0.999991,0.999947,0.999158,0.992842,0.980107,0.957230,0.928231,0.901539,0.882688,0.872588,0.869394,0.870671,0.874458,0.879378,0.884639,0.889770,0.894601,0.898972,0.902930,0.906456,0.909568,0.912329,0.914750,0.916893,0.918774,0.920429,0.921868,0.923110,0.924185,0.925089,0.925842,0.926457,0.926934,0.927285,0.927522,0.927639,0.927650,0.927553,0.927356,0.927061,0.926671,0.926187,0.925617,0.924962,0.924224,0.923409,0.922519,0.921555,0.920521,0.919419,0.918252,0.917021,0.915729,0.914377,0.912967,0.911503,0.909984,0.908414,0.906791,0.905122,0.903401,0.901637,0.899826,0.897972,0.987461,0.940121,0.871507,0.898572,0.916705,0.926425,0.931922,0.935265,0.937431,0.938899,0.939950,0.940717,0.941301,0.941754,0.942111,0.942397,0.942631,0.942823,0.942983,0.943117,0.943231,0.943329,0.943412,0.943484,0.943545,0.943599,0.943644,0.943682,0.943716,0.943744,0.943766,0.943785,0.943799,0.943808,0.943815,0.943818,0.943818,0.943814,0.943807,0.943797,0.943784,0.943769,0.943751,0.943730,0.943707,0.943681,0.943652,0.943623,0.943589,0.943554,0.943518,0.943479,0.943438,0.943396,0.943351,0.943305,0.943257,0.943207,0.943156,0.943104,0.943049,0.942993,0.942936,0.942877];
armory_renderpath_DynamicResolutionScale.dynamicScale = 1.0;
armory_renderpath_DynamicResolutionScale.firstFrame = true;
armory_renderpath_DynamicResolutionScale.startScaleMs = 30;
armory_renderpath_DynamicResolutionScale.scaleRangeMs = 10;
armory_renderpath_DynamicResolutionScale.maxScale = 0.6;
armory_renderpath_DynamicResolutionScale.lastTime = 0;
armory_renderpath_DynamicResolutionScale.totalTime = 0;
armory_renderpath_DynamicResolutionScale.frames = 0;
armory_renderpath_DynamicResolutionScale.frameTimeAvg = 0.0;
armory_renderpath_FFT.firstFrame = true;
armory_renderpath_HosekWilkie.firstFrame = true;
armory_renderpath_HosekWilkieData.datasetRGB1 = [-1.099459e+000,-1.335146e-001,-4.083223e+000,5.919603e+000,-1.104166e-001,1.600158e+000,-1.326538e-006,4.917807e+000,5.127716e-001,-1.169858e+000,-1.832793e-001,9.694744e-001,9.495762e-002,-4.738918e-002,2.194171e-001,1.095749e-001,3.603604e+000,3.815119e-001,-9.665225e-001,-1.403888e-001,5.194457e+000,-1.107607e+000,-8.135181e-001,4.969661e+000,-2.300508e-001,-2.489350e+000,1.279158e+000,-1.292508e+000,-1.299552e-001,-2.071404e+000,-4.752482e-002,1.215598e+000,-1.904179e+000,3.027985e-001,8.707768e+000,6.332446e-002,-9.264666e-001,-1.696780e-001,4.574070e+000,-4.232936e-001,-7.575833e+000,5.079755e+000,-2.576343e-001,-4.506805e+000,6.908129e-001,-1.139072e+000,-1.796056e-001,1.923311e+000,6.788529e+000,-2.364389e+000,-1.064041e+000,1.717010e-001,1.534681e+000,5.015810e-001,-1.107257e+000,-1.384411e-001,-4.285744e+000,5.713157e+000,-1.015992e-001,1.372638e+000,6.555893e-002,5.127514e+000,6.550471e-001,-1.187337e+000,-1.969013e-001,8.551048e-001,5.289708e-002,-7.626406e-002,1.733153e-002,1.779454e-001,3.801038e+000,4.742709e-001,-9.685321e-001,-1.553308e-001,4.732492e+000,-1.178935e+000,-7.852791e-001,4.604492e+000,-2.666518e-001,-2.367663e+000,1.177527e+000,-1.252817e+000,-5.129949e-002,-2.800433e+000,-1.295992e-002,1.308964e+000,-2.204331e+000,7.276011e-001,8.699265e+000,1.188388e-001,-9.459509e-001,-2.322133e-001,4.375041e+000,-1.712018e-001,-7.451681e+000,5.078019e+000,-4.223538e-001,-4.595561e+000,1.074719e+000,-1.125092e+000,-1.796750e-001,1.626399e+000,6.989743e+000,-2.406382e+000,-9.060383e-001,2.961611e-001,1.337715e+000,5.438140e-001,-1.135338e+000,-1.716160e-001,-1.499253e+000,2.373491e+000,-1.654023e-001,9.566404e-001,1.113453e-001,4.528473e+000,6.579439e-001,-1.132780e+000,-1.456214e-001,-1.736672e+000,1.756589e+000,-1.087003e-001,3.757927e-001,2.525070e-001,7.178513e+000,5.003814e-001,-1.167176e+000,-2.927225e-001,5.727667e+000,-3.139244e+000,-6.425204e-001,2.822634e+000,-1.457812e-001,-6.787080e+000,1.017072e+000,-1.042529e+000,4.110823e-002,-4.000629e+000,4.362364e+000,1.090540e+000,-1.338674e+000,8.246964e-001,1.095249e+001,2.912211e-001,-1.061598e+000,-2.096143e-001,3.803155e+000,-7.977069e+000,-3.637880e+000,3.707671e+000,-1.903128e-001,-3.397953e+000,9.971500e-001,-1.073560e+000,-2.077964e-001,1.492052e+000,1.626322e+001,-5.015304e+000,-4.059889e-001,2.659782e-001,6.395380e-001,5.634436e-001,-1.172794e+000,-2.111186e-001,-1.360013e+000,1.604080e+000,-8.473723e-002,7.217312e-001,1.548030e-001,4.257010e+000,6.328974e-001,-1.238374e+000,-2.670827e-001,3.247678e-001,5.466311e-001,-7.425952e-001,5.276440e-001,2.678026e-002,5.484169e+000,6.814734e-001,-1.176923e+000,-2.574586e-001,2.304045e+000,-2.797678e+000,1.464405e+000,1.998552e+000,2.550559e-001,-4.199772e+000,7.544892e-001,-1.003284e+000,1.943984e-002,-2.145066e+000,1.030924e+001,-1.525413e+001,-2.023010e+000,5.448699e-001,8.159497e+000,5.539148e-001,-1.060017e+000,-2.037206e-001,2.483018e+000,-4.595459e+000,6.526991e+000,4.031804e+000,1.206513e-001,-2.586527e+000,7.875752e-001,-1.081141e+000,-2.123302e-001,1.092275e+000,2.683841e+000,-4.166938e+000,-1.396582e+000,4.371205e-001,1.030233e+000,6.664862e-001,-1.222392e+000,-2.651924e-001,-4.625037e-001,3.521964e-001,2.148855e-002,5.078494e-001,1.791590e-001,3.852516e+000,5.998216e-001,-1.424610e+000,-4.710155e-001,-1.826815e-001,1.786277e+000,-1.952442e+000,5.277612e-001,-1.773629e-002,2.415874e+000,6.701272e-001,-1.130655e+000,-1.358609e-001,9.171203e-001,-4.660394e+000,6.251162e+000,1.904529e+000,2.639668e-001,1.856130e+000,8.228440e-001,-9.739015e-001,-6.674749e-002,-4.768897e-001,1.248589e+001,-1.994688e+001,-2.353043e+000,5.885575e-001,1.287251e+000,4.830135e-001,-1.082178e+000,-1.974495e-001,1.050245e+000,-4.792855e+000,8.663406e+000,3.246969e+000,1.556731e-001,8.117442e-001,8.050376e-001,-1.063354e+000,-1.727108e-001,9.681592e-001,2.736077e+000,-4.969269e+000,-8.360570e-001,5.994612e-001,1.024039e+000,6.786935e-001,-1.261936e+000,-3.053676e-001,-4.262222e-001,4.000196e-001,-2.059388e-002,4.721802e-001,1.480028e-001,3.505343e+000,6.121337e-001,-1.681088e+000,-6.971919e-001,-1.105652e-001,7.437426e-001,-6.594399e-001,2.254221e-001,8.710195e-002,1.263913e+000,5.681865e-001,-9.453001e-001,3.460388e-002,6.067038e-001,-1.985128e+000,3.457236e+000,2.655483e+000,-1.162354e-002,3.304716e+000,1.001950e+000,-1.086609e+000,-2.029011e-001,-6.399170e-001,6.926885e+000,-1.512189e+001,-3.793051e+000,9.456120e-001,2.222222e-001,2.893725e-001,-1.041259e+000,-1.388790e-001,1.147331e+000,6.282086e+000,3.679836e+000,4.398314e+000,-1.355232e-001,1.031134e+000,9.273509e-001,-1.063473e+000,-1.916051e-001,6.556979e-001,-3.371891e-003,-3.699664e+000,-1.926783e+000,7.371154e-001,1.179975e+000,6.367068e-001,-1.336390e+000,-3.778927e-001,-7.259477e-001,2.270247e-001,4.627513e-001,1.366459e-001,2.637347e-001,3.292059e+000,4.998211e-001,-2.119878e+000,-1.055472e+000,5.422052e-001,7.826648e-001,-1.286065e+000,9.517905e-001,-1.432358e-001,-2.379816e-001,5.910513e-001,-7.761432e-001,2.124336e-001,-6.845184e-001,-9.812342e-001,4.347257e+000,9.671980e-001,3.773150e-001,5.789529e+000,9.646598e-001,-1.118734e+000,-3.513815e-001,5.500918e-001,9.449627e-001,-1.262070e+001,-1.825280e+000,4.731260e-001,-3.326892e+000,3.568768e-001,-1.026437e+000,-8.257946e-002,3.221701e-001,1.198372e+001,1.555130e+000,2.560304e+000,1.406465e-001,2.912858e+000,8.643181e-001,-1.069949e+000,-2.029607e-001,5.825042e-001,-2.398595e-003,-3.278335e+000,-1.349882e+000,7.208433e-001,8.505164e-001,6.625391e-001,-1.392309e+000,-4.454945e-001,-5.664000e-001,6.283393e-001,-3.761727e-001,6.949802e-001,7.748178e-002,3.192797e+000,5.968661e-001,-2.713405e+000,-1.395112e+000,2.029230e-001,1.877272e-001,-3.715859e-001,-1.652929e-001,2.385861e-001,-4.150768e-001,1.375467e-001,-9.588644e-001,2.433900e-002,-1.527493e+000,-9.632874e-001,5.496269e+000,1.094931e+000,2.004044e-001,6.084554e+000,1.369604e+000,-8.028546e-001,-2.473563e-001,1.617898e+000,2.073591e+000,-1.149446e+001,-8.394131e-001,2.726847e-001,-4.634538e+000,1.367293e-001,-1.198326e+000,-1.804865e-001,-3.565414e-001,4.073200e+000,1.662086e+000,1.239770e+000,3.367978e-001,2.997402e+000,9.360383e-001,-1.013531e+000,-1.859060e-001,5.799857e-001,1.331883e+001,-4.346873e+000,-1.113820e+000,5.275714e-001,8.045177e-001,6.496373e-001,-1.530103e+000,-6.107468e-001,-3.841771e-001,1.881508e+000,-1.464807e+000,6.654690e-001,-5.950797e-006,2.738912e+000,8.101012e-001,-2.415469e+000,-1.057499e+000,-4.161968e-001,-2.357548e+000,6.300296e-001,6.224915e-001,1.545048e-002,2.038561e+000,-1.339415e-001,-3.096796e+000,-1.465688e+000,-1.199232e+000,4.567061e+000,3.260980e+000,-9.794907e-001,8.950491e-001,2.049235e+000,1.331015e+000,2.713904e-001,2.852852e-001,1.202090e+000,-8.206784e+000,-5.805762e+000,1.804431e+000,-6.090648e-001,-1.990902e+000,3.288858e-001,-1.456580e+000,-3.455960e-001,-6.409257e-002,1.667697e+001,-2.311094e+000,-9.771104e-001,6.759863e-001,1.245136e+000,7.911932e-001,-9.860389e-001,-2.099564e-001,2.946650e-001,-3.547800e-003,-2.268313e+000,-6.205647e-002,4.705185e-001,8.657995e-001,6.856284e-001,-1.971736e+000,-9.414047e-001,-3.400557e-001,1.468763e+000,-1.474284e+000,5.501062e-001,-1.109750e-005,2.356370e+000,9.001702e-001,-1.589845e+000,-7.797079e-001,-5.582240e-001,-8.137376e-001,5.846617e-001,1.129459e-001,-2.658005e-002,2.707248e+000,-2.112486e-001,-6.940173e+000,-2.823963e+000,-1.620848e+000,1.090696e+000,2.391730e+000,1.370047e+000,5.890462e-001,1.728400e+000,1.331253e+000,1.293144e+000,-1.919778e-003,1.644206e+000,-8.666967e-001,-7.161953e+000,-1.385018e+000,-1.505374e-001,-1.388643e+000,2.530122e-001,-1.488880e+000,-2.495496e-001,-2.377137e-001,1.167714e+001,-8.617124e-001,1.053828e+000,1.992744e-001,3.633564e-001,8.553304e-001,-1.060891e+000,-4.035829e-001,2.823207e-001,-2.369798e-003,-1.876577e+000,-5.950265e-001,4.241017e-001,3.140802e-001,6.631669e-001,-1.101204e+000,-1.351353e-001,-4.030882e+000,6.096353e+000,-1.148599e-001,1.606507e+000,-1.555474e-006,4.436084e+000,5.973715e-001,-1.154597e+000,-1.923378e-001,8.512132e-001,2.934895e-001,-6.522777e-002,1.389077e-001,9.091469e-002,3.133307e+000,2.108541e-001,-1.031588e+000,-1.546804e-001,5.266214e+000,-9.491390e-001,-7.184867e-001,4.875626e+000,-1.911907e-001,-2.865642e+000,1.087895e+000,-1.159454e+000,-9.546699e-002,-1.508146e+000,-2.031411e-002,1.040653e+000,-2.333508e+000,2.540592e-001,8.594981e+000,9.316770e-002,-1.035940e+000,-2.021151e-001,4.719343e+000,-9.019318e-001,-7.858046e+000,3.901234e+000,-2.233137e-001,-4.344739e+000,6.550733e-001,-1.096669e+000,-1.558196e-001,2.057553e+000,6.274495e+000,-2.678352e+000,-1.814927e+000,1.550676e-001,1.903276e+000,4.998989e-001,-1.114209e+000,-1.473531e-001,-7.602914e+000,8.973685e+000,-4.980074e-002,1.289198e+000,8.366906e-002,4.557987e+000,6.118757e-001,-1.149397e+000,-1.981628e-001,4.914096e+000,-3.498986e+000,-6.257090e-002,1.667401e-001,1.048980e-001,2.284689e+000,5.935965e-001,-1.056121e+000,-1.456172e-001,4.272656e-001,2.912649e+000,-5.501745e-001,4.406542e+000,-1.387680e-001,1.245555e+000,9.733011e-001,-1.125047e+000,-4.003662e-002,1.058457e+000,-3.462236e+000,4.395278e-001,-2.395805e+000,5.177589e-001,4.866247e+000,4.253189e-001,-1.051444e+000,-2.804541e-001,3.364668e+000,3.293787e+000,-1.015741e+001,3.807407e+000,-3.592377e-001,-3.367415e+000,7.900825e-001,-1.093847e+000,-1.436965e-001,2.384780e+000,5.787070e+000,-2.445987e+000,-1.311171e+000,2.326563e-001,1.158439e+000,5.555416e-001,-1.134824e+000,-1.680468e-001,-3.325620e+000,4.458596e+000,-1.135063e-001,1.104500e+000,7.794544e-002,4.609952e+000,6.854854e-001,-1.143017e+000,-1.565926e-001,3.014687e-001,-1.763027e-001,-3.557925e-002,-2.342406e-001,2.528705e-001,5.884085e+000,4.750602e-001,-1.136801e+000,-2.907502e-001,3.682423e+000,-4.061202e-001,-8.728159e-001,4.001510e+000,-1.522202e-001,-5.528713e+000,1.044847e+000,-1.063652e+000,7.808107e-002,-1.983678e+000,3.648078e-001,2.102276e+000,-3.065050e+000,8.431951e-001,1.038830e+001,2.662834e-001,-1.061015e+000,-2.859814e-001,4.223615e+000,-2.290138e+000,-8.314010e+000,4.405718e+000,-4.613627e-001,-4.502910e+000,1.008383e+000,-1.106302e+000,-1.697123e-001,2.087196e+000,8.238929e+000,-2.992416e+000,-1.821776e+000,3.434859e-001,7.755179e-001,5.341190e-001,-1.171110e+000,-2.106304e-001,-1.614361e+000,2.378103e+000,-1.625969e-001,8.504483e-001,1.059312e-001,4.046256e+000,6.618227e-001,-1.200480e+000,-2.235733e-001,1.014390e+000,-1.174074e+000,-4.440180e-001,2.262406e-001,1.665868e-001,5.461829e+000,5.676310e-001,-1.223587e+000,-3.502622e-001,1.699106e+000,6.724266e-001,1.268567e+000,2.135102e+000,8.039374e-004,-5.221111e+000,9.445690e-001,-9.452673e-001,1.468459e-001,-1.335034e+000,4.346628e+000,-1.285652e+001,-1.807046e+000,8.175243e-001,9.301065e+000,3.656798e-001,-1.134681e+000,-3.310951e-001,3.571244e+000,-2.208948e+000,6.041580e+000,3.107577e+000,-3.112127e-001,-4.186351e+000,9.188333e-001,-1.083237e+000,-1.831394e-001,2.062654e+000,1.385424e+000,-5.004950e+000,-1.332669e+000,3.627352e-001,3.323150e-001,6.191181e-001,-1.211527e+000,-2.590617e-001,-1.660874e-001,3.627905e-001,-1.039258e-001,4.697924e-001,1.671653e-001,3.507497e+000,6.022506e-001,-1.433017e+000,-4.733592e-001,1.724445e-001,9.953236e-001,-1.874457e+000,4.432099e-001,1.715810e-002,2.339272e+000,6.441470e-001,-1.084920e+000,-1.587903e-001,8.999585e-001,-2.537516e+000,5.877859e+000,2.014554e+000,9.689141e-002,3.177242e-001,9.030399e-001,-1.008242e+000,2.793030e-003,-3.507469e-001,1.028300e+001,-2.080454e+001,-2.781026e+000,8.995090e-001,3.366951e+000,3.473867e-001,-1.103151e+000,-2.799598e-001,2.525791e+000,-4.255704e+000,9.903388e+000,3.722668e+000,-3.603941e-001,-1.303292e+000,9.369454e-001,-1.102235e+000,-2.025061e-001,2.085660e+000,1.686787e+000,-5.010957e+000,-1.656458e+000,4.584029e-001,-2.751759e-001,6.184162e-001,-1.256130e+000,-3.104904e-001,1.639350e-001,1.315502e-001,-7.297583e-001,4.778480e-001,1.259265e-001,3.012108e+000,6.202728e-001,-1.620114e+000,-6.552670e-001,-2.877157e-001,1.094371e+000,2.818914e-001,3.696830e-001,9.428521e-002,1.450951e+000,5.681308e-001,-9.686204e-001,-3.755647e-002,1.469980e+000,-3.103414e+000,2.856583e+000,1.883209e+000,-5.746099e-002,1.286383e+000,1.001751e+000,-1.089377e+000,-1.023062e-001,-1.498891e+000,1.066455e+001,-1.720184e+001,-2.759314e+000,1.061258e+000,2.910211e+000,2.624701e-001,-1.044681e+000,-2.156857e-001,3.230136e+000,-5.863862e-001,6.096640e+000,3.550019e+000,-4.255773e-001,-1.500033e+000,9.687696e-001,-1.133658e+000,-2.505101e-001,1.717840e+000,8.480428e-003,-5.011789e+000,-1.740989e+000,4.983430e-001,-2.081829e-001,6.088641e-001,-1.335366e+000,-3.863319e-001,-5.279971e-001,3.638324e-001,3.230699e-001,8.339707e-002,2.483293e-001,2.678646e+000,4.998346e-001,-2.004511e+000,-9.957121e-001,1.250807e+000,1.625025e-002,-3.410754e-001,7.858244e-001,-9.506757e-002,2.651876e-002,5.788643e-001,-8.714157e-001,1.192051e-001,-8.486879e-001,-3.702497e-001,1.818277e+000,1.103427e+000,2.454866e-001,3.841575e+000,9.847350e-001,-1.042618e+000,-2.285793e-001,3.620175e-001,2.983368e+000,-9.776844e+000,-1.971587e+000,6.691674e-001,-7.901947e-001,3.213200e-001,-1.099112e+000,-1.869868e-001,2.044065e+000,2.062964e+000,1.265668e+000,2.710130e+000,-1.099443e-001,2.179353e-001,9.024108e-001,-1.106985e+000,-2.396881e-001,1.809807e+000,8.523319e+000,-5.011788e+000,-1.590086e+000,3.248449e-001,-1.003187e-001,6.550606e-001,-1.421285e+000,-4.767024e-001,-3.885004e-001,8.274590e-001,-3.644229e-001,6.999513e-001,5.196710e-002,2.578431e+000,6.246310e-001,-2.611217e+000,-1.398846e+000,4.527425e-001,-5.932142e-001,2.224617e-001,-5.593581e-001,3.389633e-001,-7.767112e-001,6.536004e-002,-9.881543e-001,4.684782e-002,-8.616613e-001,8.799807e-001,4.003130e+000,1.739543e+000,-8.098378e-002,5.524802e+000,1.499673e+000,-7.544759e-001,-2.314808e-001,8.125770e-001,-7.724135e-001,-9.577645e+000,-1.629433e+000,6.790832e-001,-4.193895e+000,-2.526624e-002,-1.273719e+000,-2.187030e-001,1.401798e+000,5.231832e+000,7.405093e-001,1.775166e+000,-7.269476e-002,1.996087e+000,1.057450e+000,-1.046864e+000,-2.247559e-001,1.679449e+000,1.140057e+001,-4.948829e+000,-1.182664e+000,3.241038e-001,-2.470012e-001,6.115900e-001,-1.514607e+000,-5.985430e-001,-1.877610e-001,1.756930e+000,-1.314206e+000,6.115810e-001,-5.970460e-006,2.412975e+000,8.124304e-001,-2.308414e+000,-1.083797e+000,-1.179959e-001,-1.728246e+000,7.784742e-001,5.494505e-001,6.203168e-003,9.326251e-001,-1.419518e-001,-3.230837e+000,-1.438670e+000,-9.868286e-001,2.974393e+000,1.949339e+000,-6.337857e-001,8.160271e-001,3.278606e+000,1.354373e+000,5.149378e-001,2.754789e-001,1.040965e+000,-4.501186e+000,-3.399057e+000,9.661861e-001,-4.736173e-001,-4.037574e+000,2.794847e-001,-1.621870e+000,-3.192763e-001,8.786242e-001,9.785565e+000,-2.727652e+000,1.903691e-002,5.521261e-001,2.138764e+000,8.419871e-001,-9.951701e-001,-2.550607e-001,1.498952e+000,-2.737197e-003,-3.101832e+000,-5.921329e-001,2.864422e-001,-4.405218e-001,6.631410e-001,-1.902954e+000,-9.056918e-001,-2.069570e-001,1.191499e+000,-1.092577e+000,5.849556e-001,-9.649602e-006,2.048407e+000,9.001527e-001,-1.271627e+000,-7.193923e-001,-1.136606e-002,-1.167951e-001,3.286175e-003,-5.262827e-002,-2.473874e-002,1.716125e+000,-2.187133e-001,-7.647175e+000,-3.114129e+000,-1.490128e+000,-5.266488e-001,3.063090e+000,1.474262e+000,5.481458e-001,2.052174e+000,1.353089e+000,2.191403e+000,3.421120e-001,1.446510e+000,2.170943e+000,-7.768187e+000,-1.471207e+000,-1.456708e-001,-1.753574e+000,2.310576e-001,-1.932296e+000,-3.814739e-001,6.245422e-001,6.748294e+000,-3.060171e-001,1.067747e+000,2.500671e-001,-1.252596e-001,8.614611e-001,-9.471101e-001,-4.052640e-001,1.300174e+000,-3.951536e-003,-1.908284e+000,-5.385721e-001,2.133578e-001,-6.250292e-001,6.658012e-001];
armory_renderpath_HosekWilkieData.datasetRGBRad1 = [1.962684e+000,1.159831e+000,4.450588e+000,5.079633e+000,4.437388e+000,4.324573e+000,1.946487e+000,1.287515e+000,3.703696e+000,8.782833e+000,3.440437e+000,5.160333e+000,1.882170e+000,1.335878e+000,2.648641e+000,1.358368e+001,3.105473e+000,5.907387e+000,1.738159e+000,1.624289e+000,-8.786695e-003,2.118253e+001,2.770255e+000,7.055672e+000,1.571896e+000,2.301786e+000,-4.028545e+000,2.966806e+001,1.630876e+000,8.711031e+000,1.475048e+000,2.679086e+000,-6.311315e+000,3.377896e+001,2.140975e+000,9.385283e+000,1.326174e+000,3.378759e+000,-9.831444e+000,3.942061e+001,2.852702e+000,1.082542e+001,1.153344e+000,3.967771e+000,-1.265181e+001,4.195016e+001,7.468239e+000,1.221350e+001,9.746081e-001,4.051626e+000,-1.298454e+001,3.754964e+001,1.749232e+001,1.420619e+001,8.448016e-001,3.181809e+000,-8.757338e+000,2.197962e+001,3.524033e+001,1.639549e+001,2.029623e+000,1.364434e+000,4.201529e+000,5.415099e+000,9.825839e+000,1.063328e+001,2.023126e+000,1.494728e+000,3.420413e+000,9.072178e+000,9.205157e+000,1.186639e+001,1.956307e+000,1.648665e+000,2.039712e+000,1.430239e+001,9.039526e+000,1.330453e+001,1.825053e+000,1.985022e+000,-8.036307e-001,2.202493e+001,9.415361e+000,1.517659e+001,1.650367e+000,2.593201e+000,-4.469328e+000,2.969817e+001,9.410977e+000,1.744850e+001,1.555202e+000,2.962925e+000,-6.608170e+000,3.329887e+001,1.064559e+001,1.850816e+001,1.412478e+000,3.439403e+000,-9.196616e+000,3.685077e+001,1.345341e+001,2.003128e+001,1.252990e+000,3.820805e+000,-1.115338e+001,3.721593e+001,2.014916e+001,2.182320e+001,1.091952e+000,3.663027e+000,-1.031330e+001,2.978985e+001,3.296835e+001,2.375450e+001,9.501691e-001,2.664579e+000,-5.545167e+000,1.281159e+001,5.154768e+001,2.574284e+001];
armory_renderpath_HosekWilkieData.datasetRGB2 = [-1.140530e+000,-1.982747e-001,-7.512730e+000,8.403899e+000,-5.699038e-002,9.015907e-001,3.392161e-002,4.772522e+000,5.111184e-001,-1.165117e+000,-1.852955e-001,2.963684e+000,-2.262274e+000,-1.571683e-001,6.339974e-001,4.977879e-002,7.243307e+000,4.220053e-001,-1.169936e+000,-3.357429e-001,1.911291e+000,-2.391074e-001,-4.791643e-001,1.446113e+000,-9.178108e-002,-4.700239e+000,8.096219e-001,-1.060246e+000,-1.051633e-001,5.013829e-001,2.832309e+000,-3.707855e-001,1.523131e+000,9.163749e-002,5.604183e+000,7.208566e-001,-1.089753e+000,-2.382167e-001,2.360312e+000,-5.902562e+000,-8.799894e+000,1.377692e+000,-6.131633e-002,-1.415472e+000,6.124057e-001,-1.075481e+000,-1.242391e-001,1.425781e+000,8.810319e+000,-2.922646e+000,1.486520e+000,3.270580e-002,3.889783e+000,4.999482e-001,-1.149342e+000,-2.076337e-001,-7.446587e+000,8.014559e+000,-4.866227e-002,8.203043e-001,6.386483e-002,4.894198e+000,5.452051e-001,-1.120531e+000,-1.513311e-001,2.735504e+000,-2.417591e+000,-1.361114e-001,4.296342e-001,9.427488e-002,8.171403e+000,4.102448e-001,-1.226964e+000,-3.516378e-001,1.308298e+000,-5.097487e-002,-4.846783e-001,1.654619e+000,-1.134940e-001,-3.347854e+000,1.131147e+000,-9.664377e-001,2.767589e-002,1.658235e-001,2.407439e+000,-1.300304e-001,9.170958e-001,2.742895e-001,6.642633e+000,2.550064e-001,-1.153358e+000,-3.126223e-001,2.078934e+000,-5.857733e+000,-8.659848e+000,1.758505e+000,-9.616094e-002,-1.230863e+000,9.663832e-001,-1.053850e+000,-1.330743e-001,1.481738e+000,1.049485e+001,-3.528854e+000,9.142363e-001,1.244880e-001,2.644615e+000,5.001048e-001,-1.173687e+000,-2.360362e-001,-3.741454e+000,4.088507e+000,-7.528205e-002,6.645237e-001,7.718265e-002,4.651220e+000,5.586318e-001,-1.213757e+000,-2.589561e-001,7.132551e-001,-4.259327e-001,-1.980821e-001,3.627815e-001,4.666560e-002,5.807984e+000,5.847377e-001,-1.108794e+000,-2.259870e-001,1.574179e+000,-3.753731e-001,-5.984743e-001,1.659414e+000,-1.681021e-002,6.785219e-001,8.647325e-001,-1.060896e+000,-1.346690e-002,-7.529656e-001,1.711319e+000,-9.792435e-001,2.022433e-001,3.826487e-001,5.725157e+000,5.290714e-001,-1.085145e+000,-2.840715e-001,2.088029e+000,-4.935097e+000,-9.056542e+000,1.976149e+000,-3.912485e-002,-8.636064e-001,7.452125e-001,-1.077983e+000,-1.416633e-001,1.100848e+000,1.015875e+001,-2.943712e+000,5.255135e-001,2.164224e-001,2.941143e+000,6.699937e-001,-1.223293e+000,-2.867444e-001,-1.624136e+000,1.668299e+000,-9.537589e-002,5.015947e-001,1.130741e-001,4.244812e+000,5.082152e-001,-1.325342e+000,-4.280991e-001,4.705490e-001,6.926592e-002,-4.572587e-001,5.344144e-001,-2.554192e-002,3.093939e+000,6.639401e-001,-1.113581e+000,-1.192133e-001,4.011536e-001,7.011889e-001,2.052842e-001,9.880724e-001,1.807533e-002,4.690160e+000,8.576240e-001,-1.016063e+000,-1.038138e-001,-2.280391e-001,7.898918e-001,-1.127333e+001,2.074545e-001,5.388182e-001,1.364263e+000,4.660455e-001,-1.099582e+000,-2.228607e-001,1.332648e+000,5.135188e+000,1.653152e+000,1.417020e+000,-1.087532e-001,1.809275e+000,8.080874e-001,-1.064357e+000,-1.520775e-001,8.207368e-001,-1.323565e-003,-5.009523e+000,3.946298e-001,4.337902e-001,2.593198e+000,6.719172e-001,-1.278702e+000,-3.512866e-001,-4.511055e-001,3.895760e-001,-2.429672e-001,4.270577e-001,1.135348e-001,3.719130e+000,4.998867e-001,-1.580069e+000,-7.095475e-001,-3.198904e-001,1.715748e+000,-1.185915e+000,4.523161e-001,-1.026159e-002,7.927188e-001,5.538350e-001,-9.474023e-001,1.173703e-001,4.881381e-001,-2.618684e+000,3.251661e+000,1.213931e+000,-1.736274e-002,8.000768e+000,1.025998e+000,-1.129091e+000,-3.287694e-001,-3.524077e-001,3.352892e+000,-1.416073e+001,-8.485617e-001,6.560766e-001,-2.820937e+000,3.111303e-001,-1.030884e+000,-1.137581e-001,1.109855e+000,8.082276e+000,1.519214e+000,2.112433e+000,-1.592299e-001,3.675905e+000,8.703367e-001,-1.075192e+000,-1.627166e-001,3.514910e-001,1.168164e+000,-4.255822e+000,-6.015348e-001,6.265776e-001,2.884818e+000,6.548384e-001,-1.316017e+000,-3.889652e-001,-5.030854e-001,4.488704e-001,-3.186800e-001,4.570763e-001,8.909201e-002,3.659274e+000,5.011746e-001,-1.731876e+000,-8.493806e-001,1.194871e-001,2.002781e+000,-2.006547e+000,4.872233e-001,-2.854606e-002,2.662137e-001,4.611629e-001,-9.273680e-001,1.380954e-001,-3.302179e-001,-3.553265e+000,4.633345e+000,9.696729e-001,8.799775e-002,8.291129e+000,1.094451e+000,-1.099377e+000,-3.325392e-001,2.501063e-001,2.613712e+000,-1.328142e+001,-5.579527e-001,4.992081e-001,-3.504402e+000,3.022924e-001,-1.048420e+000,-1.227773e-001,5.845373e-001,1.105869e+001,3.813151e-002,1.330409e+000,1.978131e-002,3.959430e+000,8.396439e-001,-1.063233e+000,-1.560639e-001,2.840033e-001,8.751565e-001,-3.411820e+000,-1.436564e-001,5.846580e-001,2.899292e+000,6.799095e-001,-1.376715e+000,-4.541567e-001,-1.445491e+000,1.569898e+000,-1.390627e-001,5.558270e-001,4.109877e-002,3.349451e+000,5.516123e-001,-1.953391e+000,-1.035869e+000,1.690563e+000,-1.964690e-001,-7.787096e-001,5.799605e-001,2.945626e-002,4.217906e-002,2.451373e-001,-1.012422e+000,7.136451e-002,-1.862534e+000,-7.228653e-001,1.947997e-001,2.091805e-001,6.399233e-002,7.928994e+000,1.290733e+000,-9.706708e-001,-2.880950e-001,1.107797e+000,-2.731734e+000,-8.445995e+000,4.296774e-001,5.117648e-001,-3.824277e+000,1.761207e-001,-1.110611e+000,-1.789409e-001,2.108488e-001,2.071430e+001,-1.763174e+000,9.554695e-002,-2.943103e-002,3.422079e+000,8.815496e-001,-1.048334e+000,-1.614087e-001,2.475184e-001,2.146938e-002,-2.983901e+000,2.538224e-001,5.601370e-001,2.461925e+000,6.777394e-001,-1.393719e+000,-5.002724e-001,-2.408940e+000,2.680983e+000,-1.362825e-001,7.395067e-001,-3.300343e-006,3.260889e+000,8.132057e-001,-2.128663e+000,-1.151182e+000,2.923026e+000,-1.931838e+000,-4.426170e-001,2.309983e-001,-5.485890e-003,3.279529e-001,-2.229467e-001,-1.618022e+000,-3.766490e-001,-3.163544e+000,1.611608e+000,-3.967476e-001,3.933680e-001,3.006742e-001,6.835177e+000,1.613765e+000,-5.669064e-001,-1.481749e-001,2.071817e+000,-8.157422e+000,-5.988088e+000,2.387202e-001,1.447191e-001,-4.296385e+000,5.011258e-002,-1.241724e+000,-2.519348e-001,-1.908609e-001,2.952235e+001,-3.333660e+000,-1.837651e-002,1.022249e-001,2.929320e+000,8.867262e-001,-1.021670e+000,-1.667327e-001,1.789771e-001,-2.178108e-003,-2.641572e+000,-5.641484e-002,5.303758e-001,2.138196e+000,6.780350e-001,-1.669332e+000,-7.588708e-001,-2.993557e+000,3.178760e+000,-8.066442e-002,6.544672e-001,-8.089880e-006,2.628924e+000,9.001272e-001,-1.755806e+000,-8.735348e-001,3.258881e+000,-2.504785e+000,-3.300791e-001,1.180565e-001,-9.315982e-003,1.785154e+000,-3.205824e-001,-3.720277e+000,-1.733350e+000,-3.332272e+000,1.515869e+000,1.734218e-001,8.011956e-001,1.995440e-001,3.817666e+000,1.638502e+000,4.724641e-001,3.209828e-001,2.051443e+000,-5.105574e+000,-6.509139e+000,-4.232041e-001,2.598931e-001,-2.151756e+000,-3.493910e-003,-1.525600e+000,-4.897606e-001,-9.891121e-002,2.346818e+001,-2.278152e+000,1.681219e-001,-4.469389e-002,1.051000e+000,9.294666e-001,-9.908649e-001,-2.008182e-001,1.605143e-001,-2.463113e-003,-2.477349e+000,-1.218647e-001,4.750121e-001,1.460813e+000,6.661364e-001,-2.122119e+000,-1.125475e+000,-3.066599e+000,3.145078e+000,-5.411593e-002,5.133628e-001,-7.823408e-006,2.268448e+000,9.001416e-001,-1.528158e+000,-9.370249e-001,2.567559e+000,-1.591439e+000,-3.634460e-001,1.763256e-001,1.119624e-003,1.811848e+000,-2.637929e-001,-6.524387e+000,-2.673507e+000,-2.940472e+000,-6.025609e-001,7.852067e-001,1.073499e+000,-3.540435e-002,3.517416e+000,1.490466e+000,8.886026e-001,-9.681828e-002,1.430554e+000,4.993717e+000,-6.071355e+000,-6.053986e-001,5.092997e-001,-1.273010e+000,7.491329e-002,-1.481997e+000,-5.897282e-001,2.659264e-001,1.267239e+000,-5.741291e-001,5.983011e-002,-2.217312e-001,-3.016452e-001,9.260830e-001,-1.010943e+000,-2.075134e-001,5.066749e-002,1.470708e+001,-3.780501e+000,7.253223e-002,4.045458e-001,1.320164e+000,6.559925e-001,-1.129907e+000,-1.884011e-001,-8.047670e+000,9.035776e+000,-5.539419e-002,8.823349e-001,3.197135e-002,4.839388e+000,5.042822e-001,-1.133821e+000,-1.510781e-001,3.362822e+000,-2.453381e+000,-1.463925e-001,4.728708e-001,5.958140e-002,7.636300e+000,4.805162e-001,-1.176518e+000,-3.549902e-001,1.729044e+000,-2.160966e-001,-5.075865e-001,1.675584e+000,-8.906902e-002,-5.386842e+000,5.452218e-001,-1.043563e+000,-7.520975e-002,8.750644e-001,2.510518e+000,7.584882e-003,9.361250e-001,7.889083e-002,6.066644e+000,5.813108e-001,-1.081304e+000,-2.222253e-001,2.517638e+000,-4.453820e+000,-8.663691e+000,8.662558e-001,-4.802657e-002,-8.965449e-001,4.886656e-001,-1.083774e+000,-1.375469e-001,1.685818e+000,5.631120e+000,-3.100752e+000,4.045941e-001,2.346895e-002,3.390321e+000,5.008309e-001,-1.143158e+000,-2.058334e-001,-9.660198e+000,1.062394e+001,-4.434119e-002,8.607615e-001,3.177325e-002,4.416481e+000,5.918162e-001,-1.146773e+000,-1.727385e-001,4.626048e+000,-4.684602e+000,-8.307137e-002,1.619616e-001,1.484866e-001,7.572868e+000,2.681126e-001,-1.151324e+000,-3.099303e-001,4.125596e-001,2.340752e+000,-4.214444e-001,1.987375e+000,-1.913410e-001,-3.845978e+000,1.337311e+000,-1.034258e+000,-7.778759e-003,7.050094e-001,-8.036369e-001,3.138570e-001,2.469452e-001,3.559970e-001,7.485917e+000,4.790329e-002,-1.096568e+000,-2.673169e-001,2.575654e+000,-8.057121e-001,-8.884928e+000,1.416170e+000,-2.091315e-001,-1.543494e+000,1.065445e+000,-1.083304e+000,-1.528265e-001,1.697727e+000,2.503702e+000,-2.885296e+000,-1.298500e-001,1.548870e-001,2.479652e+000,5.066496e-001,-1.165736e+000,-2.329945e-001,-5.967964e+000,6.705959e+000,-5.931355e-002,7.485638e-001,3.913878e-002,4.221591e+000,6.183926e-001,-1.212422e+000,-2.545910e-001,2.418626e+000,-2.266104e+000,-1.102014e-001,1.363887e-002,1.055411e-001,5.648062e+000,4.557412e-001,-1.070436e+000,-2.163341e-001,7.098718e-001,7.843075e-001,-4.323930e-001,2.109823e+000,-9.589700e-002,-1.985193e-001,1.060428e+000,-1.104879e+000,-3.013622e-002,2.976276e-002,1.069707e+000,1.410000e-001,-4.880020e-001,4.452288e-001,6.418590e+000,3.195986e-001,-1.048969e+000,-2.655317e-001,2.689426e+000,-3.941038e+000,-9.506461e+000,1.837119e+000,-1.892124e-001,-1.562146e+000,9.043414e-001,-1.106145e+000,-1.601642e-001,1.544544e+000,7.388492e+000,-2.924600e+000,-4.328453e-001,1.763161e-001,2.523111e+000,5.851902e-001,-1.203666e+000,-2.776587e-001,-2.084286e+000,2.450840e+000,-8.746613e-002,5.258507e-001,7.983316e-002,3.860055e+000,5.486167e-001,-1.340448e+000,-4.230590e-001,3.462849e-001,4.707607e-001,-2.512626e-001,1.530746e-001,2.724218e-002,3.035216e+000,5.876133e-001,-1.014554e+000,-1.168790e-001,9.477794e-001,-1.061218e+000,-4.196730e-001,2.058832e+000,-5.989624e-002,3.058168e+000,9.763861e-001,-1.137388e+000,-9.854030e-002,-2.984893e-001,3.647820e+000,-6.585571e-001,-1.479180e+000,6.102932e-001,3.265914e+000,3.480333e-001,-1.021816e+000,-2.344957e-001,2.463671e+000,-7.240685e+000,-8.862697e+000,2.514058e+000,-2.122768e-001,-3.313968e-002,9.028136e-001,-1.126581e+000,-1.874347e-001,1.454154e+000,1.034398e+001,-3.237393e+000,-8.654927e-001,2.457248e-001,1.845769e+000,6.002482e-001,-1.263727e+000,-3.439354e-001,-1.786388e-001,3.980166e-001,-3.349517e-001,3.825166e-001,1.029225e-001,3.331096e+000,4.998955e-001,-1.530010e+000,-6.879698e-001,2.380415e-001,1.608216e+000,-1.682679e+000,3.546360e-001,-3.915220e-003,4.517655e-001,5.128605e-001,-9.685659e-001,9.480403e-002,6.076844e-002,-3.217561e+000,4.568074e+000,1.069299e+000,2.083638e-002,7.301088e+000,1.072165e+000,-1.113925e+000,-3.112382e-001,3.954133e-001,5.105907e+000,-1.456866e+001,-4.917378e-001,5.289909e-001,-2.678374e+000,3.014709e-001,-1.046864e+000,-1.215754e-001,1.778308e+000,4.661489e+000,2.565583e-001,1.353680e+000,-1.175767e-001,3.415972e+000,8.457746e-001,-1.104480e+000,-1.940913e-001,1.343668e+000,-1.759206e-003,-5.009204e+000,-4.186951e-001,3.125710e-001,1.628183e+000,6.720408e-001,-1.286902e+000,-3.781238e-001,-8.977253e-002,3.545393e-001,-4.866515e-001,3.843664e-001,8.281675e-002,3.122231e+000,5.046991e-001,-1.712597e+000,-8.549112e-001,4.809286e-001,1.515398e+000,-2.212211e+000,2.539029e-001,2.335997e-002,-6.089466e-002,4.268444e-001,-8.807283e-001,1.646097e-001,-4.437898e-001,-3.188247e+000,5.984417e+000,1.334779e+000,-4.026975e-002,7.546431e+000,1.175751e+000,-1.147253e+000,-3.538199e-001,6.101836e-001,4.437780e+000,-1.559813e+001,-1.103222e+000,6.242039e-001,-3.091472e+000,2.174290e-001,-1.038230e+000,-1.213475e-001,1.547505e+000,5.893176e+000,1.368738e+000,1.663127e+000,-1.377130e-001,3.185279e+000,8.736453e-001,-1.101026e+000,-1.874907e-001,1.272667e+000,3.596524e+000,-5.007243e+000,-6.352483e-001,3.048985e-001,1.931613e+000,6.788844e-001,-1.342753e+000,-4.384971e-001,-1.213491e+000,1.621399e+000,-1.551441e-001,5.614218e-001,2.591739e-002,2.958967e+000,5.782132e-001,-1.937684e+000,-1.066019e+000,1.913336e+000,-7.347719e-001,-5.916167e-001,1.587590e-001,1.092568e-001,-6.275002e-001,1.599071e-001,-9.302391e-001,1.486187e-001,-1.603835e+000,1.783713e-001,1.100461e+000,1.174181e+000,-1.602361e-001,7.868331e+000,1.468971e+000,-1.053631e+000,-3.727050e-001,1.114117e+000,-9.603286e-001,-1.062469e+001,-1.162140e+000,7.952797e-001,-4.478765e+000,-4.440862e-002,-1.083629e+000,-1.261405e-001,1.229344e+000,1.127825e+001,1.319010e-001,1.624729e+000,-2.825898e-001,3.661082e+000,1.036911e+000,-1.093950e+000,-2.067455e-001,1.258035e+000,7.548645e+000,-4.598387e+000,-8.944932e-001,3.292634e-001,1.311304e+000,6.291871e-001,-1.385867e+000,-5.068139e-001,-1.486490e+000,1.969049e+000,-1.698025e-001,6.629167e-001,-5.289365e-006,2.760315e+000,8.644368e-001,-2.107367e+000,-1.175639e+000,2.313241e+000,-1.001653e+000,-4.843139e-001,1.124485e-001,3.901494e-005,-3.502469e-001,-3.204780e-001,-1.475244e+000,-2.833055e-001,-2.085824e+000,1.192563e+000,-7.645200e-001,8.380081e-001,2.203580e-001,7.157885e+000,1.753702e+000,-6.644372e-001,-2.549735e-001,1.600273e+000,-8.589034e+000,-6.144718e+000,-7.599731e-001,2.898370e-001,-5.770923e+000,-9.656242e-002,-1.211687e+000,-1.653494e-001,8.393400e-001,2.792988e+001,-3.395461e+000,9.933752e-001,-3.976877e-002,3.776659e+000,9.546526e-001,-1.063757e+000,-2.037563e-001,1.117207e+000,-1.252806e-003,-3.332330e+000,-6.971409e-001,3.388719e-001,1.311398e+000,6.635171e-001,-1.678889e+000,-7.992295e-001,-2.421687e+000,2.871029e+000,-7.662842e-002,6.046208e-001,-7.598099e-006,2.002314e+000,9.001307e-001,-1.692144e+000,-8.804250e-001,3.060895e+000,-2.000009e+000,-3.183563e-001,8.385862e-002,-6.326713e-003,1.206639e+000,-3.369967e-001,-3.676795e+000,-1.719207e+000,-2.534697e+000,1.005285e+000,1.550407e-001,1.072910e+000,1.318094e-001,3.717018e+000,1.689191e+000,5.424542e-001,3.263528e-001,1.551055e+000,-3.841058e+000,-6.598996e+000,-1.201779e+000,3.530669e-001,-2.542945e+000,-6.482523e-002,-1.553849e+000,-4.576860e-001,9.324676e-001,1.950982e+001,-2.344516e+000,1.121020e+000,-1.221537e-001,7.285496e-001,9.582816e-001,-1.020650e+000,-2.215797e-001,1.009774e+000,-2.056855e-003,-2.740338e+000,-8.122355e-001,3.328967e-001,8.982766e-001,6.594676e-001,-2.247360e+000,-1.221267e+000,-3.072346e+000,3.385139e+000,-4.387559e-002,5.084887e-001,-7.418833e-006,1.750107e+000,9.001401e-001,-1.248499e+000,-8.442718e-001,3.062611e+000,-2.020314e+000,-2.815341e-001,5.254745e-002,3.345008e-003,1.433225e+000,-2.835911e-001,-7.004119e+000,-2.927978e+000,-2.649852e+000,7.971894e-001,5.466893e-001,1.442667e+000,-6.063912e-002,2.806194e+000,1.547429e+000,1.434882e+000,9.114639e-002,1.170089e+000,3.512808e-002,-5.861915e+000,-1.411843e+000,5.400486e-001,-7.746522e-001,2.386984e-002,-1.559053e+000,-5.502302e-001,1.200396e+000,1.347741e+001,-2.344397e+000,8.868907e-001,-3.292661e-001,-1.362105e+000,9.217826e-001,-1.044436e+000,-2.360719e-001,7.054471e-001,-2.904518e-003,-2.092829e+000,-5.119668e-001,4.174861e-001,9.687435e-001,6.588427e-001];
armory_renderpath_HosekWilkieData.datasetRGBRad2 = [1.590330e+000,1.355401e+000,1.151412e+000,1.359116e+001,5.857714e+000,8.090833e+000,1.552540e+000,1.510040e+000,1.276413e-001,1.604643e+001,5.912162e+000,8.350009e+000,1.470871e+000,1.880464e+000,-1.865398e+000,2.030808e+001,5.471461e+000,9.109834e+000,1.356563e+000,2.373866e+000,-4.653245e+000,2.570922e+001,5.686009e+000,1.009480e+001,1.244232e+000,2.851519e+000,-7.130942e+000,2.993449e+001,6.382120e+000,1.114578e+001,1.173693e+000,3.120604e+000,-8.491886e+000,3.187393e+001,7.290615e+000,1.180066e+001,1.091845e+000,3.368888e+000,-9.722083e+000,3.268508e+001,1.032424e+001,1.236508e+001,9.858985e-001,3.500541e+000,-1.026328e+001,3.092956e+001,1.610881e+001,1.331222e+001,8.864993e-001,3.172888e+000,-8.687550e+000,2.362161e+001,2.621851e+001,1.474967e+001,7.946973e-001,2.189355e+000,-4.207953e+000,9.399091e+000,4.062849e+001,1.681753e+001,1.711696e+000,1.657311e+000,9.328021e-001,1.317880e+001,1.506751e+001,1.863556e+001,1.666968e+000,1.849993e+000,-2.088601e-001,1.586653e+001,1.486880e+001,1.940719e+001,1.584846e+000,2.170022e+000,-2.019597e+000,1.970826e+001,1.490684e+001,2.045055e+001,1.469412e+000,2.524017e+000,-4.197267e+000,2.365249e+001,1.664588e+001,2.134477e+001,1.369714e+000,2.843548e+000,-6.059031e+000,2.634993e+001,1.881361e+001,2.232186e+001,1.310477e+000,2.984444e+000,-6.831686e+000,2.682340e+001,2.123267e+001,2.259755e+001,1.222552e+000,3.176523e+000,-7.731496e+000,2.671760e+001,2.484358e+001,2.336863e+001,1.115781e+000,3.130635e+000,-7.581744e+000,2.336531e+001,3.171048e+001,2.413859e+001,1.013181e+000,2.699342e+000,-5.602709e+000,1.500158e+001,4.217613e+001,2.515957e+001,8.976323e-001,1.726948e+000,-1.296120e+000,1.183675e+000,5.503215e+001,2.643066e+001];
armory_renderpath_HosekWilkieData.datasetRGB3 = [-1.372629e+000,-4.905585e-001,-4.100789e+001,4.122169e+001,-7.389360e-003,4.839359e-001,6.474757e-003,3.471755e+000,5.092936e-001,-1.523025e+000,-6.497084e-001,6.249857e+000,-5.662543e+000,-1.908402e-002,5.512810e-001,-2.181049e-005,2.507663e+000,4.339598e-001,-1.035567e+000,-7.478740e-002,9.221030e-001,-2.140047e+000,-2.374146e-002,3.795517e-001,-1.769134e-002,7.479831e+000,7.729303e-001,-1.271086e+000,-5.588190e-001,6.908023e-001,2.096832e+000,-2.453967e-001,1.410648e+000,4.475036e-002,-4.719115e+000,5.741186e-001,-9.712598e-001,-7.033926e-002,9.167274e-001,-9.502097e-001,3.004684e-001,4.547054e-001,-5.929017e-002,5.266196e+000,7.204135e-001,-1.087457e+000,-1.888896e-001,8.156686e-001,3.101712e-001,-2.155419e+000,1.422205e+000,9.692261e-002,3.122404e+000,4.999430e-001,-1.425280e+000,-5.413508e-001,-3.454883e+001,3.481142e+001,-8.686975e-003,4.914268e-001,-2.479243e-006,3.239879e+000,6.094201e-001,-1.688557e+000,-8.070865e-001,7.018459e+000,-6.244574e+000,-2.149341e-002,3.993971e-001,1.252502e-002,1.630662e+000,1.097860e-001,-8.664152e-001,7.869125e-002,-5.236535e-001,-1.218960e+000,-2.059093e-002,6.684898e-001,-5.584112e-002,8.602299e+000,1.410496e+000,-1.319763e+000,-5.985323e-001,1.253918e+000,1.914706e+000,-3.216739e-001,9.011213e-001,1.324845e-001,-5.252749e+000,6.231252e-002,-9.706008e-001,-5.914059e-002,5.693150e-001,-1.175362e+000,5.221644e-001,7.518213e-001,-8.247655e-002,5.875635e+000,9.850863e-001,-1.085330e+000,-1.956105e-001,8.019605e-001,5.338101e-001,-3.423464e+000,1.110444e+000,1.507923e-001,2.864942e+000,4.999481e-001,-1.431967e+000,-5.478935e-001,-3.286288e+001,3.305288e+001,-8.380797e-003,4.772050e-001,-3.044274e-006,3.289973e+000,5.976303e-001,-1.801361e+000,-9.315889e-001,5.391756e+000,-4.588592e+000,-2.040076e-002,4.144684e-001,1.814534e-002,1.051795e+000,1.145651e-001,-7.905357e-001,1.451332e-001,-1.605661e-001,-1.592174e+000,4.561348e-004,3.380323e-001,-7.770275e-002,8.775384e+000,1.489512e+000,-1.308575e+000,-5.539232e-001,9.184133e-001,2.011479e+000,-3.842472e-001,1.432274e+000,1.637153e-001,-4.408856e+000,5.272957e-002,-9.829872e-001,-8.183048e-002,4.464556e-001,-1.442716e+000,1.029641e+000,-6.991617e-002,8.702356e-003,5.706417e+000,9.116452e-001,-1.087130e+000,-2.038013e-001,7.260801e-001,9.164376e-001,-5.006183e+000,1.511271e+000,1.257134e-001,2.715439e+000,6.201652e-001,-1.448662e+000,-5.799075e-001,-2.833268e+001,2.858023e+001,-9.134061e-003,4.404783e-001,-2.709026e-006,3.029357e+000,5.540071e-001,-2.061772e+000,-1.145190e+000,7.918478e+000,-7.212525e+000,-2.020760e-002,2.962715e-001,4.689670e-002,8.517209e-001,2.334587e-001,-6.413755e-001,1.780425e-001,-2.412919e+000,1.064484e+000,-1.949986e-002,6.769741e-001,-1.752760e-001,7.262714e+000,1.325869e+000,-1.304871e+000,-3.975581e-001,1.219002e+000,7.285178e-001,-2.710105e-001,7.779727e-001,3.247139e-001,-8.818168e-001,1.839517e-001,-1.001104e+000,-1.994801e-001,3.676742e-001,-1.409737e+000,2.901555e-001,2.506940e-001,2.468899e-003,3.398923e+000,8.584645e-001,-1.111552e+000,-2.487204e-001,7.410842e-001,1.703749e+000,-5.007855e+000,1.057763e+000,1.354511e-001,2.088715e+000,6.600013e-001,-1.547227e+000,-6.679466e-001,-1.861465e+001,1.884045e+001,-1.242210e-002,4.157339e-001,-2.432805e-006,2.812423e+000,5.446957e-001,-2.043890e+000,-1.149081e+000,2.304118e+000,-1.715757e+000,-2.433628e-002,2.816836e-001,7.185458e-002,1.064860e+000,2.706789e-001,-9.040720e-001,-8.274472e-002,-2.555676e-001,-6.326215e-001,-2.770880e-002,6.676024e-001,-2.513532e-001,5.903839e+000,1.241452e+000,-1.000013e+000,-1.010774e-001,3.699166e-001,8.774526e-001,-3.042007e-001,6.951053e-001,4.361813e-001,6.793421e-001,2.573892e-001,-1.171332e+000,-3.768188e-001,3.701377e-001,-1.470757e+000,5.525942e-001,2.991456e-002,1.581823e-002,2.365233e+000,8.214514e-001,-1.068667e+000,-2.326330e-001,6.725059e-001,2.243733e+000,-4.614370e+000,1.033677e+000,1.376291e-001,2.013334e+000,6.865304e-001,-1.592991e+000,-7.246948e-001,-2.598204e+001,2.621960e+001,-8.365176e-003,4.207571e-001,-2.742772e-006,2.623735e+000,5.873190e-001,-2.271349e+000,-1.280884e+000,6.308739e+000,-5.758350e+000,-1.977049e-002,3.671835e-001,6.698038e-002,1.150597e+000,1.759218e-001,-6.368620e-001,-7.436052e-003,-2.230026e+000,1.640997e+000,-1.548497e-002,3.145331e-001,-2.492644e-001,5.083843e+000,1.260215e+000,-1.177925e+000,-9.628114e-002,3.051152e-001,-3.749544e-002,-2.713209e-001,1.164226e+000,4.559969e-001,2.175429e+000,2.874284e-001,-1.078500e+000,-3.801779e-001,4.788906e-001,-4.795969e-001,5.977621e-001,-4.488535e-001,3.386874e-002,1.538143e+000,8.062054e-001,-1.108028e+000,-2.596892e-001,5.162202e-001,1.557081e+000,-4.265039e+000,1.182535e+000,1.563762e-001,2.095084e+000,6.883383e-001,-1.668427e+000,-7.908511e-001,-2.779690e+001,2.799746e+001,-7.186935e-003,3.757766e-001,-3.326858e-006,2.563421e+000,5.439687e-001,-2.156175e+000,-1.220004e+000,3.585732e+000,-3.235988e+000,-1.086239e-002,1.846143e-001,1.046017e-001,1.234427e+000,2.842191e-001,-1.117051e+000,-4.101627e-001,-8.463730e-001,7.671472e-001,-2.226609e-002,8.574943e-001,-3.434124e-001,4.475715e+000,1.154824e+000,-7.444840e-001,2.312078e-001,-5.393724e-001,1.574213e-001,-1.763914e-001,2.751692e-001,5.564200e-001,2.217672e+000,3.483932e-001,-1.273036e+000,-5.275562e-001,4.902512e-001,-4.498436e-002,4.339366e-001,2.386682e-001,2.380879e-002,1.413444e+000,7.855923e-001,-1.084192e+000,-2.936753e-001,4.719432e-001,1.384436e+000,-3.257789e+000,6.119543e-001,1.681884e-001,1.650441e+000,6.936631e-001,-1.848490e+000,-9.512670e-001,-3.005251e+001,3.024315e+001,-5.635304e-003,3.447780e-001,-2.782999e-006,2.309422e+000,5.643559e-001,-2.300008e+000,-1.252335e+000,-1.218876e+000,1.493730e+000,-6.107100e-003,7.974860e-002,1.023449e-001,1.505934e+000,2.360948e-001,-1.483705e+000,-8.547575e-001,-7.797146e-001,6.447971e-001,-2.678052e-002,1.091263e+000,-3.344889e-001,3.830416e+000,1.189425e+000,-5.348005e-001,3.982733e-001,-4.071573e-001,3.265569e-001,-8.658789e-002,-2.370892e-001,5.369097e-001,1.478279e+000,3.143303e-001,-1.320401e+000,-6.043247e-001,3.019196e-001,-7.732911e-002,4.768381e-001,6.745764e-001,3.694098e-002,1.158234e+000,8.169056e-001,-1.101040e+000,-3.420019e-001,3.775661e-001,1.769338e+000,-2.990515e+000,1.649529e-001,1.970125e-001,1.453355e+000,6.759757e-001,-2.251946e+000,-1.229349e+000,-3.271808e+001,3.283114e+001,-4.252027e-003,3.372289e-001,-3.001937e-006,2.154046e+000,5.842674e-001,-1.867834e+000,-9.531252e-001,-1.229365e+001,1.269149e+001,-6.844772e-003,1.185107e-001,7.539587e-002,1.846381e+000,1.899412e-001,-3.398629e+000,-2.180862e+000,2.335213e+000,-3.382823e+000,-8.613985e-003,8.431602e-001,-2.393567e-001,3.112460e+000,1.218556e+000,5.708381e-001,9.406030e-001,-6.890113e-001,2.746233e+000,-5.772068e-002,1.096005e-001,3.491978e-001,7.281453e-001,3.212049e-001,-1.705909e+000,-8.517224e-001,1.131160e-001,-2.141434e+000,4.274043e-001,3.397600e-001,1.786490e-001,9.026101e-001,7.882800e-001,-1.012865e+000,-3.495551e-001,3.369038e-001,3.724205e+000,-3.089586e+000,1.266964e-001,1.461790e-001,1.170199e+000,6.931052e-001,-2.890318e+000,-1.665573e+000,-3.493756e+001,3.500369e+001,-2.984251e-003,2.622419e-001,-4.259360e-006,1.947681e+000,6.905752e-001,-1.956022e+000,-1.062900e+000,-1.919714e+001,1.975164e+001,-8.865396e-003,2.165540e-001,5.475637e-002,1.761134e+000,3.164249e-003,-5.612198e+000,-3.101371e+000,4.098034e+000,-6.144001e+000,9.944958e-003,2.905472e-001,-1.707110e-001,3.199107e+000,1.337660e+000,8.353756e-001,4.855943e-001,-1.243589e+000,5.147385e+000,-7.013963e-002,9.380410e-001,2.335714e-001,1.727744e-001,2.802696e-001,-1.524329e+000,-7.388547e-001,3.259025e-001,-4.050634e+000,4.058549e-001,-2.591384e-001,1.898299e-001,3.556071e-001,7.884126e-001,-1.070371e+000,-4.207858e-001,1.739862e-001,5.293410e+000,-3.136757e+000,2.323856e-001,1.673706e-001,1.007227e+000,6.844287e-001,-1.341720e+000,-4.834889e-001,-4.633447e+001,4.682148e+001,-6.137296e-003,4.599216e-001,7.047323e-003,2.895798e+000,4.999398e-001,-1.529104e+000,-6.498631e-001,1.534103e+001,-1.450675e+001,-1.531439e-002,3.280082e-001,1.682926e-002,1.901587e+000,5.013227e-001,-1.014776e+000,-1.454495e-001,-4.071085e+000,2.954982e+000,-2.630348e-002,5.681531e-001,-3.016505e-002,6.773854e+000,5.003504e-001,-1.172413e+000,-4.026320e-001,2.960428e+000,2.020710e-001,-2.004947e-001,9.375572e-001,5.998168e-002,-4.945934e+000,4.502898e-001,-9.898161e-001,-5.772814e-002,4.470024e-001,-5.786656e-001,1.158168e-001,3.468040e-001,-5.043360e-002,6.867947e+000,8.012363e-001,-1.085111e+000,-1.882675e-001,1.223748e+000,3.565495e-001,-3.688357e+000,5.653723e-001,6.727646e-002,2.690130e+000,4.999400e-001,-1.389119e+000,-5.290250e-001,-4.055774e+001,4.105972e+001,-7.062577e-003,4.560060e-001,-1.736334e-006,2.775512e+000,6.671455e-001,-1.584641e+000,-7.200619e-001,1.248067e+001,-1.156028e+001,-1.659568e-002,3.050029e-001,1.099895e-002,1.438927e+000,-2.138015e-002,-9.826068e-001,-8.887254e-002,-2.960031e+000,1.808816e+000,-2.478159e-002,6.035733e-001,-4.868441e-002,7.347705e+000,1.584739e+000,-1.150423e+000,-4.073793e-001,2.412991e+000,4.870840e-001,-2.337902e-001,8.295114e-001,1.129914e-001,-5.150045e+000,-9.016643e-002,-1.016933e+000,-6.311501e-002,5.218937e-001,-5.716430e-001,1.250993e-001,3.601524e-001,-5.497586e-002,7.060139e+000,1.018333e+000,-1.073151e+000,-1.845444e-001,1.155394e+000,3.004486e-001,-3.431711e+000,4.657031e-001,9.401223e-002,2.688620e+000,4.999544e-001,-1.391257e+000,-5.365815e-001,-4.255881e+001,4.299132e+001,-5.838466e-003,4.229134e-001,-2.760038e-006,2.775531e+000,6.234597e-001,-1.780062e+000,-9.228880e-001,1.376172e+001,-1.260946e+001,-1.507526e-002,3.117435e-001,2.205045e-002,6.093731e-001,3.463446e-002,-7.388169e-001,1.275670e-001,-3.999528e+000,2.223993e+000,-1.856853e-002,5.439310e-001,-8.834054e-002,8.037139e+000,1.645951e+000,-1.322387e+000,-5.320143e-001,2.659359e+000,1.086712e+000,-2.129712e-001,8.704649e-001,1.800315e-001,-4.967241e+000,-1.383720e-001,-9.378288e-001,-1.599895e-002,3.607555e-001,-1.980561e+000,3.791456e-001,1.212268e-001,-2.845992e-002,6.825542e+000,1.059139e+000,-1.100832e+000,-2.172313e-001,1.211561e+000,2.002721e+000,-5.010011e+000,5.717583e-001,6.777702e-002,2.160006e+000,5.676392e-001,-1.409373e+000,-5.708751e-001,-3.034974e+001,3.079809e+001,-7.280715e-003,3.723304e-001,-2.436279e-006,2.577348e+000,5.913377e-001,-1.954312e+000,-1.116510e+000,5.399148e+000,-4.299553e+000,-1.724739e-002,3.742824e-001,4.187077e-002,1.044883e-001,1.232727e-001,-6.772215e-001,2.001396e-001,-3.670523e-001,-1.014628e+000,-3.497152e-003,4.099858e-001,-1.584633e-001,7.750400e+000,1.514559e+000,-1.291600e+000,-4.977437e-001,9.641914e-001,1.562420e+000,-3.227782e-001,9.055427e-001,3.046444e-001,-3.385619e+000,9.546291e-003,-9.750857e-001,-8.770560e-002,9.054256e-001,-1.429236e+000,8.974777e-001,-1.217961e-001,-5.194608e-002,4.909409e+000,9.589153e-001,-1.088007e+000,-1.959301e-001,9.745799e-001,1.260761e+000,-5.008864e+000,7.271248e-001,1.096661e-001,2.717295e+000,6.340731e-001,-1.456050e+000,-6.223072e-001,-2.228088e+001,2.269604e+001,-9.340812e-003,4.118308e-001,-2.418083e-006,2.442117e+000,5.589638e-001,-2.176449e+000,-1.302416e+000,2.222836e+000,-1.222730e+000,-1.728051e-002,1.323513e-001,7.027731e-002,4.835745e-002,2.093351e-001,-5.789641e-001,2.215407e-001,2.142291e-001,-1.201725e+000,-1.185728e-002,8.122982e-001,-2.380420e-001,6.706841e+000,1.404146e+000,-1.307463e+000,-4.515174e-001,6.447827e-001,1.223841e+000,-2.902391e-001,4.986588e-001,4.073652e-001,-1.706696e+000,1.060885e-001,-9.698678e-001,-1.307094e-001,9.389347e-001,-1.522852e+000,7.768797e-001,-1.368595e-001,-3.857426e-002,3.676935e+000,8.980966e-001,-1.104349e+000,-2.380323e-001,1.047043e+000,1.865421e+000,-5.011664e+000,7.014954e-001,9.622701e-002,1.891360e+000,6.687354e-001,-1.502249e+000,-6.724523e-001,-2.888092e+001,2.930360e+001,-6.685766e-003,3.685464e-001,-2.469442e-006,2.310797e+000,5.566754e-001,-2.217125e+000,-1.364924e+000,4.048243e+000,-3.111333e+000,-1.317747e-002,1.921948e-001,8.627702e-002,1.981769e-003,2.213689e-001,-6.215757e-001,1.687995e-001,-5.949131e-001,-1.551293e-001,3.356129e-004,6.897657e-001,-2.855053e-001,6.271042e+000,1.363084e+000,-1.216317e+000,-3.489429e-001,7.566226e-001,5.409809e-001,-2.830843e-001,6.191825e-001,4.755163e-001,-9.131387e-001,1.383909e-001,-1.030437e+000,-2.034064e-001,8.335995e-001,-1.050947e+000,8.689093e-001,-3.672310e-001,-4.056183e-002,3.111269e+000,8.856842e-001,-1.078984e+000,-2.070549e-001,9.683145e-001,1.497022e+000,-5.007653e+000,7.702541e-001,1.285822e-001,2.225188e+000,6.587911e-001,-1.559291e+000,-7.374039e-001,-3.596311e+001,3.634470e+001,-4.667132e-003,3.277964e-001,-2.487945e-006,2.215652e+000,5.764681e-001,-2.356929e+000,-1.444755e+000,6.244526e+000,-5.540162e+000,-8.794510e-003,1.792100e-001,9.578517e-002,3.737676e-001,1.922194e-001,-6.589752e-001,-2.926910e-002,-1.831779e+000,1.869962e+000,-2.030095e-003,7.552089e-001,-3.168157e-001,4.632196e+000,1.294054e+000,-1.161046e+000,-1.472506e-001,6.494138e-001,-8.327174e-001,-2.320724e-001,3.391212e-001,5.269637e-001,9.376341e-001,2.458573e-001,-1.034427e+000,-3.062504e-001,8.975634e-001,3.203531e-001,8.565142e-001,-1.250162e-001,-4.094017e-002,1.861304e+000,8.223468e-001,-1.109954e+000,-2.740277e-001,1.063811e+000,7.077398e-001,-4.695734e+000,5.621696e-001,1.248956e-001,1.297723e+000,6.789720e-001,-1.788293e+000,-9.368751e-001,-4.382980e+001,4.424963e+001,-3.652530e-003,3.094331e-001,-2.810503e-006,1.904402e+000,5.861599e-001,-2.268206e+000,-1.312676e+000,2.863082e+000,-2.373727e+000,-5.144980e-003,1.711072e-001,9.316041e-002,9.309598e-001,1.791683e-001,-1.376966e+000,-7.418582e-001,-1.349589e+000,1.563419e+000,-3.124219e-003,6.967139e-001,-3.061887e-001,3.602731e+000,1.255669e+000,-6.017540e-001,2.815928e-001,5.424052e-001,-6.885450e-001,-1.620001e-001,2.980046e-001,4.995571e-001,7.371203e-001,2.812466e-001,-1.278853e+000,-5.245326e-001,7.870520e-001,3.125067e-001,7.748105e-001,-7.788581e-002,3.490956e-003,1.283748e+000,8.130190e-001,-1.050930e+000,-2.786331e-001,1.056344e+000,1.053002e+000,-4.047789e+000,4.432174e-001,1.169077e-001,9.532621e-001,6.806764e-001,-2.084927e+000,-1.203954e+000,-4.881638e+001,4.920160e+001,-2.896045e-003,2.882977e-001,-3.073517e-006,1.702211e+000,6.374180e-001,-2.328567e+000,-1.238023e+000,-1.891019e+000,2.451520e+000,-5.847581e-003,2.084702e-001,7.848130e-002,1.211048e+000,8.095008e-002,-2.634632e+000,-1.789460e+000,-1.370558e-001,-3.326435e-001,2.783737e-003,5.239451e-001,-2.548881e-001,2.896327e+000,1.324116e+000,6.882616e-002,5.997821e-001,1.535398e-001,1.375209e+000,-1.267285e-001,4.239743e-001,4.013122e-001,1.794675e-001,2.395382e-001,-1.430918e+000,-6.439041e-001,8.325980e-001,-1.705612e+000,7.236426e-001,-5.567593e-002,6.408718e-002,6.836524e-001,8.388887e-001,-1.037956e+000,-3.215402e-001,9.457349e-001,3.178114e+000,-4.152156e+000,2.230992e-001,1.156198e-001,7.606223e-001,6.656923e-001,-2.967314e+000,-1.728778e+000,-3.730988e+001,3.755578e+001,-2.588835e-003,2.927966e-001,-3.935038e-006,1.592161e+000,6.868694e-001,-2.123311e+000,-1.175148e+000,-1.314988e+001,1.386882e+001,-7.828537e-003,1.852026e-001,5.481038e-002,1.294309e+000,2.428177e-002,-5.443597e+000,-3.156344e+000,2.110838e+000,-3.421556e+000,1.181890e-002,1.196951e-001,-1.742902e-001,2.404353e+000,1.272805e+000,1.029898e+000,5.912521e-001,-3.983531e-001,3.286069e+000,-9.252065e-002,1.331381e+000,2.560642e-001,8.001754e-001,3.624178e-001,-1.547574e+000,-7.881604e-001,1.020902e+000,-2.897069e+000,5.213470e-001,-9.242315e-001,1.185594e-001,-1.150721e+000,7.317211e-001,-9.621043e-001,-1.991406e-001,6.531287e-001,3.925839e+000,-3.596904e+000,6.317332e-001,1.531334e-001,1.457846e+000,6.966285e-001];
armory_renderpath_HosekWilkieData.datasetRGBRad3 = [9.926518e-001,1.999494e+000,-4.136109e+000,1.856270e+001,1.351028e+001,1.390238e+001,9.634366e-001,2.119694e+000,-4.614523e+000,1.919701e+001,1.376644e+001,1.418731e+001,9.446537e-001,2.171610e+000,-4.915556e+000,1.918240e+001,1.537135e+001,1.400530e+001,9.073074e-001,2.330536e+000,-5.577596e+000,1.961615e+001,1.688365e+001,1.446955e+001,8.739124e-001,2.388682e+000,-5.842995e+000,1.923265e+001,1.887735e+001,1.485698e+001,8.563688e-001,2.391534e+000,-5.769133e+000,1.828709e+001,2.097209e+001,1.469587e+001,8.270533e-001,2.342790e+000,-5.558071e+000,1.684993e+001,2.356498e+001,1.505975e+001,7.908339e-001,2.190341e+000,-4.852571e+000,1.374862e+001,2.806846e+001,1.548444e+001,7.403619e-001,1.783998e+000,-2.983854e+000,7.622563e+000,3.507610e+001,1.615805e+001,6.840111e-001,1.154457e+000,-2.393830e-001,-7.896893e-001,4.282765e+001,1.779469e+001,1.168300e+000,1.860993e+000,-2.129074e+000,1.251952e+001,3.032499e+001,2.938716e+001,1.150338e+000,1.918813e+000,-2.413527e+000,1.274862e+001,3.087134e+001,2.951432e+001,1.114719e+000,1.964689e+000,-2.625423e+000,1.247837e+001,3.237949e+001,2.943596e+001,1.077948e+000,2.006292e+000,-2.846934e+000,1.190195e+001,3.459293e+001,2.937492e+001,1.035143e+000,1.986681e+000,-2.752584e+000,1.060972e+001,3.722185e+001,2.918594e+001,1.015992e+000,1.992054e+000,-2.812626e+000,1.001416e+001,3.847300e+001,2.924624e+001,9.756887e-001,1.939897e+000,-2.533281e+000,8.319176e+000,4.083907e+001,2.925586e+001,9.264164e-001,1.716454e+000,-1.597044e+000,4.739725e+000,4.507683e+001,2.878915e+001,8.595191e-001,1.346034e+000,-2.801895e-002,-6.582906e-001,5.017523e+001,2.852953e+001,7.754116e-001,7.709245e-001,2.200201e+000,-7.487661e+000,5.436622e+001,2.893432e+001];
armory_renderpath_HosekWilkieData.datasetsRGB = [armory_renderpath_HosekWilkieData.datasetRGB1,armory_renderpath_HosekWilkieData.datasetRGB2,armory_renderpath_HosekWilkieData.datasetRGB3];
armory_renderpath_HosekWilkieData.datasetsRGBRad = [armory_renderpath_HosekWilkieData.datasetRGBRad1,armory_renderpath_HosekWilkieData.datasetRGBRad2,armory_renderpath_HosekWilkieData.datasetRGBRad3];
armory_trait_ConvexBreaker.meshIndex = 0;
armory_trait_VRNavigation.speed = 5.0;
armory_trait_WalkNavigation.speed = 5.0;
iron_App.traitInits = [];
iron_App.traitUpdates = [];
iron_App.traitLateUpdates = [];
iron_App.traitRenders = [];
iron_App.traitRenders2D = [];
iron_data_Data.cachedSceneRaws = new haxe_ds_StringMap();
iron_data_Data.cachedMeshes = new haxe_ds_StringMap();
iron_data_Data.cachedLamps = new haxe_ds_StringMap();
iron_data_Data.cachedCameras = new haxe_ds_StringMap();
iron_data_Data.cachedRenderPaths = new haxe_ds_StringMap();
iron_data_Data.cachedMaterials = new haxe_ds_StringMap();
iron_data_Data.cachedParticles = new haxe_ds_StringMap();
iron_data_Data.cachedWorlds = new haxe_ds_StringMap();
iron_data_Data.cachedGreasePencils = new haxe_ds_StringMap();
iron_data_Data.cachedShaders = new haxe_ds_StringMap();
iron_data_Data.cachedBlobs = new haxe_ds_StringMap();
iron_data_Data.cachedImages = new haxe_ds_StringMap();
iron_data_Data.cachedSounds = new haxe_ds_StringMap();
iron_data_Data.cachedVideos = new haxe_ds_StringMap();
iron_data_Data.cachedFonts = new haxe_ds_StringMap();
iron_data_Data.loadingMeshes = new haxe_ds_StringMap();
iron_data_Data.loadingLamps = new haxe_ds_StringMap();
iron_data_Data.loadingCameras = new haxe_ds_StringMap();
iron_data_Data.loadingRenderPaths = new haxe_ds_StringMap();
iron_data_Data.loadingMaterials = new haxe_ds_StringMap();
iron_data_Data.loadingParticles = new haxe_ds_StringMap();
iron_data_Data.loadingWorlds = new haxe_ds_StringMap();
iron_data_Data.loadingGreasePencils = new haxe_ds_StringMap();
iron_data_Data.loadingShaders = new haxe_ds_StringMap();
iron_data_Data.loadingSceneRaws = new haxe_ds_StringMap();
iron_data_Data.assetsLoaded = 0;
iron_data_Data.loadingBlobs = new haxe_ds_StringMap();
iron_data_Data.loadingImages = new haxe_ds_StringMap();
iron_data_Data.loadingSounds = new haxe_ds_StringMap();
iron_data_Data.loadingVideos = new haxe_ds_StringMap();
iron_data_Data.loadingFonts = new haxe_ds_StringMap();
iron_object_Object.uidCounter = 0;
iron_object_Object.seed = 1;
iron_system_Time.step = 0.0166666666666666664;
iron_system_Time.delta = 0.0166666666666666664;
iron_system_Time.last = 0.0;
iron_system_Time.realDelta = 0.0;
armory_trait_internal_JSScriptAPI.App = iron_App;
armory_trait_internal_JSScriptAPI.Scene = iron_Scene;
armory_trait_internal_JSScriptAPI.Time = iron_system_Time;
armory_trait_internal_JSScriptAPI.Object = iron_object_Object;
armory_trait_internal_JSScriptAPI.Data = iron_data_Data;
kha_math_FastMatrix4.width = 4;
kha_math_FastMatrix4.height = 4;
iron_math_Mat4.helpVec = new iron_math_Vec4();
iron_math_Mat4.helpMat = iron_math_Mat4.identity();
iron_math_Quat.helpVec0 = new iron_math_Vec4();
iron_math_Quat.helpVec1 = new iron_math_Vec4();
iron_math_Quat.helpVec2 = new iron_math_Vec4();
armory_trait_internal_JSScriptAPIMath.Vec4 = iron_math_Vec4;
armory_trait_internal_JSScriptAPIMath.Mat4 = iron_math_Mat4;
armory_trait_internal_JSScriptAPIMath.Quat = iron_math_Quat;
armory_trait_internal_MovieTexture.created = false;
armory_trait_internal_SpaceArmory.first = true;
armory_trait_internal_SpaceArmory.patchTime = 0.0;
haxe_Unserializer.DEFAULT_RESOLVER = new haxe__$Unserializer_DefaultResolver();
haxe_Unserializer.BASE64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:";
haxe_crypto_Base64.CHARS = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
haxe_crypto_Base64.BYTES = haxe_io_Bytes.ofString(haxe_crypto_Base64.CHARS);
haxe_ds_ObjectMap.count = 0;
haxe_io_FPHelper.i64tmp = (function($this) {
	var $r;
	var this1 = new haxe__$Int64__$_$_$Int64(0,0);
	$r = this1;
	return $r;
}(this));
haxe_zip_InflateImpl.LEN_EXTRA_BITS_TBL = [0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,-1,-1];
haxe_zip_InflateImpl.LEN_BASE_VAL_TBL = [3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258];
haxe_zip_InflateImpl.DIST_EXTRA_BITS_TBL = [0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,-1,-1];
haxe_zip_InflateImpl.DIST_BASE_VAL_TBL = [1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577];
haxe_zip_InflateImpl.CODE_LENGTHS_POS = [16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];
iron_data_ConstData.skydomeIndices = [0,1,2,0,3,4,3,5,6,5,7,8,7,9,10,9,11,12,13,14,15,11,16,17,13,18,2,14,2,19,2,1,20,1,4,21,4,6,22,6,8,23,8,10,24,10,12,25,14,26,15,17,27,25,22,23,28,24,29,28,24,25,30,26,31,15,25,27,32,26,19,33,19,20,34,20,21,35,21,22,36,33,34,37,34,35,38,35,36,39,36,28,40,28,29,41,30,42,41,31,43,15,30,32,44,31,33,45,40,41,46,42,47,46,43,48,15,42,44,49,43,45,50,45,37,51,37,38,52,39,53,52,39,40,54,50,51,55,51,52,56,53,57,56,53,54,58,46,59,58,46,47,60,48,61,15,47,49,62,48,50,63,59,64,65,59,60,66,61,67,15,60,62,68,61,63,69,63,55,70,56,71,70,56,57,72,57,58,65,70,71,73,71,72,74,72,65,75,64,76,75,64,66,77,67,78,15,68,79,77,67,69,80,69,70,81,76,77,82,78,83,15,77,79,84,80,85,83,80,81,86,81,73,87,74,88,87,74,75,89,76,90,89,87,88,91,88,89,92,90,93,92,90,82,94,83,95,15,82,84,96,83,85,97,86,98,97,86,87,99,95,100,15,96,101,102,95,97,103,97,98,104,98,99,105,91,106,105,91,92,107,93,108,107,93,94,102,105,106,109,106,107,110,108,111,110,108,102,112,100,113,15,102,101,114,100,103,115,103,104,116,104,105,117,114,118,119,113,115,120,115,116,121,117,122,121,109,123,122,109,110,124,111,125,124,111,112,119,113,126,15,123,124,127,125,128,127,125,119,129,126,130,15,119,118,131,126,120,132,121,133,132,121,122,134,122,123,135,130,132,136,132,133,137,133,134,138,134,135,139,135,127,140,128,141,140,128,129,142,130,143,15,129,131,144,139,140,145,141,146,145,141,142,147,143,148,15,142,144,149,143,136,150,137,151,150,138,152,151,138,139,153,150,151,154,152,155,154,153,156,155,153,145,157,146,158,157,146,147,159,148,160,15,147,149,161,148,150,162,158,163,164,158,159,165,160,166,15,161,167,165,160,162,168,162,154,169,155,170,169,156,171,170,156,157,164,169,170,172,171,173,172,171,164,174,163,175,174,163,165,176,166,177,15,165,167,178,166,168,179,168,169,180,176,181,182,177,183,15,176,178,184,177,179,185,179,180,186,172,187,186,173,188,187,173,174,189,175,182,189,187,190,191,188,192,190,188,189,193,182,194,193,182,181,195,183,196,15,181,184,197,183,185,198,185,186,191,194,195,199,196,200,15,195,197,201,196,198,202,198,191,203,190,204,203,192,205,204,192,193,206,194,207,206,205,208,209,205,206,210,207,211,210,207,199,212,200,213,15,199,201,214,202,215,213,202,203,216,204,209,216,213,217,15,214,218,219,215,220,217,215,216,221,209,222,221,209,208,223,208,210,224,211,225,224,211,212,219,223,226,227,223,224,228,225,229,228,225,219,230,217,231,15,218,232,230,220,233,231,220,221,234,222,227,234,230,232,235,231,233,236,233,234,237,227,238,237,227,226,239,226,228,240,229,241,240,229,230,242,231,243,15,239,240,244,241,245,244,241,242,246,243,247,15,235,248,246,243,236,249,237,250,249,238,251,250,239,252,251,249,250,253,250,251,254,252,255,254,252,244,256,245,257,256,245,246,258,247,259,15,248,260,258,247,249,261,257,262,263,258,264,262,259,265,15,258,260,266,259,261,267,261,253,268,253,254,269,255,270,269,255,256,263,268,271,272,269,273,271,270,274,273,270,263,275,262,276,275,262,264,277,265,278,15,264,266,279,267,272,278,276,280,281,276,277,282,278,283,15,277,279,284,278,272,285,272,271,286,271,273,287,274,288,287,274,275,281,287,3,0,288,5,3,281,7,5,280,9,7,282,11,9,283,13,15,282,284,16,285,18,13,286,0,18,0,2,18,0,4,1,3,6,4,5,8,6,7,10,8,9,12,10,11,17,12,13,2,14,14,19,26,2,20,19,1,21,20,4,22,21,6,23,22,8,24,23,10,25,24,17,25,12,22,28,36,24,28,23,24,30,29,25,32,30,26,33,31,19,34,33,20,35,34,21,36,35,33,37,45,34,38,37,35,39,38,36,40,39,28,41,40,30,41,29,30,44,42,31,45,43,40,46,54,42,46,41,42,49,47,43,50,48,45,51,50,37,52,51,39,52,38,39,54,53,50,55,63,51,56,55,53,56,52,53,58,57,46,58,54,46,60,59,47,62,60,48,63,61,59,65,58,59,66,64,60,68,66,61,69,67,63,70,69,56,70,55,56,72,71,57,65,72,70,73,81,71,74,73,72,75,74,64,75,65,64,77,76,68,77,66,67,80,78,69,81,80,76,82,90,77,84,82,80,83,78,80,86,85,81,87,86,74,87,73,74,89,88,76,89,75,87,91,99,88,92,91,90,92,89,90,94,93,82,96,94,83,97,95,86,97,85,86,99,98,96,102,94,95,103,100,97,104,103,98,105,104,91,105,99,91,107,106,93,107,92,93,102,108,105,109,117,106,110,109,108,110,107,108,112,111,102,114,112,100,115,113,103,116,115,104,117,116,114,119,112,113,120,126,115,121,120,117,121,116,109,122,117,109,124,123,111,124,110,111,119,125,123,127,135,125,127,124,125,129,128,119,131,129,126,132,130,121,132,120,121,134,133,122,135,134,130,136,143,132,137,136,133,138,137,134,139,138,135,140,139,128,140,127,128,142,141,129,144,142,139,145,153,141,145,140,141,147,146,142,149,147,143,150,148,137,150,136,138,151,137,138,153,152,150,154,162,152,154,151,153,155,152,153,157,156,146,157,145,146,159,158,147,161,159,148,162,160,158,164,157,158,165,163,161,165,159,160,168,166,162,169,168,155,169,154,156,170,155,156,164,171,169,172,180,171,172,170,171,174,173,163,174,164,163,176,175,165,178,176,166,179,177,168,180,179,176,182,175,176,184,181,177,185,183,179,186,185,172,186,180,173,187,172,173,189,188,175,189,174,187,191,186,188,190,187,188,193,192,182,193,189,182,195,194,181,197,195,183,198,196,185,191,198,194,199,207,195,201,199,196,202,200,198,203,202,190,203,191,192,204,190,192,206,205,194,206,193,205,209,204,205,210,208,207,210,206,207,212,211,199,214,212,202,213,200,202,216,215,204,216,203,214,219,212,215,217,213,215,221,220,209,221,216,209,223,222,208,224,223,211,224,210,211,219,225,223,227,222,223,228,226,225,228,224,225,230,229,218,230,219,220,231,217,220,234,233,222,234,221,230,235,242,231,236,243,233,237,236,227,237,234,227,239,238,226,240,239,229,240,228,229,242,241,239,244,252,241,244,240,241,246,245,235,246,242,243,249,247,237,249,236,238,250,237,239,251,238,249,253,261,250,254,253,252,254,251,252,256,255,245,256,244,245,258,257,248,258,246,247,261,259,257,263,256,258,262,257,258,266,264,259,267,265,261,268,267,253,269,268,255,269,254,255,263,270,268,272,267,269,271,268,270,273,269,270,275,274,262,275,263,262,277,276,264,279,277,267,278,265,276,281,275,276,282,280,277,284,282,278,285,283,272,286,285,271,287,286,274,287,273,274,281,288,287,0,286,288,3,287,281,5,288,280,7,281,282,9,280,282,16,11,285,13,283,286,18,285,84,289,96,96,289,101,101,289,114,114,289,118,118,289,131,144,131,289,149,144,289,149,289,161,161,289,167,167,289,178,178,289,184,184,289,197,197,289,201,201,289,214,214,289,218,218,289,232,232,289,235,235,289,248,260,248,289,260,289,266,266,289,279,279,289,284,284,289,16,16,289,17,27,17,289,27,289,32,44,32,289,44,289,49,49,289,62,62,289,68,68,289,79,79,289,84];
iron_data_ConstData.skydomePos = [-0.5555702447891235,0.0,0.8314695954322815,-0.5448951125144958,0.10838644951581955,0.8314695954322815,-0.3753302991390228,0.07465790957212448,0.9238795042037964,-0.7071067690849304,0.0,0.7071067690849304,-0.6935198903083801,0.13794974982738495,0.7071067690849304,-0.8314696550369263,0.0,0.5555701851844788,-0.8154931664466858,0.16221174597740173,0.5555701851844788,-0.9238795042037964,0.0,0.3826834261417389,-0.906127393245697,0.18024000525474548,0.3826834261417389,-0.9807852506637573,0.0,0.19509035348892212,-0.9619396924972534,0.19134177267551422,0.19509035348892212,-1.0,0.0,7.549790126404332e-08,-0.9807852506637573,0.1950903832912445,7.549790126404332e-08,-0.19509032368659973,0.0,0.9807852506637573,-0.19134171307086945,0.03806029632687569,0.9807852506637573,2.4803494369507462e-08,-1.246939973498229e-07,1.0,-0.9807853102684021,0.0,-0.282339870929718,-0.9619397521018982,0.19134178757667542,-0.282339870929718,-0.3826834559440613,0.0,0.9238795042037964,-0.3535534143447876,0.14644673466682434,0.9238795042037964,-0.513279914855957,0.21260765194892883,0.8314695954322815,-0.6532813906669617,0.2705981731414795,0.7071067690849304,-0.7681776881217957,0.3181897699832916,0.5555701851844788,-0.853553295135498,0.3535534739494324,0.3826834261417389,-0.9061273336410522,0.37533038854599,0.19509035348892212,-0.9238794445991516,0.38268354535102844,7.549790126404332e-08,-0.1802399456501007,0.07465796172618866,0.9807852506637573,-0.9061273336410522,0.37533038854599,-0.282339870929718,-0.7681776285171509,0.5132800936698914,0.3826834261417389,-0.8154929876327515,0.5448952317237854,0.19509035348892212,-0.8314694762229919,0.5555704236030579,7.549790126404332e-08,-0.16221162676811218,0.1083865687251091,0.9807852506637573,-0.8154929876327515,0.5448952317237854,-0.282339870929718,-0.3181896209716797,0.2126077115535736,0.9238795042037964,-0.4619396924972534,0.3086584508419037,0.8314695954322815,-0.5879377126693726,0.3928476572036743,0.7071067690849304,-0.6913416385650635,0.4619399309158325,0.5555701851844788,-0.39284735918045044,0.3928476870059967,0.8314695954322815,-0.49999988079071045,0.5000001788139343,0.7071067690849304,-0.5879376530647278,0.5879380106925964,0.5555701851844788,-0.6532813310623169,0.6532816290855408,0.3826834261417389,-0.6935197114944458,0.6935200691223145,0.19509035348892212,-0.7071065902709961,0.7071070075035095,7.549790126404332e-08,-0.137949600815773,0.13794992864131927,0.9807852506637573,-0.6935197114944458,0.6935200691223145,-0.282339870929718,-0.2705979645252228,0.27059829235076904,0.9238795042037964,-0.544894814491272,0.8154932856559753,0.19509035348892212,-0.5555700063705444,0.8314698338508606,7.549790126404332e-08,-0.10838623344898224,0.16221193969249725,0.9807852506637573,-0.544894814491272,0.8154932856559753,-0.282339870929718,-0.21260739862918854,0.31818991899490356,0.9238795042037964,-0.3086581230163574,0.4619399905204773,0.8314695954322815,-0.39284729957580566,0.5879380106925964,0.7071067690849304,-0.46193957328796387,0.6913419365882874,0.5555701851844788,-0.5132797956466675,0.7681779265403748,0.3826834261417389,-0.21260732412338257,0.5132802128791809,0.8314695954322815,-0.27059781551361084,0.6532816886901855,0.7071067690849304,-0.3181893825531006,0.7681779861450195,0.5555701851844788,-0.3535531759262085,0.8535535335540771,0.3826834261417389,-0.3753299117088318,0.9061275124549866,0.19509035348892212,-0.3826831579208374,0.9238797426223755,7.549790126404332e-08,-0.0746576264500618,0.18024024367332458,0.9807852506637573,-0.3753299117088318,0.9061275124549866,-0.282339870929718,-0.14644642174243927,0.3535536825656891,0.9238795042037964,-0.1913413405418396,0.961939811706543,0.19509035348892212,-0.1802397072315216,0.9061275720596313,0.3826834261417389,-0.19508999586105347,0.9807854890823364,7.549790126404332e-08,-0.038059964776039124,0.19134201109409332,0.9807852506637573,-0.1913413405418396,0.961939811706543,-0.282339870929718,-0.07465757429599762,0.3753305673599243,0.9238795042037964,-0.10838611423969269,0.544895350933075,0.8314695954322815,-0.13794942200183868,0.6935201287269592,0.7071067690849304,-0.1622113734483719,0.8154933452606201,0.5555701851844788,3.191853465978056e-07,0.7071069478988647,0.7071067690849304,3.340865077916533e-07,0.8314697742462158,0.5555701851844788,2.7448186301626265e-07,0.9238796830177307,0.3826834261417389,3.936911525670439e-07,0.9807852506637573,0.19509035348892212,3.7878999137319624e-07,1.000000238418579,7.549790126404332e-08,3.2663592719472945e-07,0.19509060680866241,0.9807852506637573,3.936911525670439e-07,0.9807852506637573,-0.282339870929718,3.191853465978056e-07,0.3826836943626404,0.9238795042037964,3.117347660008818e-07,0.5555704832077026,0.8314695954322815,0.19509074091911316,0.9807854890823364,7.549790126404332e-08,0.038060616701841354,0.19134199619293213,0.9807852506637573,0.19134210050106049,0.9619396924972534,-0.282339870929718,0.07465820759534836,0.37533053755760193,0.9238795042037964,0.10838674008846283,0.544895350933075,0.8314695954322815,0.13795003294944763,0.6935200691223145,0.7071067690849304,0.16221202909946442,0.8154932856559753,0.5555701851844788,0.18024025857448578,0.9061275720596313,0.3826834261417389,0.19134210050106049,0.9619396924972534,0.19509035348892212,0.3181900382041931,0.7681778073310852,0.5555701851844788,0.3535537123680115,0.8535535335540771,0.3826834261417389,0.3753306269645691,0.9061273336410522,0.19509035348892212,0.3826838731765747,0.9238796830177307,7.549790126404332e-08,0.07465826719999313,0.180240198969841,0.9807852506637573,0.3753306269645691,0.9061273336410522,-0.282339870929718,0.14644701778888702,0.3535536229610443,0.9238795042037964,0.21260792016983032,0.5132801532745361,0.8314695954322815,0.2705984115600586,0.6532816290855408,0.7071067690849304,0.10838685184717178,0.16221188008785248,0.9807852506637573,0.5448954105377197,0.8154930472373962,-0.282339870929718,0.555570662021637,0.831469714641571,7.549790126404332e-08,0.2126079499721527,0.3181898593902588,0.9238795042037964,0.3086586892604828,0.4619399309158325,0.8314695954322815,0.39284783601760864,0.5879379510879517,0.7071067690849304,0.4619401693344116,0.691341757774353,0.5555701851844788,0.5132802724838257,0.76817786693573,0.3826834261417389,0.5448954105377197,0.8154930472373962,0.19509035348892212,0.5879381895065308,0.5879377722740173,0.5555701851844788,0.6532818078994751,0.6532816290855408,0.3826834261417389,0.693520188331604,0.6935198307037354,0.19509035348892212,0.7071072459220886,0.7071068286895752,7.549790126404332e-08,0.13795019686222076,0.1379498541355133,0.9807852506637573,0.693520188331604,0.6935198307037354,-0.282339870929718,0.27059850096702576,0.27059823274612427,0.9238795042037964,0.3928478956222534,0.39284759759902954,0.8314695954322815,0.5000003576278687,0.5000000596046448,0.7071067690849304,0.8154934048652649,0.5448949933052063,-0.282339870929718,0.8314700722694397,0.5555702447891235,7.549790126404332e-08,0.3181900978088379,0.21260765194892883,0.9238795042037964,0.4619401693344116,0.3086583614349365,0.8314695954322815,0.5879381895065308,0.3928475081920624,0.7071067690849304,0.6913420557975769,0.4619397222995758,0.5555701851844788,0.7681781053543091,0.5132800936698914,0.3826834261417389,0.8154934048652649,0.5448949933052063,0.19509035348892212,0.16221219301223755,0.10838649421930313,0.9807852506637573,0.8535537123680115,0.3535534739494324,0.3826834261417389,0.9061276316642761,0.3753301501274109,0.19509035348892212,0.9238799810409546,0.3826833963394165,7.549790126404332e-08,0.1802404820919037,0.07465791702270508,0.9807852506637573,0.9061276316642761,0.3753301501274109,-0.282339870929718,0.353553831577301,0.14644670486450195,0.9238795042037964,0.5132803916931152,0.21260759234428406,0.8314695954322815,0.6532818078994751,0.27059802412986755,0.7071067690849304,0.7681780457496643,0.3181895613670349,0.5555701851844788,0.37533071637153625,0.07465790212154388,0.9238795042037964,0.5448955297470093,0.10838642716407776,0.8314695954322815,0.6935202479362488,0.13794966042041779,0.7071067690849304,0.8154933452606201,0.1622115671634674,0.5555701851844788,0.9061277508735657,0.18024002015590668,0.3826834261417389,0.9619399309158325,0.1913416087627411,0.19509035348892212,0.9807857275009155,0.19509024918079376,7.549790126404332e-08,0.19134224951267242,0.0380602702498436,0.9807852506637573,0.9619399309158325,0.1913416087627411,-0.282339870929718,0.923879861831665,6.356849979738399e-08,0.3826834261417389,0.9807853698730469,-8.544311214109257e-08,0.19509035348892212,1.0000003576278687,-1.0034427333494023e-07,7.549790126404332e-08,0.19509084522724152,-7.2120158733923745e-09,0.9807852506637573,0.9807853698730469,-8.544311214109257e-08,-0.282339870929718,0.3826838433742523,4.121675800661251e-08,0.9238795042037964,0.555570662021637,2.6315596812764852e-08,0.8314695954322815,0.7071070671081543,-2.5838467365701945e-08,0.7071067690849304,0.831469714641571,-8.544311214109257e-08,0.5555701851844788,0.5448955297470093,-0.10838636755943298,0.8314695954322815,0.693520188331604,-0.13794972002506256,0.7071067690849304,0.8154932260513306,-0.16221173107624054,0.5555701851844788,0.9061277508735657,-0.18023990094661713,0.3826834261417389,0.961939811706543,-0.19134175777435303,0.19509035348892212,0.980785608291626,-0.19509044289588928,7.549790126404332e-08,0.19134221971035004,-0.03806028142571449,0.9807852506637573,0.961939811706543,-0.19134175777435303,-0.282339870929718,0.3753306567668915,-0.07465781271457672,0.9238795042037964,0.9061274528503418,-0.37533026933670044,0.19509035348892212,0.8535537123680115,-0.35355332493782043,0.3826834261417389,0.9238798022270203,-0.38268357515335083,7.549790126404332e-08,0.1802404373884201,-0.07465790957212448,0.9807852506637573,0.9061274528503418,-0.37533026933670044,-0.282339870929718,0.35355374217033386,-0.1464466005563736,0.9238795042037964,0.5132803916931152,-0.21260753273963928,0.8314695954322815,0.6532817482948303,-0.27059805393218994,0.7071067690849304,0.7681777477264404,-0.3181896507740021,0.5555701851844788,0.5879380702972412,-0.39284747838974,0.7071067690849304,0.6913416981697083,-0.4619396924972534,0.5555701851844788,0.7681780457496643,-0.513279914855957,0.3826834261417389,0.8154931664466858,-0.5448950529098511,0.19509035348892212,0.8314698338508606,-0.5555703639984131,7.549790126404332e-08,0.16221213340759277,-0.10838647186756134,0.9807852506637573,0.8154931664466858,-0.5448950529098511,-0.282339870929718,0.31818997859954834,-0.2126075178384781,0.9238795042037964,0.4619401693344116,-0.30865830183029175,0.8314695954322815,0.7071069478988647,-0.70710688829422,7.549790126404332e-08,0.6935198903083801,-0.6935197710990906,0.19509035348892212,0.1379501223564148,-0.13794980943202972,0.9807852506637573,0.6935198903083801,-0.6935197710990906,-0.282339870929718,0.2705983519554138,-0.27059805393218994,0.9238795042037964,0.39284786581993103,-0.3928475081920624,0.8314695954322815,0.5000002384185791,-0.5,0.7071067690849304,0.5879377722740173,-0.5879376530647278,0.5555701851844788,0.6532817482948303,-0.6532813906669617,0.3826834261417389,0.3928477168083191,-0.5879377722740173,0.7071067690849304,0.308658629655838,-0.4619397819042206,0.8314695954322815,0.4619397819042206,-0.6913415193557739,0.5555701851844788,0.5132802724838257,-0.7681776881217957,0.3826834261417389,0.5448950529098511,-0.8154929280281067,0.19509035348892212,0.5555703639984131,-0.8314696550369263,7.549790126404332e-08,0.10838677734136581,-0.1622118055820465,0.9807852506637573,0.5448950529098511,-0.8154929280281067,-0.282339870929718,0.21260780096054077,-0.3181896507740021,0.9238795042037964,0.38268354535102844,-0.9238795042037964,7.549790126404332e-08,0.07465820759534836,-0.18024009466171265,0.9807852506637573,0.37533023953437805,-0.9061271548271179,-0.282339870929718,0.14644686877727509,-0.3535533547401428,0.9238795042037964,0.21260783076286316,-0.5132799744606018,0.8314695954322815,0.27059826254844666,-0.6532814502716064,0.7071067690849304,0.31818968057632446,-0.7681774497032166,0.5555701851844788,0.3535537123680115,-0.8535533547401428,0.3826834261417389,0.37533023953437805,-0.9061271548271179,0.19509035348892212,0.16221174597740173,-0.8154928088188171,0.5555701851844788,0.1379498839378357,-0.6935198903083801,0.7071067690849304,0.18024027347564697,-0.906127393245697,0.3826834261417389,0.19134174287319183,-0.9619393944740295,0.19509035348892212,0.19509044289588928,-0.9807851910591125,7.549790126404332e-08,0.03806057572364807,-0.19134186208248138,0.9807852506637573,0.19134174287319183,-0.9619393944740295,-0.282339870929718,0.07465810328722,-0.37533020973205566,0.9238795042037964,0.10838666558265686,-0.5448951125144958,0.8314695954322815,3.117347660008818e-07,-0.19509045779705048,0.9807852506637573,9.566792869009078e-08,-0.9807848334312439,-0.282339870929718,1.4037141227163374e-07,-0.9999998211860657,7.549790126404332e-08,2.819324436131865e-07,-0.3826833665370941,0.9238795042037964,2.819324436131865e-07,-0.5555701851844788,0.8314695954322815,1.850748958531767e-07,-0.7071067094802856,0.7071067690849304,1.4037141227163374e-07,-0.8314692378044128,0.5555701851844788,3.191853465978056e-07,-0.9238794445991516,0.3826834261417389,9.566792869009078e-08,-0.9807848334312439,0.19509035348892212,-0.16221146285533905,-0.8154926896095276,0.5555701851844788,-0.13794949650764465,-0.6935198307037354,0.7071067690849304,-0.18023963272571564,-0.9061273336410522,0.3826834261417389,-0.19134153425693512,-0.9619392156600952,0.19509035348892212,-0.1950901597738266,-0.9807850122451782,7.549790126404332e-08,-0.03805994614958763,-0.1913418471813202,0.9807852506637573,-0.19134153425693512,-0.9619392156600952,-0.282339870929718,-0.07465753704309464,-0.37533020973205566,0.9238795042037964,-0.1083860844373703,-0.5448950529098511,0.8314695954322815,-0.37532997131347656,-0.906126856803894,-0.282339870929718,-0.14644630253314972,-0.35355332493782043,0.9238795042037964,-0.2126072347164154,-0.5132798552513123,0.8314695954322815,-0.2705978453159332,-0.6532813310623169,0.7071067690849304,-0.3181893527507782,-0.7681772708892822,0.5555701851844788,-0.35355305671691895,-0.853553295135498,0.3826834261417389,-0.37532997131347656,-0.906126856803894,0.19509035348892212,-0.3826832175254822,-0.9238792061805725,7.549790126404332e-08,-0.07465756684541702,-0.18024007976055145,0.9807852506637573,-0.5132796168327332,-0.7681776285171509,0.3826834261417389,-0.5448946952819824,-0.815492570400238,0.19509035348892212,-0.5555699467658997,-0.8314692378044128,7.549790126404332e-08,-0.10838612914085388,-0.16221177577972412,0.9807852506637573,-0.5448946952819824,-0.815492570400238,-0.282339870929718,-0.21260720491409302,-0.3181895613670349,0.9238795042037964,-0.3086579740047455,-0.46193963289260864,0.8314695954322815,-0.3928472399711609,-0.5879376530647278,0.7071067690849304,-0.46193939447402954,-0.69134122133255,0.5555701851844788,-0.3928471505641937,-0.39284732937812805,0.8314695954322815,-0.4999997317790985,-0.49999985098838806,0.7071067690849304,-0.5879373550415039,-0.5879372954368591,0.5555701851844788,-0.6532810926437378,-0.6532813906669617,0.3826834261417389,-0.6935193538665771,-0.6935193538665771,0.19509035348892212,-0.7071064114570618,-0.707106351852417,7.549790126404332e-08,-0.13794946670532227,-0.13794976472854614,0.9807852506637573,-0.6935193538665771,-0.6935193538665771,-0.282339870929718,-0.2705976963043213,-0.2705979347229004,0.9238795042037964,-0.8154924511909485,-0.5448945760726929,0.19509035348892212,-0.768177330493927,-0.5132798552513123,0.3826834261417389,-0.8314691185951233,-0.5555698275566101,7.549790126404332e-08,-0.16221146285533905,-0.10838642716407776,0.9807852506637573,-0.8154924511909485,-0.5448945760726929,-0.282339870929718,-0.31818926334381104,-0.21260741353034973,0.9238795042037964,-0.46193939447402954,-0.3086581230163574,0.8314695954322815,-0.5879374742507935,-0.39284729957580566,0.7071067690849304,-0.6913411617279053,-0.4619393050670624,0.5555701851844788,-0.5132795572280884,-0.21260738372802734,0.8314695954322815,-0.35355299711227417,-0.14644651114940643,0.9238795042037964,-0.6532811522483826,-0.2705978751182556,0.7071067690849304,-0.7681770920753479,-0.31818920373916626,0.5555701851844788,-0.8535529375076294,-0.35355329513549805,0.3826834261417389,-0.9061266183853149,-0.37532979249954224,0.19509035348892212,-0.9238789081573486,-0.38268303871154785,7.549790126404332e-08,-0.18023976683616638,-0.0746578574180603,0.9807852506637573,-0.9061266183853149,-0.37532979249954224,-0.282339870929718,-0.9619388580322266,-0.1913413405418396,0.19509035348892212,-0.9061269760131836,-0.18023987114429474,0.3826834261417389,-0.98078453540802,-0.19508998095989227,7.549790126404332e-08,-0.19134151935577393,-0.038060225546360016,0.9807852506637573,-0.9619388580322266,-0.1913413405418396,-0.282339870929718,-0.375329852104187,-0.07465773820877075,0.9238795042037964,-0.5448946356773376,-0.10838624089956284,0.8314695954322815,-0.6935195326805115,-0.13794952630996704,0.7071067690849304,-0.8154923915863037,-0.1622113138437271,0.5555701851844788,5.960464477539063e-08,-4.2721556070546285e-08,-0.8600426912307739];
iron_data_ConstData.skydomeNor = [0.5597705245018005,0.0,-0.8286385536193848,0.5489974617958069,-0.10919522494077682,-0.8286385536193848,0.3804132342338562,-0.07565538585186005,-0.921689510345459,0.7101352214813232,0.0,-0.7040314674377441,0.6964934468269348,-0.13852351903915405,-0.7040314674377441,0.8333384394645691,0.0,-0.5527512431144714,0.8173161745071411,-0.16257210075855255,-0.5527512431144714,0.9247413277626038,0.0,-0.3805353045463562,0.9069795608520508,-0.18039490282535553,-0.3805353045463562,0.9809869527816772,0.0,-0.19391460716724396,0.9621570706367493,-0.191381573677063,-0.19391460716724396,0.9998779296875,0.0,-0.01501510664820671,0.9806512594223022,-0.19504378736019135,-0.01501510664820671,0.20096439123153687,0.0,-0.9795831441879272,0.19708853960037231,-0.039185766130685806,-0.9795831441879272,0.0,0.0,-1.0,0.8584856986999512,0.0,0.5128025412559509,0.8419751524925232,-0.1674550622701645,0.5128025412559509,0.3878597319126129,0.0,-0.921689510345459,0.3583483397960663,-0.14841151237487793,-0.921689510345459,0.5171361565589905,-0.2142094224691391,-0.8286385536193848,0.6560564041137695,-0.2717368006706238,-0.7040314674377441,0.7698904275894165,-0.3188879191875458,-0.5527512431144714,0.8543656468391418,-0.35386210680007935,-0.3805353045463562,0.9063386917114258,-0.3754081726074219,-0.19391460716724396,0.9237647652626038,-0.382610559463501,-0.01501510664820671,0.18564409017562866,-0.07690664380788803,-0.9795831441879272,0.7931455373764038,-0.32853174209594727,0.5128025412559509,0.7689138650894165,-0.5137485861778259,-0.3805353045463562,0.8156682252883911,-0.5449995398521423,-0.19391460716724396,0.8313547372817993,-0.5554978847503662,-0.01501510664820671,0.1670888364315033,-0.1116367056965828,-0.9795831441879272,0.713797390460968,-0.4769432544708252,0.5128025412559509,0.32248908281326294,-0.2154911905527115,-0.921689510345459,0.46540728211402893,-0.3109835982322693,-0.8286385536193848,0.5904415845870972,-0.39451277256011963,-0.7040314674377441,0.6928922533988953,-0.46296578645706177,-0.5527512431144714,0.395794540643692,-0.395794540643692,-0.8286385536193848,0.5021210312843323,-0.5021210312843323,-0.7040314674377441,0.5892513990402222,-0.5892513990402222,-0.5527512431144714,0.6538895964622498,-0.6538895964622498,-0.3805353045463562,0.6936551928520203,-0.6936551928520203,-0.19391460716724396,0.7070223093032837,-0.7070223093032837,-0.01501510664820671,0.1420941799879074,-0.1420941799879074,-0.9795831441879272,0.6070436835289001,-0.6070436835289001,0.5128025412559509,0.27426984906196594,-0.27426984906196594,-0.921689510345459,0.5449995398521423,-0.8156682252883911,-0.19391460716724396,0.5554978847503662,-0.8313547372817993,-0.01501510664820671,0.1116367056965828,-0.1670888364315033,-0.9795831441879272,0.4769432544708252,-0.713797390460968,0.5128025412559509,0.2154911905527115,-0.32248908281326294,-0.921689510345459,0.3109835982322693,-0.46540728211402893,-0.8286385536193848,0.39451277256011963,-0.5904415845870972,-0.7040314674377441,0.46296578645706177,-0.6928922533988953,-0.5527512431144714,0.5137485861778259,-0.7689138650894165,-0.3805353045463562,0.2142094224691391,-0.5171361565589905,-0.8286385536193848,0.2717368006706238,-0.6560564041137695,-0.7040314674377441,0.3188879191875458,-0.7698904275894165,-0.5527512431144714,0.35386210680007935,-0.8543656468391418,-0.3805353045463562,0.3754081726074219,-0.9063386917114258,-0.19391460716724396,0.382610559463501,-0.9237647652626038,-0.01501510664820671,0.07690664380788803,-0.18564409017562866,-0.9795831441879272,0.32853174209594727,-0.7931455373764038,0.5128025412559509,0.14841151237487793,-0.3583483397960663,-0.921689510345459,0.191381573677063,-0.9621570706367493,-0.19391460716724396,0.18039490282535553,-0.9069795608520508,-0.3805353045463562,0.19504378736019135,-0.9806512594223022,-0.01501510664820671,0.039185766130685806,-0.19708853960037231,-0.9795831441879272,0.1674550622701645,-0.8419751524925232,0.5128025412559509,0.07565538585186005,-0.3804132342338562,-0.921689510345459,0.10919522494077682,-0.5489974617958069,-0.8286385536193848,0.13852351903915405,-0.6964934468269348,-0.7040314674377441,0.16257210075855255,-0.8173161745071411,-0.5527512431144714,0.0,-0.7101352214813232,-0.7040314674377441,0.0,-0.8333384394645691,-0.5527512431144714,0.0,-0.9247413277626038,-0.3805353045463562,0.0,-0.9809869527816772,-0.19391460716724396,0.0,-0.9998779296875,-0.01501510664820671,0.0,-0.20096439123153687,-0.9795831441879272,0.0,-0.8584856986999512,0.5128025412559509,0.0,-0.3878597319126129,-0.921689510345459,0.0,-0.5597705245018005,-0.8286385536193848,-0.19504378736019135,-0.9806512594223022,-0.01501510664820671,-0.039185766130685806,-0.19708853960037231,-0.9795831441879272,-0.1674550622701645,-0.8419751524925232,0.5128025412559509,-0.07565538585186005,-0.3804132342338562,-0.921689510345459,-0.10919522494077682,-0.5489974617958069,-0.8286385536193848,-0.13852351903915405,-0.6964934468269348,-0.7040314674377441,-0.16257210075855255,-0.8173161745071411,-0.5527512431144714,-0.18039490282535553,-0.9069795608520508,-0.3805353045463562,-0.191381573677063,-0.9621570706367493,-0.19391460716724396,-0.3188879191875458,-0.7698904275894165,-0.5527512431144714,-0.35386210680007935,-0.8543656468391418,-0.3805353045463562,-0.3754081726074219,-0.9063386917114258,-0.19391460716724396,-0.382610559463501,-0.9237647652626038,-0.01501510664820671,-0.07690664380788803,-0.18564409017562866,-0.9795831441879272,-0.32853174209594727,-0.7931455373764038,0.5128025412559509,-0.14841151237487793,-0.3583483397960663,-0.921689510345459,-0.2142094224691391,-0.5171361565589905,-0.8286385536193848,-0.2717368006706238,-0.6560564041137695,-0.7040314674377441,-0.1116367056965828,-0.1670888364315033,-0.9795831441879272,-0.4769432544708252,-0.713797390460968,0.5128025412559509,-0.5554978847503662,-0.8313547372817993,-0.01501510664820671,-0.2154911905527115,-0.32248908281326294,-0.921689510345459,-0.3109835982322693,-0.46540728211402893,-0.8286385536193848,-0.39451277256011963,-0.5904415845870972,-0.7040314674377441,-0.46296578645706177,-0.6928922533988953,-0.5527512431144714,-0.5137485861778259,-0.7689138650894165,-0.3805353045463562,-0.5449995398521423,-0.8156682252883911,-0.19391460716724396,-0.5892513990402222,-0.5892513990402222,-0.5527512431144714,-0.6538895964622498,-0.6538895964622498,-0.3805353045463562,-0.6936551928520203,-0.6936551928520203,-0.19391460716724396,-0.7070223093032837,-0.7070223093032837,-0.01501510664820671,-0.1420941799879074,-0.1420941799879074,-0.9795831441879272,-0.6070436835289001,-0.6070436835289001,0.5128025412559509,-0.27426984906196594,-0.27426984906196594,-0.921689510345459,-0.395794540643692,-0.395794540643692,-0.8286385536193848,-0.5021210312843323,-0.5021210312843323,-0.7040314674377441,-0.713797390460968,-0.4769432544708252,0.5128025412559509,-0.8313547372817993,-0.5554978847503662,-0.01501510664820671,-0.32248908281326294,-0.2154911905527115,-0.921689510345459,-0.46540728211402893,-0.3109835982322693,-0.8286385536193848,-0.5904415845870972,-0.39451277256011963,-0.7040314674377441,-0.6928922533988953,-0.46296578645706177,-0.5527512431144714,-0.7689138650894165,-0.5137485861778259,-0.3805353045463562,-0.8156682252883911,-0.5449995398521423,-0.19391460716724396,-0.1670888364315033,-0.1116367056965828,-0.9795831441879272,-0.8543656468391418,-0.35386210680007935,-0.3805353045463562,-0.9063386917114258,-0.3754081726074219,-0.19391460716724396,-0.9237647652626038,-0.382610559463501,-0.01501510664820671,-0.18564409017562866,-0.07690664380788803,-0.9795831441879272,-0.7931455373764038,-0.32853174209594727,0.5128025412559509,-0.3583483397960663,-0.14841151237487793,-0.921689510345459,-0.5171361565589905,-0.2142094224691391,-0.8286385536193848,-0.6560564041137695,-0.2717368006706238,-0.7040314674377441,-0.7698904275894165,-0.3188879191875458,-0.5527512431144714,-0.3804132342338562,-0.07565538585186005,-0.921689510345459,-0.5489974617958069,-0.10919522494077682,-0.8286385536193848,-0.6964934468269348,-0.13852351903915405,-0.7040314674377441,-0.8173161745071411,-0.16257210075855255,-0.5527512431144714,-0.9069795608520508,-0.18039490282535553,-0.3805353045463562,-0.9621570706367493,-0.191381573677063,-0.19391460716724396,-0.9806512594223022,-0.19504378736019135,-0.01501510664820671,-0.19708853960037231,-0.039185766130685806,-0.9795831441879272,-0.8419751524925232,-0.1674550622701645,0.5128025412559509,-0.9247413277626038,0.0,-0.3805353045463562,-0.9809869527816772,0.0,-0.19391460716724396,-0.9998779296875,0.0,-0.01501510664820671,-0.20096439123153687,0.0,-0.9795831441879272,-0.8584856986999512,0.0,0.5128025412559509,-0.3878597319126129,0.0,-0.921689510345459,-0.5597705245018005,0.0,-0.8286385536193848,-0.7101352214813232,0.0,-0.7040314674377441,-0.8333384394645691,0.0,-0.5527512431144714,-0.5489974617958069,0.10919522494077682,-0.8286385536193848,-0.6964934468269348,0.13852351903915405,-0.7040314674377441,-0.8173161745071411,0.16257210075855255,-0.5527512431144714,-0.9069795608520508,0.18039490282535553,-0.3805353045463562,-0.9621570706367493,0.191381573677063,-0.19391460716724396,-0.9806512594223022,0.19504378736019135,-0.01501510664820671,-0.19708853960037231,0.039185766130685806,-0.9795831441879272,-0.8419751524925232,0.1674550622701645,0.5128025412559509,-0.3804132342338562,0.07565538585186005,-0.921689510345459,-0.9063386917114258,0.3754081726074219,-0.19391460716724396,-0.8543656468391418,0.35386210680007935,-0.3805353045463562,-0.9237647652626038,0.382610559463501,-0.01501510664820671,-0.18564409017562866,0.07690664380788803,-0.9795831441879272,-0.7931455373764038,0.32853174209594727,0.5128025412559509,-0.3583483397960663,0.14841151237487793,-0.921689510345459,-0.5171361565589905,0.2142094224691391,-0.8286385536193848,-0.6560564041137695,0.2717368006706238,-0.7040314674377441,-0.7698904275894165,0.3188879191875458,-0.5527512431144714,-0.5904415845870972,0.39451277256011963,-0.7040314674377441,-0.6928922533988953,0.46296578645706177,-0.5527512431144714,-0.7689138650894165,0.5137485861778259,-0.3805353045463562,-0.8156682252883911,0.5449995398521423,-0.19391460716724396,-0.8313547372817993,0.5554978847503662,-0.01501510664820671,-0.1670888364315033,0.1116367056965828,-0.9795831441879272,-0.713797390460968,0.4769432544708252,0.5128025412559509,-0.32248908281326294,0.2154911905527115,-0.921689510345459,-0.46540728211402893,0.3109835982322693,-0.8286385536193848,-0.7070223093032837,0.7070223093032837,-0.01501510664820671,-0.6936551928520203,0.6936551928520203,-0.19391460716724396,-0.1420941799879074,0.1420941799879074,-0.9795831441879272,-0.6070436835289001,0.6070436835289001,0.5128025412559509,-0.27426984906196594,0.27426984906196594,-0.921689510345459,-0.395794540643692,0.395794540643692,-0.8286385536193848,-0.5021210312843323,0.5021210312843323,-0.7040314674377441,-0.5892513990402222,0.5892513990402222,-0.5527512431144714,-0.6538895964622498,0.6538895964622498,-0.3805353045463562,-0.39451277256011963,0.5904415845870972,-0.7040314674377441,-0.3109835982322693,0.46540728211402893,-0.8286385536193848,-0.46296578645706177,0.6928922533988953,-0.5527512431144714,-0.5137485861778259,0.7689138650894165,-0.3805353045463562,-0.5449995398521423,0.8156682252883911,-0.19391460716724396,-0.5554978847503662,0.8313547372817993,-0.01501510664820671,-0.1116367056965828,0.1670888364315033,-0.9795831441879272,-0.4769432544708252,0.713797390460968,0.5128025412559509,-0.2154911905527115,0.32248908281326294,-0.921689510345459,-0.382610559463501,0.9237647652626038,-0.01501510664820671,-0.07690664380788803,0.18564409017562866,-0.9795831441879272,-0.32853174209594727,0.7931455373764038,0.5128025412559509,-0.14841151237487793,0.3583483397960663,-0.921689510345459,-0.2142094224691391,0.5171361565589905,-0.8286385536193848,-0.2717368006706238,0.6560564041137695,-0.7040314674377441,-0.3188879191875458,0.7698904275894165,-0.5527512431144714,-0.35386210680007935,0.8543656468391418,-0.3805353045463562,-0.3754081726074219,0.9063386917114258,-0.19391460716724396,-0.16257210075855255,0.8173161745071411,-0.5527512431144714,-0.13852351903915405,0.6964934468269348,-0.7040314674377441,-0.18039490282535553,0.9069795608520508,-0.3805353045463562,-0.191381573677063,0.9621570706367493,-0.19391460716724396,-0.19504378736019135,0.9806512594223022,-0.01501510664820671,-0.039185766130685806,0.19708853960037231,-0.9795831441879272,-0.1674550622701645,0.8419751524925232,0.5128025412559509,-0.07565538585186005,0.3804132342338562,-0.921689510345459,-0.10919522494077682,0.5489974617958069,-0.8286385536193848,0.0,0.20096439123153687,-0.9795831441879272,0.0,0.8584856986999512,0.5128025412559509,0.0,0.9998779296875,-0.01501510664820671,0.0,0.3878597319126129,-0.921689510345459,0.0,0.5597705245018005,-0.8286385536193848,0.0,0.7101352214813232,-0.7040314674377441,0.0,0.8333384394645691,-0.5527512431144714,0.0,0.9247413277626038,-0.3805353045463562,0.0,0.9809869527816772,-0.19391460716724396,0.16257210075855255,0.8173161745071411,-0.5527512431144714,0.13852351903915405,0.6964934468269348,-0.7040314674377441,0.18039490282535553,0.9069795608520508,-0.3805353045463562,0.191381573677063,0.9621570706367493,-0.19391460716724396,0.19504378736019135,0.9806512594223022,-0.01501510664820671,0.039185766130685806,0.19708853960037231,-0.9795831441879272,0.1674550622701645,0.8419751524925232,0.5128025412559509,0.07565538585186005,0.3804132342338562,-0.921689510345459,0.10919522494077682,0.5489974617958069,-0.8286385536193848,0.32853174209594727,0.7931455373764038,0.5128025412559509,0.14841151237487793,0.3583483397960663,-0.921689510345459,0.2142094224691391,0.5171361565589905,-0.8286385536193848,0.2717368006706238,0.6560564041137695,-0.7040314674377441,0.3188879191875458,0.7698904275894165,-0.5527512431144714,0.35386210680007935,0.8543656468391418,-0.3805353045463562,0.3754081726074219,0.9063386917114258,-0.19391460716724396,0.382610559463501,0.9237647652626038,-0.01501510664820671,0.07690664380788803,0.18564409017562866,-0.9795831441879272,0.5137485861778259,0.7689138650894165,-0.3805353045463562,0.5449995398521423,0.8156682252883911,-0.19391460716724396,0.5554978847503662,0.8313547372817993,-0.01501510664820671,0.1116367056965828,0.1670888364315033,-0.9795831441879272,0.4769432544708252,0.713797390460968,0.5128025412559509,0.2154911905527115,0.32248908281326294,-0.921689510345459,0.3109835982322693,0.46540728211402893,-0.8286385536193848,0.39451277256011963,0.5904415845870972,-0.7040314674377441,0.46296578645706177,0.6928922533988953,-0.5527512431144714,0.395794540643692,0.395794540643692,-0.8286385536193848,0.5021210312843323,0.5021210312843323,-0.7040314674377441,0.5892513990402222,0.5892513990402222,-0.5527512431144714,0.6538895964622498,0.6538895964622498,-0.3805353045463562,0.6936551928520203,0.6936551928520203,-0.19391460716724396,0.7070223093032837,0.7070223093032837,-0.01501510664820671,0.1420941799879074,0.1420941799879074,-0.9795831441879272,0.6070436835289001,0.6070436835289001,0.5128025412559509,0.27426984906196594,0.27426984906196594,-0.921689510345459,0.8156682252883911,0.5449995398521423,-0.19391460716724396,0.7689138650894165,0.5137485861778259,-0.3805353045463562,0.8313547372817993,0.5554978847503662,-0.01501510664820671,0.1670888364315033,0.1116367056965828,-0.9795831441879272,0.713797390460968,0.4769432544708252,0.5128025412559509,0.32248908281326294,0.2154911905527115,-0.921689510345459,0.46540728211402893,0.3109835982322693,-0.8286385536193848,0.5904415845870972,0.39451277256011963,-0.7040314674377441,0.6928922533988953,0.46296578645706177,-0.5527512431144714,0.5171361565589905,0.2142094224691391,-0.8286385536193848,0.3583483397960663,0.14841151237487793,-0.921689510345459,0.6560564041137695,0.2717368006706238,-0.7040314674377441,0.7698904275894165,0.3188879191875458,-0.5527512431144714,0.8543656468391418,0.35386210680007935,-0.3805353045463562,0.9063386917114258,0.3754081726074219,-0.19391460716724396,0.9237647652626038,0.382610559463501,-0.01501510664820671,0.18564409017562866,0.07690664380788803,-0.9795831441879272,0.7931455373764038,0.32853174209594727,0.5128025412559509,0.9621570706367493,0.191381573677063,-0.19391460716724396,0.9069795608520508,0.18039490282535553,-0.3805353045463562,0.9806512594223022,0.19504378736019135,-0.01501510664820671,0.19708853960037231,0.039185766130685806,-0.9795831441879272,0.8419751524925232,0.1674855798482895,0.5128025412559509,0.3804132342338562,0.07565538585186005,-0.921689510345459,0.5489974617958069,0.10919522494077682,-0.8286385536193848,0.6964934468269348,0.13852351903915405,-0.7040314674377441,0.8173161745071411,0.16257210075855255,-0.5527512431144714,0.0,0.0,0.999969482421875];
iron_data_ConstData.sphereIndices = [0,1,2,0,2,3,4,5,6,4,6,7,8,9,10,11,12,13,14,15,16,14,16,17,18,19,20,18,20,21,22,23,24,22,24,25,26,27,28,26,28,29,30,31,32,33,34,35,33,35,36,37,38,39,37,39,40,41,42,43,41,43,44,45,46,47,45,47,48,49,50,51,49,51,52,53,54,55,53,55,56,57,58,59,60,61,62,60,62,63,64,65,66,64,66,67,68,69,70,68,70,71,72,73,74,72,74,75,76,77,78,79,80,81,82,83,84,82,84,85,86,87,88,86,88,89,90,91,92,90,92,93,94,95,96,94,96,97,98,99,100,98,100,101,102,103,104,105,106,107,108,109,110,108,110,111,112,113,114,112,114,115,116,117,118,116,118,119,120,121,122,123,124,125,126,127,128,126,128,129,130,131,132,130,132,133,134,135,136,134,136,137,138,139,140,138,140,141,142,143,144,142,144,145,146,147,148,146,148,149,150,151,152,150,152,153,154,155,156,154,156,157,158,159,160,158,160,161,162,163,164,162,164,165,166,167,168,166,168,169,170,171,172,170,172,173,174,175,176,177,178,179,180,181,182,180,182,183,184,185,186,184,186,187,188,189,190,188,190,191,192,193,194,195,196,197,198,199,200,198,200,201,202,203,204,202,204,205,206,207,208,206,208,209,210,211,212,210,212,213,214,215,216,214,216,217,218,219,220,221,222,223,224,225,226,224,226,227,228,229,230,228,230,231,232,233,234,232,234,235,236,237,238,236,238,239,240,241,242,243,244,245,243,245,246,247,248,249,247,249,250,251,252,253,251,253,254,255,256,257,255,257,258,259,260,261,259,261,262,263,264,265,263,265,266,267,268,269,270,271,272,270,272,273,274,275,276,274,276,277,278,279,280,278,280,281,282,283,284,282,284,285,286,287,288,286,288,289,290,291,292,293,294,295,296,297,298,296,298,299,300,301,302,300,302,303,304,305,306,304,306,307,308,309,310,308,310,311,312,313,314,315,316,317,318,319,320,318,320,321,322,323,324,322,324,325,326,327,328,326,328,329,330,331,332,330,332,333,334,335,336,337,338,339,340,341,342,340,342,343,344,345,346,344,346,347,348,349,350,348,350,351,352,353,354,352,354,355,356,357,358,356,358,359,360,361,362,363,364,365,363,365,366,367,368,369,367,369,370,371,372,373,371,373,374,375,376,377,375,377,378,379,380,381,379,381,382,383,384,385,383,385,386,387,388,389,390,391,392,390,392,393,394,395,396,394,396,397,398,399,400,398,400,401,402,403,404,402,404,405,406,407,408,409,410,411,412,413,414,412,414,415,416,417,418,416,418,419,420,421,422,420,422,423,424,425,426,424,426,427,428,429,430,428,430,431,432,433,434,435,436,437,438,439,440,438,440,441,442,443,444,442,444,445,446,447,448,446,448,449,450,451,452,453,454,455,456,457,458,456,458,459,460,461,462,460,462,463,464,465,466,464,466,467,468,469,470,468,470,471,472,473,474,472,474,475,476,477,478,476,478,479];
iron_data_ConstData.spherePos = [0.0,0.4619397521018982,-0.19134175777435303,0.0,0.5,-2.1855694143368964e-08,0.19134169816970825,0.4619397521018982,-2.1855694143368964e-08,0.1767766773700714,0.4267766773700714,-0.19134175777435303,0.0,0.4619397521018982,0.19134171307086945,0.0,0.3535533845424652,0.3535533845424652,0.13529899716377258,0.3266407251358032,0.3535533845424652,0.1767766773700714,0.4267766773700714,0.19134171307086945,0.0,0.19134172797203064,0.4619397521018982,-6.975096056294205e-08,4.660612162865618e-08,0.5,0.0732232853770256,0.1767767071723938,0.4619397521018982,0.0,7.549790126404332e-08,-0.5,0.0,0.19134174287319183,-0.4619397521018982,0.0732232928276062,0.1767767071723938,-0.4619397521018982,0.0,0.3535533845424652,-0.3535533845424652,0.0,0.4619397521018982,-0.19134175777435303,0.1767766773700714,0.4267766773700714,-0.19134175777435303,0.13529899716377258,0.3266407251358032,-0.3535533845424652,0.0,0.5,-2.1855694143368964e-08,0.0,0.4619397521018982,0.19134171307086945,0.1767766773700714,0.4267766773700714,0.19134171307086945,0.19134169816970825,0.4619397521018982,-2.1855694143368964e-08,0.0,0.3535533845424652,0.3535533845424652,0.0,0.19134172797203064,0.4619397521018982,0.0732232853770256,0.1767767071723938,0.4619397521018982,0.13529899716377258,0.3266407251358032,0.3535533845424652,0.0,0.19134174287319183,-0.4619397521018982,0.0,0.3535533845424652,-0.3535533845424652,0.13529899716377258,0.3266407251358032,-0.3535533845424652,0.0732232928276062,0.1767767071723938,-0.4619397521018982,0.0,7.549790126404332e-08,-0.5,0.0732232928276062,0.1767767071723938,-0.4619397521018982,0.13529899716377258,0.13529902696609497,-0.4619397521018982,0.13529899716377258,0.3266407251358032,-0.3535533845424652,0.1767766773700714,0.4267766773700714,-0.19134175777435303,0.32664069533348083,0.3266407251358032,-0.19134175777435303,0.24999994039535522,0.2499999850988388,-0.3535533845424652,0.19134169816970825,0.4619397521018982,-2.1855694143368964e-08,0.1767766773700714,0.4267766773700714,0.19134171307086945,0.32664069533348083,0.3266407251358032,0.19134171307086945,0.3535533547401428,0.3535533845424652,-2.1855694143368964e-08,0.13529899716377258,0.3266407251358032,0.3535533845424652,0.0732232853770256,0.1767767071723938,0.4619397521018982,0.1352989822626114,0.13529904186725616,0.4619397521018982,0.24999994039535522,0.2499999850988388,0.3535533845424652,0.0732232928276062,0.1767767071723938,-0.4619397521018982,0.13529899716377258,0.3266407251358032,-0.3535533845424652,0.24999994039535522,0.2499999850988388,-0.3535533845424652,0.13529899716377258,0.13529902696609497,-0.4619397521018982,0.1767766773700714,0.4267766773700714,-0.19134175777435303,0.19134169816970825,0.4619397521018982,-2.1855694143368964e-08,0.3535533547401428,0.3535533845424652,-2.1855694143368964e-08,0.32664069533348083,0.3266407251358032,-0.19134175777435303,0.1767766773700714,0.4267766773700714,0.19134171307086945,0.13529899716377258,0.3266407251358032,0.3535533845424652,0.24999994039535522,0.2499999850988388,0.3535533845424652,0.32664069533348083,0.3266407251358032,0.19134171307086945,0.0732232853770256,0.1767767071723938,0.4619397521018982,-6.975096056294205e-08,4.660612162865618e-08,0.5,0.1352989822626114,0.13529904186725616,0.4619397521018982,0.24999994039535522,0.2499999850988388,0.3535533845424652,0.1352989822626114,0.13529904186725616,0.4619397521018982,0.17677663266658783,0.07322334498167038,0.4619397521018982,0.32664063572883606,0.13529902696609497,0.3535533845424652,0.13529899716377258,0.13529902696609497,-0.4619397521018982,0.24999994039535522,0.2499999850988388,-0.3535533845424652,0.32664063572883606,0.13529902696609497,-0.3535533845424652,0.17677664756774902,0.07322331517934799,-0.4619397521018982,0.32664069533348083,0.3266407251358032,-0.19134175777435303,0.3535533547401428,0.3535533845424652,-2.1855694143368964e-08,0.4619396924972534,0.19134169816970825,-2.1855694143368964e-08,0.42677661776542664,0.1767766773700714,-0.19134175777435303,0.32664069533348083,0.3266407251358032,0.19134171307086945,0.24999994039535522,0.2499999850988388,0.3535533845424652,0.32664063572883606,0.13529902696609497,0.3535533845424652,0.42677661776542664,0.1767766773700714,0.19134171307086945,0.1352989822626114,0.13529904186725616,0.4619397521018982,-6.975096056294205e-08,4.660612162865618e-08,0.5,0.17677663266658783,0.07322334498167038,0.4619397521018982,0.0,7.549790126404332e-08,-0.5,0.13529899716377258,0.13529902696609497,-0.4619397521018982,0.17677664756774902,0.07322331517934799,-0.4619397521018982,0.24999994039535522,0.2499999850988388,-0.3535533845424652,0.32664069533348083,0.3266407251358032,-0.19134175777435303,0.42677661776542664,0.1767766773700714,-0.19134175777435303,0.32664063572883606,0.13529902696609497,-0.3535533845424652,0.3535533547401428,0.3535533845424652,-2.1855694143368964e-08,0.32664069533348083,0.3266407251358032,0.19134171307086945,0.42677661776542664,0.1767766773700714,0.19134171307086945,0.4619396924972534,0.19134169816970825,-2.1855694143368964e-08,0.17677664756774902,0.07322331517934799,-0.4619397521018982,0.32664063572883606,0.13529902696609497,-0.3535533845424652,0.35355326533317566,3.554926308879658e-08,-0.3535533845424652,0.19134163856506348,2.809868249187275e-08,-0.4619397521018982,0.42677661776542664,0.1767766773700714,-0.19134175777435303,0.4619396924972534,0.19134169816970825,-2.1855694143368964e-08,0.49999988079071045,5.746940701101266e-09,-2.1855694143368964e-08,0.46193966269493103,5.746940701101266e-09,-0.19134175777435303,0.42677661776542664,0.1767766773700714,0.19134171307086945,0.32664063572883606,0.13529902696609497,0.3535533845424652,0.35355326533317566,3.554926308879658e-08,0.3535533845424652,0.46193966269493103,5.746940701101266e-09,0.19134171307086945,0.17677663266658783,0.07322334498167038,0.4619397521018982,-6.975096056294205e-08,4.660612162865618e-08,0.5,0.19134163856506348,6.535158547649189e-08,0.4619397521018982,0.0,7.549790126404332e-08,-0.5,0.17677664756774902,0.07322331517934799,-0.4619397521018982,0.19134163856506348,2.809868249187275e-08,-0.4619397521018982,0.32664063572883606,0.13529902696609497,-0.3535533845424652,0.42677661776542664,0.1767766773700714,-0.19134175777435303,0.46193966269493103,5.746940701101266e-09,-0.19134175777435303,0.35355326533317566,3.554926308879658e-08,-0.3535533845424652,0.4619396924972534,0.19134169816970825,-2.1855694143368964e-08,0.42677661776542664,0.1767766773700714,0.19134171307086945,0.46193966269493103,5.746940701101266e-09,0.19134171307086945,0.49999988079071045,5.746940701101266e-09,-2.1855694143368964e-08,0.32664063572883606,0.13529902696609497,0.3535533845424652,0.17677663266658783,0.07322334498167038,0.4619397521018982,0.19134163856506348,6.535158547649189e-08,0.4619397521018982,0.35355326533317566,3.554926308879658e-08,0.3535533845424652,0.19134163856506348,6.535158547649189e-08,0.4619397521018982,-6.975096056294205e-08,4.660612162865618e-08,0.5,0.17677661776542664,-0.07322321087121964,0.4619397521018982,0.0,7.549790126404332e-08,-0.5,0.19134163856506348,2.809868249187275e-08,-0.4619397521018982,0.17677660286426544,-0.07322324812412262,-0.4619397521018982,0.35355326533317566,3.554926308879658e-08,-0.3535533845424652,0.46193966269493103,5.746940701101266e-09,-0.19134175777435303,0.42677655816078186,-0.17677666246891022,-0.19134175777435303,0.3266405761241913,-0.135298952460289,-0.3535533845424652,0.49999988079071045,5.746940701101266e-09,-2.1855694143368964e-08,0.46193966269493103,5.746940701101266e-09,0.19134171307086945,0.42677655816078186,-0.17677666246891022,0.19134171307086945,0.46193960309028625,-0.19134168326854706,-2.1855694143368964e-08,0.35355326533317566,3.554926308879658e-08,0.3535533845424652,0.19134163856506348,6.535158547649189e-08,0.4619397521018982,0.17677661776542664,-0.07322321087121964,0.4619397521018982,0.3266405761241913,-0.135298952460289,0.3535533845424652,0.19134163856506348,2.809868249187275e-08,-0.4619397521018982,0.35355326533317566,3.554926308879658e-08,-0.3535533845424652,0.3266405761241913,-0.135298952460289,-0.3535533845424652,0.17677660286426544,-0.07322324812412262,-0.4619397521018982,0.46193966269493103,5.746940701101266e-09,-0.19134175777435303,0.49999988079071045,5.746940701101266e-09,-2.1855694143368964e-08,0.46193960309028625,-0.19134168326854706,-2.1855694143368964e-08,0.42677655816078186,-0.17677666246891022,-0.19134175777435303,0.46193966269493103,5.746940701101266e-09,0.19134171307086945,0.35355326533317566,3.554926308879658e-08,0.3535533845424652,0.3266405761241913,-0.135298952460289,0.3535533845424652,0.42677655816078186,-0.17677666246891022,0.19134171307086945,0.3266405761241913,-0.135298952460289,-0.3535533845424652,0.42677655816078186,-0.17677666246891022,-0.19134175777435303,0.3266405761241913,-0.32664066553115845,-0.19134175777435303,0.24999982118606567,-0.24999988079071045,-0.3535533845424652,0.46193960309028625,-0.19134168326854706,-2.1855694143368964e-08,0.42677655816078186,-0.17677666246891022,0.19134171307086945,0.3266405761241913,-0.32664066553115845,0.19134171307086945,0.3535532057285309,-0.35355329513549805,-2.1855694143368964e-08,0.3266405761241913,-0.135298952460289,0.3535533845424652,0.17677661776542664,-0.07322321087121964,0.4619397521018982,0.135298952460289,-0.13529890775680542,0.4619397521018982,0.24999982118606567,-0.24999988079071045,0.3535533845424652,0.17677660286426544,-0.07322324812412262,-0.4619397521018982,0.3266405761241913,-0.135298952460289,-0.3535533845424652,0.24999982118606567,-0.24999988079071045,-0.3535533845424652,0.1352989226579666,-0.1352989375591278,-0.4619397521018982,0.42677655816078186,-0.17677666246891022,-0.19134175777435303,0.46193960309028625,-0.19134168326854706,-2.1855694143368964e-08,0.3535532057285309,-0.35355329513549805,-2.1855694143368964e-08,0.3266405761241913,-0.32664066553115845,-0.19134175777435303,0.42677655816078186,-0.17677666246891022,0.19134171307086945,0.3266405761241913,-0.135298952460289,0.3535533845424652,0.24999982118606567,-0.24999988079071045,0.3535533845424652,0.3266405761241913,-0.32664066553115845,0.19134171307086945,0.17677661776542664,-0.07322321087121964,0.4619397521018982,-6.975096056294205e-08,4.660612162865618e-08,0.5,0.135298952460289,-0.13529890775680542,0.4619397521018982,0.0,7.549790126404332e-08,-0.5,0.17677660286426544,-0.07322324812412262,-0.4619397521018982,0.1352989226579666,-0.1352989375591278,-0.4619397521018982,0.1352989226579666,-0.1352989375591278,-0.4619397521018982,0.24999982118606567,-0.24999988079071045,-0.3535533845424652,0.13529886305332184,-0.3266405761241913,-0.3535533845424652,0.07322320342063904,-0.17677657306194305,-0.4619397521018982,0.3266405761241913,-0.32664066553115845,-0.19134175777435303,0.3535532057285309,-0.35355329513549805,-2.1855694143368964e-08,0.19134151935577393,-0.46193960309028625,-2.1855694143368964e-08,0.17677652835845947,-0.42677655816078186,-0.19134175777435303,0.3266405761241913,-0.32664066553115845,0.19134171307086945,0.24999982118606567,-0.24999988079071045,0.3535533845424652,0.13529886305332184,-0.3266405761241913,0.3535533845424652,0.17677652835845947,-0.42677655816078186,0.19134171307086945,0.135298952460289,-0.13529890775680542,0.4619397521018982,-6.975096056294205e-08,4.660612162865618e-08,0.5,0.07322324067354202,-0.17677655816078186,0.4619397521018982,0.0,7.549790126404332e-08,-0.5,0.1352989226579666,-0.1352989375591278,-0.4619397521018982,0.07322320342063904,-0.17677657306194305,-0.4619397521018982,0.24999982118606567,-0.24999988079071045,-0.3535533845424652,0.3266405761241913,-0.32664066553115845,-0.19134175777435303,0.17677652835845947,-0.42677655816078186,-0.19134175777435303,0.13529886305332184,-0.3266405761241913,-0.3535533845424652,0.3535532057285309,-0.35355329513549805,-2.1855694143368964e-08,0.3266405761241913,-0.32664066553115845,0.19134171307086945,0.17677652835845947,-0.42677655816078186,0.19134171307086945,0.19134151935577393,-0.46193960309028625,-2.1855694143368964e-08,0.24999982118606567,-0.24999988079071045,0.3535533845424652,0.135298952460289,-0.13529890775680542,0.4619397521018982,0.07322324067354202,-0.17677655816078186,0.4619397521018982,0.13529886305332184,-0.3266405761241913,0.3535533845424652,0.17677652835845947,-0.42677655816078186,-0.19134175777435303,0.19134151935577393,-0.46193960309028625,-2.1855694143368964e-08,-1.630022552490118e-07,-0.4999997615814209,-2.1855694143368964e-08,-1.4810109405516414e-07,-0.46193957328796387,-0.19134175777435303,0.17677652835845947,-0.42677655816078186,0.19134171307086945,0.13529886305332184,-0.3266405761241913,0.3535533845424652,-1.3319993286131648e-07,-0.3535531759262085,0.3535533845424652,-1.4810109405516414e-07,-0.46193957328796387,0.19134171307086945,0.07322324067354202,-0.17677655816078186,0.4619397521018982,-6.975096056294205e-08,4.660612162865618e-08,0.5,-3.634237799587936e-08,-0.1913415640592575,0.4619397521018982,0.0,7.549790126404332e-08,-0.5,0.07322320342063904,-0.17677657306194305,-0.4619397521018982,-8.104586157742233e-08,-0.1913415640592575,-0.4619397521018982,0.13529886305332184,-0.3266405761241913,-0.3535533845424652,0.17677652835845947,-0.42677655816078186,-0.19134175777435303,-1.4810109405516414e-07,-0.46193957328796387,-0.19134175777435303,-1.3319993286131648e-07,-0.3535531759262085,-0.3535533845424652,0.19134151935577393,-0.46193960309028625,-2.1855694143368964e-08,0.17677652835845947,-0.42677655816078186,0.19134171307086945,-1.4810109405516414e-07,-0.46193957328796387,0.19134171307086945,-1.630022552490118e-07,-0.4999997615814209,-2.1855694143368964e-08,0.13529886305332184,-0.3266405761241913,0.3535533845424652,0.07322324067354202,-0.17677655816078186,0.4619397521018982,-3.634237799587936e-08,-0.1913415640592575,0.4619397521018982,-1.3319993286131648e-07,-0.3535531759262085,0.3535533845424652,0.07322320342063904,-0.17677657306194305,-0.4619397521018982,0.13529886305332184,-0.3266405761241913,-0.3535533845424652,-1.3319993286131648e-07,-0.3535531759262085,-0.3535533845424652,-8.104586157742233e-08,-0.1913415640592575,-0.4619397521018982,0.0,7.549790126404332e-08,-0.5,-8.104586157742233e-08,-0.1913415640592575,-0.4619397521018982,-0.07322335243225098,-0.17677651345729828,-0.4619397521018982,-1.3319993286131648e-07,-0.3535531759262085,-0.3535533845424652,-1.4810109405516414e-07,-0.46193957328796387,-0.19134175777435303,-0.17677679657936096,-0.4267764389514923,-0.19134175777435303,-0.13529910147190094,-0.3266404867172241,-0.3535533845424652,-1.630022552490118e-07,-0.4999997615814209,-2.1855694143368964e-08,-1.4810109405516414e-07,-0.46193957328796387,0.19134171307086945,-0.17677679657936096,-0.4267764389514923,0.19134171307086945,-0.1913418173789978,-0.4619394838809967,-2.1855694143368964e-08,-1.3319993286131648e-07,-0.3535531759262085,0.3535533845424652,-3.634237799587936e-08,-0.1913415640592575,0.4619397521018982,-0.07322331517934799,-0.17677652835845947,0.4619397521018982,-0.13529910147190094,-0.3266404867172241,0.3535533845424652,-8.104586157742233e-08,-0.1913415640592575,-0.4619397521018982,-1.3319993286131648e-07,-0.3535531759262085,-0.3535533845424652,-0.13529910147190094,-0.3266404867172241,-0.3535533845424652,-0.07322335243225098,-0.17677651345729828,-0.4619397521018982,-1.4810109405516414e-07,-0.46193957328796387,-0.19134175777435303,-1.630022552490118e-07,-0.4999997615814209,-2.1855694143368964e-08,-0.1913418173789978,-0.4619394838809967,-2.1855694143368964e-08,-0.17677679657936096,-0.4267764389514923,-0.19134175777435303,-1.4810109405516414e-07,-0.46193957328796387,0.19134171307086945,-1.3319993286131648e-07,-0.3535531759262085,0.3535533845424652,-0.13529910147190094,-0.3266404867172241,0.3535533845424652,-0.17677679657936096,-0.4267764389514923,0.19134171307086945,-3.634237799587936e-08,-0.1913415640592575,0.4619397521018982,-6.975096056294205e-08,4.660612162865618e-08,0.5,-0.07322331517934799,-0.17677652835845947,0.4619397521018982,-0.1913418173789978,-0.4619394838809967,-2.1855694143368964e-08,-0.17677679657936096,-0.4267764389514923,0.19134171307086945,-0.3266407549381256,-0.32664042711257935,0.19134171307086945,-0.3535534143447876,-0.35355305671691895,-2.1855694143368964e-08,-0.13529910147190094,-0.3266404867172241,0.3535533845424652,-0.07322331517934799,-0.17677652835845947,0.4619397521018982,-0.13529899716377258,-0.13529886305332184,0.4619397521018982,-0.25,-0.24999970197677612,0.3535533845424652,-0.07322335243225098,-0.17677651345729828,-0.4619397521018982,-0.13529910147190094,-0.3266404867172241,-0.3535533845424652,-0.25,-0.24999970197677612,-0.3535533845424652,-0.13529902696609497,-0.13529883325099945,-0.4619397521018982,-0.17677679657936096,-0.4267764389514923,-0.19134175777435303,-0.1913418173789978,-0.4619394838809967,-2.1855694143368964e-08,-0.3535534143447876,-0.35355305671691895,-2.1855694143368964e-08,-0.3266407549381256,-0.32664042711257935,-0.19134175777435303,-0.17677679657936096,-0.4267764389514923,0.19134171307086945,-0.13529910147190094,-0.3266404867172241,0.3535533845424652,-0.25,-0.24999970197677612,0.3535533845424652,-0.3266407549381256,-0.32664042711257935,0.19134171307086945,-0.07322331517934799,-0.17677652835845947,0.4619397521018982,-6.975096056294205e-08,4.660612162865618e-08,0.5,-0.13529899716377258,-0.13529886305332184,0.4619397521018982,0.0,7.549790126404332e-08,-0.5,-0.07322335243225098,-0.17677651345729828,-0.4619397521018982,-0.13529902696609497,-0.13529883325099945,-0.4619397521018982,-0.13529910147190094,-0.3266404867172241,-0.3535533845424652,-0.17677679657936096,-0.4267764389514923,-0.19134175777435303,-0.3266407549381256,-0.32664042711257935,-0.19134175777435303,-0.25,-0.24999970197677612,-0.3535533845424652,-0.13529902696609497,-0.13529883325099945,-0.4619397521018982,-0.25,-0.24999970197677612,-0.3535533845424652,-0.32664066553115845,-0.1352987438440323,-0.3535533845424652,-0.17677664756774902,-0.07322311401367188,-0.4619397521018982,-0.3266407549381256,-0.32664042711257935,-0.19134175777435303,-0.3535534143447876,-0.35355305671691895,-2.1855694143368964e-08,-0.4619396924972534,-0.19134138524532318,-2.1855694143368964e-08,-0.42677661776542664,-0.17677639424800873,-0.19134175777435303,-0.3266407549381256,-0.32664042711257935,0.19134171307086945,-0.25,-0.24999970197677612,0.3535533845424652,-0.32664066553115845,-0.1352987438440323,0.3535533845424652,-0.42677661776542664,-0.17677639424800873,0.19134171307086945,-0.13529899716377258,-0.13529886305332184,0.4619397521018982,-6.975096056294205e-08,4.660612162865618e-08,0.5,-0.17677663266658783,-0.07322315126657486,0.4619397521018982,0.0,7.549790126404332e-08,-0.5,-0.13529902696609497,-0.13529883325099945,-0.4619397521018982,-0.17677664756774902,-0.07322311401367188,-0.4619397521018982,-0.25,-0.24999970197677612,-0.3535533845424652,-0.3266407549381256,-0.32664042711257935,-0.19134175777435303,-0.42677661776542664,-0.17677639424800873,-0.19134175777435303,-0.32664066553115845,-0.1352987438440323,-0.3535533845424652,-0.3535534143447876,-0.35355305671691895,-2.1855694143368964e-08,-0.3266407549381256,-0.32664042711257935,0.19134171307086945,-0.42677661776542664,-0.17677639424800873,0.19134171307086945,-0.4619396924972534,-0.19134138524532318,-2.1855694143368964e-08,-0.25,-0.24999970197677612,0.3535533845424652,-0.13529899716377258,-0.13529886305332184,0.4619397521018982,-0.17677663266658783,-0.07322315126657486,0.4619397521018982,-0.32664066553115845,-0.1352987438440323,0.3535533845424652,-0.42677661776542664,-0.17677639424800873,0.19134171307086945,-0.32664066553115845,-0.1352987438440323,0.3535533845424652,-0.35355323553085327,2.4416550559180905e-07,0.3535533845424652,-0.46193960309028625,2.590666667856567e-07,0.19134171307086945,-0.17677663266658783,-0.07322315126657486,0.4619397521018982,-6.975096056294205e-08,4.660612162865618e-08,0.5,-0.19134162366390228,1.2495623025188252e-07,0.4619397521018982,0.0,7.549790126404332e-08,-0.5,-0.17677664756774902,-0.07322311401367188,-0.4619397521018982,-0.19134162366390228,1.6965971383342549e-07,-0.4619397521018982,-0.32664066553115845,-0.1352987438440323,-0.3535533845424652,-0.42677661776542664,-0.17677639424800873,-0.19134175777435303,-0.46193960309028625,2.590666667856567e-07,-0.19134175777435303,-0.35355323553085327,2.4416550559180905e-07,-0.3535533845424652,-0.4619396924972534,-0.19134138524532318,-2.1855694143368964e-08,-0.42677661776542664,-0.17677639424800873,0.19134171307086945,-0.46193960309028625,2.590666667856567e-07,0.19134171307086945,-0.4999998211860657,3.037701503671997e-07,-2.1855694143368964e-08,-0.32664066553115845,-0.1352987438440323,0.3535533845424652,-0.17677663266658783,-0.07322315126657486,0.4619397521018982,-0.19134162366390228,1.2495623025188252e-07,0.4619397521018982,-0.35355323553085327,2.4416550559180905e-07,0.3535533845424652,-0.17677664756774902,-0.07322311401367188,-0.4619397521018982,-0.32664066553115845,-0.1352987438440323,-0.3535533845424652,-0.35355323553085327,2.4416550559180905e-07,-0.3535533845424652,-0.19134162366390228,1.6965971383342549e-07,-0.4619397521018982,-0.42677661776542664,-0.17677639424800873,-0.19134175777435303,-0.4619396924972534,-0.19134138524532318,-2.1855694143368964e-08,-0.4999998211860657,3.037701503671997e-07,-2.1855694143368964e-08,-0.46193960309028625,2.590666667856567e-07,-0.19134175777435303,0.0,7.549790126404332e-08,-0.5,-0.19134162366390228,1.6965971383342549e-07,-0.4619397521018982,-0.17677657306194305,0.07322343438863754,-0.4619397521018982,-0.35355323553085327,2.4416550559180905e-07,-0.3535533845424652,-0.46193960309028625,2.590666667856567e-07,-0.19134175777435303,-0.4267764687538147,0.17677688598632812,-0.19134175777435303,-0.3266405165195465,0.1352991908788681,-0.3535533845424652,-0.4999998211860657,3.037701503671997e-07,-2.1855694143368964e-08,-0.46193960309028625,2.590666667856567e-07,0.19134171307086945,-0.4267764687538147,0.17677688598632812,0.19134171307086945,-0.4619394838809967,0.19134193658828735,-2.1855694143368964e-08,-0.35355323553085327,2.4416550559180905e-07,0.3535533845424652,-0.19134162366390228,1.2495623025188252e-07,0.4619397521018982,-0.17677658796310425,0.07322338968515396,0.4619397521018982,-0.3266405165195465,0.1352991908788681,0.3535533845424652,-0.19134162366390228,1.6965971383342549e-07,-0.4619397521018982,-0.35355323553085327,2.4416550559180905e-07,-0.3535533845424652,-0.3266405165195465,0.1352991908788681,-0.3535533845424652,-0.17677657306194305,0.07322343438863754,-0.4619397521018982,-0.46193960309028625,2.590666667856567e-07,-0.19134175777435303,-0.4999998211860657,3.037701503671997e-07,-2.1855694143368964e-08,-0.4619394838809967,0.19134193658828735,-2.1855694143368964e-08,-0.4267764687538147,0.17677688598632812,-0.19134175777435303,-0.46193960309028625,2.590666667856567e-07,0.19134171307086945,-0.35355323553085327,2.4416550559180905e-07,0.3535533845424652,-0.3266405165195465,0.1352991908788681,0.3535533845424652,-0.4267764687538147,0.17677688598632812,0.19134171307086945,-0.19134162366390228,1.2495623025188252e-07,0.4619397521018982,-6.975096056294205e-08,4.660612162865618e-08,0.5,-0.17677658796310425,0.07322338968515396,0.4619397521018982,-0.3266405165195465,0.1352991908788681,0.3535533845424652,-0.17677658796310425,0.07322338968515396,0.4619397521018982,-0.1352989226579666,0.13529905676841736,0.4619397521018982,-0.2499997317790985,0.2500000596046448,0.3535533845424652,-0.17677657306194305,0.07322343438863754,-0.4619397521018982,-0.3266405165195465,0.1352991908788681,-0.3535533845424652,-0.2499997317790985,0.2500000596046448,-0.3535533845424652,-0.13529889285564423,0.13529910147190094,-0.4619397521018982,-0.4267764687538147,0.17677688598632812,-0.19134175777435303,-0.4619394838809967,0.19134193658828735,-2.1855694143368964e-08,-0.35355302691459656,0.35355350375175476,-2.1855694143368964e-08,-0.32664045691490173,0.3266408443450928,-0.19134175777435303,-0.4267764687538147,0.17677688598632812,0.19134171307086945,-0.3266405165195465,0.1352991908788681,0.3535533845424652,-0.2499997317790985,0.2500000596046448,0.3535533845424652,-0.32664045691490173,0.3266408443450928,0.19134171307086945,-0.17677658796310425,0.07322338968515396,0.4619397521018982,-6.975096056294205e-08,4.660612162865618e-08,0.5,-0.1352989226579666,0.13529905676841736,0.4619397521018982,0.0,7.549790126404332e-08,-0.5,-0.17677657306194305,0.07322343438863754,-0.4619397521018982,-0.13529889285564423,0.13529910147190094,-0.4619397521018982,-0.3266405165195465,0.1352991908788681,-0.3535533845424652,-0.4267764687538147,0.17677688598632812,-0.19134175777435303,-0.32664045691490173,0.3266408443450928,-0.19134175777435303,-0.2499997317790985,0.2500000596046448,-0.3535533845424652,-0.4619394838809967,0.19134193658828735,-2.1855694143368964e-08,-0.4267764687538147,0.17677688598632812,0.19134171307086945,-0.32664045691490173,0.3266408443450928,0.19134171307086945,-0.35355302691459656,0.35355350375175476,-2.1855694143368964e-08,-0.13529889285564423,0.13529910147190094,-0.4619397521018982,-0.2499997317790985,0.2500000596046448,-0.3535533845424652,-0.13529875874519348,0.32664069533348083,-0.3535533845424652,-0.07322317361831665,0.1767767071723938,-0.4619397521018982,-0.32664045691490173,0.3266408443450928,-0.19134175777435303,-0.35355302691459656,0.35355350375175476,-2.1855694143368964e-08,-0.1913413554430008,0.4619397521018982,-2.1855694143368964e-08,-0.17677639424800873,0.426776647567749,-0.19134175777435303,-0.32664045691490173,0.3266408443450928,0.19134171307086945,-0.2499997317790985,0.2500000596046448,0.3535533845424652,-0.13529875874519348,0.32664069533348083,0.3535533845424652,-0.17677639424800873,0.426776647567749,0.19134171307086945,-0.1352989226579666,0.13529905676841736,0.4619397521018982,-6.975096056294205e-08,4.660612162865618e-08,0.5,-0.07322321832180023,0.1767766922712326,0.4619397521018982,0.0,7.549790126404332e-08,-0.5,-0.13529889285564423,0.13529910147190094,-0.4619397521018982,-0.07322317361831665,0.1767767071723938,-0.4619397521018982,-0.2499997317790985,0.2500000596046448,-0.3535533845424652,-0.32664045691490173,0.3266408443450928,-0.19134175777435303,-0.17677639424800873,0.426776647567749,-0.19134175777435303,-0.13529875874519348,0.32664069533348083,-0.3535533845424652,-0.35355302691459656,0.35355350375175476,-2.1855694143368964e-08,-0.32664045691490173,0.3266408443450928,0.19134171307086945,-0.17677639424800873,0.426776647567749,0.19134171307086945,-0.1913413554430008,0.4619397521018982,-2.1855694143368964e-08,-0.2499997317790985,0.2500000596046448,0.3535533845424652,-0.1352989226579666,0.13529905676841736,0.4619397521018982,-0.07322321832180023,0.1767766922712326,0.4619397521018982,-0.13529875874519348,0.32664069533348083,0.3535533845424652,-0.07322321832180023,0.1767766922712326,0.4619397521018982,-6.975096056294205e-08,4.660612162865618e-08,0.5,0.0,0.19134172797203064,0.4619397521018982,0.0,7.549790126404332e-08,-0.5,-0.07322317361831665,0.1767767071723938,-0.4619397521018982,0.0,0.19134174287319183,-0.4619397521018982,-0.13529875874519348,0.32664069533348083,-0.3535533845424652,-0.17677639424800873,0.426776647567749,-0.19134175777435303,0.0,0.4619397521018982,-0.19134175777435303,0.0,0.3535533845424652,-0.3535533845424652,-0.1913413554430008,0.4619397521018982,-2.1855694143368964e-08,-0.17677639424800873,0.426776647567749,0.19134171307086945,0.0,0.4619397521018982,0.19134171307086945,0.0,0.5,-2.1855694143368964e-08,0.0,0.19134172797203064,0.4619397521018982,0.0,0.3535533845424652,0.3535533845424652,-0.13529875874519348,0.32664069533348083,0.3535533845424652,-0.07322321832180023,0.1767766922712326,0.4619397521018982,-0.07322317361831665,0.1767767071723938,-0.4619397521018982,-0.13529875874519348,0.32664069533348083,-0.3535533845424652,0.0,0.3535533845424652,-0.3535533845424652,0.0,0.19134174287319183,-0.4619397521018982,-0.17677639424800873,0.426776647567749,-0.19134175777435303,-0.1913413554430008,0.4619397521018982,-2.1855694143368964e-08,0.0,0.5,-2.1855694143368964e-08,0.0,0.4619397521018982,-0.19134175777435303,-0.17677639424800873,0.426776647567749,0.19134171307086945,-0.13529875874519348,0.32664069533348083,0.3535533845424652,0.0,0.3535533845424652,0.3535533845424652,0.0,0.4619397521018982,0.19134171307086945];
iron_data_ConstData.coneIndices = [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,50,51,52,52,53,54,54,55,56,57,58,59,60,61,62,62,63,64,64,65,48,48,50,52,52,54,56,56,60,62,62,64,48,48,52,56,56,62,48];
iron_data_ConstData.conePos = [0.0,0.5,-1.0,0.0,0.0,0.0,0.19134172797203064,0.4619397521018982,-1.0,0.19134172797203064,0.4619397521018982,-1.0,0.0,0.0,0.0,0.3535533845424652,0.3535533845424652,-1.0,0.3535533845424652,0.3535533845424652,-1.0,0.0,0.0,0.0,0.4619397521018982,0.19134171307086945,-1.0,0.4619397521018982,0.19134171307086945,-1.0,0.0,0.0,0.0,0.5,-2.1855694143368964e-08,-1.0,0.5,-2.1855694143368964e-08,-1.0,0.0,0.0,0.0,0.4619397521018982,-0.19134175777435303,-1.0,0.4619397521018982,-0.19134175777435303,-1.0,0.0,0.0,0.0,0.3535533845424652,-0.3535533845424652,-1.0,0.3535533845424652,-0.3535533845424652,-1.0,0.0,0.0,0.0,0.19134174287319183,-0.4619397521018982,-1.0,0.19134174287319183,-0.4619397521018982,-1.0,0.0,0.0,0.0,7.549790126404332e-08,-0.5,-1.0,7.549790126404332e-08,-0.5,-1.0,0.0,0.0,0.0,-0.1913416087627411,-0.46193981170654297,-1.0,-0.1913416087627411,-0.46193981170654297,-1.0,0.0,0.0,0.0,-0.35355329513549805,-0.35355350375175476,-1.0,-0.35355329513549805,-0.35355350375175476,-1.0,0.0,0.0,0.0,-0.4619397521018982,-0.19134178757667542,-1.0,-0.4619397521018982,-0.19134178757667542,-1.0,0.0,0.0,0.0,-0.5,5.962440319251527e-09,-1.0,-0.5,5.962440319251527e-09,-1.0,0.0,0.0,0.0,-0.4619397222995758,0.1913418024778366,-1.0,-0.4619397222995758,0.1913418024778366,-1.0,0.0,0.0,0.0,-0.35355326533317566,0.35355350375175476,-1.0,-0.35355326533317566,0.35355350375175476,-1.0,0.0,0.0,0.0,-0.19134148955345154,0.46193987131118774,-1.0,-0.19134148955345154,0.46193987131118774,-1.0,0.0,0.0,0.0,0.0,0.5,-1.0,-0.19134148955345154,0.46193987131118774,-1.0,0.0,0.5,-1.0,0.19134172797203064,0.4619397521018982,-1.0,0.3535533845424652,0.3535533845424652,-1.0,0.4619397521018982,0.19134171307086945,-1.0,0.5,-2.1855694143368964e-08,-1.0,0.4619397521018982,-0.19134175777435303,-1.0,0.3535533845424652,-0.3535533845424652,-1.0,0.19134174287319183,-0.4619397521018982,-1.0,0.19134174287319183,-0.4619397521018982,-1.0,7.549790126404332e-08,-0.5,-1.0,-0.1913416087627411,-0.46193981170654297,-1.0,-0.1913416087627411,-0.46193981170654297,-1.0,-0.35355329513549805,-0.35355350375175476,-1.0,-0.4619397521018982,-0.19134178757667542,-1.0,-0.5,5.962440319251527e-09,-1.0,-0.4619397222995758,0.1913418024778366,-1.0,-0.35355326533317566,0.35355350375175476,-1.0];
iron_data_GreasePencilData.frameEnd = 0;
iron_data_GreasePencilData.first = true;
iron_data_MaterialData.uidCounter = 0;
iron_data_MaterialContext.num = 0;
iron_data_MeshData.ForceCpuSkinning = false;
iron_data_RenderPath.voxelized = 0;
iron_data_RenderPath.gpFrame = 0;
iron_data_ShaderData.structureRectLength = 0;
iron_math_RayCaster.loc = new iron_math_Vec4();
iron_math_RayCaster.nor = new iron_math_Vec4();
iron_math_RayCaster.m = iron_math_Mat4.identity();
iron_object_Animation.m1 = iron_math_Mat4.identity();
iron_object_Animation.m2 = iron_math_Mat4.identity();
iron_object_Animation.vpos = new iron_math_Vec4();
iron_object_Animation.vpos2 = new iron_math_Vec4();
iron_object_Animation.vscl = new iron_math_Vec4();
iron_object_Animation.vscl2 = new iron_math_Vec4();
iron_object_Animation.q1 = new iron_math_Quat();
iron_object_Animation.q2 = new iron_math_Quat();
iron_object_BoneAnimation.m1 = iron_math_Mat4.identity();
iron_object_BoneAnimation.vpos = new iron_math_Vec4();
iron_object_BoneAnimation.vscl = new iron_math_Vec4();
iron_object_BoneAnimation.q1 = new iron_math_Quat();
iron_object_BoneAnimation.q2 = new iron_math_Quat();
iron_object_CameraObject.temp = new iron_math_Vec4();
iron_object_CameraObject.sphereCenter = new iron_math_Vec4();
iron_object_CameraObject.q = new iron_math_Quat();
iron_object_LampObject.m = iron_math_Mat4.identity();
iron_object_LampObject.p1 = new iron_math_Vec4();
iron_object_LampObject.p2 = new iron_math_Vec4();
iron_object_LampObject.p3 = new iron_math_Vec4();
iron_object_Transform.temp = iron_math_Mat4.identity();
kha_math_FastMatrix3.width = 3;
kha_math_FastMatrix3.height = 3;
iron_object_Uniforms.biasMat = new iron_math_Mat4(0.5,0.0,0.0,0.5,0.0,0.5,0.0,0.5,0.0,0.0,0.5,0.5,0.0,0.0,0.0,1.0);
iron_object_Uniforms.helpMat = iron_math_Mat4.identity();
iron_object_Uniforms.helpMat2 = iron_math_Mat4.identity();
iron_object_Uniforms.helpMat3 = iron_math_Mat3.identity();
iron_object_Uniforms.helpVec = new iron_math_Vec4();
iron_object_Uniforms.helpVec2 = new iron_math_Vec4();
iron_object_Uniforms.helpQuat = new iron_math_Quat();
iron_system_Input.occupied = false;
iron_system_Input.gamepads = [];
iron_system_Mouse.buttons = ["left","right","middle"];
iron_system_Keyboard.keys = ["a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","0","1","2","3","4","5","6","7","8","9",".",",","space","backspace","tab","enter","shift","ctrl","alt","esc","del","back","up","right","left","down"];
iron_system_Gamepad.buttonsPS = ["cross","circle","square","triangle","l1","r1","l2","r2","share","options","l3","r3","up","down","left","right","home","touchpad"];
iron_system_Tween.LINEAR = 0;
iron_system_Tween.EXPO_OUT = 1;
iron_system_Tween.DEFAULT = 1;
iron_system_Tween.eases = [iron_system_Tween.easeLinear,iron_system_Tween.easeExpoOut];
iron_system_Tween.anims = [];
iron_system_Tween.map = new haxe_ds_ObjectMap();
iron_system_msgpack_Encoder.FLOAT_SINGLE_MIN = 1.40129846432481707e-45;
iron_system_msgpack_Encoder.FLOAT_SINGLE_MAX = 3.40282346638528860e+38;
iron_system_msgpack_Encoder.FLOAT_DOUBLE_MIN = 4.94065645841246544e-324;
iron_system_msgpack_Encoder.FLOAT_DOUBLE_MAX = 1.79769313486231570e+308;
js_Boot.__toStr = ({ }).toString;
js_html_compat_Float32Array.BYTES_PER_ELEMENT = 4;
js_html_compat_Uint8Array.BYTES_PER_ELEMENT = 1;
kha__$Color_Color_$Impl_$.Black = -16777216;
kha__$Color_Color_$Impl_$.White = -1;
kha__$Color_Color_$Impl_$.Red = -65536;
kha__$Color_Color_$Impl_$.Blue = -16776961;
kha__$Color_Color_$Impl_$.Green = -16711936;
kha__$Color_Color_$Impl_$.Magenta = -65281;
kha__$Color_Color_$Impl_$.Yellow = -256;
kha__$Color_Color_$Impl_$.Cyan = -16711681;
kha__$Color_Color_$Impl_$.Purple = -8388480;
kha__$Color_Color_$Impl_$.Pink = -16181;
kha__$Color_Color_$Impl_$.Orange = -23296;
kha__$Color_Color_$Impl_$.Transparent = 0;
kha__$Color_Color_$Impl_$.invMaxChannelValue = 0.00392156862745098;
kha_CompilerDefines.js = "1";
kha_CompilerDefines.kha_a1 = "1";
kha_CompilerDefines.kha_g3 = "1";
kha_CompilerDefines.kha_html5_js = "1";
kha_CompilerDefines["source-header"] = "Generated by Haxe 3.4.2";
kha_CompilerDefines["/Users/lubos/Documents/GitHub/blender-build/build_darwin/bin/Armory/blender.app//armsdk//armory"] = "1";
kha_CompilerDefines["/Users/lubos/Documents/GitHub/blender-build/build_darwin/bin/Armory/blender.app//armsdk//iron"] = "1";
kha_CompilerDefines.jquery_ver = "11204";
kha_CompilerDefines.kha_js = "1";
kha_CompilerDefines.sys_html5 = "1";
kha_CompilerDefines.arm_vr = "1";
kha_CompilerDefines.sys_g4 = "1";
kha_CompilerDefines.sys_g2 = "1";
kha_CompilerDefines.kha_webgl = "1";
kha_CompilerDefines.kha = "1";
kha_CompilerDefines.kha_g2 = "1";
kha_CompilerDefines.kha_g4 = "1";
kha_CompilerDefines.sys_g3 = "1";
kha_CompilerDefines["/Users/lubos/Documents/GitHub/blender_build/build_darwin/bin/Armory/blender.app//armsdk//armory"] = "1";
kha_CompilerDefines.kha_g1 = "1";
kha_CompilerDefines.sys_a1 = "1";
kha_CompilerDefines.haxe_ver = "3.402";
kha_CompilerDefines.canvas_id = "khanvas";
kha_CompilerDefines.kha_version = "1611";
kha_CompilerDefines.arm_opengl = "1";
kha_CompilerDefines.js_es = "5";
kha_CompilerDefines.kha_html5 = "1";
kha_CompilerDefines["js-es5"] = "1";
kha_CompilerDefines.js_es5 = "1";
kha_CompilerDefines.sys_a2 = "1";
kha_CompilerDefines.dce = "std";
kha_CompilerDefines.sys_g1 = "1";
kha_CompilerDefines["true"] = "1";
kha_CompilerDefines["/Users/lubos/Documents/GitHub/blender_build/build_darwin/bin/Armory/blender.app//armsdk//iron"] = "1";
kha_CompilerDefines.haxe3 = "1";
kha_CompilerDefines.kha_a2 = "1";
kha_CompilerDefines.script_name = "kha";
kha_FontStyle.Default = new kha_FontStyle(false,false,false);
kha_Scheduler.timeWarpSaveTime = 1.0;
kha_Scheduler.DIF_COUNT = 3;
kha_Scheduler.maxframetime = 0.5;
kha_Scheduler.startTime = 0;
kha_Shaders.Leaves_004_mesh_fragData0 = "s2170:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCB2ZWMzIGxpZ2h0RGlyOwp1bmlmb3JtIGhpZ2hwIHNhbXBsZXIyRCBzaGFkb3dNYXA7CnVuaWZvcm0gaGlnaHAgZmxvYXQgc2hhZG93c0JpYXM7CnVuaWZvcm0gaGlnaHAgdmVjMyBsaWdodENvbG9yOwp1bmlmb3JtIGhpZ2hwIHNhbXBsZXJDdWJlIHNoYWRvd01hcEN1YmU7CnVuaWZvcm0gaGlnaHAgZmxvYXQgZW52bWFwU3RyZW5ndGg7Cgp2YXJ5aW5nIGhpZ2hwIHZlYzMgd25vcm1hbDsKdmFyeWluZyBoaWdocCB2ZWM0IGxhbXBQb3M7Cgp2b2lkIG1haW4oKQp7CiAgICBoaWdocCB2ZWMzIG4gPSBub3JtYWxpemUod25vcm1hbCk7CiAgICBoaWdocCB2ZWMzIGJhc2Vjb2wgPSB2ZWMzKDAuNDc4ODk3NTcxNTYzNzIwNzAzMTI1LCAwLjY2MTg2ODQ1MzAyNTgxNzg3MTA5Mzc1LCAwLjIxODYwNjQxMjQxMDczNjA4Mzk4NDM3NSk7CiAgICBoaWdocCBmbG9hdCB2aXNpYmlsaXR5ID0gMS4wOwogICAgaGlnaHAgZmxvYXQgZG90TkwgPSBkb3QobiwgbGlnaHREaXIpOwogICAgaWYgKGxhbXBQb3MudyA%IDAuMCkKICAgIHsKICAgICAgICBoaWdocCB2ZWMzIGxwb3MgPSBsYW1wUG9zLnh5eiAvIHZlYzMobGFtcFBvcy53KTsKICAgICAgICB2aXNpYmlsaXR5ID0gMC4wOwogICAgICAgIHZpc2liaWxpdHkgKz0gZmxvYXQoKHRleHR1cmUyRChzaGFkb3dNYXAsIGxwb3MueHkpLnggKyBzaGFkb3dzQmlhcykgPiBscG9zLnopOwogICAgICAgIHZpc2liaWxpdHkgKz0gKGZsb2F0KCh0ZXh0dXJlMkQoc2hhZG93TWFwLCBscG9zLnh5ICsgdmVjMigwLjAwMDk3NjU2MjUsIDAuMCkpLnggKyBzaGFkb3dzQmlhcykgPiBscG9zLnopICogMC41KTsKICAgICAgICB2aXNpYmlsaXR5ICs9IChmbG9hdCgodGV4dHVyZTJEKHNoYWRvd01hcCwgbHBvcy54eSArIHZlYzIoLTAuMDAwOTc2NTYyNSwgMC4wKSkueCArIHNoYWRvd3NCaWFzKSA%IGxwb3MueikgKiAwLjI1KTsKICAgICAgICB2aXNpYmlsaXR5ICs9IChmbG9hdCgodGV4dHVyZTJEKHNoYWRvd01hcCwgbHBvcy54eSArIHZlYzIoMC4wLCAwLjAwMDk3NjU2MjUpKS54ICsgc2hhZG93c0JpYXMpID4gbHBvcy56KSAqIDAuNSk7CiAgICAgICAgdmlzaWJpbGl0eSArPSAoZmxvYXQoKHRleHR1cmUyRChzaGFkb3dNYXAsIGxwb3MueHkgKyB2ZWMyKDAuMCwgLTAuMDAwOTc2NTYyNSkpLnggKyBzaGFkb3dzQmlhcykgPiBscG9zLnopICogMC4yNSk7CiAgICAgICAgdmlzaWJpbGl0eSAvPSAyLjU7CiAgICAgICAgdmlzaWJpbGl0eSA9IG1heCh2aXNpYmlsaXR5LCAwLjUpOwogICAgfQogICAgaGlnaHAgdmVjMyBkaXJlY3QgPSBiYXNlY29sICogbWF4KGRvdE5MLCAwLjEwMDAwMDAwMTQ5MDExNjExOTM4NDc2NTYyNSk7CiAgICBnbF9GcmFnRGF0YVswXSA9IHZlYzQoKGRpcmVjdCAqIGxpZ2h0Q29sb3IpICogdmlzaWJpbGl0eSwgMS4wKTsKICAgIGhpZ2hwIHZlYzMgXzE2NSA9IHBvdyhnbF9GcmFnRGF0YVswXS54eXosIHZlYzMoMC40NTQ1NDU0NjgwOTE5NjQ3MjE2Nzk2ODc1KSk7CiAgICBnbF9GcmFnRGF0YVswXSA9IHZlYzQoXzE2NS54LCBfMTY1LnksIF8xNjUueiwgZ2xfRnJhZ0RhdGFbMF0udyk7Cn0KCg";
kha_Shaders.Leaves_004_mesh_vertData0 = "s391:I3ZlcnNpb24gMTAwCgp1bmlmb3JtIG1hdDMgTjsKdW5pZm9ybSBtYXQ0IFdWUDsKdW5pZm9ybSBtYXQ0IExXVlA7CgphdHRyaWJ1dGUgdmVjMyBwb3M7CnZhcnlpbmcgdmVjMyB3bm9ybWFsOwphdHRyaWJ1dGUgdmVjMyBub3I7CnZhcnlpbmcgdmVjNCBsYW1wUG9zOwoKdm9pZCBtYWluKCkKewogICAgdmVjNCBzcG9zID0gdmVjNChwb3MsIDEuMCk7CiAgICB3bm9ybWFsID0gbm9ybWFsaXplKE4gKiBub3IpOwogICAgZ2xfUG9zaXRpb24gPSBXVlAgKiBzcG9zOwogICAgbGFtcFBvcyA9IExXVlAgKiBzcG9zOwp9Cgo";
kha_Shaders.Leaves_004_shadowmap_fragData0 = "s103:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdm9pZCBtYWluKCkKewp9Cgo";
kha_Shaders.Leaves_004_shadowmap_vertData0 = "s207:I3ZlcnNpb24gMTAwCgp1bmlmb3JtIG1hdDQgTFdWUDsKCmF0dHJpYnV0ZSB2ZWMzIHBvczsKYXR0cmlidXRlIHZlYzMgbm9yOwoKdm9pZCBtYWluKCkKewogICAgdmVjNCBzcG9zID0gdmVjNChwb3MsIDEuMCk7CiAgICBnbF9Qb3NpdGlvbiA9IExXVlAgKiBzcG9zOwp9Cgo";
kha_Shaders.Material_004_mesh_fragData0 = "s2070:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCB2ZWMzIGxpZ2h0RGlyOwp1bmlmb3JtIGhpZ2hwIHNhbXBsZXIyRCBzaGFkb3dNYXA7CnVuaWZvcm0gaGlnaHAgZmxvYXQgc2hhZG93c0JpYXM7CnVuaWZvcm0gaGlnaHAgdmVjMyBsaWdodENvbG9yOwp1bmlmb3JtIGhpZ2hwIHNhbXBsZXJDdWJlIHNoYWRvd01hcEN1YmU7CnVuaWZvcm0gaGlnaHAgZmxvYXQgZW52bWFwU3RyZW5ndGg7Cgp2YXJ5aW5nIGhpZ2hwIHZlYzMgd25vcm1hbDsKdmFyeWluZyBoaWdocCB2ZWM0IGxhbXBQb3M7Cgp2b2lkIG1haW4oKQp7CiAgICBoaWdocCB2ZWMzIG4gPSBub3JtYWxpemUod25vcm1hbCk7CiAgICBoaWdocCB2ZWMzIGJhc2Vjb2wgPSB2ZWMzKDAuMCk7CiAgICBoaWdocCBmbG9hdCB2aXNpYmlsaXR5ID0gMS4wOwogICAgaGlnaHAgZmxvYXQgZG90TkwgPSBkb3QobiwgbGlnaHREaXIpOwogICAgaWYgKGxhbXBQb3MudyA%IDAuMCkKICAgIHsKICAgICAgICBoaWdocCB2ZWMzIGxwb3MgPSBsYW1wUG9zLnh5eiAvIHZlYzMobGFtcFBvcy53KTsKICAgICAgICB2aXNpYmlsaXR5ID0gMC4wOwogICAgICAgIHZpc2liaWxpdHkgKz0gZmxvYXQoKHRleHR1cmUyRChzaGFkb3dNYXAsIGxwb3MueHkpLnggKyBzaGFkb3dzQmlhcykgPiBscG9zLnopOwogICAgICAgIHZpc2liaWxpdHkgKz0gKGZsb2F0KCh0ZXh0dXJlMkQoc2hhZG93TWFwLCBscG9zLnh5ICsgdmVjMigwLjAwMDk3NjU2MjUsIDAuMCkpLnggKyBzaGFkb3dzQmlhcykgPiBscG9zLnopICogMC41KTsKICAgICAgICB2aXNpYmlsaXR5ICs9IChmbG9hdCgodGV4dHVyZTJEKHNoYWRvd01hcCwgbHBvcy54eSArIHZlYzIoLTAuMDAwOTc2NTYyNSwgMC4wKSkueCArIHNoYWRvd3NCaWFzKSA%IGxwb3MueikgKiAwLjI1KTsKICAgICAgICB2aXNpYmlsaXR5ICs9IChmbG9hdCgodGV4dHVyZTJEKHNoYWRvd01hcCwgbHBvcy54eSArIHZlYzIoMC4wLCAwLjAwMDk3NjU2MjUpKS54ICsgc2hhZG93c0JpYXMpID4gbHBvcy56KSAqIDAuNSk7CiAgICAgICAgdmlzaWJpbGl0eSArPSAoZmxvYXQoKHRleHR1cmUyRChzaGFkb3dNYXAsIGxwb3MueHkgKyB2ZWMyKDAuMCwgLTAuMDAwOTc2NTYyNSkpLnggKyBzaGFkb3dzQmlhcykgPiBscG9zLnopICogMC4yNSk7CiAgICAgICAgdmlzaWJpbGl0eSAvPSAyLjU7CiAgICAgICAgdmlzaWJpbGl0eSA9IG1heCh2aXNpYmlsaXR5LCAwLjUpOwogICAgfQogICAgaGlnaHAgdmVjMyBkaXJlY3QgPSBiYXNlY29sICogbWF4KGRvdE5MLCAwLjEwMDAwMDAwMTQ5MDExNjExOTM4NDc2NTYyNSk7CiAgICBnbF9GcmFnRGF0YVswXSA9IHZlYzQoKGRpcmVjdCAqIGxpZ2h0Q29sb3IpICogdmlzaWJpbGl0eSwgMS4wKTsKICAgIGhpZ2hwIHZlYzMgXzE2MiA9IHBvdyhnbF9GcmFnRGF0YVswXS54eXosIHZlYzMoMC40NTQ1NDU0NjgwOTE5NjQ3MjE2Nzk2ODc1KSk7CiAgICBnbF9GcmFnRGF0YVswXSA9IHZlYzQoXzE2Mi54LCBfMTYyLnksIF8xNjIueiwgZ2xfRnJhZ0RhdGFbMF0udyk7Cn0KCg";
kha_Shaders.Material_004_mesh_vertData0 = "s391:I3ZlcnNpb24gMTAwCgp1bmlmb3JtIG1hdDMgTjsKdW5pZm9ybSBtYXQ0IFdWUDsKdW5pZm9ybSBtYXQ0IExXVlA7CgphdHRyaWJ1dGUgdmVjMyBwb3M7CnZhcnlpbmcgdmVjMyB3bm9ybWFsOwphdHRyaWJ1dGUgdmVjMyBub3I7CnZhcnlpbmcgdmVjNCBsYW1wUG9zOwoKdm9pZCBtYWluKCkKewogICAgdmVjNCBzcG9zID0gdmVjNChwb3MsIDEuMCk7CiAgICB3bm9ybWFsID0gbm9ybWFsaXplKE4gKiBub3IpOwogICAgZ2xfUG9zaXRpb24gPSBXVlAgKiBzcG9zOwogICAgbGFtcFBvcyA9IExXVlAgKiBzcG9zOwp9Cgo";
kha_Shaders.Material_004_shadowmap_fragData0 = "s103:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdm9pZCBtYWluKCkKewp9Cgo";
kha_Shaders.Material_004_shadowmap_vertData0 = "s207:I3ZlcnNpb24gMTAwCgp1bmlmb3JtIG1hdDQgTFdWUDsKCmF0dHJpYnV0ZSB2ZWMzIHBvczsKYXR0cmlidXRlIHZlYzMgbm9yOwoKdm9pZCBtYWluKCkKewogICAgdmVjNCBzcG9zID0gdmVjNChwb3MsIDEuMCk7CiAgICBnbF9Qb3NpdGlvbiA9IExXVlAgKiBzcG9zOwp9Cgo";
kha_Shaders.Material_007_mesh_fragData0 = "s2178:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCB2ZWMzIGxpZ2h0RGlyOwp1bmlmb3JtIGhpZ2hwIHNhbXBsZXIyRCBzaGFkb3dNYXA7CnVuaWZvcm0gaGlnaHAgZmxvYXQgc2hhZG93c0JpYXM7CnVuaWZvcm0gaGlnaHAgdmVjMyBsaWdodENvbG9yOwp1bmlmb3JtIGhpZ2hwIHNhbXBsZXJDdWJlIHNoYWRvd01hcEN1YmU7CnVuaWZvcm0gaGlnaHAgZmxvYXQgZW52bWFwU3RyZW5ndGg7Cgp2YXJ5aW5nIGhpZ2hwIHZlYzMgd25vcm1hbDsKdmFyeWluZyBoaWdocCB2ZWM0IGxhbXBQb3M7Cgp2b2lkIG1haW4oKQp7CiAgICBoaWdocCB2ZWMzIG4gPSBub3JtYWxpemUod25vcm1hbCk7CiAgICBoaWdocCB2ZWMzIGJhc2Vjb2wgPSB2ZWMzKDAuNDExNjU3ODk5NjE4MTQ4ODAzNzEwOTM3NSwgMC4zNDU2NzgzODkwNzI0MTgyMTI4OTA2MjUsIDAuMTQ3NzM5ODU3NDM1MjI2NDQwNDI5Njg3NSk7CiAgICBoaWdocCBmbG9hdCB2aXNpYmlsaXR5ID0gMS4wOwogICAgaGlnaHAgZmxvYXQgZG90TkwgPSBkb3QobiwgbGlnaHREaXIpOwogICAgaWYgKGxhbXBQb3MudyA%IDAuMCkKICAgIHsKICAgICAgICBoaWdocCB2ZWMzIGxwb3MgPSBsYW1wUG9zLnh5eiAvIHZlYzMobGFtcFBvcy53KTsKICAgICAgICB2aXNpYmlsaXR5ID0gMC4wOwogICAgICAgIHZpc2liaWxpdHkgKz0gZmxvYXQoKHRleHR1cmUyRChzaGFkb3dNYXAsIGxwb3MueHkpLnggKyBzaGFkb3dzQmlhcykgPiBscG9zLnopOwogICAgICAgIHZpc2liaWxpdHkgKz0gKGZsb2F0KCh0ZXh0dXJlMkQoc2hhZG93TWFwLCBscG9zLnh5ICsgdmVjMigwLjAwMDk3NjU2MjUsIDAuMCkpLnggKyBzaGFkb3dzQmlhcykgPiBscG9zLnopICogMC41KTsKICAgICAgICB2aXNpYmlsaXR5ICs9IChmbG9hdCgodGV4dHVyZTJEKHNoYWRvd01hcCwgbHBvcy54eSArIHZlYzIoLTAuMDAwOTc2NTYyNSwgMC4wKSkueCArIHNoYWRvd3NCaWFzKSA%IGxwb3MueikgKiAwLjI1KTsKICAgICAgICB2aXNpYmlsaXR5ICs9IChmbG9hdCgodGV4dHVyZTJEKHNoYWRvd01hcCwgbHBvcy54eSArIHZlYzIoMC4wLCAwLjAwMDk3NjU2MjUpKS54ICsgc2hhZG93c0JpYXMpID4gbHBvcy56KSAqIDAuNSk7CiAgICAgICAgdmlzaWJpbGl0eSArPSAoZmxvYXQoKHRleHR1cmUyRChzaGFkb3dNYXAsIGxwb3MueHkgKyB2ZWMyKDAuMCwgLTAuMDAwOTc2NTYyNSkpLnggKyBzaGFkb3dzQmlhcykgPiBscG9zLnopICogMC4yNSk7CiAgICAgICAgdmlzaWJpbGl0eSAvPSAyLjU7CiAgICAgICAgdmlzaWJpbGl0eSA9IG1heCh2aXNpYmlsaXR5LCAwLjUpOwogICAgfQogICAgaGlnaHAgdmVjMyBkaXJlY3QgPSBiYXNlY29sICogbWF4KGRvdE5MLCAwLjEwMDAwMDAwMTQ5MDExNjExOTM4NDc2NTYyNSk7CiAgICBnbF9GcmFnRGF0YVswXSA9IHZlYzQoKGRpcmVjdCAqIGxpZ2h0Q29sb3IpICogdmlzaWJpbGl0eSwgMS4wKTsKICAgIGhpZ2hwIHZlYzMgXzE2NSA9IHBvdyhnbF9GcmFnRGF0YVswXS54eXosIHZlYzMoMC40NTQ1NDU0NjgwOTE5NjQ3MjE2Nzk2ODc1KSk7CiAgICBnbF9GcmFnRGF0YVswXSA9IHZlYzQoXzE2NS54LCBfMTY1LnksIF8xNjUueiwgZ2xfRnJhZ0RhdGFbMF0udyk7Cn0KCg";
kha_Shaders.Material_007_mesh_vertData0 = "s391:I3ZlcnNpb24gMTAwCgp1bmlmb3JtIG1hdDMgTjsKdW5pZm9ybSBtYXQ0IFdWUDsKdW5pZm9ybSBtYXQ0IExXVlA7CgphdHRyaWJ1dGUgdmVjMyBwb3M7CnZhcnlpbmcgdmVjMyB3bm9ybWFsOwphdHRyaWJ1dGUgdmVjMyBub3I7CnZhcnlpbmcgdmVjNCBsYW1wUG9zOwoKdm9pZCBtYWluKCkKewogICAgdmVjNCBzcG9zID0gdmVjNChwb3MsIDEuMCk7CiAgICB3bm9ybWFsID0gbm9ybWFsaXplKE4gKiBub3IpOwogICAgZ2xfUG9zaXRpb24gPSBXVlAgKiBzcG9zOwogICAgbGFtcFBvcyA9IExXVlAgKiBzcG9zOwp9Cgo";
kha_Shaders.Material_007_shadowmap_fragData0 = "s103:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdm9pZCBtYWluKCkKewp9Cgo";
kha_Shaders.Material_007_shadowmap_vertData0 = "s207:I3ZlcnNpb24gMTAwCgp1bmlmb3JtIG1hdDQgTFdWUDsKCmF0dHJpYnV0ZSB2ZWMzIHBvczsKYXR0cmlidXRlIHZlYzMgbm9yOwoKdm9pZCBtYWluKCkKewogICAgdmVjNCBzcG9zID0gdmVjNChwb3MsIDEuMCk7CiAgICBnbF9Qb3NpdGlvbiA9IExXVlAgKiBzcG9zOwp9Cgo";
kha_Shaders.Material_008_mesh_fragData0 = "s2183:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCB2ZWMzIGxpZ2h0RGlyOwp1bmlmb3JtIGhpZ2hwIHNhbXBsZXIyRCBzaGFkb3dNYXA7CnVuaWZvcm0gaGlnaHAgZmxvYXQgc2hhZG93c0JpYXM7CnVuaWZvcm0gaGlnaHAgdmVjMyBsaWdodENvbG9yOwp1bmlmb3JtIGhpZ2hwIHNhbXBsZXJDdWJlIHNoYWRvd01hcEN1YmU7CnVuaWZvcm0gaGlnaHAgZmxvYXQgZW52bWFwU3RyZW5ndGg7Cgp2YXJ5aW5nIGhpZ2hwIHZlYzMgd25vcm1hbDsKdmFyeWluZyBoaWdocCB2ZWM0IGxhbXBQb3M7Cgp2b2lkIG1haW4oKQp7CiAgICBoaWdocCB2ZWMzIG4gPSBub3JtYWxpemUod25vcm1hbCk7CiAgICBoaWdocCB2ZWMzIGJhc2Vjb2wgPSB2ZWMzKDAuMTM3NDY0MDYxMzc5NDMyNjc4MjIyNjU2MjUsIDAuMDgzMzI2MjM1NDEzNTUxMzMwNTY2NDA2MjUsIDAuMDY1MjQ2ODA1NTQ4NjY3OTA3NzE0ODQzNzUpOwogICAgaGlnaHAgZmxvYXQgdmlzaWJpbGl0eSA9IDEuMDsKICAgIGhpZ2hwIGZsb2F0IGRvdE5MID0gZG90KG4sIGxpZ2h0RGlyKTsKICAgIGlmIChsYW1wUG9zLncgPiAwLjApCiAgICB7CiAgICAgICAgaGlnaHAgdmVjMyBscG9zID0gbGFtcFBvcy54eXogLyB2ZWMzKGxhbXBQb3Mudyk7CiAgICAgICAgdmlzaWJpbGl0eSA9IDAuMDsKICAgICAgICB2aXNpYmlsaXR5ICs9IGZsb2F0KCh0ZXh0dXJlMkQoc2hhZG93TWFwLCBscG9zLnh5KS54ICsgc2hhZG93c0JpYXMpID4gbHBvcy56KTsKICAgICAgICB2aXNpYmlsaXR5ICs9IChmbG9hdCgodGV4dHVyZTJEKHNoYWRvd01hcCwgbHBvcy54eSArIHZlYzIoMC4wMDA5NzY1NjI1LCAwLjApKS54ICsgc2hhZG93c0JpYXMpID4gbHBvcy56KSAqIDAuNSk7CiAgICAgICAgdmlzaWJpbGl0eSArPSAoZmxvYXQoKHRleHR1cmUyRChzaGFkb3dNYXAsIGxwb3MueHkgKyB2ZWMyKC0wLjAwMDk3NjU2MjUsIDAuMCkpLnggKyBzaGFkb3dzQmlhcykgPiBscG9zLnopICogMC4yNSk7CiAgICAgICAgdmlzaWJpbGl0eSArPSAoZmxvYXQoKHRleHR1cmUyRChzaGFkb3dNYXAsIGxwb3MueHkgKyB2ZWMyKDAuMCwgMC4wMDA5NzY1NjI1KSkueCArIHNoYWRvd3NCaWFzKSA%IGxwb3MueikgKiAwLjUpOwogICAgICAgIHZpc2liaWxpdHkgKz0gKGZsb2F0KCh0ZXh0dXJlMkQoc2hhZG93TWFwLCBscG9zLnh5ICsgdmVjMigwLjAsIC0wLjAwMDk3NjU2MjUpKS54ICsgc2hhZG93c0JpYXMpID4gbHBvcy56KSAqIDAuMjUpOwogICAgICAgIHZpc2liaWxpdHkgLz0gMi41OwogICAgICAgIHZpc2liaWxpdHkgPSBtYXgodmlzaWJpbGl0eSwgMC41KTsKICAgIH0KICAgIGhpZ2hwIHZlYzMgZGlyZWN0ID0gYmFzZWNvbCAqIG1heChkb3ROTCwgMC4xMDAwMDAwMDE0OTAxMTYxMTkzODQ3NjU2MjUpOwogICAgZ2xfRnJhZ0RhdGFbMF0gPSB2ZWM0KChkaXJlY3QgKiBsaWdodENvbG9yKSAqIHZpc2liaWxpdHksIDEuMCk7CiAgICBoaWdocCB2ZWMzIF8xNjUgPSBwb3coZ2xfRnJhZ0RhdGFbMF0ueHl6LCB2ZWMzKDAuNDU0NTQ1NDY4MDkxOTY0NzIxNjc5Njg3NSkpOwogICAgZ2xfRnJhZ0RhdGFbMF0gPSB2ZWM0KF8xNjUueCwgXzE2NS55LCBfMTY1LnosIGdsX0ZyYWdEYXRhWzBdLncpOwp9Cgo";
kha_Shaders.Material_008_mesh_vertData0 = "s391:I3ZlcnNpb24gMTAwCgp1bmlmb3JtIG1hdDMgTjsKdW5pZm9ybSBtYXQ0IFdWUDsKdW5pZm9ybSBtYXQ0IExXVlA7CgphdHRyaWJ1dGUgdmVjMyBwb3M7CnZhcnlpbmcgdmVjMyB3bm9ybWFsOwphdHRyaWJ1dGUgdmVjMyBub3I7CnZhcnlpbmcgdmVjNCBsYW1wUG9zOwoKdm9pZCBtYWluKCkKewogICAgdmVjNCBzcG9zID0gdmVjNChwb3MsIDEuMCk7CiAgICB3bm9ybWFsID0gbm9ybWFsaXplKE4gKiBub3IpOwogICAgZ2xfUG9zaXRpb24gPSBXVlAgKiBzcG9zOwogICAgbGFtcFBvcyA9IExXVlAgKiBzcG9zOwp9Cgo";
kha_Shaders.Material_008_shadowmap_fragData0 = "s103:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdm9pZCBtYWluKCkKewp9Cgo";
kha_Shaders.Material_008_shadowmap_vertData0 = "s207:I3ZlcnNpb24gMTAwCgp1bmlmb3JtIG1hdDQgTFdWUDsKCmF0dHJpYnV0ZSB2ZWMzIHBvczsKYXR0cmlidXRlIHZlYzMgbm9yOwoKdm9pZCBtYWluKCkKewogICAgdmVjNCBzcG9zID0gdmVjNChwb3MsIDEuMCk7CiAgICBnbF9Qb3NpdGlvbiA9IExXVlAgKiBzcG9zOwp9Cgo";
kha_Shaders.Wood_mesh_fragData0 = "s2174:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCB2ZWMzIGxpZ2h0RGlyOwp1bmlmb3JtIGhpZ2hwIHNhbXBsZXIyRCBzaGFkb3dNYXA7CnVuaWZvcm0gaGlnaHAgZmxvYXQgc2hhZG93c0JpYXM7CnVuaWZvcm0gaGlnaHAgdmVjMyBsaWdodENvbG9yOwp1bmlmb3JtIGhpZ2hwIHNhbXBsZXJDdWJlIHNoYWRvd01hcEN1YmU7CnVuaWZvcm0gaGlnaHAgZmxvYXQgZW52bWFwU3RyZW5ndGg7Cgp2YXJ5aW5nIGhpZ2hwIHZlYzMgd25vcm1hbDsKdmFyeWluZyBoaWdocCB2ZWM0IGxhbXBQb3M7Cgp2b2lkIG1haW4oKQp7CiAgICBoaWdocCB2ZWMzIG4gPSBub3JtYWxpemUod25vcm1hbCk7CiAgICBoaWdocCB2ZWMzIGJhc2Vjb2wgPSB2ZWMzKDAuMjMzMDE4MTg5NjY4NjU1Mzk1NTA3ODEyNSwgMC4xNzE4NDQ5NTkyNTkwMzMyMDMxMjUsIDAuMDk5NzExOTg0Mzk1OTgwODM0OTYwOTM3NSk7CiAgICBoaWdocCBmbG9hdCB2aXNpYmlsaXR5ID0gMS4wOwogICAgaGlnaHAgZmxvYXQgZG90TkwgPSBkb3QobiwgbGlnaHREaXIpOwogICAgaWYgKGxhbXBQb3MudyA%IDAuMCkKICAgIHsKICAgICAgICBoaWdocCB2ZWMzIGxwb3MgPSBsYW1wUG9zLnh5eiAvIHZlYzMobGFtcFBvcy53KTsKICAgICAgICB2aXNpYmlsaXR5ID0gMC4wOwogICAgICAgIHZpc2liaWxpdHkgKz0gZmxvYXQoKHRleHR1cmUyRChzaGFkb3dNYXAsIGxwb3MueHkpLnggKyBzaGFkb3dzQmlhcykgPiBscG9zLnopOwogICAgICAgIHZpc2liaWxpdHkgKz0gKGZsb2F0KCh0ZXh0dXJlMkQoc2hhZG93TWFwLCBscG9zLnh5ICsgdmVjMigwLjAwMDk3NjU2MjUsIDAuMCkpLnggKyBzaGFkb3dzQmlhcykgPiBscG9zLnopICogMC41KTsKICAgICAgICB2aXNpYmlsaXR5ICs9IChmbG9hdCgodGV4dHVyZTJEKHNoYWRvd01hcCwgbHBvcy54eSArIHZlYzIoLTAuMDAwOTc2NTYyNSwgMC4wKSkueCArIHNoYWRvd3NCaWFzKSA%IGxwb3MueikgKiAwLjI1KTsKICAgICAgICB2aXNpYmlsaXR5ICs9IChmbG9hdCgodGV4dHVyZTJEKHNoYWRvd01hcCwgbHBvcy54eSArIHZlYzIoMC4wLCAwLjAwMDk3NjU2MjUpKS54ICsgc2hhZG93c0JpYXMpID4gbHBvcy56KSAqIDAuNSk7CiAgICAgICAgdmlzaWJpbGl0eSArPSAoZmxvYXQoKHRleHR1cmUyRChzaGFkb3dNYXAsIGxwb3MueHkgKyB2ZWMyKDAuMCwgLTAuMDAwOTc2NTYyNSkpLnggKyBzaGFkb3dzQmlhcykgPiBscG9zLnopICogMC4yNSk7CiAgICAgICAgdmlzaWJpbGl0eSAvPSAyLjU7CiAgICAgICAgdmlzaWJpbGl0eSA9IG1heCh2aXNpYmlsaXR5LCAwLjUpOwogICAgfQogICAgaGlnaHAgdmVjMyBkaXJlY3QgPSBiYXNlY29sICogbWF4KGRvdE5MLCAwLjEwMDAwMDAwMTQ5MDExNjExOTM4NDc2NTYyNSk7CiAgICBnbF9GcmFnRGF0YVswXSA9IHZlYzQoKGRpcmVjdCAqIGxpZ2h0Q29sb3IpICogdmlzaWJpbGl0eSwgMS4wKTsKICAgIGhpZ2hwIHZlYzMgXzE2NSA9IHBvdyhnbF9GcmFnRGF0YVswXS54eXosIHZlYzMoMC40NTQ1NDU0NjgwOTE5NjQ3MjE2Nzk2ODc1KSk7CiAgICBnbF9GcmFnRGF0YVswXSA9IHZlYzQoXzE2NS54LCBfMTY1LnksIF8xNjUueiwgZ2xfRnJhZ0RhdGFbMF0udyk7Cn0KCg";
kha_Shaders.Wood_mesh_vertData0 = "s391:I3ZlcnNpb24gMTAwCgp1bmlmb3JtIG1hdDMgTjsKdW5pZm9ybSBtYXQ0IFdWUDsKdW5pZm9ybSBtYXQ0IExXVlA7CgphdHRyaWJ1dGUgdmVjMyBwb3M7CnZhcnlpbmcgdmVjMyB3bm9ybWFsOwphdHRyaWJ1dGUgdmVjMyBub3I7CnZhcnlpbmcgdmVjNCBsYW1wUG9zOwoKdm9pZCBtYWluKCkKewogICAgdmVjNCBzcG9zID0gdmVjNChwb3MsIDEuMCk7CiAgICB3bm9ybWFsID0gbm9ybWFsaXplKE4gKiBub3IpOwogICAgZ2xfUG9zaXRpb24gPSBXVlAgKiBzcG9zOwogICAgbGFtcFBvcyA9IExXVlAgKiBzcG9zOwp9Cgo";
kha_Shaders.Wood_shadowmap_fragData0 = "s103:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdm9pZCBtYWluKCkKewp9Cgo";
kha_Shaders.Wood_shadowmap_vertData0 = "s207:I3ZlcnNpb24gMTAwCgp1bmlmb3JtIG1hdDQgTFdWUDsKCmF0dHJpYnV0ZSB2ZWMzIHBvczsKYXR0cmlidXRlIHZlYzMgbm9yOwoKdm9pZCBtYWluKCkKewogICAgdmVjNCBzcG9zID0gdmVjNChwb3MsIDEuMCk7CiAgICBnbF9Qb3NpdGlvbiA9IExXVlAgKiBzcG9zOwp9Cgo";
kha_Shaders.grass_mesh_fragData0 = "s2191:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCB2ZWMzIGxpZ2h0RGlyOwp1bmlmb3JtIGhpZ2hwIHNhbXBsZXIyRCBzaGFkb3dNYXA7CnVuaWZvcm0gaGlnaHAgZmxvYXQgc2hhZG93c0JpYXM7CnVuaWZvcm0gaGlnaHAgdmVjMyBsaWdodENvbG9yOwp1bmlmb3JtIGhpZ2hwIHNhbXBsZXJDdWJlIHNoYWRvd01hcEN1YmU7CnVuaWZvcm0gaGlnaHAgZmxvYXQgZW52bWFwU3RyZW5ndGg7Cgp2YXJ5aW5nIGhpZ2hwIHZlYzMgd25vcm1hbDsKdmFyeWluZyBoaWdocCB2ZWM0IGxhbXBQb3M7Cgp2b2lkIG1haW4oKQp7CiAgICBoaWdocCB2ZWMzIG4gPSBub3JtYWxpemUod25vcm1hbCk7CiAgICBoaWdocCB2ZWMzIGJhc2Vjb2wgPSB2ZWMzKDAuMTA3NjYwMzQ1NzMzMTY1NzQwOTY2Nzk2ODc1LCAwLjQ2NzIwMDk2NDY4OTI1NDc2MDc0MjE4NzUsIDAuMDAyMjAzMzMwMTY0Nzc1MjUyMzQyMjI0MTIxMDkzNzUpOwogICAgaGlnaHAgZmxvYXQgdmlzaWJpbGl0eSA9IDEuMDsKICAgIGhpZ2hwIGZsb2F0IGRvdE5MID0gZG90KG4sIGxpZ2h0RGlyKTsKICAgIGlmIChsYW1wUG9zLncgPiAwLjApCiAgICB7CiAgICAgICAgaGlnaHAgdmVjMyBscG9zID0gbGFtcFBvcy54eXogLyB2ZWMzKGxhbXBQb3Mudyk7CiAgICAgICAgdmlzaWJpbGl0eSA9IDAuMDsKICAgICAgICB2aXNpYmlsaXR5ICs9IGZsb2F0KCh0ZXh0dXJlMkQoc2hhZG93TWFwLCBscG9zLnh5KS54ICsgc2hhZG93c0JpYXMpID4gbHBvcy56KTsKICAgICAgICB2aXNpYmlsaXR5ICs9IChmbG9hdCgodGV4dHVyZTJEKHNoYWRvd01hcCwgbHBvcy54eSArIHZlYzIoMC4wMDA5NzY1NjI1LCAwLjApKS54ICsgc2hhZG93c0JpYXMpID4gbHBvcy56KSAqIDAuNSk7CiAgICAgICAgdmlzaWJpbGl0eSArPSAoZmxvYXQoKHRleHR1cmUyRChzaGFkb3dNYXAsIGxwb3MueHkgKyB2ZWMyKC0wLjAwMDk3NjU2MjUsIDAuMCkpLnggKyBzaGFkb3dzQmlhcykgPiBscG9zLnopICogMC4yNSk7CiAgICAgICAgdmlzaWJpbGl0eSArPSAoZmxvYXQoKHRleHR1cmUyRChzaGFkb3dNYXAsIGxwb3MueHkgKyB2ZWMyKDAuMCwgMC4wMDA5NzY1NjI1KSkueCArIHNoYWRvd3NCaWFzKSA%IGxwb3MueikgKiAwLjUpOwogICAgICAgIHZpc2liaWxpdHkgKz0gKGZsb2F0KCh0ZXh0dXJlMkQoc2hhZG93TWFwLCBscG9zLnh5ICsgdmVjMigwLjAsIC0wLjAwMDk3NjU2MjUpKS54ICsgc2hhZG93c0JpYXMpID4gbHBvcy56KSAqIDAuMjUpOwogICAgICAgIHZpc2liaWxpdHkgLz0gMi41OwogICAgICAgIHZpc2liaWxpdHkgPSBtYXgodmlzaWJpbGl0eSwgMC41KTsKICAgIH0KICAgIGhpZ2hwIHZlYzMgZGlyZWN0ID0gYmFzZWNvbCAqIG1heChkb3ROTCwgMC4xMDAwMDAwMDE0OTAxMTYxMTkzODQ3NjU2MjUpOwogICAgZ2xfRnJhZ0RhdGFbMF0gPSB2ZWM0KChkaXJlY3QgKiBsaWdodENvbG9yKSAqIHZpc2liaWxpdHksIDEuMCk7CiAgICBoaWdocCB2ZWMzIF8xNjUgPSBwb3coZ2xfRnJhZ0RhdGFbMF0ueHl6LCB2ZWMzKDAuNDU0NTQ1NDY4MDkxOTY0NzIxNjc5Njg3NSkpOwogICAgZ2xfRnJhZ0RhdGFbMF0gPSB2ZWM0KF8xNjUueCwgXzE2NS55LCBfMTY1LnosIGdsX0ZyYWdEYXRhWzBdLncpOwp9Cgo";
kha_Shaders.grass_mesh_vertData0 = "s391:I3ZlcnNpb24gMTAwCgp1bmlmb3JtIG1hdDMgTjsKdW5pZm9ybSBtYXQ0IFdWUDsKdW5pZm9ybSBtYXQ0IExXVlA7CgphdHRyaWJ1dGUgdmVjMyBwb3M7CnZhcnlpbmcgdmVjMyB3bm9ybWFsOwphdHRyaWJ1dGUgdmVjMyBub3I7CnZhcnlpbmcgdmVjNCBsYW1wUG9zOwoKdm9pZCBtYWluKCkKewogICAgdmVjNCBzcG9zID0gdmVjNChwb3MsIDEuMCk7CiAgICB3bm9ybWFsID0gbm9ybWFsaXplKE4gKiBub3IpOwogICAgZ2xfUG9zaXRpb24gPSBXVlAgKiBzcG9zOwogICAgbGFtcFBvcyA9IExXVlAgKiBzcG9zOwp9Cgo";
kha_Shaders.grass_shadowmap_fragData0 = "s103:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdm9pZCBtYWluKCkKewp9Cgo";
kha_Shaders.grass_shadowmap_vertData0 = "s207:I3ZlcnNpb24gMTAwCgp1bmlmb3JtIG1hdDQgTFdWUDsKCmF0dHJpYnV0ZSB2ZWMzIHBvczsKYXR0cmlidXRlIHZlYzMgbm9yOwoKdm9pZCBtYWluKCkKewogICAgdmVjNCBzcG9zID0gdmVjNChwb3MsIDEuMCk7CiAgICBnbF9Qb3NpdGlvbiA9IExXVlAgKiBzcG9zOwp9Cgo";
kha_Shaders.stone_mesh_fragData0 = "s2174:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCB2ZWMzIGxpZ2h0RGlyOwp1bmlmb3JtIGhpZ2hwIHNhbXBsZXIyRCBzaGFkb3dNYXA7CnVuaWZvcm0gaGlnaHAgZmxvYXQgc2hhZG93c0JpYXM7CnVuaWZvcm0gaGlnaHAgdmVjMyBsaWdodENvbG9yOwp1bmlmb3JtIGhpZ2hwIHNhbXBsZXJDdWJlIHNoYWRvd01hcEN1YmU7CnVuaWZvcm0gaGlnaHAgZmxvYXQgZW52bWFwU3RyZW5ndGg7Cgp2YXJ5aW5nIGhpZ2hwIHZlYzMgd25vcm1hbDsKdmFyeWluZyBoaWdocCB2ZWM0IGxhbXBQb3M7Cgp2b2lkIG1haW4oKQp7CiAgICBoaWdocCB2ZWMzIG4gPSBub3JtYWxpemUod25vcm1hbCk7CiAgICBoaWdocCB2ZWMzIGJhc2Vjb2wgPSB2ZWMzKDAuNDgwMjA5NzA4MjEzODA2MTUyMzQzNzUsIDAuNjAzNzI3MjgxMDkzNTk3NDEyMTA5Mzc1LCAwLjU3NTg2NzU5MzI4ODQyMTYzMDg1OTM3NSk7CiAgICBoaWdocCBmbG9hdCB2aXNpYmlsaXR5ID0gMS4wOwogICAgaGlnaHAgZmxvYXQgZG90TkwgPSBkb3QobiwgbGlnaHREaXIpOwogICAgaWYgKGxhbXBQb3MudyA%IDAuMCkKICAgIHsKICAgICAgICBoaWdocCB2ZWMzIGxwb3MgPSBsYW1wUG9zLnh5eiAvIHZlYzMobGFtcFBvcy53KTsKICAgICAgICB2aXNpYmlsaXR5ID0gMC4wOwogICAgICAgIHZpc2liaWxpdHkgKz0gZmxvYXQoKHRleHR1cmUyRChzaGFkb3dNYXAsIGxwb3MueHkpLnggKyBzaGFkb3dzQmlhcykgPiBscG9zLnopOwogICAgICAgIHZpc2liaWxpdHkgKz0gKGZsb2F0KCh0ZXh0dXJlMkQoc2hhZG93TWFwLCBscG9zLnh5ICsgdmVjMigwLjAwMDk3NjU2MjUsIDAuMCkpLnggKyBzaGFkb3dzQmlhcykgPiBscG9zLnopICogMC41KTsKICAgICAgICB2aXNpYmlsaXR5ICs9IChmbG9hdCgodGV4dHVyZTJEKHNoYWRvd01hcCwgbHBvcy54eSArIHZlYzIoLTAuMDAwOTc2NTYyNSwgMC4wKSkueCArIHNoYWRvd3NCaWFzKSA%IGxwb3MueikgKiAwLjI1KTsKICAgICAgICB2aXNpYmlsaXR5ICs9IChmbG9hdCgodGV4dHVyZTJEKHNoYWRvd01hcCwgbHBvcy54eSArIHZlYzIoMC4wLCAwLjAwMDk3NjU2MjUpKS54ICsgc2hhZG93c0JpYXMpID4gbHBvcy56KSAqIDAuNSk7CiAgICAgICAgdmlzaWJpbGl0eSArPSAoZmxvYXQoKHRleHR1cmUyRChzaGFkb3dNYXAsIGxwb3MueHkgKyB2ZWMyKDAuMCwgLTAuMDAwOTc2NTYyNSkpLnggKyBzaGFkb3dzQmlhcykgPiBscG9zLnopICogMC4yNSk7CiAgICAgICAgdmlzaWJpbGl0eSAvPSAyLjU7CiAgICAgICAgdmlzaWJpbGl0eSA9IG1heCh2aXNpYmlsaXR5LCAwLjUpOwogICAgfQogICAgaGlnaHAgdmVjMyBkaXJlY3QgPSBiYXNlY29sICogbWF4KGRvdE5MLCAwLjEwMDAwMDAwMTQ5MDExNjExOTM4NDc2NTYyNSk7CiAgICBnbF9GcmFnRGF0YVswXSA9IHZlYzQoKGRpcmVjdCAqIGxpZ2h0Q29sb3IpICogdmlzaWJpbGl0eSwgMS4wKTsKICAgIGhpZ2hwIHZlYzMgXzE2NSA9IHBvdyhnbF9GcmFnRGF0YVswXS54eXosIHZlYzMoMC40NTQ1NDU0NjgwOTE5NjQ3MjE2Nzk2ODc1KSk7CiAgICBnbF9GcmFnRGF0YVswXSA9IHZlYzQoXzE2NS54LCBfMTY1LnksIF8xNjUueiwgZ2xfRnJhZ0RhdGFbMF0udyk7Cn0KCg";
kha_Shaders.stone_mesh_vertData0 = "s391:I3ZlcnNpb24gMTAwCgp1bmlmb3JtIG1hdDMgTjsKdW5pZm9ybSBtYXQ0IFdWUDsKdW5pZm9ybSBtYXQ0IExXVlA7CgphdHRyaWJ1dGUgdmVjMyBwb3M7CnZhcnlpbmcgdmVjMyB3bm9ybWFsOwphdHRyaWJ1dGUgdmVjMyBub3I7CnZhcnlpbmcgdmVjNCBsYW1wUG9zOwoKdm9pZCBtYWluKCkKewogICAgdmVjNCBzcG9zID0gdmVjNChwb3MsIDEuMCk7CiAgICB3bm9ybWFsID0gbm9ybWFsaXplKE4gKiBub3IpOwogICAgZ2xfUG9zaXRpb24gPSBXVlAgKiBzcG9zOwogICAgbGFtcFBvcyA9IExXVlAgKiBzcG9zOwp9Cgo";
kha_Shaders.stone_shadowmap_fragData0 = "s103:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdm9pZCBtYWluKCkKewp9Cgo";
kha_Shaders.stone_shadowmap_vertData0 = "s207:I3ZlcnNpb24gMTAwCgp1bmlmb3JtIG1hdDQgTFdWUDsKCmF0dHJpYnV0ZSB2ZWMzIHBvczsKYXR0cmlidXRlIHZlYzMgbm9yOwoKdm9pZCBtYWluKCkKewogICAgdmVjNCBzcG9zID0gdmVjNChwb3MsIDEuMCk7CiAgICBnbF9Qb3NpdGlvbiA9IExXVlAgKiBzcG9zOwp9Cgo";
kha_Shaders.world_Irr_EnvCol_LDR_VR_fragData0 = "s559:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCB2ZWMzIGJhY2tncm91bmRDb2w7CnVuaWZvcm0gaGlnaHAgZmxvYXQgZW52bWFwU3RyZW5ndGg7Cgp2YXJ5aW5nIGhpZ2hwIHZlYzMgbm9ybWFsOwoKdm9pZCBtYWluKCkKewogICAgZ2xfRnJhZ0RhdGFbMF0gPSB2ZWM0KGJhY2tncm91bmRDb2wueCwgYmFja2dyb3VuZENvbC55LCBiYWNrZ3JvdW5kQ29sLnosIGdsX0ZyYWdEYXRhWzBdLncpOwogICAgaGlnaHAgdmVjMyBfMjAgPSBwb3coZ2xfRnJhZ0RhdGFbMF0ueHl6LCB2ZWMzKDAuNDU0NTQ1NDY4MDkxOTY0NzIxNjc5Njg3NSkpOwogICAgZ2xfRnJhZ0RhdGFbMF0gPSB2ZWM0KF8yMC54LCBfMjAueSwgXzIwLnosIGdsX0ZyYWdEYXRhWzBdLncpOwp9Cgo";
kha_Shaders.world_Irr_EnvCol_LDR_VR_vertData0 = "s278:I3ZlcnNpb24gMTAwCgp1bmlmb3JtIG1hdDQgU01WUDsKCnZhcnlpbmcgdmVjMyBub3JtYWw7CmF0dHJpYnV0ZSB2ZWMzIG5vcjsKYXR0cmlidXRlIHZlYzMgcG9zOwoKdm9pZCBtYWluKCkKewogICAgbm9ybWFsID0gbm9yOwogICAgdmVjNCBwb3NpdGlvbiA9IFNNVlAgKiB2ZWM0KHBvcywgMS4wKTsKICAgIGdsX1Bvc2l0aW9uID0gdmVjNChwb3NpdGlvbik7Cn0KCg";
kha_Shaders.painter_colored_fragData0 = "s198:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdmFyeWluZyBoaWdocCB2ZWM0IGZyYWdtZW50Q29sb3I7Cgp2b2lkIG1haW4oKQp7CiAgICBnbF9GcmFnRGF0YVswXSA9IGZyYWdtZW50Q29sb3I7Cn0KCg";
kha_Shaders.painter_colored_vertData0 = "s331:I3ZlcnNpb24gMTAwCgp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbk1hdHJpeDsKCmF0dHJpYnV0ZSB2ZWMzIHZlcnRleFBvc2l0aW9uOwp2YXJ5aW5nIHZlYzQgZnJhZ21lbnRDb2xvcjsKYXR0cmlidXRlIHZlYzQgdmVydGV4Q29sb3I7Cgp2b2lkIG1haW4oKQp7CiAgICBnbF9Qb3NpdGlvbiA9IHByb2plY3Rpb25NYXRyaXggKiB2ZWM0KHZlcnRleFBvc2l0aW9uLCAxLjApOwogICAgZnJhZ21lbnRDb2xvciA9IHZlcnRleENvbG9yOwp9Cgo";
kha_Shaders.painter_image_fragData0 = "s471:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgdGV4OwoKdmFyeWluZyBoaWdocCB2ZWMyIHRleENvb3JkOwp2YXJ5aW5nIGhpZ2hwIHZlYzQgY29sb3I7Cgp2b2lkIG1haW4oKQp7CiAgICBoaWdocCB2ZWM0IHRleGNvbG9yID0gdGV4dHVyZTJEKHRleCwgdGV4Q29vcmQpICogY29sb3I7CiAgICBoaWdocCB2ZWMzIF8zMiA9IHRleGNvbG9yLnh5eiAqIGNvbG9yLnc7CiAgICB0ZXhjb2xvciA9IHZlYzQoXzMyLngsIF8zMi55LCBfMzIueiwgdGV4Y29sb3Iudyk7CiAgICBnbF9GcmFnRGF0YVswXSA9IHRleGNvbG9yOwp9Cgo";
kha_Shaders.painter_image_vertData0 = "s415:I3ZlcnNpb24gMTAwCgp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbk1hdHJpeDsKCmF0dHJpYnV0ZSB2ZWMzIHZlcnRleFBvc2l0aW9uOwp2YXJ5aW5nIHZlYzIgdGV4Q29vcmQ7CmF0dHJpYnV0ZSB2ZWMyIHRleFBvc2l0aW9uOwp2YXJ5aW5nIHZlYzQgY29sb3I7CmF0dHJpYnV0ZSB2ZWM0IHZlcnRleENvbG9yOwoKdm9pZCBtYWluKCkKewogICAgZ2xfUG9zaXRpb24gPSBwcm9qZWN0aW9uTWF0cml4ICogdmVjNCh2ZXJ0ZXhQb3NpdGlvbiwgMS4wKTsKICAgIHRleENvb3JkID0gdGV4UG9zaXRpb247CiAgICBjb2xvciA9IHZlcnRleENvbG9yOwp9Cgo";
kha_Shaders.painter_text_fragData0 = "s351:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgdGV4OwoKdmFyeWluZyBoaWdocCB2ZWM0IGZyYWdtZW50Q29sb3I7CnZhcnlpbmcgaGlnaHAgdmVjMiB0ZXhDb29yZDsKCnZvaWQgbWFpbigpCnsKICAgIGdsX0ZyYWdEYXRhWzBdID0gdmVjNChmcmFnbWVudENvbG9yLnh5eiwgdGV4dHVyZTJEKHRleCwgdGV4Q29vcmQpLnggKiBmcmFnbWVudENvbG9yLncpOwp9Cgo";
kha_Shaders.painter_text_vertData0 = "s436:I3ZlcnNpb24gMTAwCgp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbk1hdHJpeDsKCmF0dHJpYnV0ZSB2ZWMzIHZlcnRleFBvc2l0aW9uOwp2YXJ5aW5nIHZlYzIgdGV4Q29vcmQ7CmF0dHJpYnV0ZSB2ZWMyIHRleFBvc2l0aW9uOwp2YXJ5aW5nIHZlYzQgZnJhZ21lbnRDb2xvcjsKYXR0cmlidXRlIHZlYzQgdmVydGV4Q29sb3I7Cgp2b2lkIG1haW4oKQp7CiAgICBnbF9Qb3NpdGlvbiA9IHByb2plY3Rpb25NYXRyaXggKiB2ZWM0KHZlcnRleFBvc2l0aW9uLCAxLjApOwogICAgdGV4Q29vcmQgPSB0ZXhQb3NpdGlvbjsKICAgIGZyYWdtZW50Q29sb3IgPSB2ZXJ0ZXhDb2xvcjsKfQoK";
kha_Shaders.painter_video_fragData0 = "s471:I3ZlcnNpb24gMTAwCnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gaGlnaHAgaW50OwoKdW5pZm9ybSBoaWdocCBzYW1wbGVyMkQgdGV4OwoKdmFyeWluZyBoaWdocCB2ZWMyIHRleENvb3JkOwp2YXJ5aW5nIGhpZ2hwIHZlYzQgY29sb3I7Cgp2b2lkIG1haW4oKQp7CiAgICBoaWdocCB2ZWM0IHRleGNvbG9yID0gdGV4dHVyZTJEKHRleCwgdGV4Q29vcmQpICogY29sb3I7CiAgICBoaWdocCB2ZWMzIF8zMiA9IHRleGNvbG9yLnh5eiAqIGNvbG9yLnc7CiAgICB0ZXhjb2xvciA9IHZlYzQoXzMyLngsIF8zMi55LCBfMzIueiwgdGV4Y29sb3Iudyk7CiAgICBnbF9GcmFnRGF0YVswXSA9IHRleGNvbG9yOwp9Cgo";
kha_Shaders.painter_video_vertData0 = "s415:I3ZlcnNpb24gMTAwCgp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbk1hdHJpeDsKCmF0dHJpYnV0ZSB2ZWMzIHZlcnRleFBvc2l0aW9uOwp2YXJ5aW5nIHZlYzIgdGV4Q29vcmQ7CmF0dHJpYnV0ZSB2ZWMyIHRleFBvc2l0aW9uOwp2YXJ5aW5nIHZlYzQgY29sb3I7CmF0dHJpYnV0ZSB2ZWM0IHZlcnRleENvbG9yOwoKdm9pZCBtYWluKCkKewogICAgZ2xfUG9zaXRpb24gPSBwcm9qZWN0aW9uTWF0cml4ICogdmVjNCh2ZXJ0ZXhQb3NpdGlvbiwgMS4wKTsKICAgIHRleENvb3JkID0gdGV4UG9zaXRpb247CiAgICBjb2xvciA9IHZlcnRleENvbG9yOwp9Cgo";
kha_System.renderListeners = [];
kha_System.foregroundListeners = [];
kha_System.resumeListeners = [];
kha_System.pauseListeners = [];
kha_System.backgroundListeners = [];
kha_System.shutdownListeners = [];
kha_SystemImpl.mobile = false;
kha_SystemImpl.mobileAudioPlaying = false;
kha_SystemImpl.chrome = false;
kha_SystemImpl.insideInputEvent = false;
kha_SystemImpl.maxGamepads = 4;
kha_SystemImpl.leftMouseCtrlDown = false;
kha_SystemImpl.minimumScroll = 999;
kha_SystemImpl.lastFirstTouchX = 0;
kha_SystemImpl.lastFirstTouchY = 0;
kha_SystemImpl.iosSoundEnabled = false;
kha_audio2_Audio1.channelCount = 16;
kha_audio2_ogg_tools_Crc32.POLY = 79764919;
kha_audio2_ogg_vorbis_VorbisDecodeState.INVALID_BITS = -1;
kha_audio2_ogg_vorbis_VorbisTools.EOP = -1;
kha_audio2_ogg_vorbis_VorbisTools.M__PI = 3.14159265358979323846264;
kha_audio2_ogg_vorbis_VorbisTools.DIVTAB_NUMER = 32;
kha_audio2_ogg_vorbis_VorbisTools.DIVTAB_DENOM = 64;
kha_audio2_ogg_vorbis_VorbisTools.INVERSE_DB_TABLE = [1.0649863e-07,1.1341951e-07,1.2079015e-07,1.2863978e-07,1.3699951e-07,1.4590251e-07,1.5538408e-07,1.6548181e-07,1.7623575e-07,1.8768855e-07,1.9988561e-07,2.1287530e-07,2.2670913e-07,2.4144197e-07,2.5713223e-07,2.7384213e-07,2.9163793e-07,3.1059021e-07,3.3077411e-07,3.5226968e-07,3.7516214e-07,3.9954229e-07,4.2550680e-07,4.5315863e-07,4.8260743e-07,5.1396998e-07,5.4737065e-07,5.8294187e-07,6.2082472e-07,6.6116941e-07,7.0413592e-07,7.4989464e-07,7.9862701e-07,8.5052630e-07,9.0579828e-07,9.6466216e-07,1.0273513e-06,1.0941144e-06,1.1652161e-06,1.2409384e-06,1.3215816e-06,1.4074654e-06,1.4989305e-06,1.5963394e-06,1.7000785e-06,1.8105592e-06,1.9282195e-06,2.0535261e-06,2.1869758e-06,2.3290978e-06,2.4804557e-06,2.6416497e-06,2.8133190e-06,2.9961443e-06,3.1908506e-06,3.3982101e-06,3.6190449e-06,3.8542308e-06,4.1047004e-06,4.3714470e-06,4.6555282e-06,4.9580707e-06,5.2802740e-06,5.6234160e-06,5.9888572e-06,6.3780469e-06,6.7925283e-06,7.2339451e-06,7.7040476e-06,8.2047000e-06,8.7378876e-06,9.3057248e-06,9.9104632e-06,1.0554501e-05,1.1240392e-05,1.1970856e-05,1.2748789e-05,1.3577278e-05,1.4459606e-05,1.5399272e-05,1.6400004e-05,1.7465768e-05,1.8600792e-05,1.9809576e-05,2.1096914e-05,2.2467911e-05,2.3928002e-05,2.5482978e-05,2.7139006e-05,2.8902651e-05,3.0780908e-05,3.2781225e-05,3.4911534e-05,3.7180282e-05,3.9596466e-05,4.2169667e-05,4.4910090e-05,4.7828601e-05,5.0936773e-05,5.4246931e-05,5.7772202e-05,6.1526565e-05,6.5524908e-05,6.9783085e-05,7.4317983e-05,7.9147585e-05,8.4291040e-05,8.9768747e-05,9.5602426e-05,0.00010181521,0.00010843174,0.00011547824,0.00012298267,0.00013097477,0.00013948625,0.00014855085,0.00015820453,0.00016848555,0.00017943469,0.00019109536,0.00020351382,0.00021673929,0.00023082423,0.00024582449,0.00026179955,0.00027881276,0.00029693158,0.00031622787,0.00033677814,0.00035866388,0.00038197188,0.00040679456,0.00043323036,0.00046138411,0.00049136745,0.00052329927,0.00055730621,0.00059352311,0.00063209358,0.00067317058,0.00071691700,0.00076350630,0.00081312324,0.00086596457,0.00092223983,0.00098217216,0.0010459992,0.0011139742,0.0011863665,0.0012634633,0.0013455702,0.0014330129,0.0015261382,0.0016253153,0.0017309374,0.0018434235,0.0019632195,0.0020908006,0.0022266726,0.0023713743,0.0025254795,0.0026895994,0.0028643847,0.0030505286,0.0032487691,0.0034598925,0.0036847358,0.0039241906,0.0041792066,0.0044507950,0.0047400328,0.0050480668,0.0053761186,0.0057254891,0.0060975636,0.0064938176,0.0069158225,0.0073652516,0.0078438871,0.0083536271,0.0088964928,0.009474637,0.010090352,0.010746080,0.011444421,0.012188144,0.012980198,0.013823725,0.014722068,0.015678791,0.016697687,0.017782797,0.018938423,0.020169149,0.021479854,0.022875735,0.024362330,0.025945531,0.027631618,0.029427276,0.031339626,0.033376252,0.035545228,0.037855157,0.040315199,0.042935108,0.045725273,0.048696758,0.051861348,0.055231591,0.058820850,0.062643361,0.066714279,0.071049749,0.075666962,0.080584227,0.085821044,0.091398179,0.097337747,0.10366330,0.11039993,0.11757434,0.12521498,0.13335215,0.14201813,0.15124727,0.16107617,0.17154380,0.18269168,0.19456402,0.20720788,0.22067342,0.23501402,0.25028656,0.26655159,0.28387361,0.30232132,0.32196786,0.34289114,0.36517414,0.38890521,0.41417847,0.44109412,0.46975890,0.50028648,0.53279791,0.56742212,0.60429640,0.64356699,0.68538959,0.72993007,0.77736504,0.82788260,0.88168307,0.9389798,1.0];
kha_audio2_ogg_vorbis_data_Codebook.NO_CODE = 255;
kha_audio2_ogg_vorbis_data_Codebook.delay = 0;
kha_audio2_ogg_vorbis_data_Header.PACKET_ID = 1;
kha_audio2_ogg_vorbis_data_Header.PACKET_COMMENT = 3;
kha_audio2_ogg_vorbis_data_Header.PACKET_SETUP = 5;
kha_audio2_ogg_vorbis_data_PageFlag.CONTINUED_PACKET = 1;
kha_audio2_ogg_vorbis_data_PageFlag.FIRST_PAGE = 2;
kha_audio2_ogg_vorbis_data_PageFlag.LAST_PAGE = 4;
kha_audio2_ogg_vorbis_data_Setting.MAX_CHANNELS = 16;
kha_audio2_ogg_vorbis_data_Setting.PUSHDATA_CRC_COUNT = 4;
kha_audio2_ogg_vorbis_data_Setting.FAST_HUFFMAN_LENGTH = 10;
kha_audio2_ogg_vorbis_data_Setting.FAST_HUFFMAN_TABLE_SIZE = 1024;
kha_audio2_ogg_vorbis_data_Setting.FAST_HUFFMAN_TABLE_MASK = 1023;
kha_graphics2_truetype_StbTruetype.STBTT_vmove = 1;
kha_graphics2_truetype_StbTruetype.STBTT_vline = 2;
kha_graphics2_truetype_StbTruetype.STBTT_vcurve = 3;
kha_graphics2_truetype_StbTruetype.STBTT_MACSTYLE_DONTCARE = 0;
kha_graphics2_truetype_StbTruetype.STBTT_MACSTYLE_BOLD = 1;
kha_graphics2_truetype_StbTruetype.STBTT_MACSTYLE_ITALIC = 2;
kha_graphics2_truetype_StbTruetype.STBTT_MACSTYLE_UNDERSCORE = 4;
kha_graphics2_truetype_StbTruetype.STBTT_MACSTYLE_NONE = 8;
kha_graphics2_truetype_StbTruetype.STBTT_PLATFORM_ID_UNICODE = 0;
kha_graphics2_truetype_StbTruetype.STBTT_PLATFORM_ID_MAC = 1;
kha_graphics2_truetype_StbTruetype.STBTT_PLATFORM_ID_ISO = 2;
kha_graphics2_truetype_StbTruetype.STBTT_PLATFORM_ID_MICROSOFT = 3;
kha_graphics2_truetype_StbTruetype.STBTT_UNICODE_EID_UNICODE_1_0 = 0;
kha_graphics2_truetype_StbTruetype.STBTT_UNICODE_EID_UNICODE_1_1 = 1;
kha_graphics2_truetype_StbTruetype.STBTT_UNICODE_EID_ISO_10646 = 2;
kha_graphics2_truetype_StbTruetype.STBTT_UNICODE_EID_UNICODE_2_0_BMP = 3;
kha_graphics2_truetype_StbTruetype.STBTT_UNICODE_EID_UNICODE_2_0_FULL = 4;
kha_graphics2_truetype_StbTruetype.STBTT_MS_EID_SYMBOL = 0;
kha_graphics2_truetype_StbTruetype.STBTT_MS_EID_UNICODE_BMP = 1;
kha_graphics2_truetype_StbTruetype.STBTT_MS_EID_SHIFTJIS = 2;
kha_graphics2_truetype_StbTruetype.STBTT_MS_EID_UNICODE_FULL = 10;
kha_graphics2_truetype_StbTruetype.STBTT_MAC_EID_ROMAN = 0;
kha_graphics2_truetype_StbTruetype.STBTT_MAC_EID_ARABIC = 4;
kha_graphics2_truetype_StbTruetype.STBTT_MAC_EID_JAPANESE = 1;
kha_graphics2_truetype_StbTruetype.STBTT_MAC_EID_HEBREW = 5;
kha_graphics2_truetype_StbTruetype.STBTT_MAC_EID_CHINESE_TRAD = 2;
kha_graphics2_truetype_StbTruetype.STBTT_MAC_EID_GREEK = 6;
kha_graphics2_truetype_StbTruetype.STBTT_MAC_EID_KOREAN = 3;
kha_graphics2_truetype_StbTruetype.STBTT_MAC_EID_RUSSIAN = 7;
kha_graphics2_truetype_StbTruetype.STBTT_MS_LANG_ENGLISH = 1033;
kha_graphics2_truetype_StbTruetype.STBTT_MS_LANG_ITALIAN = 1040;
kha_graphics2_truetype_StbTruetype.STBTT_MS_LANG_CHINESE = 2052;
kha_graphics2_truetype_StbTruetype.STBTT_MS_LANG_JAPANESE = 1041;
kha_graphics2_truetype_StbTruetype.STBTT_MS_LANG_DUTCH = 1043;
kha_graphics2_truetype_StbTruetype.STBTT_MS_LANG_KOREAN = 1042;
kha_graphics2_truetype_StbTruetype.STBTT_MS_LANG_FRENCH = 1036;
kha_graphics2_truetype_StbTruetype.STBTT_MS_LANG_RUSSIAN = 1049;
kha_graphics2_truetype_StbTruetype.STBTT_MS_LANG_GERMAN = 1031;
kha_graphics2_truetype_StbTruetype.STBTT_MS_LANG_SPANISH = 1033;
kha_graphics2_truetype_StbTruetype.STBTT_MS_LANG_HEBREW = 1037;
kha_graphics2_truetype_StbTruetype.STBTT_MS_LANG_SWEDISH = 1053;
kha_graphics2_truetype_StbTruetype.STBTT_MAC_LANG_ENGLISH = 0;
kha_graphics2_truetype_StbTruetype.STBTT_MAC_LANG_JAPANESE = 11;
kha_graphics2_truetype_StbTruetype.STBTT_MAC_LANG_ARABIC = 12;
kha_graphics2_truetype_StbTruetype.STBTT_MAC_LANG_KOREAN = 23;
kha_graphics2_truetype_StbTruetype.STBTT_MAC_LANG_DUTCH = 4;
kha_graphics2_truetype_StbTruetype.STBTT_MAC_LANG_RUSSIAN = 32;
kha_graphics2_truetype_StbTruetype.STBTT_MAC_LANG_FRENCH = 1;
kha_graphics2_truetype_StbTruetype.STBTT_MAC_LANG_SPANISH = 6;
kha_graphics2_truetype_StbTruetype.STBTT_MAC_LANG_GERMAN = 2;
kha_graphics2_truetype_StbTruetype.STBTT_MAC_LANG_SWEDISH = 5;
kha_graphics2_truetype_StbTruetype.STBTT_MAC_LANG_HEBREW = 10;
kha_graphics2_truetype_StbTruetype.STBTT_MAC_LANG_CHINESE_SIMPLIFIED = 33;
kha_graphics2_truetype_StbTruetype.STBTT_MAC_LANG_ITALIAN = 3;
kha_graphics2_truetype_StbTruetype.STBTT_MAC_LANG_CHINESE_TRAD = 19;
kha_graphics2_truetype_StbTruetype.STBTT_MAX_OVERSAMPLE = 8;
kha_graphics2_truetype_StbTruetype.STBTT_RASTERIZER_VERSION = 2;
kha_graphics4_ImageShaderPainter.bufferSize = 1500;
kha_graphics4_ImageShaderPainter.vertexSize = 9;
kha_graphics4_ColoredShaderPainter.bufferSize = 100;
kha_graphics4_ColoredShaderPainter.triangleBufferSize = 100;
kha_graphics4_TextShaderPainter.bufferSize = 100;
kha_input_Gamepad.__meta__ = { fields : { sendAxisEvent : { input : null}, sendButtonEvent : { input : null}}};
kha_input_Gamepad.instances = [];
kha_input_Keyboard.__meta__ = { fields : { sendDownEvent : { input : null}, sendUpEvent : { input : null}}};
kha_input_Mouse.__meta__ = { fields : { sendLeaveEvent : { input : null}, sendDownEvent : { input : null}, sendUpEvent : { input : null}, sendMoveEvent : { input : null}, sendWheelEvent : { input : null}}};
kha_internal_HdrFormat.radiancePattern = new EReg("#\\?RADIANCE","i");
kha_internal_HdrFormat.commentPattern = new EReg("#.*","i");
kha_internal_HdrFormat.gammaPattern = new EReg("GAMMA=","i");
kha_internal_HdrFormat.exposurePattern = new EReg("EXPOSURE=\\s*([0-9]*[.][0-9]*)","i");
kha_internal_HdrFormat.formatPattern = new EReg("FORMAT=32-bit_rle_rgbe","i");
kha_internal_HdrFormat.widthHeightPattern = new EReg("-Y ([0-9]+) \\+X ([0-9]+)","i");
kha_js_AEAudioChannel.todo = [];
kha_js_Sound.loading = [];
kha_js_Video.loading = new List();
kha_math_Matrix3.width = 3;
kha_math_Matrix3.height = 3;
kha_math_Matrix4.width = 4;
kha_math_Matrix4.height = 4;
kha_math_Quaternion.AXIS_X = 0;
kha_math_Quaternion.AXIS_Y = 1;
kha_math_Quaternion.AXIS_Z = 2;
kha_network_ControllerBuilder.nextId = 0;
kha_network_Session.START = 0;
kha_network_Session.ENTITY_UPDATES = 1;
kha_network_Session.CONTROLLER_UPDATES = 2;
kha_network_Session.REMOTE_CALL = 3;
kha_network_Session.PING = 4;
kha_network_Session.ERROR = 5;
kha_network_Session.PLAYER_UPDATES = 6;
kha_network_Session.RPC_SERVER = 0;
kha_network_Session.RPC_ALL = 1;
kha_network_SyncBuilder.nextId = 0;
kha_network_SyncBuilder.objects = [];
Main.main();
})(typeof exports != "undefined" ? exports : typeof window != "undefined" ? window : typeof self != "undefined" ? self : this, typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);
